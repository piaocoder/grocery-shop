cscope 15 $HOME/grocery-shop/language/gcc -q 0000011893 0001530109
	@/root/grocery-shop/language/gcc/src/PCI/msgq_send.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/ùc.h
>

3 
	~<sys/msg.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<°dlib.h
>

8 
	#MAXSIZE
 12
job


	)

10 
	$dõ
(*
s
)

12 
	`≥º‹
(
s
);

13 
	`exô
(1);

14 
	}
}

16 
	smsgbuf


18 
	mmty≥
;

19 
	mmãxt
[
MAXSIZE
];

22 
	$maö
(
¨gc
, **
¨gv
)

24 
msqid
;

25 
msgÊg
 = 
IPC_CREAT
 | 0666;

26 
key_t
 
key
;

27 
msgbuf
 
sbuf
;

28 
size_t
 
buÊí
;

30 
key
 = 1234;

32 i‡((
msqid
 = 
	`msggë
(
key
, 
msgÊg
 )) < 0)

33 
	`dõ
("msgget");

36 
sbuf
.
mty≥
 = 1;

38 
	`¥ötf
("Enterá messageÅoáddÅo message queue : ");

39 
	`sˇnf
("%[^\n]",
sbuf
.
mãxt
);

40 
	`gëch¨
();

42 
buÊí
 = 
	`°æí
(
sbuf
.
mãxt
) + 1 ;

44 i‡(
	`msg¢d
(
msqid
, &
sbuf
, 
buÊí
, 
IPC_NOWAIT
) < 0) {

45 
	`¥ötf
 ("%d, %d, %s, %d\n", 
msqid
, 
sbuf
.
mty≥
, sbuf.
mãxt
, 
buÊí
);

46 
	`dõ
("msgsnd");

48 
	`¥ötf
("Message Sent\n");

52 
	}
}

	@/root/grocery-shop/language/gcc/src/PCI/pipe.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<uni°d.h
>

5 
	~<ev.h
>

9 
	$ev_io_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w
, 
ªvíts
)

11 
	`¶ìp
(1);

12 
	`¥ötf
("+++++++++++++++++++++++++\n");

13 
	`¥ötf
("Children:detect fatherÖrocess is closing.\n");

14 
	`¥ötf
("+++++++++++++++++++++++++\n");

15 
	`¶ìp
(3);

17 
	}
}

20 
	$chûdªn
(
fd
[])

22 
ev_lo›
 *
lo›
 = 
	`ev_deÁu…_lo›
(0);

23 
ev_io
 
fd_ªad
;

25 
	`˛o£
(
fd
[1]);

27 
	`ev_io_öô
(&
fd_ªad
, 
ev_io_cb
, 
fd
[0], 
EV_READ
);

28 
	`ev_io_°¨t
(
lo›
, &
fd_ªad
);

29 
	`ev_run
(
lo›
, 0);

30 
	}
}

33 
	$pùeCommuniˇã
(
fd
[])

35 
pid_t
 
pid
;

37 
	`pùe
(
fd
);

39 i‡((
pid
 = 
	`f‹k
()) < 0) {

40 
	`¥ötf
("Fork children failure!\n");

42 } i‡(
pid
 == 0) {

43 
	`chûdªn
(
fd
);

44 
	`exô
(0);

46 
	`˛o£
(
fd
[0]);

48 
	`¶ìp
(3);

50 
	`¥ötf
("ParentÖrcocess is closing!!\n");

54 
	}
}

57 
	$maö
(
¨gc
, **
¨gv
)

59 
pùeFd
[2];

61 
	`pùeCommuniˇã
(
pùeFd
);

64 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/advio/catgetmsg.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

4 
	#BUFFSIZE
 4096

	)

7 
	$maö
()

9 
n
, 
Êag
;

10 
˘lbuf
[
BUFFSIZE
], 
d©buf
[BUFFSIZE];

11 
°rbuf
 
˘l
, 
d©
;

13 
˘l
.
buf
 = 
˘lbuf
;

14 
˘l
.
maxÀn
 = 
BUFFSIZE
;

15 
d©
.
buf
 = 
d©buf
;

16 
d©
.
maxÀn
 = 
BUFFSIZE
;

18 
Êag
 = 0;

19 i‡((
n
 = 
	`gëmsg
(
STDIN_FILENO
, &
˘l
, &
d©
, &
Êag
)) < 0)

20 
	`îr_sys
("getmsgÉrror");

21 
	`Ârötf
(
°dîr
, "flag = %d, ctl.len = %d, dat.len = %d\n",

22 
Êag
, 
˘l
.
Àn
, 
d©
.len);

23 i‡(
d©
.
Àn
 == 0)

24 
	`exô
(0);

25 i‡(
d©
.
Àn
 > 0)

26 i‡(
	`wrôe
(
STDOUT_FILENO
, 
d©
.
buf
, d©.
Àn
) != dat.len)

27 
	`îr_sys
("writeÉrror");

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/advio/devzero.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<sys/mm™.h
>

5 
	#NLOOPS
 1000

	)

6 
	#SIZE
 (Ë

	)

9 
	$upd©e
(*
±r
)

11 ((*
±r
)++);

12 
	}
}

15 
	$maö
()

17 
fd
, 
i
, 
cou¡î
;

18 
pid_t
 
pid
;

19 *
¨ó
;

21 i‡((
fd
 = 
	`›í
("/dev/zîo", 
O_RDWR
)) < 0)

22 
	`îr_sys
("openÉrror");

23 i‡((
¨ó
 = 
	`mm≠
(0, 
SIZE
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

24 
fd
, 0)Ë=
MAP_FAILED
)

25 
	`îr_sys
("mmapÉrror");

26 
	`˛o£
(
fd
);

28 
	`TELL_WAIT
();

30 i‡((
pid
 = 
	`f‹k
()) < 0) {

31 
	`îr_sys
("forkÉrror");

32 } i‡(
pid
 > 0) {

33 
i
 = 0; i < 
NLOOPS
; i += 2) {

34 i‡((
cou¡î
 = 
	`upd©e
((*)
¨ó
)Ë!
i
)

35 
	`îr_quô
("∑ª¡:Éx≥˘ed %d, gŸ %d", 
i
, 
cou¡î
);

37 
	`TELL_CHILD
(
pid
);

38 
	`WAIT_CHILD
();

41 
i
 = 1; i < 
NLOOPS
 + 1; i += 2) {

42 
	`WAIT_PARENT
();

44 i‡((
cou¡î
 = 
	`upd©e
((*)
¨ó
)Ë!
i
)

45 
	`îr_quô
("chûd:Éx≥˘ed %d, gŸ %d", 
i
, 
cou¡î
);

47 
	`TELL_PARENT
(
	`gëµid
());

51 
	`exô
(0);

52 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/advio/mcopy.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<sys/mm™.h
>

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
fdö
, 
fdout
;

9 *
§c
, *
d°
;

10 
°©
 
°©buf
;

12 i‡(
¨gc
 != 3)

13 
	`îr_quô
("ußge: %†<‰omfûe> <tofûe>", 
¨gv
[0]);

15 i‡((
fdö
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

16 
	`îr_sys
("ˇn'à›í %†f‹Ñódög", 
¨gv
[1]);

18 i‡((
fdout
 = 
	`›í
(
¨gv
[2], 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
,

19 
FILE_MODE
)) < 0)

20 
	`îr_sys
("ˇn'à¸óà%†f‹ wrôög", 
¨gv
[2]);

22 i‡(
	`f°©
(
fdö
, &
°©buf
) < 0)

23 
	`îr_sys
("fstatÉrror");

26 i‡(
	`l£ek
(
fdout
, 
°©buf
.
°_size
 - 1, 
SEEK_SET
) == -1)

27 
	`îr_sys
("lseekÉrror");

28 i‡(
	`wrôe
(
fdout
, "", 1) != 1)

29 
	`îr_sys
("writeÉrror");

31 i‡((
§c
 = 
	`mm≠
(0, 
°©buf
.
°_size
, 
PROT_READ
, 
MAP_SHARED
,

32 
fdö
, 0)Ë=
MAP_FAILED
)

33 
	`îr_sys
("mmapÉrror for input");

35 i‡((
d°
 = 
	`mm≠
(0, 
°©buf
.
°_size
, 
PROT_READ
 | 
PROT_WRITE
,

36 
MAP_SHARED
, 
fdout
, 0)Ë=
MAP_FAILED
)

37 
	`îr_sys
("mmapÉrror for output");

39 
	`mem˝y
(
d°
, 
§c
, 
°©buf
.
°_size
);

40 
	`exô
(0);

41 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/advio/nonblockw.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

5 
	gbuf
[500000];

8 
	$maö
()

10 
¡owrôe
, 
nwrôe
;

11 *
±r
;

13 
¡owrôe
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf));

14 
	`Ârötf
(
°dîr
, "ªad %d byãs\n", 
¡owrôe
);

16 
	`£t_Ê
(
STDOUT_FILENO
, 
O_NONBLOCK
);

18 
±r
 = 
buf
;

19 
¡owrôe
 > 0) {

20 
î∫o
 = 0;

21 
nwrôe
 = 
	`wrôe
(
STDOUT_FILENO
, 
±r
, 
¡owrôe
);

22 
	`Ârötf
(
°dîr
, "nwrôê%d,Éºnÿ%d\n", 
nwrôe
, 
î∫o
);

24 i‡(
nwrôe
 > 0) {

25 
±r
 +
nwrôe
;

26 
¡owrôe
 -
nwrôe
;

30 
	`˛r_Ê
(
STDOUT_FILENO
, 
O_NONBLOCK
);

32 
	`exô
(0);

33 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/advio/pendlock.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<î∫o.h
>

6 
	$sigöt
(
signo
)

8 
	}
}

11 
	$maö
()

13 
pid_t
 
pid1
, 
pid2
, 
pid3
;

14 
fd
;

16 
	`£tbuf
(
°dout
, 
NULL
);

17 
	`sig«l_öå
(
SIGINT
, 
sigöt
);

22 i‡((
fd
 = 
	`›í
("lockfûe", 
O_RDWR
|
O_CREAT
, 0666)) < 0)

23 
	`îr_sys
("can't open/createÜockfile");

28 i‡((
pid1
 = 
	`f‹k
()) < 0) {

29 
	`îr_sys
("fork failed");

30 } i‡(
pid1
 == 0) {

31 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

32 
	`îr_sys
("child 1: can'tÑead-lock file");

33 
	`¥ötf
("child 1: obtainedÑeadÜock on file\n");

34 
	`∑u£
();

35 
	`¥ötf
("child 1:ÉxitáfterÖause\n");

36 
	`exô
(0);

38 
	`¶ìp
(2);

44 i‡((
pid2
 = 
	`f‹k
()) < 0) {

45 
	`îr_sys
("fork failed");

46 } i‡(
pid2
 == 0) {

47 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

48 
	`îr_sys
("child 2: can'tÑead-lock file");

49 
	`¥ötf
("child 2: obtainedÑeadÜock on file\n");

50 
	`∑u£
();

51 
	`¥ötf
("child 2:ÉxitáfterÖause\n");

52 
	`exô
(0);

54 
	`¶ìp
(2);

61 i‡((
pid3
 = 
	`f‹k
()) < 0) {

62 
	`îr_sys
("fork failed");

63 } i‡(
pid3
 == 0) {

64 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_WRLCK
, 0, 
SEEK_SET
, 0) < 0)

65 
	`¥ötf
("child 3: can't set writeÜock: %s\n",

66 
	`°ªº‹
(
î∫o
));

67 
	`¥ötf
("child 3áboutÅo block in write-lock...\n");

68 i‡(
	`lock_ªg
(
fd
, 
F_SETLKW
, 
F_WRLCK
, 0, 
SEEK_SET
, 0) < 0)

69 
	`îr_sys
("child 3: can't write-lock file");

70 
	`¥ötf
("child 3Ñeturnedánd got writeÜock????\n");

71 
	`∑u£
();

72 
	`¥ötf
("child 3:ÉxitáfterÖause\n");

73 
	`exô
(0);

75 
	`¶ìp
(2);

82 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

83 
	`¥ötf
("parent: can't setÑeadÜock: %s\n",

84 
	`°ªº‹
(
î∫o
));

86 
	`¥ötf
("parent: obtainedádditionalÑeadÜock while"

88 
	`¥ötf
("killing child 1...\n");

89 
	`kûl
(
pid1
, 
SIGINT
);

90 
	`¥ötf
("killing child 2...\n");

91 
	`kûl
(
pid2
, 
SIGINT
);

92 
	`¥ötf
("killing child 3...\n");

93 
	`kûl
(
pid3
, 
SIGINT
);

94 
	`exô
(0);

95 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/call.c

1 
	~"ˇŒ.h
"

2 
	~<sys/uio.h
>

9 
	$ˇŒ
(c⁄° *
¨gs
)

11 
csfd
, 
Àn
;

12 
iovec
 
iov
[2];

17 i‡((
csfd
 = 
	`˛i_c⁄n
(
CS_CALL
)) < 0)

18 
	`îr_sys
("cli_connÉrror");

20 
iov
[0].
iov_ba£
 = 
CL_CALL
 " ";

21 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_CALL
) + 1;

22 
iov
[1].
iov_ba£
 = (*Ë
¨gs
;

24 
iov
[1].
iov_Àn
 = 
	`°æí
(
¨gs
) + 1;

25 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len;

26 i‡(
	`wrôev
(
csfd
, &
iov
[0], 2Ë!
Àn
)

27 
	`îr_sys
("writevÉrror");

33 (
	`ªcv_fd
(
csfd
, 
wrôe
));

34 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/call.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/time.h
>

5 
	#CS_CALL
 "/home/ßr/ˇŒd"

	)

6 
	#CL_CALL
 "ˇŒ"

	)

8 
esˇ≥c
;

9 *
§c
;

10 *
d°
;

12 
ˇŒ
(const *);

13 
d€sˇ≥
();

14 
lo›
();

15 
¥om±_ªad
(*, (*)(, **));

16 
	`put
();

17 
	`èke
();

18 
	`èke_put_¨gs
(, **);

	@/root/grocery-shop/language/gcc/src/apue/call/escape.c

1 
	~"ˇŒ.h
"

11 
	$d€sˇ≥
(
ªmfd
)

13 
c
;

15 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

16 
	`îr_sys
("readÉrror from stdin");

18 i‡(
c
 =
esˇ≥c
) {

19 (
esˇ≥c
);

20 } i‡(
c
 == '.') {

21 
	`wrôe
(
STDOUT_FILENO
, "~.\n\r", 4);

24 #ifdef 
VSUSP


25 } i‡(
c
 =
	`ây_ãrmios
()->
c_cc
[
VSUSP
]) {

26 
	`ây_ª£t
(
STDIN_FILENO
);

27 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

28 
	`ây_øw
(
STDIN_FILENO
);

32 } i‡(
c
 == '#') {

33 
	`tc£ndbªak
(
ªmfd
, 0);

35 } i‡(
c
 == 't') {

36 
	`èke
(
ªmfd
);

38 } i‡(
c
 == 'p') {

39 
	`put
(
ªmfd
);

43 (
c
);

44 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/loop.poll.c

1 
	~"ˇŒ.h
"

2 
	~<pﬁl.h
>

4 
	#BUFFSIZE
 512

	)

11 
	$lo›
(
ªmfd
)

13 
bﬁ
, 
n
, 
ƒód
;

14 
c
;

15 
buff
[
BUFFSIZE
];

16 
pﬁlfd
 
fds
[2];

21 
	`£tbuf
(
°dout
, 
NULL
);

22 
fds
[0].
fd
 = 
STDIN_FILENO
;

23 
fds
[0].
evíts
 = 
POLLIN
;

24 
fds
[1].
fd
 = 
ªmfd
;

25 
fds
[1].
evíts
 = 
POLLIN
;

28 i‡(
	`pﬁl
(
fds
, 2, -1) <= 0)

29 
	`îr_sys
("pollÉrror");

30 i‡(
fds
[0].
ªvíts
 & 
POLLIN
) {

31 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

32 
	`îr_sys
("readÉrror from stdin");

33 i‡(
c
 =
esˇ≥c
 && 
bﬁ
) {

34 i‡((
n
 = 
	`d€sˇ≥
(
ªmfd
)) < 0)

36 i‡(
n
 == 0)

41 
c
 = 
n
;

43 i‡(
c
 == '\r' || c == '\n')

44 
bﬁ
 = 1;

46 
bﬁ
 = 0;

47 i‡(
	`wrôe
(
ªmfd
, &
c
, 1) != 1)

48 
	`îr_sys
("writeÉrror");

50 i‡(
fds
[0].
ªvíts
 & 
POLLHUP
)

52 i‡(
fds
[1].
ªvíts
 & 
POLLIN
) {

53 i‡((
ƒód
 = 
	`ªad
(
ªmfd
, 
buff
, 
BUFFSIZE
)) <= 0)

55 i‡(
	`wrôí
(
STDOUT_FILENO
, 
buff
, 
ƒód
) !=Çread)

56 
	`îr_sys
("writenÉrrorÅo stdout");

58 i‡(
fds
[1].
ªvíts
 & 
POLLHUP
)

61 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/main.c

1 
	~"ˇŒ.h
"

3 
	gesˇ≥c
 = '~';

4 *
	g§c
;

5 *
	gd°
;

7 
ußge
(*);

10 
	$maö
(
¨gc
, *
¨gv
[])

12 
c
, 
ªmfd
, 
debug
;

13 
¨gs
[
MAXLINE
];

15 
¨gs
[0] = 0;

16 
›ãº
 = 0;

17 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "des:o")Ë!
EOF
) {

18 
c
) {

20 
debug
 = 1;

21 
	`°rˇt
(
¨gs
, "-d ");

25 
	`°rˇt
(
¨gs
, "-e ");

29 
	`°rˇt
(
¨gs
, "-o ");

33 
	`°rˇt
(
¨gs
, "-s ");

34 
	`°rˇt
(
¨gs
, 
›èrg
);

35 
	`°rˇt
(
¨gs
, " ");

39 
	`ußge
("unrecognized option");

42 i‡(
›töd
 < 
¨gc
)

43 
	`°rˇt
(
¨gs
, 
¨gv
[
›töd
]);

45 
	`ußge
("missing <hostname>Åo call");

47 i‡((
ªmfd
 = 
	`ˇŒ
(
¨gs
)) < 0)

48 
	`exô
(1);

49 
	`¥ötf
("Connected\n");

50 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

51 
	`îr_sys
("tty_rawÉrror");

52 i‡(
	`©exô
(
ây_©exô
) < 0)

53 
	`îr_sys
("atexitÉrror");

55 
	`lo›
(
ªmfd
);

57 
	`¥ötf
("Disconnected\n\r");

58 
	`exô
(0);

59 
	}
}

62 
	$ußge
(*
msg
)

64 
	`îr_quô
("%s\nußge: cÆ»-d -ê-ÿ-s<•ìd> <ho°«me>", 
msg
);

65 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/put.c

1 
	~"ˇŒ.h
"

7 
	$put
(
ªmfd
)

9 
i
, 
n
, 
löe˙t
;

10 
c
, 
cmd
[
MAXLINE
];

11 
FILE
 *
Âö
;

13 i‡(
	`¥om±_ªad
("~[put] ", 
èke_put_¨gs
) < 0) {

14 
	`¥ötf
("usage: [put] <sourcefile> <destfile>\n\r");

21 i‡((
Âö
 = 
	`f›í
(
§c
, "r")Ë=
NULL
) {

22 
	`îr_ªt
("ˇn'à›í %†f‹Ñódög", 
§c
);

23 
	`putc
('\r', 
°dîr
);

24 
	`fÊush
(
°dîr
);

31 
	`•rötf
(
cmd
, "°ty -echo; c© >%s; sâyÉcho\r", 
d°
);

32 
n
 = 
	`°æí
(
cmd
);

33 i‡(
	`wrôe
(
ªmfd
, 
cmd
, 
n
) !=Ç)

34 
	`îr_sys
("writeÉrror");

35 
	`tcdøö
(
ªmfd
);

36 
	`¶ìp
(4);

41 
löe˙t
 = 0;

43 i‡((
i
 = 
	`gëc
(
Âö
)Ë=
EOF
)

45 
c
 = 
i
;

46 i‡(
	`wrôe
(
ªmfd
, &
c
, 1) != 1)

48 i‡(
c
 == '\n')

49 
	`¥ötf
("\r%d", ++
löe˙t
);

55 
c
 = 
	`ây_ãrmios
()->
c_cc
[
VEOF
];

56 
	`wrôe
(
ªmfd
, &
c
, 1);

57 
	`tcdøö
(
ªmfd
);

58 
	`¶ìp
(2);

59 
	`tcÊush
(
ªmfd
, 
TCIOFLUSH
);

60 
c
 = '\n';

61 
	`wrôe
(
ªmfd
, &
c
, 1);

63 i‡(
	`„º‹
(
Âö
)) {

64 
	`îr_msg
("readÉrror ofÜocal file");

65 
	`putc
('\r', 
°dîr
);

66 
	`fÊush
(
°dîr
);

68 
	`f˛o£
(
Âö
);

69 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/take.c

1 
	~"ˇŒ.h
"

3 
	#CTRLA
 001

	)

5 
ªm_ªad
();

6 
	gªm_buf
[
MAXLINE
];

7 *
	gªm_±r
;

8 
	gªm_˙t
 = 0;

14 
	$èke
(
ªmfd
)

16 
n
, 
löe˙t
;

17 
c
;

18 
cmd
[
MAXLINE
];

19 
FILE
 *
Âout
;

21 i‡(
	`¥om±_ªad
("~[èke] ", 
èke_put_¨gs
) < 0) {

22 
	`¥ötf
("usage: [take] <sourcefile> <destfile>\n\r");

29 i‡((
Âout
 = 
	`f›í
(
d°
, "w")Ë=
NULL
) {

30 
	`îr_ªt
("ˇn'à›í %†f‹ wrôög", 
d°
);

31 
	`putc
('\r', 
°dîr
);

32 
	`fÊush
(
°dîr
);

39 
	`•rötf
(
cmd
, "ˇà%s;Échÿ%c\r", 
§c
, 
CTRLA
);

40 
n
 = 
	`°æí
(
cmd
);

41 i‡(
	`wrôe
(
ªmfd
, 
cmd
, 
n
) !=Ç)

42 
	`îr_sys
("writeÉrror");

47 
ªm_˙t
 = 0;

49 i‡((
c
 = 
	`ªm_ªad
(
ªmfd
)) == 0)

51 i‡(
c
 == '\n')

58 
löe˙t
 = 0;

60 i‡((
c
 = 
	`ªm_ªad
(
ªmfd
)) == 0)

62 i‡(
c
 =
CTRLA
)

64 i‡(
c
 == '\r')

66 i‡(
c
 == '\n')

67 
	`¥ötf
("\r%d", ++
löe˙t
);

68 i‡(
	`putc
(
c
, 
Âout
Ë=
EOF
)

71 i‡(
	`„º‹
(
Âout
Ë|| 
	`f˛o£
(ÂoutË=
EOF
) {

72 
	`îr_msg
("outputÉrrorÅoÜocal file");

73 
	`putc
('\r', 
°dîr
);

74 
	`fÊush
(
°dîr
);

76 
c
 = '\n';

77 
	`wrôe
(
ªmfd
, &
c
, 1);

78 
	}
}

85 
	$ªm_ªad
(
ªmfd
)

87 i‡(
ªm_˙t
 <= 0) {

88 i‡((
ªm_˙t
 = 
	`ªad
(
ªmfd
, 
ªm_buf
, 
MAXLINE
)) < 0)

89 
	`îr_sys
("readÉrror");

90 i‡(
ªm_˙t
 == 0)

92 
ªm_±r
 = 
ªm_buf
;

94 
ªm_˙t
--;

95 (*
ªm_±r
++ & 0177);

96 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/call/takeput.c

1 
	~"ˇŒ.h
"

7 
	$èke_put_¨gs
(
¨gc
, **
¨gv
)

9 i‡(
¨gc
 == 1) {

10 
§c
 = 
d°
 = 
¨gv
[0];

12 } i‡(
¨gc
 == 2) {

13 
§c
 = 
¨gv
[0];

14 
d°
 = 
¨gv
[1];

18 
	}
}

23 
	gcmd¨gs
[
MAXLINE
];

31 
¥om±_ªad
(*
¥om±
, (*
u£rfunc
)(, **))

33 
n
;

34 
c
, *
±r
;

36 
	`ây_ª£t
(
STDIN_FILENO
);

38 
n
 = 
	`°æí
(
¥om±
);

39 i‡(
	`wrôe
(
STDOUT_FILENO
, 
¥om±
, 
n
) !=Ç)

40 
	`îr_sys
("writeÉrror");

42 
±r
 = 
cmd¨gs
;

44 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) < 0)

45 
	`îr_sys
("readÉrror");

46 i‡(
n
 == 0)

48 i‡(
c
 == '\n')

50 i‡(
±r
 < &
cmd¨gs
[
MAXLINE
-2])

51 *
±r
++ = 
c
;

53 *
±r
 = 0;

55 
	`ây_øw
(
STDIN_FILENO
);

60 (
	`buf_¨gs
(
cmd¨gs
, 
u£rfunc
));

61 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/calld.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CS_CALL
 "/home/ßr/ˇŒd"

	)

5 
	#CL_CALL
 "ˇŒ"

	)

6 
	#MAXSYSNAME
 256

	)

7 
	#MAXSPEEDSTR
 256

	)

13 
	#NALLOC
 10

	)

15 
	#WHITE
 " \t\n"

	)

16 
	#SYSTEMS
 "./Sy°ems"

	)

17 
	#DEVICES
 "./Devi˚s"

	)

18 
	#DIALERS
 "./DüÀrs"

	)

20 
˛ifd
;

21 
Debug
;

22 
îrmsg
[];

23 *
•ìd
;

24 *
sy¢ame
;

25 
uid_t
 
uid
;

26 vﬁ©ûê
sig_©omic_t
 
chld_Êag
;

27 
	e∑rôy
 { 
NONE
, 
EVEN
, 
ODD
 } 
∑rôy
;

30 
	mfd
;

31 
pid_t
 
	mpid
;

32 
uid_t
 
	muid
;

33 
	mchûdd⁄e
;

35 
	msys·ñl
;

36 
	mfound⁄e
;

37 
	mDebug
;

38 
∑rôy
 
	m∑rôy
;

39 
	m•ìd
[
MAXSPEEDSTR
];

40 
	msy¢ame
[
MAXSYSNAME
];

41 } 
	tClõ¡
;

44 
Clõ¡
 *
˛õ¡
;

45 
˛õ¡_size
;

48 *
	m«me
;

49 *
	mtime
;

50 *
	mty≥
;

51 *
	m˛ass
;

52 *
	mph⁄e
;

53 *
	mlogö
;

54 } 
	tSy°ems
;

57 *
	mty≥
;

58 *
	mlöe
;

59 *
	mlöe2
;

60 *
	m˛ass
;

61 *
	mdüÀr
;

62 } 
	tDevi˚s
;

65 *
	mdüÀr
;

66 *
	msub
;

67 *
	mexp£nd
;

68 } 
	tDüÀrs
;

70 
Sy°ems
 
sy°ems
;

71 
Devi˚s
 
devi˚s
;

72 
DüÀrs
 
düÀrs
;

74 
chûd_dül
(
Clõ¡
 *);

75 
˛i_¨gs
(, **);

76 
˛õ¡_add
(, 
uid_t
);

77 
˛õ¡_dñ
();

78 
˛õ¡_sigchld
(
pid_t
, );

79 
lo›
();

80 *
˘l_°r
();

81 
dev_föd
(
Devi˚s
 *, c⁄° 
Sy°ems
 *);

82 
dev_√xt
(
Devi˚s
 *);

83 
dev_ªw
();

84 
dül_föd
(
DüÀrs
 *, c⁄° 
Devi˚s
 *);

85 
dül_√xt
(
DüÀrs
 *);

86 
dül_ªw
();

87 
ex≥˘_°r
(, *);

88 
ªque°
(
Clõ¡
 *);

89 
£nd_°r
(, *, *, );

90 
sig_chld
();

91 
sys_√xt
(
Sy°ems
 *);

92 
sys_po¢
();

93 
sys_ªw
();

94 
ây_›í
(*, *, 
∑rôy
, );

95 
ây_dül
(, *, *, *, *);

96 
pid_t
 
is_locked
(*);

97 
lock_£t
(*, 
pid_t
);

98 
lock_ªl
(
pid_t
);

99 
DEBUG
(*, ...);

100 
DEBUG_NONL
(*, ...);

	@/root/grocery-shop/language/gcc/src/apue/calld/childdial.c

1 
	~"ˇŒd.h
"

14 
	$chûd_dül
(
Clõ¡
 *
˛ùå
)

16 
fd
, 
n
;

18 
Debug
 = 
˛ùå
->Debug;

19 
	`DEBUG
("chûd,Öid %d", 
	`gëpid
());

21 i‡(
	`°rcmp
(
devi˚s
.
düÀr
, "direct") == 0) {

22 
fd
 = 
	`ây_›í
(
sy°ems
.
˛ass
, 
devi˚s
.
löe
, 
˛ùå
->
∑rôy
, 0);

23 i‡(
fd
 < 0)

24 
dõ
;

26 i‡(
	`dül_föd
(&
düÀrs
, &
devi˚s
) < 0)

27 
dõ
;

28 
fd
 = 
	`ây_›í
(
sy°ems
.
˛ass
, 
devi˚s
.
löe
, 
˛ùå
->
∑rôy
, 1);

29 i‡(
fd
 < 0)

30 
dõ
;

31 i‡(
	`ây_dül
(
fd
, 
sy°ems
.
ph⁄e
, 
düÀrs
.
düÀr
,

32 
düÀrs
.
sub
, düÀrs.
exp£nd
) < 0)

33 
dõ
;

35 
	`DEBUG
("done");

40 i‡(
	`£nd_fd
(
˛ùå
->
fd
, fd) < 0)

41 
	`log_sys
("send_fdÉrror");

42 
	`exô
(0);

44 
dõ
:

51 
n
 = 
	`°æí
(
îrmsg
);

52 i‡(
	`wrôí
(
˛ùå
->
fd
, 
îrmsg
, 
n
) !=Ç)

53 
	`log_sys
("writenÉrror");

54 
	`exô
(1);

55 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/cliargs.c

1 
	~"ˇŒd.h
"

9 
	$˛i_¨gs
(
¨gc
, **
¨gv
)

11 
c
;

13 i‡(
¨gc
 < 2 || 
	`°rcmp
(
¨gv
[0], 
CL_CALL
) != 0) {

14 
	`°r˝y
(
îrmsg
, "usage: call <options> <hostname>");

17 
Debug
 = 0;

18 
∑rôy
 = 
NONE
;

19 
•ìd
 = 
NULL
;

20 
›ãº
 = 0;

21 
›töd
 = 1;

22 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "des:o")Ë!
EOF
) {

23 
c
) {

25 
Debug
 = 1;

29 
∑rôy
 = 
EVEN
;

33 
∑rôy
 = 
ODD
;

37 
•ìd
 = 
›èrg
;

41 
	`•rötf
(
îrmsg
, "uƒecognized o±i⁄: -%c\n", 
›t›t
);

45 i‡(
›töd
 >
¨gc
) {

46 
	`•rötf
(
îrmsg
, "missing <hostname>Åo call\n");

49 
sy¢ame
 = 
¨gv
[
›töd
];

51 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/client.c

1 
	~"ˇŒd.h
"

4 
	$˛õ¡_Æloc
()

6 
i
;

8 i‡(
˛õ¡
 =
NULL
)

9 
˛õ¡
 = 
	`mÆloc
(
NALLOC
 * (
Clõ¡
));

11 
˛õ¡
 = 
	`ªÆloc
(client,

12 (
˛õ¡_size
 + 
NALLOC
Ë* (
Clõ¡
));

13 i‡(
˛õ¡
 =
NULL
)

14 
	`îr_sys
("can'tálloc for clientárray");

19 
i
 = 
˛õ¡_size
; i < clõ¡_sizê+ 
NALLOC
; i++)

20 
˛õ¡
[
i
].
fd
 = -1;

21 
˛õ¡_size
 +
NALLOC
;

22 
	}
}

28 
	$˛õ¡_add
(
fd
, 
uid_t
 
uid
)

30 
i
;

32 i‡(
˛õ¡
 =
NULL
)

33 
	`˛õ¡_Æloc
();

34 
agaö
:

35 
i
 = 0; i < 
˛õ¡_size
; i++) {

36 i‡(
˛õ¡
[
i
].
fd
 == -1) {

37 
˛õ¡
[
i
].
fd
 = fd;

38 
˛õ¡
[
i
].
uid
 = uid;

39 (
i
);

46 
	`˛õ¡_Æloc
();

47 
agaö
;

48 
	}
}

54 
	$˛õ¡_dñ
(
fd
)

56 
i
;

58 
i
 = 0; i < 
˛õ¡_size
; i++) {

59 i‡(
˛õ¡
[
i
].
fd
 == fd) {

60 
˛õ¡
[
i
].
fd
 = -1;

64 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹ fd %d", 
fd
);

65 
	}
}

73 
	$˛õ¡_sigchld
(
pid_t
 
pid
, 
°©
)

75 
i
;

77 
i
 = 0; i < 
˛õ¡_size
; i++) {

78 i‡(
˛õ¡
[
i
].
pid
 ==Öid) {

79 
˛õ¡
[
i
].
chûdd⁄e
 = 
°©
;

83 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹Öid %d", 
pid
);

84 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/ctlstr.c

1 
	~"ˇŒd.h
"

8 
	$˘l_°r
(
c
)

10 
ãmp°r
[6];

12 
c
 &= 255;

13 i‡(
c
 == 0)

15 i‡(
c
 < 040)

16 
	`•rötf
(
ãmp°r
, "^%c", 
c
 + 'A' - 1);

17 i‡(
c
 == 0177)

19 i‡(
c
 > 0177)

20 
	`•rötf
(
ãmp°r
, "\\%03o", 
c
);

22 
	`•rötf
(
ãmp°r
, "%c", 
c
);

23 (
ãmp°r
);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/debug.c

1 
	~"ˇŒd.h
"

2 
	~<°d¨g.h
>

8 
	$DEBUG
(*
fmt
, ...)

10 
va_li°
 
¨gs
;

11 
löe
[
MAXLINE
];

12 
n
;

14 i‡(
Debug
 == 0)

16 
	`va_°¨t
(
¨gs
, 
fmt
);

17 
	`v•rötf
(
löe
, 
fmt
, 
¨gs
);

18 
	`°rˇt
(
löe
, "\n");

19 
	`va_íd
(
¨gs
);

20 
n
 = 
	`°æí
(
löe
);

21 i‡(
	`wrôí
(
˛ifd
, 
löe
, 
n
) !=Ç)

22 
	`log_sys
("writenÉrror");

23 
	}
}

26 
	$DEBUG_NONL
(*
fmt
, ...)

28 
va_li°
 
¨gs
;

29 
löe
[
MAXLINE
];

30 
n
;

32 i‡(
Debug
 == 0)

34 
	`va_°¨t
(
¨gs
, 
fmt
);

35 
	`v•rötf
(
löe
, 
fmt
, 
¨gs
);

36 
	`va_íd
(
¨gs
);

37 
n
 = 
	`°æí
(
löe
);

38 i‡(
	`wrôí
(
˛ifd
, 
löe
, 
n
) !=Ç)

39 
	`log_sys
("writenÉrror");

40 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/devfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂdev
 = 
NULL
;

4 
	gdevlöío
;

5 
	gdevlöe
[
MAXLINE
];

12 
	$dev_√xt
(
Devi˚s
 *
dev±r
)

14 i‡(
Âdev
 =
NULL
) {

15 i‡((
Âdev
 = 
	`f›í
(
DEVICES
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
DEVICES
);

17 
devlöío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
devlöe
, 
MAXLINE
, 
Âdev
Ë=
NULL
)

23 
devlöío
++;

24 i‡((
dev±r
->
ty≥
 = 
	`°πok
(
devlöe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
devlöe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missing `type' in Devices file,Üine %d",

28 
devlöío
);

30 i‡(
dev±r
->
ty≥
[0] == '#')

31 
agaö
;

32 i‡((
dev±r
->
löe
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

33 
	`log_quô
("missing `line' in Devices file,Üine %d",

34 
devlöío
);

35 i‡((
dev±r
->
löe2
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

36 
	`log_quô
("missing `line2' in Devices file,Üine %d",

37 
devlöío
);

38 i‡((
dev±r
->
˛ass
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

39 
	`log_quô
("missing `class' in Devices file,Üine %d",

40 
devlöío
);

41 i‡((
dev±r
->
düÀr
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

42 
	`log_quô
("missing `dialer' in Devices file,Üine %d",

43 
devlöío
);

46 
	}
}

49 
	$dev_ªw
()

51 i‡(
Âdev
 !
NULL
)

52 
	`ªwöd
(
Âdev
);

53 
devlöío
 = 0;

54 
	}
}

60 
	$dev_föd
(
Devi˚s
 *
dev±r
, c⁄° 
Sy°ems
 *
sy•å
)

62 
	`dev_ªw
();

63 
	`dev_√xt
(
dev±r
) >= 0) {

64 i‡(
	`°rcmp
(
sy•å
->
ty≥
, 
dev±r
->type) == 0 &&

65 
	`°rcmp
(
sy•å
->
˛ass
, 
dev±r
->class) == 0)

68 
	`•rötf
(
îrmsg
, "devi˚ `%s'/`%s'ÇŸ found\n", 
sy•å
->
ty≥
,

69 
sy•å
->
˛ass
);

71 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/dialfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂdül
 = 
NULL
;

4 
	gdüŒöío
;

5 
	gdüŒöe
[
MAXLINE
];

12 
	$dül_√xt
(
DüÀrs
 *
düÕå
)

14 i‡(
Âdül
 =
NULL
) {

15 i‡((
Âdül
 = 
	`f›í
(
DIALERS
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
DIALERS
);

17 
düŒöío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
düŒöe
, 
MAXLINE
, 
Âdül
Ë=
NULL
)

23 
düŒöío
++;

24 i‡((
düÕå
->
düÀr
 = 
	`°πok
(
düŒöe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
düŒöe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missing `dialer' in Dialers file,Üine %d",

28 
düŒöío
);

30 i‡(
düÕå
->
düÀr
[0] == '#')

31 
agaö
;

32 i‡((
düÕå
->
sub
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

33 
	`log_quô
("missing `sub' in Dialers file,Üine %d",

34 
düŒöío
);

35 i‡((
düÕå
->
exp£nd
 = 
	`°πok
(
NULL
, "\n")) == NULL)

36 
	`log_quô
("missing `expsend' in Dialers file,Üine %d",

37 
düŒöío
);

40 
	}
}

43 
	$dül_ªw
()

45 i‡(
Âdül
 !
NULL
)

46 
	`ªwöd
(
Âdül
);

47 
düŒöío
 = 0;

48 
	}
}

54 
	$dül_föd
(
DüÀrs
 *
düÕå
, c⁄° 
Devi˚s
 *
dev±r
)

56 
	`dül_ªw
();

57 
	`dül_√xt
(
düÕå
) >= 0) {

58 i‡(
	`°rcmp
(
düÕå
->
düÀr
, 
dev±r
->dialer) == 0)

61 
	`•rötf
(
îrmsg
, "düÀ∏`%s'ÇŸ found\n", 
düÕå
->
düÀr
);

63 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/expectstr.c

1 
	~"ˇŒd.h
"

3 
	#EXPALRM
 45

	)

5 
	gex∑œrm
 = 
EXPALRM
;

6 vﬁ©ûê
sig_©omic_t
 
	gˇught_Ærm
;

8 
size_t


9 
	$exp_ªad
(
fd
, *
buf
)

11 i‡(
ˇught_Ærm
) {

12 
	`DEBUG
("\nreadÅimeout");

15 i‡(
	`ªad
(
fd
, 
buf
, 1) == 1) {

16 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(*
buf
));

19 i‡(
î∫o
 =
EINTR
 && 
ˇught_Ærm
)

20 
	`DEBUG
("\nreadÅimeout");

22 
	`log_sys
("readÉrror");

24 
	}
}

27 
	$sig_Ærm
(
signo
)

29 
ˇught_Ærm
 = 1;

30 
	}
}

33 
	$ex≥˘_°r
(
fd
, *
±r
)

35 
exp°r
[
MAXLINE
], 
öbuf
[MAXLINE];

36 
c
;

37 *
§c
, *
d°
, *
ö±r
, *
cmµå
;

38 
i
, 
m©chÀn
;

40 i‡(
	`°rcmp
(
±r
, "\"\"") == 0)

41 
ªtu∫ok
;

46 
§c
 = 
±r
, 
d°
 = 
exp°r
; (
c
 = *src++) != 0; ) {

47 i‡(
c
 == '\\') {

48 i‡(*
§c
 == 0) {

49 
	`•rötf
(
îrmsg
, "övÆidÉx≥˘ såög: %s\n", 
±r
);

52 
c
 = *
§c
++;

53 
c
) {

55 
c
 = '\r';

59 
c
 = ' ';

64 
	`•rötf
(
îrmsg
, "unknownÉxpectÉscape char: \\%s\n",

65 
	`˘l_°r
(
c
));

69 *
d°
++ = 
c
;

71 *
d°
 = 0;

72 
m©chÀn
 = 
	`°æí
(
exp°r
);

73 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

74 
	`log_quô
("signalÉrror");

75 
ˇught_Ærm
 = 0;

77 
	`Æ¨m
(
ex∑œrm
);

79 i‡(
	`exp_ªad
(
fd
, &
c
) < 0)

81 } 
c
 !
exp°r
[0]);

82 
cmµå
 = 
ö±r
 = 
öbuf
;

83 *
ö±r
 = 
c
;

84 
i
 = 1; i < 
m©chÀn
; i++) {

85 
ö±r
++;

86 i‡(
	`exp_ªad
(
fd
, 
ö±r
) < 0)

90 i‡(
	`°∫cmp
(
cmµå
, 
exp°r
, 
m©chÀn
) == 0)

92 
ö±r
++;

93 i‡(
	`exp_ªad
(
fd
, 
ö±r
) < 0)

95 
cmµå
++;

98 
ªtu∫ok
:

99 
	`Æ¨m
(0);

100 
	`DEBUG
("\nexpect: got it");

102 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/lock.c

1 
	~"ˇŒd.h
"

4 *
	mlöe
;

6 
pid_t
 
	mpid
;

8 } 
	tLock
;

9 
Lock
 *
	glock
 = 
NULL
;

10 
	glock_size
;

11 
	g∆ocks
;

19 
Lock
 *

20 
	$föd_löe
(*
löe
)

22 
i
;

23 
Lock
 *
Õå
;

25 
i
 = 0; i < 
∆ocks
; i++) {

26 i‡(
	`°rcmp
(
löe
, 
lock
[
i
].line) == 0)

27 (&
lock
[
i
]);

34 i‡(
∆ocks
 >
lock_size
) {

35 i‡(
lock
 =
NULL
)

36 
lock
 = 
	`mÆloc
(
NALLOC
 * (
Lock
));

38 
lock
 = 
	`ªÆloc
÷ock, (
lock_size
 + 
NALLOC
Ë* (
Lock
));

39 i‡(
lock
 =
NULL
)

40 
	`îr_sys
("can'tálloc forÜockárray");

41 
lock_size
 +
NALLOC
;

44 
Õå
 = &
lock
[
∆ocks
++];

45 i‡((
Õå
->
löe
 = 
	`mÆloc
(
	`°æí
÷öeË+ 1)Ë=
NULL
)

46 
	`log_sys
("mallocÉrror");

47 
	`°r˝y
(
Õå
->
löe
,Üine);

48 
Õå
->
pid
 = 0;

49 (
Õå
);

50 
	}
}

53 
	$lock_£t
(*
löe
, 
pid_t
 
pid
)

55 
Lock
 *
Õå
;

57 
	`log_msg
("lockög %†f‹Öid %d", 
löe
, 
pid
);

58 
Õå
 = 
	`föd_löe
(
löe
);

59 
Õå
->
pid
 =Öid;

60 
	}
}

63 
	$lock_ªl
(
pid_t
 
pid
)

65 
Lock
 *
Õå
;

67 
Õå
 = &
lock
[0];Ü±∏< &lock[
∆ocks
];Üptr++) {

68 i‡(
Õå
->
pid
 ==Öid) {

69 
	`log_msg
("u∆ockög %†f‹Öid %d", 
Õå
->
löe
, 
pid
);

70 
Õå
->
pid
 = 0;

74 
	`log_msg
("ˇn'àfödÜock f‹Öid = %d", 
pid
);

75 
	}
}

77 
pid_t


78 
	$is_locked
(*
löe
)

80 (
	`föd_löe
(
löe
)->
pid
);

81 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/loop.c

1 
	~"ˇŒd.h
"

2 
	~<î∫o.h
>

4 
˛i_d⁄e
();

5 
chûd_d⁄e
();

11 
fd_£t
 
	gÆl£t
;

14 
	$lo›
()

16 
i
, 
n
, 
maxfd
, 
maxi
, 
li°ífd
, 
ƒód
;

17 
buf
[
MAXLINE
];

18 
Clõ¡
 *
˛ùå
;

19 
uid_t
 
uid
;

20 
fd_£t
 
r£t
;

22 i‡(
	`sig«l_öå
(
SIGCHLD
, 
sig_chld
Ë=
SIG_ERR
)

23 
	`log_sys
("signalÉrror");

28 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_CALL
)) < 0)

29 
	`log_sys
("serv_listenÉrror");

31 
	`FD_ZERO
(&
Æl£t
);

32 
	`FD_SET
(
li°ífd
, &
Æl£t
);

33 
maxfd
 = 
li°ífd
;

34 
maxi
 = -1;

37 i‡(
chld_Êag
)

38 
	`chûd_d⁄e
(
maxi
);

39 
r£t
 = 
Æl£t
;

40 i‡((
n
 = 
	`£À˘
(
maxfd
 + 1, &
r£t
, 
NULL
, NULL, NULL)) < 0) {

41 i‡(
î∫o
 =
EINTR
) {

45 
	`chûd_d⁄e
(
maxi
);

48 
	`log_sys
("selectÉrror");

52 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

56 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

57 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

58 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

59 
	`FD_SET
(
˛ifd
, &
Æl£t
);

60 i‡(
˛ifd
 > 
maxfd
)

61 
maxfd
 = 
˛ifd
;

62 i‡(
i
 > 
maxi
)

63 
maxi
 = 
i
;

64 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

72 
˛ùå
 = &
˛õ¡
[0]; clùå <&˛õ¡[
maxi
]; cliptr++) {

73 i‡((
˛ifd
 = 
˛ùå
->
fd
) < 0)

75 i‡(
	`FD_ISSET
(
˛ifd
, &
r£t
)) {

79 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

80 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

81 } i‡(
ƒód
 == 0) {

87 
	`log_msg
("closed: uid %d, fd %d",

88 
˛ùå
->
uid
, 
˛ifd
);

89 
	`lock_ªl
(
˛ùå
->
pid
);

90 
	`˛i_d⁄e
(
˛ifd
);

98 i‡(
buf
[
ƒód
-1] != 0) {

99 
	`log_quô
("request from uid %dÇotÇullÅerminated:"

100 " %*.*s", 
uid
, 
ƒód
,Çªad, 
buf
);

101 
	`˛i_d⁄e
(
˛ifd
);

104 
	`log_msg
("°¨tög: %s, from uid %d", 
buf
, 
uid
);

111 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0)

112 
	`log_quô
("comm™dÜöêîr‹: %s", 
buf
);

113 
˛ùå
->
Debug
 = Debug;

114 
˛ùå
->
∑rôy
 =Öarity;

115 
	`°r˝y
(
˛ùå
->
sy¢ame
, sysname);

116 
	`°r˝y
(
˛ùå
->
•ìd
, (•ìd =
NULL
) ? "" : speed);

117 
˛ùå
->
chûdd⁄e
 = 0;

118 
˛ùå
->
sys·ñl
 = 0;

119 
˛ùå
->
found⁄e
 = 0;

121 i‡(
	`ªque°
(
˛ùå
) < 0) {

125 i‡(
	`£nd_îr
(
˛ùå
->
fd
, -1, 
îrmsg
) < 0)

126 
	`log_sys
("send_errÉrror");

127 
	`˛i_d⁄e
(
˛ifd
);

138 
	}
}

146 
	$chûd_d⁄e
(
maxi
)

148 
Clõ¡
 *
˛ùå
;

150 
agaö
:

151 
chld_Êag
 = 0;

152 
˛ùå
 = &
˛õ¡
[0]; clùå <&˛õ¡[
maxi
]; cliptr++) {

153 i‡((
˛ifd
 = 
˛ùå
->
fd
) < 0)

155 i‡(
˛ùå
->
chûdd⁄e
) {

156 
	`log_msg
("child done:Öid %d, status %d",

157 
˛ùå
->
pid
, clùå->
chûdd⁄e
-1);

164 i‡(
˛ùå
->
chûdd⁄e
 == 1) {

165 
˛ùå
->
chûdd⁄e
 = 0;

173 
˛ùå
->
chûdd⁄e
 = 0;

174 
	`lock_ªl
(
˛ùå
->
pid
);

175 i‡(
	`ªque°
(
˛ùå
) < 0) {

179 i‡(
	`£nd_îr
(
˛ùå
->
fd
, -1, 
îrmsg
) < 0)

180 
	`log_sys
("send_errÉrror");

181 
	`˛i_d⁄e
(
˛ifd
);

189 i‡(
chld_Êag
)

190 
agaö
;

191 
	}
}

197 
	$˛i_d⁄e
(
˛ifd
)

199 
	`˛õ¡_dñ
(
˛ifd
);

200 
	`FD_CLR
(
˛ifd
, &
Æl£t
);

201 
	`˛o£
(
˛ifd
);

202 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/main.c

1 
	~"ˇŒd.h
"

2 
	~<sy¶og.h
>

4 
	g˛ifd
, 
	glog_to_°dîr
, 
	g˛õ¡_size
;

5 
	gDebug
;

6 
	gîrmsg
[
MAXLINE
];

7 *
	g•ìd
, *
	gsy¢ame
;

8 
uid_t
 
	guid
;

9 
Clõ¡
 *
	g˛õ¡
 = 
NULL
;

10 
Sy°ems
 
	gsy°ems
;

11 
Devi˚s
 
	gdevi˚s
;

12 
DüÀrs
 
	gdüÀrs
;

13 vﬁ©ûê
sig_©omic_t
 
	gchld_Êag
;

14 
∑rôy
 
	g∑rôy
 = 
NONE
;

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
c
;

21 
	`log_›í
("ˇŒd", 
LOG_PID
, 
LOG_USER
);

23 
›ãº
 = 0;

24 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d")Ë!
EOF
) {

25 
c
) {

27 
log_to_°dîr
 = 1;

31 
	`log_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

35 i‡(
log_to_°dîr
 == 0)

36 
	`d´m⁄ize
("calld");

38 
	`lo›
();

39 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/request.c

1 
	~"ˇŒd.h
"

4 
	$ªque°
(
Clõ¡
 *
˛ùå
)

6 
pid_t
 
pid
;

11 
îrmsg
[0] = 0;

12 
	`sys_po¢
(
˛ùå
->
sys·ñl
);

13 (
˛ùå
->
sys·ñl
 = 
	`sys_√xt
(&
sy°ems
)) >= 0) {

14 i‡(
	`°rcmp
(
˛ùå
->
sy¢ame
, 
sy°ems
.
«me
) == 0) {

19 i‡(
˛ùå
->
•ìd
[0] != 0 &&

20 
	`°rcmp
(
˛ùå
->
•ìd
, 
sy°ems
.
˛ass
) != 0)

23 
	`DEBUG
("åyög sys: %s, %s, %s, %s", 
sy°ems
.
«me
,

24 
sy°ems
.
ty≥
, sy°ems.
˛ass
, sy°ems.
ph⁄e
);

25 
˛ùå
->
found⁄e
++;

26 i‡(
	`dev_föd
(&
devi˚s
, &
sy°ems
) < 0)

29 
	`DEBUG
("åyög dev: %s, %s, %s, %s", 
devi˚s
.
ty≥
,

30 
devi˚s
.
löe
, devi˚s.
˛ass
, devi˚s.
düÀr
);

31 i‡((
pid
 = 
	`is_locked
(
devi˚s
.
löe
)) != 0) {

32 
	`•rötf
(
îrmsg
, "device `%s'álreadyÜocked byÖid %d\n",

33 
devi˚s
.
löe
, 
pid
);

41 
	`TELL_WAIT
();

42 i‡((
˛ùå
->
pid
 = 
	`f‹k
()) < 0) {

43 
	`log_sys
("forkÉrror");

44 } i‡(
˛ùå
->
pid
 == 0) {

45 
	`WAIT_PARENT
();

46 
	`chûd_dül
(
˛ùå
);

50 
	`lock_£t
(
devi˚s
.
löe
, 
˛ùå
->
pid
);

55 
	`TELL_CHILD
(
˛ùå
->
pid
);

63 i‡(
˛ùå
->
found⁄e
 == 0)

64 
	`•rötf
(
îrmsg
, "sy°em `%s'ÇŸ found\n", 
˛ùå
->
sy¢ame
);

65 i‡(
îrmsg
[0] == 0)

66 
	`•rötf
(
îrmsg
, "unableÅo connectÅo system `%s'\n",

67 
˛ùå
->
sy¢ame
);

69 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/sendstr.c

1 
	~"ˇŒd.h
"

4 
	$£nd_°r
(
fd
, *
±r
, *
ph⁄e
, 
echocheck
)

6 
c
, 
ãmpc
;

11 (
c
 = *
±r
++) != 0) {

12 i‡(
c
 == '\\') {

13 i‡(*
±r
 == 0) {

14 
	`•rötf
(
îrmsg
, "backslashátÉnd of send string\n");

17 
c
 = *
±r
++;

19 
c
) {

21 i‡(*
±r
 == 0)

22 
ªtu∫ok
;

26 
	`DEBUG_NONL
("<delay>");

27 
	`¶ìp
(2);

31 
	`DEBUG_NONL
("<pause>");

32 
	`¶ìp_us
(250000);

36 
	`DEBUG_NONL
("<echo check off>");

37 
echocheck
 = 0;

41 
	`DEBUG_NONL
("<echo check on>");

42 
echocheck
 = 1;

46 
	`£nd_°r
(
fd
, 
ph⁄e
,Öh⁄e, 
echocheck
);

50 
c
 = '\r';

54 
c
 = ' ';

59 
	`•rötf
(
îrmsg
, "unknown sendÉscape char: \\%s\n",

60 
	`˘l_°r
(
c
));

65 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(
c
));

66 i‡(
	`wrôe
(
fd
, &
c
, 1) != 1)

67 
	`log_sys
("writeÉrror");

68 i‡(
echocheck
) {

70 i‡(
	`ªad
(
fd
, &
ãmpc
, 1) != 1)

71 
	`log_sys
("readÉrror");

72 
	`DEBUG_NONL
("{%s}", 
	`˘l_°r
(
ãmpc
));

73 } 
ãmpc
 !
c
);

76 
c
 = '\r';

77 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(
c
));

78 i‡(
	`wrôe
(
fd
, &
c
, 1) != 1)

79 
	`log_sys
("writeÉrror");

81 
ªtu∫ok
:

82 
	`DEBUG
("");

84 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/sigchld.c

1 
	~"ˇŒd.h
"

2 
	~<sys/waô.h
>

9 
	$sig_chld
(
signo
)

11 
°©
, 
î∫o_ßve
;

12 
pid_t
 
pid
;

14 
î∫o_ßve
 = 
î∫o
;

15 
chld_Êag
 = 1;

16 i‡((
pid
 = 
	`waôpid
(-1, &
°©
, 0)) <= 0)

17 
	`log_sys
("waitpidÉrror");

19 i‡(
	`WIFEXITED
(
°©
) != 0)

20 
	`˛õ¡_sigchld
(
pid
, 
	`WEXITSTATUS
(
°©
)+1);

22 
	`log_msg
("chûd %dÅîmö©edábn‹mÆly: %04x", 
pid
, 
°©
);

24 
î∫o
 = 
î∫o_ßve
;

25 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/sysfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂsys
 = 
NULL
;

4 
	gsy¶öío
;

5 
	gsy¶öe
[
MAXLINE
];

12 
	$sys_√xt
(
Sy°ems
 *
sy•å
)

14 i‡(
Âsys
 =
NULL
) {

15 i‡((
Âsys
 = 
	`f›í
(
SYSTEMS
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
SYSTEMS
);

17 
sy¶öío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
sy¶öe
, 
MAXLINE
, 
Âsys
Ë=
NULL
)

23 
sy¶öío
++;

24 i‡((
sy•å
->
«me
 = 
	`°πok
(
sy¶öe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
sy¶öe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missög `«me' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

29 i‡(
sy•å
->
«me
[0] == '#')

30 
agaö
;

31 i‡((
sy•å
->
time
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

32 
	`log_quô
("missög `time' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

33 i‡((
sy•å
->
ty≥
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

34 
	`log_quô
("missög `ty≥' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

35 i‡((
sy•å
->
˛ass
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

36 
	`log_quô
("missög `˛ass' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

37 i‡((
sy•å
->
ph⁄e
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

38 
	`log_quô
("missög `ph⁄e' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

39 i‡((
sy•å
->
logö
 = 
	`°πok
(
NULL
, "\n")) == NULL)

40 
	`log_quô
("missög `logö' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

42 (
	`·ñl
(
Âsys
));

43 
	}
}

46 
	$sys_ªw
()

48 i‡(
Âsys
 !
NULL
)

49 
	`ªwöd
(
Âsys
);

50 
sy¶öío
 = 0;

51 
	}
}

54 
	$sys_po¢
(
po¢
)

56 i‡(
po¢
 == 0)

57 
	`sys_ªw
();

58 i‡(
	`f£ek
(
Âsys
, 
po¢
, 
SEEK_SET
) != 0)

59 
	`log_sys
("fseekÉrror");

60 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/ttydial.c

1 
	~"ˇŒd.h
"

4 
	$ây_dül
(
fd
, *
ph⁄e
, *
düÀr
, *
sub
, *
exp£nd
)

6 *
±r
;

8 
±r
 = 
	`°πok
(
exp£nd
, 
WHITE
);

10 
	`DEBUG_NONL
("ex≥˘ = %s\ƒód: ", 
±r
);

11 i‡(
	`ex≥˘_°r
(
fd
, 
±r
) < 0)

14 i‡((
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

16 
	`DEBUG_NONL
("£nd = %s\nwrôe: ", 
±r
);

17 i‡(
	`£nd_°r
(
fd
, 
±r
, 
ph⁄e
, 0) < 0)

20 i‡((
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/calld/ttyopen.c

1 
	~"ˇŒd.h
"

2 
	~<f˙é.h
>

8 
	$ây_›í
(*
˛ass
, *
löe
, 
∑rôy
Ö¨ôy, 
modem
)

10 
fd
, 
baud
;

11 
dev«me
[100];

12 
ãrmios
 
ãrm
;

17 
	`°r˝y
(
dev«me
, "/dev/");

18 
	`°rˇt
(
dev«me
, 
löe
);

19 i‡((
fd
 = 
	`›í
(
dev«me
, 
O_RDWR
 | 
O_NONBLOCK
)) < 0) {

20 
	`•rötf
(
îrmsg
, "can't open %s: %s\n",

21 
dev«me
, 
	`°ªº‹
(
î∫o
));

24 i‡(
	`ißây
(
fd
) == 0) {

25 
	`•rötf
(
îrmsg
, "%†i†nŸáÅty\n", 
dev«me
);

32 i‡(
	`tcgë©å
(
fd
, &
ãrm
) < 0)

33 
	`log_sys
("tcgetattrÉrror");

35 i‡(
∑rôy
 =
NONE
)

36 
ãrm
.
c_cÊag
 = 
CSjob
;

37 i‡(
∑rôy
 =
EVEN
)

38 
ãrm
.
c_cÊag
 = 
CS7
 | 
PARENB
;

39 i‡(
∑rôy
 =
ODD
)

40 
ãrm
.
c_cÊag
 = 
CS7
 | 
PARENB
 | 
PARODD
;

42 
	`log_quô
("unknownÖarity");

43 
ãrm
.
c_cÊag
 |
CREAD
 |

44 
HUPCL
;

46 i‡(
modem
 == 0)

47 
ãrm
.
c_cÊag
 |
CLOCAL
;

49 
ãrm
.
c_oÊag
 = 0;

50 
ãrm
.
c_iÊag
 = 
IXON
 | 
IXOFF
 |

51 
IGNBRK
 |

52 
ISTRIP
 |

53 
IGNPAR
;

54 
ãrm
.
c_lÊag
 = 0;

57 
ãrm
.
c_cc
[
VMIN
] = 1;

58 
ãrm
.
c_cc
[
VTIME
] = 0;

60 i‡(
	`°rcmp
(
˛ass
, "3job400") == 0) {

61 
baud
 = 
B3job400
;

62 } i‡(
	`°rcmp
(
˛ass
, "19200") == 0) {

63 
baud
 = 
B19200
;

64 } i‡(
	`°rcmp
(
˛ass
, "9600") == 0) {

65 
baud
 = 
B9600
;

66 } i‡(
	`°rcmp
(
˛ass
, "4job00") == 0) {

67 
baud
 = 
B4job00
;

68 } i‡(
	`°rcmp
(
˛ass
, "2400") == 0) {

69 
baud
 = 
B2400
;

70 } i‡(
	`°rcmp
(
˛ass
, "1job00") == 0) {

71 
baud
 = 
B1job00
;

72 } i‡(
	`°rcmp
(
˛ass
, "1200") == 0) {

73 
baud
 = 
B1200
;

74 } i‡(
	`°rcmp
(
˛ass
, "600") == 0) {

75 
baud
 = 
B600
;

76 } i‡(
	`°rcmp
(
˛ass
, "300") == 0) {

77 
baud
 = 
B300
;

78 } i‡(
	`°rcmp
(
˛ass
, "200") == 0) {

79 
baud
 = 
B200
;

80 } i‡(
	`°rcmp
(
˛ass
, "150") == 0) {

81 
baud
 = 
B150
;

82 } i‡(
	`°rcmp
(
˛ass
, "134") == 0) {

83 
baud
 = 
B134
;

84 } i‡(
	`°rcmp
(
˛ass
, "110") == 0) {

85 
baud
 = 
B110
;

86 } i‡(
	`°rcmp
(
˛ass
, "75") == 0) {

87 
baud
 = 
B75
;

88 } i‡(
	`°rcmp
(
˛ass
, "50") == 0) {

89 
baud
 = 
B50
;

91 
	`•rötf
(
îrmsg
, "övÆid baudÑ©e: %s\n", 
˛ass
);

94 
	`cf£ti•ìd
(&
ãrm
, 
baud
);

95 
	`cf£to•ìd
(&
ãrm
, 
baud
);

97 i‡(
	`tc£èâr
(
fd
, 
TCSANOW
, &
ãrm
) < 0)

98 
	`log_sys
("tcsetattrÉrror");

100 
	`DEBUG
("tty open");

101 
	`˛r_Ê
(
fd
, 
O_NONBLOCK
);

102 (
fd
);

103 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/daemons/init.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<f˙é.h
>

4 
	~<sys/ªsour˚.h
>

7 
	$d´m⁄ize
(c⁄° *
cmd
)

9 
i
, 
fd0
, 
fd1
, 
fd2
;

10 
pid_t
 
pid
;

11 
æimô
 
æ
;

12 
siga˘i⁄
 
ß
;

17 
	`umask
(0);

22 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

23 
	`îr_quô
("%s: c™'àgë fûêlimô", 
cmd
);

28 i‡((
pid
 = 
	`f‹k
()) < 0)

29 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

30 i‡(
pid
 != 0)

31 
	`exô
(0);

32 
	`£tsid
();

37 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

38 
	`sigem±y£t
(&
ß
.
ß_mask
);

39 
ß
.
ß_Êags
 = 0;

40 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

41 
	`îr_quô
("%s: can't ignore SIGHUP");

42 i‡((
pid
 = 
	`f‹k
()) < 0)

43 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

44 i‡(
pid
 != 0)

45 
	`exô
(0);

51 i‡(
	`chdú
("/") < 0)

52 
	`îr_quô
("%s: can't change directoryÅo /");

57 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

58 
æ
.
æim_max
 = 1024;

59 
i
 = 0; i < 
æ
.
æim_max
; i++)

60 
	`˛o£
(
i
);

65 
fd0
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

66 
fd1
 = 
	`dup
(0);

67 
fd2
 = 
	`dup
(0);

72 
	`›ílog
(
cmd
, 
LOG_CONS
, 
LOG_DAEMON
);

73 i‡(
fd0
 !0 || 
fd1
 !1 || 
fd2
 != 2) {

74 
	`sy¶og
(
LOG_ERR
, "unexpected file descriptors %d %d %d",

75 
fd0
, 
fd1
, 
fd2
);

76 
	`exô
(1);

78 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/daemons/lockfile.c

1 
	~<uni°d.h
>

2 
	~<f˙é.h
>

5 
	$lockfûe
(
fd
)

7 
Êock
 
Ê
;

9 
Ê
.
l_ty≥
 = 
F_WRLCK
;

10 
Ê
.
l_°¨t
 = 0;

11 
Ê
.
l_whí˚
 = 
SEEK_SET
;

12 
Ê
.
l_Àn
 = 0;

13 (
	`f˙é
(
fd
, 
F_SETLK
, &
Ê
));

14 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/daemons/reread.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

3 
	~<sy¶og.h
>

5 
sig£t_t
 
	gmask
;

7 
Æªady_ru¬ög
();

10 
	$ªªad
()

13 
	}
}

16 
	$thr_‚
(*
¨g
)

18 
îr
, 
signo
;

21 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

22 i‡(
îr
 != 0) {

23 
	`sy¶og
(
LOG_ERR
, "sigwait failed");

24 
	`exô
(1);

27 
signo
) {

28 
SIGHUP
:

29 
	`sy¶og
(
LOG_INFO
, "Re-reading configuration file");

30 
	`ªªad
();

33 
SIGTERM
:

34 
	`sy¶og
(
LOG_INFO
, "got SIGTERM;Éxiting");

35 
	`exô
(0);

38 
	`sy¶og
(
LOG_INFO
, "u√x≥˘ed sig«»%d\n", 
signo
);

42 
	}
}

45 
	$maö
(
¨gc
, *
¨gv
[])

47 
îr
;

48 
±hªad_t
 
tid
;

49 *
cmd
;

50 
siga˘i⁄
 
ß
;

52 i‡((
cmd
 = 
	`°ºchr
(
¨gv
[0], '/')Ë=
NULL
)

53 
cmd
 = 
¨gv
[0];

55 
cmd
++;

60 
	`d´m⁄ize
(
cmd
);

65 i‡(
	`Æªady_ru¬ög
()) {

66 
	`sy¶og
(
LOG_ERR
, "daemonálreadyÑunning");

67 
	`exô
(1);

73 
ß
.
ß_h™dÀr
 = 
SIG_DFL
;

74 
	`sigem±y£t
(&
ß
.
ß_mask
);

75 
ß
.
ß_Êags
 = 0;

76 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

77 
	`îr_quô
("%s: can'tÑestore SIGHUP default");

78 
	`sigfûl£t
(&
mask
);

79 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, 
NULL
)) != 0)

80 
	`îr_exô
(
îr
, "SIG_BLOCKÉrror");

85 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

86 i‡(
îr
 != 0)

87 
	`îr_exô
(
îr
, "can't createÅhread");

93 
	`exô
(0);

94 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/daemons/reread2.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<î∫o.h
>

5 
lockfûe
();

6 
Æªady_ru¬ög
();

9 
	$ªªad
()

12 
	}
}

15 
	$sigãrm
(
signo
)

17 
	`sy¶og
(
LOG_INFO
, "got SIGTERM;Éxiting");

18 
	`exô
(0);

19 
	}
}

22 
	$sighup
(
signo
)

24 
	`sy¶og
(
LOG_INFO
, "Re-reading configuration file");

25 
	`ªªad
();

26 
	}
}

29 
	$maö
(
¨gc
, *
¨gv
[])

31 *
cmd
;

32 
siga˘i⁄
 
ß
;

34 i‡((
cmd
 = 
	`°ºchr
(
¨gv
[0], '/')Ë=
NULL
)

35 
cmd
 = 
¨gv
[0];

37 
cmd
++;

42 
	`d´m⁄ize
(
cmd
);

47 i‡(
	`Æªady_ru¬ög
()) {

48 
	`sy¶og
(
LOG_ERR
, "daemonálreadyÑunning");

49 
	`exô
(1);

55 
ß
.
ß_h™dÀr
 = 
sigãrm
;

56 
	`sigem±y£t
(&
ß
.
ß_mask
);

57 
	`sigadd£t
(&
ß
.
ß_mask
, 
SIGHUP
);

58 
ß
.
ß_Êags
 = 0;

59 i‡(
	`siga˘i⁄
(
SIGTERM
, &
ß
, 
NULL
) < 0) {

60 
	`sy¶og
(
LOG_ERR
, "ˇn'àˇtch SIGTERM: %s", 
	`°ªº‹
(
î∫o
));

61 
	`exô
(1);

63 
ß
.
ß_h™dÀr
 = 
sighup
;

64 
	`sigem±y£t
(&
ß
.
ß_mask
);

65 
	`sigadd£t
(&
ß
.
ß_mask
, 
SIGTERM
);

66 
ß
.
ß_Êags
 = 0;

67 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0) {

68 
	`sy¶og
(
LOG_ERR
, "ˇn'àˇtch SIGHUP: %s", 
	`°ªº‹
(
î∫o
));

69 
	`exô
(1);

76 
	`exô
(0);

77 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/daemons/single.c

1 
	~<uni°d.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<sy¶og.h
>

5 
	~<°rög.h
>

6 
	~<î∫o.h
>

7 
	~<°dio.h
>

8 
	~<sys/°©.h
>

10 
	#LOCKFILE
 "/v¨/run/d´m⁄.pid"

	)

11 
	#LOCKMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IROTH
)

	)

13 
lockfûe
();

16 
	$Æªady_ru¬ög
()

18 
fd
;

19 
buf
[16];

21 
fd
 = 
	`›í
(
LOCKFILE
, 
O_RDWR
|
O_CREAT
, 
LOCKMODE
);

22 i‡(
fd
 < 0) {

23 
	`sy¶og
(
LOG_ERR
, "ˇn'à›í %s: %s", 
LOCKFILE
, 
	`°ªº‹
(
î∫o
));

24 
	`exô
(1);

26 i‡(
	`lockfûe
(
fd
) < 0) {

27 i‡(
î∫o
 =
EACCES
 ||Éºnÿ=
EAGAIN
) {

28 
	`˛o£
(
fd
);

31 
	`sy¶og
(
LOG_ERR
, "ˇn'àlock %s: %s", 
LOCKFILE
, 
	`°ªº‹
(
î∫o
));

32 
	`exô
(1);

34 
	`·runˇã
(
fd
, 0);

35 
	`•rötf
(
buf
, "%ld", ()
	`gëpid
());

36 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf)+1);

38 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/datafiles/getpwnam.c

1 
	~<pwd.h
>

2 
	~<°ddef.h
>

3 
	~<°rög.h
>

5 
∑sswd
 *

6 
	$gëpw«m
(c⁄° *
«me
)

8 
∑sswd
 *
±r
;

10 
	`£çwít
();

11 (
±r
 = 
	`gëpwít
()Ë!
NULL
)

12 i‡(
	`°rcmp
(
«me
, 
±r
->
pw_«me
) == 0)

14 
	`ídpwít
();

15 (
±r
);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/db/apue_db.h

1 #i‚de‡
_APUE_DB_H


2 
	#_APUE_DB_H


	)

4 * 
	tDBHANDLE
;

6 
DBHANDLE
 
db_›í
(const *, , ...);

7 
db_˛o£
(
DBHANDLE
);

8 *
db_„tch
(
DBHANDLE
, const *);

9 
db_°‹e
(
DBHANDLE
, const *, const *, );

10 
db_dñëe
(
DBHANDLE
, const *);

11 
db_ªwöd
(
DBHANDLE
);

12 *
db_√xåec
(
DBHANDLE
, *);

17 
	#DB_INSERT
 1

	)

18 
	#DB_REPLACE
 2

	)

19 
	#DB_STORE
 3

	)

24 
	#IDXLEN_MIN
 6

	)

25 
	#IDXLEN_MAX
 1024

	)

26 
	#DATLEN_MIN
 2

	)

27 
	#DATLEN_MAX
 1024

	)

	@/root/grocery-shop/language/gcc/src/apue/db/db.c

1 
	~"≠ue.h
"

2 
	~"≠ue_db.h
"

3 
	~<f˙é.h
>

4 
	~<°d¨g.h
>

5 
	~<î∫o.h
>

6 
	~<sys/uio.h
>

13 
	#IDXLEN_SZ
 4

	)

14 
	#SEP
 ':'

	)

15 
	#SPACE
 ' '

	)

16 
	#NEWLINE
 '\n'

	)

22 
	#PTR_SZ
 6

	)

23 
	#PTR_MAX
 999999

	)

24 
	#NHASH_DEF
 137

	)

25 
	#FREE_OFF
 0

	)

26 
	#HASH_OFF
 
PTR_SZ


	)

28 
	tDBHASH
;

29 
	tCOUNT
;

35 
	midxfd
;

36 
	md©fd
;

37 *
	midxbuf
;

38 *
	md©buf
;

39 *
	m«me
;

40 
off_t
 
	midxoff
;

42 
size_t
 
	midxÀn
;

45 
off_t
 
	md©off
;

46 
size_t
 
	md©Àn
;

48 
off_t
 
	m±rvÆ
;

49 
off_t
 
	m±roff
;

50 
off_t
 
	mchaöoff
;

51 
off_t
 
	mhashoff
;

52 
DBHASH
 
	mnhash
;

53 
COUNT
 
	m˙t_dñok
;

54 
COUNT
 
	m˙t_dñîr
;

55 
COUNT
 
	m˙t_„tchok
;

56 
COUNT
 
	m˙t_„tchîr
;

57 
COUNT
 
	m˙t_√xåec
;

58 
COUNT
 
	m˙t_°‹1
;

59 
COUNT
 
	m˙t_°‹2
;

60 
COUNT
 
	m˙t_°‹3
;

61 
COUNT
 
	m˙t_°‹4
;

62 
COUNT
 
	m˙t_°‹îr
;

63 } 
	tDB
;

68 
DB
 *
_db_Æloc
();

69 
_db_dodñëe
(
DB
 *);

70 
_db_föd_™d_lock
(
DB
 *, const *, );

71 
_db_föd‰ì
(
DB
 *, , );

72 
_db_‰ì
(
DB
 *);

73 
DBHASH
 
_db_hash
(
DB
 *, const *);

74 *
_db_ªadd©
(
DB
 *);

75 
off_t
 
_db_ªadidx
(
DB
 *, off_t);

76 
off_t
 
_db_ªad±r
(
DB
 *, off_t);

77 
_db_wrôed©
(
DB
 *, c⁄° *, 
off_t
, );

78 
_db_wrôeidx
(
DB
 *, c⁄° *, 
off_t
, , off_t);

79 
_db_wrôïå
(
DB
 *, 
off_t
, off_t);

84 
DBHANDLE


85 
	$db_›í
(c⁄° *
∑th«me
, 
oÊag
, ...)

87 
DB
 *
db
;

88 
Àn
, 
mode
;

89 
size_t
 
i
;

90 
asciùå
[
PTR_SZ
 + 1],

91 
hash
[(
NHASH_DEF
 + 1Ë* 
PTR_SZ
 + 2];

93 
°©
 
°©buff
;

98 
Àn
 = 
	`°æí
(
∑th«me
);

99 i‡((
db
 = 
	`_db_Æloc
(
Àn
)Ë=
NULL
)

100 
	`îr_dump
("db_open: _db_allocÉrror for DB");

102 
db
->
nhash
 = 
NHASH_DEF
;

103 
db
->
hashoff
 = 
HASH_OFF
;

104 
	`°r˝y
(
db
->
«me
, 
∑th«me
);

105 
	`°rˇt
(
db
->
«me
, ".idx");

107 i‡(
oÊag
 & 
O_CREAT
) {

108 
va_li°
 
≠
;

110 
	`va_°¨t
(
≠
, 
oÊag
);

111 
mode
 = 
	`va_¨g
(
≠
, );

112 
	`va_íd
(
≠
);

117 
db
->
idxfd
 = 
	`›í
(db->
«me
, 
oÊag
, 
mode
);

118 
	`°r˝y
(
db
->
«me
 + 
Àn
, ".dat");

119 
db
->
d©fd
 = 
	`›í
(db->
«me
, 
oÊag
, 
mode
);

124 
db
->
idxfd
 = 
	`›í
(db->
«me
, 
oÊag
);

125 
	`°r˝y
(
db
->
«me
 + 
Àn
, ".dat");

126 
db
->
d©fd
 = 
	`›í
(db->
«me
, 
oÊag
);

129 i‡(
db
->
idxfd
 < 0 || db->
d©fd
 < 0) {

130 
	`_db_‰ì
(
db
);

131 (
NULL
);

134 i‡((
oÊag
 & (
O_CREAT
 | 
O_TRUNC
)) == (O_CREAT | O_TRUNC)) {

140 i‡(
	`wrôew_lock
(
db
->
idxfd
, 0, 
SEEK_SET
, 0) < 0)

141 
	`îr_dump
("db_open: writew_lockÉrror");

143 i‡(
	`f°©
(
db
->
idxfd
, &
°©buff
) < 0)

144 
	`îr_sys
("db_open: fstatÉrror");

146 i‡(
°©buff
.
°_size
 == 0) {

152 
	`•rötf
(
asciùå
, "%*d", 
PTR_SZ
, 0);

153 
hash
[0] = 0;

154 
i
 = 0; i < 
NHASH_DEF
 + 1; i++)

155 
	`°rˇt
(
hash
, 
asciùå
);

156 
	`°rˇt
(
hash
, "\n");

157 
i
 = 
	`°æí
(
hash
);

158 i‡(
	`wrôe
(
db
->
idxfd
, 
hash
, 
i
) != i)

159 
	`îr_dump
("db_open: index file init writeÉrror");

161 i‡(
	`un_lock
(
db
->
idxfd
, 0, 
SEEK_SET
, 0) < 0)

162 
	`îr_dump
("db_open: un_lockÉrror");

164 
	`db_ªwöd
(
db
);

165 (
db
);

166 
	}
}

171 
DB
 *

172 
	$_db_Æloc
(
«mñí
)

174 
DB
 *
db
;

179 i‡((
db
 = 
	`ˇŒoc
(1, (
DB
))Ë=
NULL
)

180 
	`îr_dump
("_db_alloc: callocÉrror for DB");

181 
db
->
idxfd
 = db->
d©fd
 = -1;

187 i‡((
db
->
«me
 = 
	`mÆloc
(
«mñí
 + 5)Ë=
NULL
)

188 
	`îr_dump
("_db_alloc: mallocÉrror forÇame");

194 i‡((
db
->
idxbuf
 = 
	`mÆloc
(
IDXLEN_MAX
 + 2)Ë=
NULL
)

195 
	`îr_dump
("_db_alloc: mallocÉrror for index buffer");

196 i‡((
db
->
d©buf
 = 
	`mÆloc
(
DATLEN_MAX
 + 2)Ë=
NULL
)

197 
	`îr_dump
("_db_alloc: mallocÉrror for data buffer");

198 (
db
);

199 
	}
}

205 
	$db_˛o£
(
DBHANDLE
 
h
)

207 
	`_db_‰ì
((
DB
 *)
h
);

208 
	}
}

215 
	$_db_‰ì
(
DB
 *
db
)

217 i‡(
db
->
idxfd
 >= 0)

218 
	`˛o£
(
db
->
idxfd
);

219 i‡(
db
->
d©fd
 >= 0)

220 
	`˛o£
(
db
->
d©fd
);

221 i‡(
db
->
idxbuf
 !
NULL
)

222 
	`‰ì
(
db
->
idxbuf
);

223 i‡(
db
->
d©buf
 !
NULL
)

224 
	`‰ì
(
db
->
d©buf
);

225 i‡(
db
->
«me
 !
NULL
)

226 
	`‰ì
(
db
->
«me
);

227 
	`‰ì
(
db
);

228 
	}
}

234 
	$db_„tch
(
DBHANDLE
 
h
, c⁄° *
key
)

236 
DB
 *
db
 = 
h
;

237 *
±r
;

239 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 0) < 0) {

240 
±r
 = 
NULL
;

241 
db
->
˙t_„tchîr
++;

243 
±r
 = 
	`_db_ªadd©
(
db
);

244 
db
->
˙t_„tchok
++;

250 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

251 
	`îr_dump
("db_fetch: un_lockÉrror");

252 (
±r
);

253 
	}
}

260 
	$_db_föd_™d_lock
(
DB
 *
db
, c⁄° *
key
, 
wrôñock
)

262 
off_t
 
off£t
, 
√xtoff£t
;

270 
db
->
chaöoff
 = (
	`_db_hash
(db, 
key
Ë* 
PTR_SZ
Ë+ db->
hashoff
;

271 
db
->
±roff
 = db->
chaöoff
;

277 i‡(
wrôñock
) {

278 i‡(
	`wrôew_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

279 
	`îr_dump
("_db_find_and_lock: writew_lockÉrror");

281 i‡(
	`ªadw_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

282 
	`îr_dump
("_db_find_and_lock:Ñeadw_lockÉrror");

289 
off£t
 = 
	`_db_ªad±r
(
db
, db->
±roff
);

290 
off£t
 != 0) {

291 
√xtoff£t
 = 
	`_db_ªadidx
(
db
, 
off£t
);

292 i‡(
	`°rcmp
(
db
->
idxbuf
, 
key
) == 0)

294 
db
->
±roff
 = 
off£t
;

295 
off£t
 = 
√xtoff£t
;

300 (
off£t
 == 0 ? -1 : 0);

301 
	}
}

306 
DBHASH


307 
	$_db_hash
(
DB
 *
db
, c⁄° *
key
)

309 
DBHASH
 
hvÆ
 = 0;

310 
c
;

311 
i
;

313 
i
 = 1; (
c
 = *
key
++) != 0; i++)

314 
hvÆ
 +
c
 * 
i
;

315 (
hvÆ
 % 
db
->
nhash
);

316 
	}
}

323 
off_t


324 
	$_db_ªad±r
(
DB
 *
db
, 
off_t
 
off£t
)

326 
asciùå
[
PTR_SZ
 + 1];

328 i‡(
	`l£ek
(
db
->
idxfd
, 
off£t
, 
SEEK_SET
) == -1)

329 
	`îr_dump
("_db_readptr:ÜseekÉrrorÅoÖtr field");

330 i‡(
	`ªad
(
db
->
idxfd
, 
asciùå
, 
PTR_SZ
) != PTR_SZ)

331 
	`îr_dump
("_db_readptr:ÑeadÉrror ofÖtr field");

332 
asciùå
[
PTR_SZ
] = 0;

333 (
	`©ﬁ
(
asciùå
));

334 
	}
}

343 
off_t


344 
	$_db_ªadidx
(
DB
 *
db
, 
off_t
 
off£t
)

346 
ssize_t
 
i
;

347 *
±r1
, *
±r2
;

348 
asciùå
[
PTR_SZ
 + 1], 
asciûí
[
IDXLEN_SZ
 + 1];

349 
iovec
 
iov
[2];

356 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
,

357 
off£t
 =0 ? 
SEEK_CUR
 : 
SEEK_SET
)) == -1)

358 
	`îr_dump
("_db_readidx:ÜseekÉrror");

365 
iov
[0].
iov_ba£
 = 
asciùå
;

366 
iov
[0].
iov_Àn
 = 
PTR_SZ
;

367 
iov
[1].
iov_ba£
 = 
asciûí
;

368 
iov
[1].
iov_Àn
 = 
IDXLEN_SZ
;

369 i‡((
i
 = 
	`ªadv
(
db
->
idxfd
, &
iov
[0], 2)Ë!
PTR_SZ
 + 
IDXLEN_SZ
) {

370 i‡(
i
 =0 && 
off£t
 == 0)

372 
	`îr_dump
("_db_readidx:ÑeadvÉrror of indexÑecord");

378 
asciùå
[
PTR_SZ
] = 0;

379 
db
->
±rvÆ
 = 
	`©ﬁ
(
asciùå
);

381 
asciûí
[
IDXLEN_SZ
] = 0;

382 i‡((
db
->
idxÀn
 = 
	`©oi
(
asciûí
)Ë< 
IDXLEN_MIN
 ||

383 
db
->
idxÀn
 > 
IDXLEN_MAX
)

384 
	`îr_dump
("_db_readidx: invalidÜength");

390 i‡((
i
 = 
	`ªad
(
db
->
idxfd
, db->
idxbuf
, db->
idxÀn
)) != db->idxlen)

391 
	`îr_dump
("_db_readidx:ÑeadÉrror of indexÑecord");

392 i‡(
db
->
idxbuf
[db->
idxÀn
-1] !
NEWLINE
)

393 
	`îr_dump
("_db_readidx: missingÇewline");

394 
db
->
idxbuf
[db->
idxÀn
-1] = 0;

399 i‡((
±r1
 = 
	`°rchr
(
db
->
idxbuf
, 
SEP
)Ë=
NULL
)

400 
	`îr_dump
("_db_readidx: missing first separator");

401 *
±r1
++ = 0;

403 i‡((
±r2
 = 
	`°rchr
(
±r1
, 
SEP
)Ë=
NULL
)

404 
	`îr_dump
("_db_readidx: missing second separator");

405 *
±r2
++ = 0;

407 i‡(
	`°rchr
(
±r2
, 
SEP
Ë!
NULL
)

408 
	`îr_dump
("_db_readidx:Åoo many separators");

413 i‡((
db
->
d©off
 = 
	`©ﬁ
(
±r1
)) < 0)

414 
	`îr_dump
("_db_readidx: starting offset < 0");

415 i‡((
db
->
d©Àn
 = 
	`©ﬁ
(
±r2
)Ë<0 || db->d©À¿> 
DATLEN_MAX
)

416 
	`îr_dump
("_db_readidx: invalidÜength");

417 (
db
->
±rvÆ
);

418 
	}
}

425 
	$_db_ªadd©
(
DB
 *
db
)

427 i‡(
	`l£ek
(
db
->
d©fd
, db->
d©off
, 
SEEK_SET
) == -1)

428 
	`îr_dump
("_db_readdat:ÜseekÉrror");

429 i‡(
	`ªad
(
db
->
d©fd
, db->
d©buf
, db->
d©Àn
) != db->datlen)

430 
	`îr_dump
("_db_readdat:ÑeadÉrror");

431 i‡(
db
->
d©buf
[db->
d©Àn
-1] !
NEWLINE
)

432 
	`îr_dump
("_db_readdat: missingÇewline");

433 
db
->
d©buf
[db->
d©Àn
-1] = 0;

434 (
db
->
d©buf
);

435 
	}
}

441 
	$db_dñëe
(
DBHANDLE
 
h
, c⁄° *
key
)

443 
DB
 *
db
 = 
h
;

444 
rc
 = 0;

446 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 1) == 0) {

447 
	`_db_dodñëe
(
db
);

448 
db
->
˙t_dñok
++;

450 
rc
 = -1;

451 
db
->
˙t_dñîr
++;

453 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

454 
	`îr_dump
("db_delete: un_lockÉrror");

455 (
rc
);

456 
	}
}

464 
	$_db_dodñëe
(
DB
 *
db
)

466 
i
;

467 *
±r
;

468 
off_t
 
‰ì±r
, 
ßvïå
;

473 
±r
 = 
db
->
d©buf
, 
i
 = 0; i < db->
d©Àn
 - 1; i++)

474 *
±r
++ = 
SPACE
;

475 *
±r
 = 0;

476 
±r
 = 
db
->
idxbuf
;

477 *
±r
)

478 *
±r
++ = 
SPACE
;

483 i‡(
	`wrôew_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

484 
	`îr_dump
("_db_dodelete: writew_lockÉrror");

489 
	`_db_wrôed©
(
db
, db->
d©buf
, db->
d©off
, 
SEEK_SET
);

496 
‰ì±r
 = 
	`_db_ªad±r
(
db
, 
FREE_OFF
);

502 
ßvïå
 = 
db
->
±rvÆ
;

509 
	`_db_wrôeidx
(
db
, db->
idxbuf
, db->
idxoff
, 
SEEK_SET
, 
‰ì±r
);

514 
	`_db_wrôïå
(
db
, 
FREE_OFF
, db->
idxoff
);

522 
	`_db_wrôïå
(
db
, db->
±roff
, 
ßvïå
);

523 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

524 
	`îr_dump
("_db_dodelete: un_lockÉrror");

525 
	}
}

532 
	$_db_wrôed©
(
DB
 *
db
, c⁄° *
d©a
, 
off_t
 
off£t
, 
whí˚
)

534 
iovec
 
iov
[2];

535 
√wlöe
 = 
NEWLINE
;

542 i‡(
whí˚
 =
SEEK_END
)

543 i‡(
	`wrôew_lock
(
db
->
d©fd
, 0, 
SEEK_SET
, 0) < 0)

544 
	`îr_dump
("_db_writedat: writew_lockÉrror");

546 i‡((
db
->
d©off
 = 
	`l£ek
(db->
d©fd
, 
off£t
, 
whí˚
)) == -1)

547 
	`îr_dump
("_db_writedat:ÜseekÉrror");

548 
db
->
d©Àn
 = 
	`°æí
(
d©a
) + 1;

550 
iov
[0].
iov_ba£
 = (*Ë
d©a
;

551 
iov
[0].
iov_Àn
 = 
db
->
d©Àn
 - 1;

552 
iov
[1].
iov_ba£
 = &
√wlöe
;

553 
iov
[1].
iov_Àn
 = 1;

554 i‡(
	`wrôev
(
db
->
d©fd
, &
iov
[0], 2Ë!db->
d©Àn
)

555 
	`îr_dump
("_db_writedat: writevÉrror of dataÑecord");

557 i‡(
whí˚
 =
SEEK_END
)

558 i‡(
	`un_lock
(
db
->
d©fd
, 0, 
SEEK_SET
, 0) < 0)

559 
	`îr_dump
("_db_writedat: un_lockÉrror");

560 
	}
}

568 
	$_db_wrôeidx
(
DB
 *
db
, c⁄° *
key
,

569 
off_t
 
off£t
, 
whí˚
, off_à
±rvÆ
)

571 
iovec
 
iov
[2];

572 
asciùåÀn
[
PTR_SZ
 + 
IDXLEN_SZ
 +1];

573 
Àn
;

574 *
fmt
;

576 i‡((
db
->
±rvÆ
 =ÖåvÆË< 0 ||ÖåvÆ > 
PTR_MAX
)

577 
	`îr_quô
("_db_wrôeidx: invÆidÖå: %d", 
±rvÆ
);

578 i‡((
off_t
) == ())

579 
fmt
 = "%s%c%lld%c%d\n";

581 
fmt
 = "%s%c%ld%c%d\n";

582 
	`•rötf
(
db
->
idxbuf
, 
fmt
, 
key
, 
SEP
, db->
d©off
, SEP, db->
d©Àn
);

583 i‡((
Àn
 = 
	`°æí
(
db
->
idxbuf
)Ë< 
IDXLEN_MIN
 ||Üí > 
IDXLEN_MAX
)

584 
	`îr_dump
("_db_writeidx: invalidÜength");

585 
	`•rötf
(
asciùåÀn
, "%*ld%*d", 
PTR_SZ
, 
±rvÆ
, 
IDXLEN_SZ
, 
Àn
);

592 i‡(
whí˚
 =
SEEK_END
)

593 i‡(
	`wrôew_lock
(
db
->
idxfd
, ((db->
nhash
+1)*
PTR_SZ
)+1,

594 
SEEK_SET
, 0) < 0)

595 
	`îr_dump
("_db_writeidx: writew_lockÉrror");

600 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
, 
whí˚
)) == -1)

601 
	`îr_dump
("_db_writeidx:ÜseekÉrror");

603 
iov
[0].
iov_ba£
 = 
asciùåÀn
;

604 
iov
[0].
iov_Àn
 = 
PTR_SZ
 + 
IDXLEN_SZ
;

605 
iov
[1].
iov_ba£
 = 
db
->
idxbuf
;

606 
iov
[1].
iov_Àn
 = 
Àn
;

607 i‡(
	`wrôev
(
db
->
idxfd
, &
iov
[0], 2Ë!
PTR_SZ
 + 
IDXLEN_SZ
 + 
Àn
)

608 
	`îr_dump
("_db_writeidx: writevÉrror of indexÑecord");

610 i‡(
whí˚
 =
SEEK_END
)

611 i‡(
	`un_lock
(
db
->
idxfd
, ((db->
nhash
+1)*
PTR_SZ
)+1,

612 
SEEK_SET
, 0) < 0)

613 
	`îr_dump
("_db_writeidx: un_lockÉrror");

614 
	}
}

621 
	$_db_wrôïå
(
DB
 *
db
, 
off_t
 
off£t
, off_à
±rvÆ
)

623 
asciùå
[
PTR_SZ
 + 1];

625 i‡(
±rvÆ
 < 0 ||ÖåvÆ > 
PTR_MAX
)

626 
	`îr_quô
("_db_wrôïå: invÆidÖå: %d", 
±rvÆ
);

627 
	`•rötf
(
asciùå
, "%*ld", 
PTR_SZ
, 
±rvÆ
);

629 i‡(
	`l£ek
(
db
->
idxfd
, 
off£t
, 
SEEK_SET
) == -1)

630 
	`îr_dump
("_db_writeptr:ÜseekÉrrorÅoÖtr field");

631 i‡(
	`wrôe
(
db
->
idxfd
, 
asciùå
, 
PTR_SZ
) != PTR_SZ)

632 
	`îr_dump
("_db_writeptr: writeÉrror ofÖtr field");

633 
	}
}

640 
	$db_°‹e
(
DBHANDLE
 
h
, c⁄° *
key
, c⁄° *
d©a
, 
Êag
)

642 
DB
 *
db
 = 
h
;

643 
rc
, 
keyÀn
, 
d©Àn
;

644 
off_t
 
±rvÆ
;

646 i‡(
Êag
 !
DB_INSERT
 && fœg !
DB_REPLACE
 &&

647 
Êag
 !
DB_STORE
) {

648 
î∫o
 = 
EINVAL
;

651 
keyÀn
 = 
	`°æí
(
key
);

652 
d©Àn
 = 
	`°æí
(
d©a
) + 1;

653 i‡(
d©Àn
 < 
DATLEN_MIN
 || d©À¿> 
DATLEN_MAX
)

654 
	`îr_dump
("db_store: invalid dataÜength");

663 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 1) < 0) {

664 i‡(
Êag
 =
DB_REPLACE
) {

665 
rc
 = -1;

666 
db
->
˙t_°‹îr
++;

667 
î∫o
 = 
ENOENT
;

668 
d‹ëu∫
;

675 
±rvÆ
 = 
	`_db_ªad±r
(
db
, db->
chaöoff
);

677 i‡(
	`_db_föd‰ì
(
db
, 
keyÀn
, 
d©Àn
) < 0) {

682 
	`_db_wrôed©
(
db
, 
d©a
, 0, 
SEEK_END
);

683 
	`_db_wrôeidx
(
db
, 
key
, 0, 
SEEK_END
, 
±rvÆ
);

689 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

690 
db
->
˙t_°‹1
++;

697 
	`_db_wrôed©
(
db
, 
d©a
, db->
d©off
, 
SEEK_SET
);

698 
	`_db_wrôeidx
(
db
, 
key
, db->
idxoff
, 
SEEK_SET
, 
±rvÆ
);

699 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

700 
db
->
˙t_°‹2
++;

703 i‡(
Êag
 =
DB_INSERT
) {

704 
rc
 = 1;

705 
db
->
˙t_°‹îr
++;

706 
d‹ëu∫
;

714 i‡(
d©Àn
 !
db
->datlen) {

715 
	`_db_dodñëe
(
db
);

721 
±rvÆ
 = 
	`_db_ªad±r
(
db
, db->
chaöoff
);

726 
	`_db_wrôed©
(
db
, 
d©a
, 0, 
SEEK_END
);

727 
	`_db_wrôeidx
(
db
, 
key
, 0, 
SEEK_END
, 
±rvÆ
);

732 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

733 
db
->
˙t_°‹3
++;

738 
	`_db_wrôed©
(
db
, 
d©a
, db->
d©off
, 
SEEK_SET
);

739 
db
->
˙t_°‹4
++;

742 
rc
 = 0;

744 
d‹ëu∫
:

745 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

746 
	`îr_dump
("db_store: un_lockÉrror");

747 (
rc
);

748 
	}
}

755 
	$_db_föd‰ì
(
DB
 *
db
, 
keyÀn
, 
d©Àn
)

757 
rc
;

758 
off_t
 
off£t
, 
√xtoff£t
, 
ßveoff£t
;

763 i‡(
	`wrôew_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

764 
	`îr_dump
("_db_findfree: writew_lockÉrror");

769 
ßveoff£t
 = 
FREE_OFF
;

770 
off£t
 = 
	`_db_ªad±r
(
db
, 
ßveoff£t
);

772 
off£t
 != 0) {

773 
√xtoff£t
 = 
	`_db_ªadidx
(
db
, 
off£t
);

774 i‡(
	`°æí
(
db
->
idxbuf
Ë=
keyÀn
 && db->
d©Àn
 == datlen)

776 
ßveoff£t
 = 
off£t
;

777 
off£t
 = 
√xtoff£t
;

780 i‡(
off£t
 == 0) {

781 
rc
 = -1;

791 
	`_db_wrôïå
(
db
, 
ßveoff£t
, db->
±rvÆ
);

792 
rc
 = 0;

804 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

805 
	`îr_dump
("_db_findfree: un_lockÉrror");

806 (
rc
);

807 
	}
}

815 
	$db_ªwöd
(
DBHANDLE
 
h
)

817 
DB
 *
db
 = 
h
;

818 
off_t
 
off£t
;

820 
off£t
 = (
db
->
nhash
 + 1Ë* 
PTR_SZ
;

827 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
+1, 
SEEK_SET
)) == -1)

828 
	`îr_dump
("db_rewind:ÜseekÉrror");

829 
	}
}

838 
	$db_√xåec
(
DBHANDLE
 
h
, *
key
)

840 
DB
 *
db
 = 
h
;

841 
c
;

842 *
±r
;

848 i‡(
	`ªadw_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

849 
	`îr_dump
("db_nextrec:Ñeadw_lockÉrror");

855 i‡(
	`_db_ªadidx
(
db
, 0) < 0) {

856 
±r
 = 
NULL
;

857 
d‹ëu∫
;

863 
±r
 = 
db
->
idxbuf
;

864 (
c
 = *
±r
++Ë!0 && c =
SPACE
)

866 } 
c
 == 0);

868 i‡(
key
 !
NULL
)

869 
	`°r˝y
(
key
, 
db
->
idxbuf
);

870 
±r
 = 
	`_db_ªadd©
(
db
);

871 
db
->
˙t_√xåec
++;

873 
d‹ëu∫
:

874 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

875 
	`îr_dump
("db_nextrec: un_lockÉrror");

876 (
±r
);

877 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/db/t4.c

1 
	~"≠ue.h
"

2 
	~"≠ue_db.h
"

3 
	~<f˙é.h
>

6 
	$maö
()

8 
DBHANDLE
 
db
;

10 i‡((
db
 = 
	`db_›í
("db4", 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
,

11 
FILE_MODE
)Ë=
NULL
)

12 
	`îr_sys
("db_openÉrror");

14 i‡(
	`db_°‹e
(
db
, "AÕha", "d©a1", 
DB_INSERT
) != 0)

15 
	`îr_quô
("db_storeÉrror forálpha");

16 i‡(
	`db_°‹e
(
db
, "bëa", "D©®f‹ bëa", 
DB_INSERT
) != 0)

17 
	`îr_quô
("db_storeÉrror for beta");

18 i‡(
	`db_°‹e
(
db
, "gamma", "ªc‹d3", 
DB_INSERT
) != 0)

19 
	`îr_quô
("db_storeÉrror for gamma");

21 
	`db_˛o£
(
db
);

22 
	`exô
(0);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/cmd1.c

1 
	~"≠ue.h
"

3 
	#TOK_ADD
 5

	)

5 
do_löe
(*);

6 
cmd_add
();

7 
gë_tokí
();

10 
	$maö
()

12 
löe
[
MAXLINE
];

14 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
)

15 
	`do_löe
(
löe
);

16 
	`exô
(0);

17 
	}
}

19 *
	gtok_±r
;

22 
	$do_löe
(*
±r
)

24 
cmd
;

26 
tok_±r
 = 
±r
;

27 (
cmd
 = 
	`gë_tokí
()) > 0) {

28 
cmd
) {

29 
TOK_ADD
:

30 
	`cmd_add
();

34 
	}
}

37 
	$cmd_add
()

39 
tokí
;

41 
tokí
 = 
	`gë_tokí
();

43 
	}
}

46 
	$gë_tokí
()

49 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/cmd2.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
	#TOK_ADD
 5

	)

6 
jmp_buf
 
	gjmpbuf„r
;

9 
	$maö
()

11 
löe
[
MAXLINE
];

13 i‡(
	`£tjmp
(
jmpbuf„r
) != 0)

14 
	`¥ötf
("error");

15 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
)

16 
	`do_löe
(
löe
);

17 
	`exô
(0);

18 
	}
}

23 
	$cmd_add
()

25 
tokí
;

27 
tokí
 = 
	`gë_tokí
();

28 i‡(
tokí
 < 0)

29 
	`l⁄gjmp
(
jmpbuf„r
, 1);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/doatexit.c

1 
	~"≠ue.h
"

3 
my_exô1
();

4 
my_exô2
();

7 
	$maö
()

9 i‡(
	`©exô
(
my_exô2
) != 0)

10 
	`îr_sys
("can'tÑegister my_exit2");

12 i‡(
	`©exô
(
my_exô1
) != 0)

13 
	`îr_sys
("can'tÑegister my_exit1");

14 i‡(
	`©exô
(
my_exô1
) != 0)

15 
	`îr_sys
("can'tÑegister my_exit1");

17 
	`¥ötf
("main is done\n");

19 
	}
}

22 
	$my_exô1
()

24 
	`¥ötf
("firstÉxit handler\n");

25 
	}
}

28 
	$my_exô2
()

30 
	`¥ötf
("secondÉxit handler\n");

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/getrlimit.c

1 
	~"≠ue.h
"

2 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

3 
	~<sys/time.h
>

4 
	#FMT
 "%10Œd "

	)

6 
	#FMT
 "%10ld "

	)

8 
	~<sys/ªsour˚.h
>

10 
	#doô
(
«me
Ë
	`¥_limôs
(#«me,Çame)

	)

12 
¥_limôs
(*, );

15 
	$maö
()

17 #ifdef 
RLIMIT_AS


18 
	`doô
(
RLIMIT_AS
);

20 
	`doô
(
RLIMIT_CORE
);

21 
	`doô
(
RLIMIT_CPU
);

22 
	`doô
(
RLIMIT_DATA
);

23 
	`doô
(
RLIMIT_FSIZE
);

24 #ifde‡ 
RLIMIT_LOCKS


25 
	`doô
(
RLIMIT_LOCKS
);

27 #ifdef 
RLIMIT_MEMLOCK


28 
	`doô
(
RLIMIT_MEMLOCK
);

30 
	`doô
(
RLIMIT_NOFILE
);

31 #ifdef 
RLIMIT_NPROC


32 
	`doô
(
RLIMIT_NPROC
);

34 #ifdef 
RLIMIT_RSS


35 
	`doô
(
RLIMIT_RSS
);

37 #ifdef 
RLIMIT_SBSIZE


38 
	`doô
(
RLIMIT_SBSIZE
);

40 
	`doô
(
RLIMIT_STACK
);

41 #ifdef 
RLIMIT_VMEM


42 
	`doô
(
RLIMIT_VMEM
);

44 
	`exô
(0);

45 
	}
}

48 
	$¥_limôs
(*
«me
, 
ªsour˚
)

50 
æimô
 
limô
;

52 i‡(
	`gëæimô
(
ªsour˚
, &
limô
) < 0)

53 
	`îr_sys
("gëæimôÉº‹ f‹ %s", 
«me
);

54 
	`¥ötf
("%-14† ", 
«me
);

55 i‡(
limô
.
æim_cur
 =
RLIM_INFINITY
)

56 
	`¥ötf
("(infinite) ");

58 
	`¥ötf
(
FMT
, 
limô
.
æim_cur
);

59 i‡(
limô
.
æim_max
 =
RLIM_INFINITY
)

60 
	`¥ötf
("(infinite)");

62 
	`¥ötf
(
FMT
, 
limô
.
æim_max
);

63 
	`putch¨
(()'\n');

64 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/hello1.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("hello, world\n");

6 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/opendata.c

1 
	~<°dio.h
>

3 
	#DATAFILE
 "d©afûe"

	)

5 
FILE
 *

6 
	$›í_d©a
()

8 
FILE
 *
Â
;

9 
d©abuf
[
BUFSIZ
];

11 i‡((
Â
 = 
	`f›í
(
DATAFILE
, "r")Ë=
NULL
)

12 (
NULL
);

13 i‡(
	`£tvbuf
(
Â
, 
d©abuf
, 
_IOLBF
, 
BUFSIZ
) != 0)

14 (
NULL
);

15 (
Â
);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/environ/testjmp.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
f1
(, , , );

5 
f2
();

7 
jmp_buf
 
	gjmpbuf„r
;

8 
	gglobvÆ
;

11 
	$maö
()

13 
autovÆ
;

14 
ªgivÆ
;

15 vﬁ©ûê
vﬁavÆ
;

16 
°©vÆ
;

18 
globvÆ
 = 1; 
autovÆ
 = 2; 
ªgivÆ
 = 3; 
vﬁavÆ
 = 4; 
°©vÆ
 = 5;

20 i‡(
	`£tjmp
(
jmpbuf„r
) != 0) {

21 
	`¥ötf
("afterÜongjmp:\n");

22 
	`¥ötf
("globval = %d,áutoval = %d,Ñegival = %d,"

24 
globvÆ
, 
autovÆ
, 
ªgivÆ
, 
vﬁavÆ
, 
°©vÆ
);

25 
	`exô
(0);

31 
globvÆ
 = 95; 
autovÆ
 = 96; 
ªgivÆ
 = 97; 
vﬁavÆ
 = 9
job
;

32 
°©vÆ
 = 99;

34 
	`f1
(
autovÆ
, 
ªgivÆ
, 
vﬁavÆ
, 
°©vÆ
);

35 
	`exô
(0);

36 
	}
}

39 
	$f1
(
i
, 
j
, 
k
, 
l
)

41 
	`¥ötf
("in f1():\n");

42 
	`¥ötf
("globval = %d,áutoval = %d,Ñegival = %d,"

43 " vﬁavÆ = %d, sètvÆ = %d\n", 
globvÆ
, 
i
, 
j
, 
k
, 
l
);

44 
	`f2
();

45 
	}
}

48 
	$f2
()

50 
	`l⁄gjmp
(
jmpbuf„r
, 1);

51 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/asyncsocket.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/sockë.h
>

5 
	~<sys/io˘l.h
>

6 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
Ë|| deföed(
SOLARIS
)

7 
	~<sys/fûio.h
>

11 
	$£èsync
(
sockfd
)

13 
n
;

15 i‡(
	`f˙é
(
sockfd
, 
F_SETOWN
, 
	`gëpid
()) < 0)

17 
n
 = 1;

18 i‡(
	`io˘l
(
sockfd
, 
FIOASYNC
, &
n
) < 0)

21 
	}
}

24 
	$˛øsync
(
sockfd
)

26 
n
;

28 
n
 = 0;

29 i‡(
	`io˘l
(
sockfd
, 
FIOASYNC
, &
n
) < 0)

32 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/getlogin.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
FILE
 *
Â
;

7 *
p
;

9 
	`d´m⁄ize
("getlog");

10 
p
 = 
	`gëlogö
();

11 
Â
 = 
	`f›í
("/tmp/getlog.out", "w");

12 i‡(
Â
 !
NULL
) {

13 i‡(
p
 =
NULL
)

14 
	`Ârötf
(
Â
, "noÜoginÇame\n");

16 
	`Ârötf
(
Â
, "logöÇame: %s\n", 
p
);

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/getpw44bsd.c

1 
	~"≠ue.h
"

2 
	~<pwd.h
>

5 
	$maö
()

7 
∑sswd
 *
±r
;

9 i‡((
±r
 = 
	`gëpw«m
("ßr")Ë=
NULL
)

10 
	`îr_sys
("getpwnamÉrror");

11 
	`¥ötf
("pw_∑sswd = %s\n", 
±r
->
pw_∑sswd
 =
NULL
 ||

12 
±r
->
pw_∑sswd
[0] == 0 ? "(null)" :Ötr->pw_passwd);

13 
	`exô
(0);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/getpwsvr4.c

1 
	~"≠ue.h
"

2 
	~<shadow.h
>

5 
	$maö
()

7 
•wd
 *
±r
;

9 i‡((
±r
 = 
	`gë•«m
("ßr")Ë=
NULL
)

10 
	`îr_sys
("getspnamÉrror");

11 
	`¥ötf
("•_pwd∞%s\n", 
±r
->
•_pwdp
 =
NULL
 ||

12 
±r
->
•_pwdp
[0] == 0 ? "(null)" :Ötr->sp_pwdp);

13 
	`exô
(0);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/goodexit.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	ma
, 
	mb
, 
	mc
, 
	md
;

9 
	$¥ötfoo
(c⁄° *
s
, c⁄° 
foo
 *
Â
)

11 
	`¥ötf
(
s
);

12 
	`¥ötf
(" såu˘uªáà0x%x\n", ()
Â
);

13 
	`¥ötf
(" foo.®%d\n", 
Â
->
a
);

14 
	`¥ötf
(" foo.b = %d\n", 
Â
->
b
);

15 
	`¥ötf
(" foo.¯%d\n", 
Â
->
c
);

16 
	`¥ötf
(" foo.d = %d\n", 
Â
->
d
);

17 
	}
}

20 
	$thr_‚1
(*
¨g
)

22 
foo
 *
Â
;

24 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë=
NULL
)

25 
	`îr_sys
("can'tállocate memory");

26 
Â
->
a
 = 1;

27 
Â
->
b
 = 2;

28 
Â
->
c
 = 3;

29 
Â
->
d
 = 4;

30 
	`¥ötfoo
("thªad:\n", 
Â
);

31 ((*)
Â
);

32 
	}
}

35 
	$maö
()

37 
îr
;

38 
±hªad_t
 
tid1
;

39 
foo
 *
Â
;

41 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

42 i‡(
îr
 != 0)

43 
	`îr_exô
(
îr
, "can't createÅhread 1");

44 
îr
 = 
	`±hªad_joö
(
tid1
, (*)&
Â
);

45 i‡(
îr
 != 0)

46 
	`îr_exô
(
îr
, "can't join withÅhread 1");

47 
	`¥ötfoo
("∑ª¡:\n", 
Â
);

48 
	`exô
(0);

49 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/openmax.c

1 
	~"≠ue.h
"

2 
	~<limôs.h
>

3 
	~<sys/ªsour˚.h
>

5 
	#OPEN_MAX_GUESS
 256

	)

8 
	$›í_max
()

10 
›ímax
;

11 
æimô
 
æ
;

13 i‡((
›ímax
 = 
	`sysc⁄f
(
_SC_OPEN_MAX
)) < 0 ||

14 
›ímax
 =
LONG_MAX
) {

15 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

16 
	`îr_sys
("can't get fileÜimit");

17 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

18 
›ímax
 = 
OPEN_MAX_GUESS
;

20 
›ímax
 = 
æ
.
æim_max
;

22 (
›ímax
);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/prtime.c

1 
	~"≠ue.h
"

2 
	~<time.h
>

5 
	$maö
()

7 
time_t
 
ˇ…ime
;

8 
tm
 *tm;

9 
löe
[
MAXLINE
];

11 i‡((
ˇ…ime
 = 
	`time
(
NULL
)) == -1)

12 
	`îr_sys
("timeÉrror");

13 i‡((
tm
 = 
	`loˇ…ime
(&
ˇ…ime
)Ë=
NULL
)

14 
	`îr_sys
("localtimeÉrror");

15 i‡(
	`°r·ime
(
löe
, 
MAXLINE
, "%®%b %d %X %Z %Y\n", 
tm
) == 0)

16 
	`îr_sys
("strftimeÉrror");

17 
	`Âuts
(
löe
, 
°dout
);

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/sizepipe.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
()

7 
i
, 
n
;

8 
fd
[2];

10 i‡(
	`pùe
(
fd
) < 0)

11 
	`îr_sys
("pipeÉrror");

12 
	`£t_Ê
(
fd
[1], 
O_NONBLOCK
);

17 
n
 = 0; ;Ç++) {

18 i‡((
i
 = 
	`wrôe
(
fd
[1], "a", 1)) != 1) {

19 
	`¥ötf
("wrôêªà%d, ", 
i
);

23 
	`¥ötf
("pùêˇ∑côy = %d\n", 
n
);

24 
	`exô
(0);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/sleep.c

1 
	~<uni°d.h
>

2 
	~<time.h
>

3 
	~<sys/£À˘.h
>

6 
	$¶ìp
(
n£c
)

8 
n
;

9 
¶ït
;

10 
time_t
 
°¨t
, 
íd
;

11 
timevÆ
 
tv
;

13 
tv
.
tv_£c
 = 
n£c
;

14 
tv
.
tv_u£c
 = 0;

15 
	`time
(&
°¨t
);

16 
n
 = 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

17 i‡(
n
 == 0)

19 
	`time
(&
íd
);

20 
¶ït
 = 
íd
 - 
°¨t
;

21 i‡(
¶ït
 >
n£c
)

23 (
n£c
 - 
¶ït
);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/sleepus_poll.c

1 
	~<pﬁl.h
>

4 
	$¶ìp_us
(
nu£cs
)

6 
pﬁlfd
 
dummy
;

7 
timeout
;

9 i‡((
timeout
 = 
nu£cs
 / 1000) <= 0)

10 
timeout
 = 1;

11 
	`pﬁl
(&
dummy
, 0, 
timeout
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/exercises/sleepus_select.c

1 
	~"≠ue.h
"

2 
	~<sys/£À˘.h
>

5 
	$¶ìp_us
(
nu£cs
)

7 
timevÆ
 
tvÆ
;

9 
tvÆ
.
tv_£c
 = 
nu£cs
 / 1000000;

10 
tvÆ
.
tv_u£c
 = 
nu£cs
 % 1000000;

11 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tvÆ
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/access.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 i‡(
¨gc
 != 2)

8 
	`îr_quô
("usage:á.out <pathname>");

9 i‡(
	`ac˚ss
(
¨gv
[1], 
R_OK
) < 0)

10 
	`îr_ªt
("ac˚s†îr‹ f‹ %s", 
¨gv
[1]);

12 
	`¥ötf
("readáccess OK\n");

13 i‡(
	`›í
(
¨gv
[1], 
O_RDONLY
) < 0)

14 
	`îr_ªt
("›íÉº‹ f‹ %s", 
¨gv
[1]);

16 
	`¥ötf
("open forÑeading OK\n");

17 
	`exô
(0);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/cdpwd.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 *
±r
;

7 
size
;

9 i‡(
	`chdú
("/usr/spool/uucppublic") < 0)

10 
	`îr_sys
("chdir failed");

12 
±r
 = 
	`∑th_Æloc
(&
size
);

13 i‡(
	`gëcwd
(
±r
, 
size
Ë=
NULL
)

14 
	`îr_sys
("getcwd failed");

16 
	`¥ötf
("cwd = %s\n", 
±r
);

17 
	`exô
(0);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/changemod.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
°©
 
°©buf
;

10 i‡(
	`°©
("foo", &
°©buf
) < 0)

11 
	`îr_sys
("statÉrror for foo");

12 i‡(
	`chmod
("foo", (
°©buf
.
°_mode
 & ~
S_IXGRP
Ë| 
S_ISGID
) < 0)

13 
	`îr_sys
("chmodÉrror for foo");

17 i‡(
	`chmod
("b¨", 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
) < 0)

18 
	`îr_sys
("chmodÉrror for bar");

20 
	`exô
(0);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/devrdev.c

1 
	~"≠ue.h
"

2 #ifde‡
SOLARIS


3 
	~<sys/mkdev.h
>

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
i
;

10 
°©
 
buf
;

12 
i
 = 1; i < 
¨gc
; i++) {

13 
	`¥ötf
("%s: ", 
¨gv
[
i
]);

14 i‡(
	`°©
(
¨gv
[
i
], &
buf
) < 0) {

15 
	`îr_ªt
("statÉrror");

19 
	`¥ötf
("dev = %d/%d", 
	`maj‹
(
buf
.
°_dev
), 
	`mö‹
(buf.st_dev));

21 i‡(
	`S_ISCHR
(
buf
.
°_mode
Ë|| 
	`S_ISBLK
(buf.st_mode)) {

22 
	`¥ötf
(" (%s)Ñdev = %d/%d",

23 (
	`S_ISCHR
(
buf
.
°_mode
)) ? "character" : "block",

24 
	`maj‹
(
buf
.
°_rdev
), 
	`mö‹
(buf.st_rdev));

26 
	`¥ötf
("\n");

29 
	`exô
(0);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/fileflags.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
vÆ
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:á.out <descriptor#>");

12 i‡((
vÆ
 = 
	`f˙é
(
	`©oi
(
¨gv
[1]), 
F_GETFL
, 0)) < 0)

13 
	`îr_sys
("f˙éÉº‹ f‹ fd %d", 
	`©oi
(
¨gv
[1]));

15 
vÆ
 & 
O_ACCMODE
) {

16 
O_RDONLY
:

17 
	`¥ötf
("read only");

20 
O_WRONLY
:

21 
	`¥ötf
("write only");

24 
O_RDWR
:

25 
	`¥ötf
("read write");

29 
	`îr_dump
("unknownáccess mode");

32 i‡(
vÆ
 & 
O_APPEND
)

33 
	`¥ötf
(",áppend");

34 i‡(
vÆ
 & 
O_NONBLOCK
)

35 
	`¥ötf
(",Çonblocking");

36 #i‡
	`deföed
(
O_SYNC
)

37 i‡(
vÆ
 & 
O_SYNC
)

38 
	`¥ötf
(", synchronous writes");

40 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë&& deföed(
O_FSYNC
)

41 i‡(
vÆ
 & 
O_FSYNC
)

42 
	`¥ötf
(", synchronous writes");

44 
	`putch¨
('\n');

45 
	`exô
(0);

46 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/filetype.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

7 
°©
 
buf
;

8 *
±r
;

10 
i
 = 1; i < 
¨gc
; i++) {

11 
	`¥ötf
("%s: ", 
¨gv
[
i
]);

12 i‡(
	`l°©
(
¨gv
[
i
], &
buf
) < 0) {

13 
	`îr_ªt
("lstatÉrror");

16 i‡(
	`S_ISREG
(
buf
.
°_mode
))

17 
±r
 = "regular";

18 i‡(
	`S_ISDIR
(
buf
.
°_mode
))

19 
±r
 = "directory";

20 i‡(
	`S_ISCHR
(
buf
.
°_mode
))

21 
±r
 = "character special";

22 i‡(
	`S_ISBLK
(
buf
.
°_mode
))

23 
±r
 = "block special";

24 i‡(
	`S_ISFIFO
(
buf
.
°_mode
))

25 
±r
 = "fifo";

26 i‡(
	`S_ISLNK
(
buf
.
°_mode
))

27 
±r
 = "symbolicÜink";

28 i‡(
	`S_ISSOCK
(
buf
.
°_mode
))

29 
±r
 = "socket";

31 
±r
 = "** unknown mode **";

32 
	`¥ötf
("%s\n", 
±r
);

34 
	`exô
(0);

35 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/ftw4.c

1 
	~"≠ue.h
"

2 
	~<dúít.h
>

3 
	~<limôs.h
>

6 
	tMyfunc
(c⁄° *, c⁄° 
	t°©
 *, );

8 
Myfunc
 
	gmyfunc
;

9 
my·w
(*, 
Myfunc
 *);

10 
d›©h
(
Myfunc
 *);

12 
	gƒeg
, 
	gndú
, 
	gnblk
, 
	gnchr
, 
	gnfifo
, 
	gn¶ök
, 
	gnsock
, 
	g¡Ÿ
;

15 
	$maö
(
¨gc
, *
¨gv
[])

17 
ªt
;

19 i‡(
¨gc
 != 2)

20 
	`îr_quô
("usage: ftw <starting-pathname>");

22 
ªt
 = 
	`my·w
(
¨gv
[1], 
myfunc
);

24 
¡Ÿ
 = 
ƒeg
 + 
ndú
 + 
nblk
 + 
nchr
 + 
nfifo
 + 
n¶ök
 + 
nsock
;

25 i‡(
¡Ÿ
 == 0)

26 
¡Ÿ
 = 1;

27 
	`¥ötf
("ªguœ∏fûe† = %7ld, %5.2‡%%\n", 
ƒeg
,

28 
ƒeg
*100.0/
¡Ÿ
);

29 
	`¥ötf
("dúe˘‹õ† = %7ld, %5.2‡%%\n", 
ndú
,

30 
ndú
*100.0/
¡Ÿ
);

31 
	`¥ötf
("block s≥cü» = %7ld, %5.2‡%%\n", 
nblk
,

32 
nblk
*100.0/
¡Ÿ
);

33 
	`¥ötf
("ch¨ s≥cü» = %7ld, %5.2‡%%\n", 
nchr
,

34 
nchr
*100.0/
¡Ÿ
);

35 
	`¥ötf
("FIFO† = %7ld, %5.2‡%%\n", 
nfifo
,

36 
nfifo
*100.0/
¡Ÿ
);

37 
	`¥ötf
("symbﬁi¯lök†%7ld, %5.2‡%%\n", 
n¶ök
,

38 
n¶ök
*100.0/
¡Ÿ
);

39 
	`¥ötf
("sockë† = %7ld, %5.2‡%%\n", 
nsock
,

40 
nsock
*100.0/
¡Ÿ
);

42 
	`exô
(
ªt
);

43 
	}
}

49 
	#FTW_F
 1

	)

50 
	#FTW_D
 2

	)

51 
	#FTW_DNR
 3

	)

52 
	#FTW_NS
 4

	)

54 *
	gfuŒ∑th
;

57 
	$my·w
(*
∑th«me
, 
Myfunc
 *
func
)

59 
Àn
;

60 
fuŒ∑th
 = 
	`∑th_Æloc
(&
Àn
);

62 
	`°∫˝y
(
fuŒ∑th
, 
∑th«me
, 
Àn
);

63 
fuŒ∑th
[
Àn
-1] = 0;

65 (
	`d›©h
(
func
));

66 
	}
}

75 
	$d›©h
(
Myfunc
* 
func
)

77 
°©
 
°©buf
;

78 
dúít
 *
dúp
;

79 
DIR
 *
dp
;

80 
ªt
;

81 *
±r
;

83 i‡(
	`l°©
(
fuŒ∑th
, &
°©buf
) < 0)

84 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_NS
));

85 i‡(
	`S_ISDIR
(
°©buf
.
°_mode
) == 0)

86 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_F
));

92 i‡((
ªt
 = 
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_D
)) != 0)

93 (
ªt
);

95 
±r
 = 
fuŒ∑th
 + 
	`°æí
(fullpath);

96 *
±r
++ = '/';

97 *
±r
 = 0;

99 i‡((
dp
 = 
	`›ídú
(
fuŒ∑th
)Ë=
NULL
)

100 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_DNR
));

102 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
) {

103 i‡(
	`°rcmp
(
dúp
->
d_«me
, ".") == 0 ||

104 
	`°rcmp
(
dúp
->
d_«me
, "..") == 0)

107 
	`°r˝y
(
±r
, 
dúp
->
d_«me
);

109 i‡((
ªt
 = 
	`d›©h
(
func
)) != 0)

112 
±r
[-1] = 0;

114 i‡(
	`˛o£dú
(
dp
) < 0)

115 
	`îr_ªt
("ˇn'à˛o£ dúe˘‹y %s", 
fuŒ∑th
);

117 (
ªt
);

118 
	}
}

121 
	$myfunc
(c⁄° *
∑th«me
, c⁄° 
°©
 *
°©±r
, 
ty≥
)

123 
ty≥
) {

124 
FTW_F
:

125 
°©±r
->
°_mode
 & 
S_IFMT
) {

126 
S_IFREG
: 
ƒeg
++; ;

127 
S_IFBLK
: 
nblk
++; ;

128 
S_IFCHR
: 
nchr
++; ;

129 
S_IFIFO
: 
nfifo
++; ;

130 
S_IFLNK
: 
n¶ök
++; ;

131 
S_IFSOCK
: 
nsock
++; ;

132 
S_IFDIR
:

133 
	`îr_dump
("f‹ S_IFDIR f‹ %s", 
∑th«me
);

138 
FTW_D
:

139 
ndú
++;

142 
FTW_DNR
:

143 
	`îr_ªt
("ˇn'àªad dúe˘‹y %s", 
∑th«me
);

146 
FTW_NS
:

147 
	`îr_ªt
("°©Éº‹ f‹ %s", 
∑th«me
);

151 
	`îr_dump
("unknow¿ty≥ %d f‹Ö©h«mê%s", 
ty≥
, 
∑th«me
);

155 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/hello.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("hñlÿw‹ld fromÖro˚s†ID %d\n", 
	`gëpid
());

7 
	`exô
(0);

8 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/hole.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	gbuf1
[] = "abcdefghij";

5 
	gbuf2
[] = "ABCDEFGHIJ";

8 
	$maö
()

10 
fd
;

12 i‡((
fd
 = 
	`¸ót
("fûe.hﬁe", 
FILE_MODE
)) < 0)

13 
	`îr_sys
("creatÉrror");

15 i‡(
	`wrôe
(
fd
, 
buf1
, 10) != 10)

16 
	`îr_sys
("buf1 writeÉrror");

19 i‡(
	`l£ek
(
fd
, 163
job4
, 
SEEK_SET
) == -1)

20 
	`îr_sys
("lseekÉrror");

23 i‡(
	`wrôe
(
fd
, 
buf2
, 10) != 10)

24 
	`îr_sys
("buf2 writeÉrror");

27 
	`exô
(0);

28 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/longpath.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#DEPTH
 100

	)

5 
	#MYHOME
 "/home/ßr"

	)

6 
	#NAME
 "Æ⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄g«me"

	)

7 
	#MAXSZ
 
job192


	)

10 
	$maö
()

12 
i
, 
size
;

13 *
∑th
;

15 i‡(
	`chdú
(
MYHOME
) < 0)

16 
	`îr_sys
("chdirÉrror");

18 
i
 = 0; i < 
DEPTH
; i++) {

19 i‡(
	`mkdú
(
NAME
, 
DIR_MODE
) < 0)

20 
	`îr_sys
("mkdú faûed, i = %d", 
i
);

21 i‡(
	`chdú
(
NAME
) < 0)

22 
	`îr_sys
("chdú faûed, i = %d", 
i
);

24 i‡(
	`¸ót
("afûe", 
FILE_MODE
) < 0)

25 
	`îr_sys
("creatÉrror");

31 
∑th
 = 
	`∑th_Æloc
(&
size
);

33 i‡(
	`gëcwd
(
∑th
, 
size
Ë!
NULL
) {

36 
	`îr_ªt
("gëcwd faûed, sizê%d", 
size
);

37 
size
 += 100;

38 i‡(
size
 > 
MAXSZ
)

39 
	`îr_quô
("giving up");

40 i‡((
∑th
 = 
	`ªÆloc
’©h, 
size
)Ë=
NULL
)

41 
	`îr_sys
("reallocÉrror");

44 
	`¥ötf
("Àngth = %d\n%s\n", 
	`°æí
(
∑th
),Öath);

46 
	`exô
(0);

47 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/ls1.c

1 
	~"≠ue.h
"

2 
	~<dúít.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
DIR
 *
dp
;

8 
dúít
 *
dúp
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Üs directory_name");

13 i‡((
dp
 = 
	`›ídú
(
¨gv
[1])Ë=
NULL
)

14 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

15 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
)

16 
	`¥ötf
("%s\n", 
dúp
->
d_«me
);

18 
	`˛o£dú
(
dp
);

19 
	`exô
(0);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/mycd.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 i‡(
	`chdú
("/tmp") < 0)

7 
	`îr_sys
("chdir failed");

8 
	`¥ötf
("chdirÅo /tmp succeeded\n");

9 
	`exô
(0);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/seek.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 i‡(
	`l£ek
(
STDIN_FILENO
, 0, 
SEEK_CUR
) == -1)

7 
	`¥ötf
("cannot seek\n");

9 
	`¥ötf
("seek OK\n");

10 
	`exô
(0);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/testerror.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
	`Ârötf
(
°dîr
, "EACCES: %s\n", 
	`°ªº‹
(
EACCES
));

8 
î∫o
 = 
ENOENT
;

9 
	`≥º‹
(
¨gv
[0]);

10 
	`exô
(0);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/uidgid.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("uid = %d, gid = %d\n", 
	`gëuid
(), 
	`gëgid
());

7 
	`exô
(0);

8 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/umask.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#RWRWRW
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

7 
	$maö
()

9 
	`umask
(0);

10 i‡(
	`¸ót
("foo", 
RWRWRW
) < 0)

11 
	`îr_sys
("creatÉrror for foo");

12 
	`umask
(
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
);

13 i‡(
	`¸ót
("b¨", 
RWRWRW
) < 0)

14 
	`îr_sys
("creatÉrror for bar");

15 
	`exô
(0);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/unlink.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
()

7 i‡(
	`›í
("ãmpfûe", 
O_RDWR
) < 0)

8 
	`îr_sys
("openÉrror");

9 i‡(
	`u∆ök
("tempfile") < 0)

10 
	`îr_sys
("unlinkÉrror");

11 
	`¥ötf
("file unlinked\n");

12 
	`¶ìp
(15);

13 
	`¥ötf
("done\n");

14 
	`exô
(0);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/file/zap.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<utime.h
>

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
i
, 
fd
;

9 
°©
 
°©buf
;

10 
utimbuf
 
timebuf
;

12 
i
 = 1; i < 
¨gc
; i++) {

13 i‡(
	`°©
(
¨gv
[
i
], &
°©buf
) < 0) {

14 
	`îr_ªt
("%s: sèàîr‹", 
¨gv
[
i
]);

17 i‡((
fd
 = 
	`›í
(
¨gv
[
i
], 
O_RDWR
 | 
O_TRUNC
)) < 0) {

18 
	`îr_ªt
("%s: o≥¿îr‹", 
¨gv
[
i
]);

21 
	`˛o£
(
fd
);

22 
timebuf
.
a˘ime
 = 
°©buf
.
°_©ime
;

23 
timebuf
.
modtime
 = 
°©buf
.
°_mtime
;

24 i‡(
	`utime
(
¨gv
[
i
], &
timebuf
) < 0) {

25 
	`îr_ªt
("%s: utimêîr‹", 
¨gv
[
i
]);

29 
	`exô
(0);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/include/apue.h

3 #i‚def 
_APUE_H


4 
	#_APUE_H


	)

6 #i‡
deföed
(
SOLARIS
)

7 
	#_XOPEN_SOURCE
 500

	)

8 
	#CMSG_LEN
(
x
Ë
	`_CMSG_DATA_ALIGN
((
cmsghdr
)+(x))

	)

9 #ñi‡!
deföed
(
BSD
)

10 
	#_XOPEN_SOURCE
 600

	)

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<sys/ãrmios.h
>

16 #i‚de‡
TIOCGWINSZ


17 
	~<sys/io˘l.h
>

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<°ddef.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~<sig«l.h
>

26 
	#MAXLINE
 4096

	)

27 
	#ARG_MAX
 4096

	)

32 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

37 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

39 
	tSigfunc
();

41 #if 
deföed
(
SIG_IGN
Ë&& !deföed(
SIG_ERR
)

42 
	#SIG_ERR
 ((
Sigfunc
 *)-1)

	)

45 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

46 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

51 *
∑th_Æloc
(*);

52 
›í_max
();

53 
˛r_Ê
(, );

54 
£t_Ê
(, );

55 
¥_exô
();

56 
¥_mask
(const *);

57 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

59 
ây_cbªak
();

60 
ây_øw
();

61 
ây_ª£t
();

62 
ây_©exô
();

63 #ifdef 
ECHO


64 
ãrmios
 *
ây_ãrmios
();

67 
¶ìp_us
();

68 
ssize_t
 
ªadn
(, *, 
size_t
);

69 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

70 
d´m⁄ize
(const *);

72 
s_pùe
(*);

73 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(,

74 c⁄° *, 
size_t
));

75 
	`£nd_fd
(, );

76 
	`£nd_îr
(, ,

78 
	`£rv_li°í
(const *);

79 
	`£rv_ac˚±
(, 
uid_t
 *);

80 
	`˛i_c⁄n
(const *);

81 
	`buf_¨gs
(*, (*
func
)(,

84 
	`±ym_›í
(*, );

85 
	`±ys_›í
(*);

86 #ifdef 
TIOCGWINSZ


87 
pid_t
 
	`±y_f‹k
(*, *, , c⁄° 
ãrmios
 *,

88 c⁄° 
wösize
 *);

91 
	`lock_ªg
(, , , 
off_t
, , off_t);

92 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

93 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

94 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

95 
	`lock_ªg
((
fd
), 
F_SETLKW
, 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

96 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

97 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

98 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

99 
	`lock_ªg
((
fd
), 
F_SETLKW
, 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

100 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

101 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_UNLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

103 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

105 
	#is_ªad_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

106 (
	`lock_ã°
((
fd
), 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
)Ë=0)

	)

107 
	#is_wrôe_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

108 (
	`lock_ã°
((
fd
), 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
)Ë=0)

	)

110 
	`îr_dump
(const *, ...);

111 
	`îr_msg
(const *, ...);

112 
	`îr_quô
(const *, ...);

113 
	`îr_exô
(, const *, ...);

114 
	`îr_ªt
(const *, ...);

115 
	`îr_sys
(const *, ...);

117 
	`log_msg
(const *, ...);

118 
	`log_›í
(const *, , );

119 
	`log_quô
(const *, ...);

120 
	`log_ªt
(const *, ...);

121 
	`log_sys
(const *, ...);

123 
	`TELL_WAIT
();

124 
	`TELL_PARENT
(
pid_t
);

125 
	`TELL_CHILD
(
pid_t
);

126 
	`WAIT_PARENT
();

127 
	`WAIT_CHILD
();

	@/root/grocery-shop/language/gcc/src/apue/ipc/add2.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
n
, 
öt1
, 
öt2
;

7 
löe
[
MAXLINE
];

9 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) > 0) {

10 
löe
[
n
] = 0;

11 i‡(
	`ssˇnf
(
löe
, "%d%d", &
öt1
, &
öt2
) == 2) {

12 
	`•rötf
(
löe
, "%d\n", 
öt1
 + 
öt2
);

13 
n
 = 
	`°æí
(
löe
);

14 i‡(
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
) !=Ç)

15 
	`îr_sys
("writeÉrror");

17 i‡(
	`wrôe
(
STDOUT_FILENO
, "invalidárgs\n", 13) != 13)

18 
	`îr_sys
("writeÉrror");

21 
	`exô
(0);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/add2stdio.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
öt1
, 
öt2
;

7 
löe
[
MAXLINE
];

9 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

10 i‡(
	`ssˇnf
(
löe
, "%d%d", &
öt1
, &
öt2
) == 2) {

11 i‡(
	`¥ötf
("%d\n", 
öt1
 + 
öt2
Ë=
EOF
)

12 
	`îr_sys
("printfÉrror");

14 i‡(
	`¥ötf
("övÆidárgs\n"Ë=
EOF
)

15 
	`îr_sys
("printfÉrror");

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/fifo1.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#FIFO
 "ãmp.fifo"

	)

7 
	$maö
()

9 
fdªad
, 
fdwrôe
;

11 
	`u∆ök
(
FIFO
);

12 i‡(
	`mkfifo
(
FIFO
, 
FILE_MODE
) < 0)

13 
	`îr_sys
("mkfifoÉrror");

14 i‡((
fdªad
 = 
	`›í
(
FIFO
, 
O_RDONLY
 | 
O_NONBLOCK
)) < 0)

15 
	`îr_sys
("openÉrror forÑeading");

16 i‡((
fdwrôe
 = 
	`›í
(
FIFO
, 
O_WRONLY
)) < 0)

17 
	`îr_sys
("openÉrror for writing");

18 
	`˛r_Ê
(
fdªad
, 
O_NONBLOCK
);

19 
	`exô
(0);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/myuclc.c

1 
	~"≠ue.h
"

2 
	~<˘y≥.h
>

5 
	$maö
()

7 
c
;

9 (
c
 = 
	`gëch¨
()Ë!
EOF
) {

10 i‡(
	`isuµî
(
c
))

11 
c
 = 
	`tﬁowî
(c);

12 i‡(
	`putch¨
(
c
Ë=
EOF
)

13 
	`îr_sys
("outputÉrror");

14 i‡(
c
 == '\n')

15 
	`fÊush
(
°dout
);

17 
	`exô
(0);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/pipe1.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
n
;

7 
fd
[2];

8 
pid_t
 
pid
;

9 
löe
[
MAXLINE
];

11 i‡(
	`pùe
(
fd
) < 0)

12 
	`îr_sys
("pipeÉrror");

13 i‡((
pid
 = 
	`f‹k
()) < 0) {

14 
	`îr_sys
("forkÉrror");

15 } i‡(
pid
 > 0) {

16 
	`˛o£
(
fd
[0]);

17 
	`wrôe
(
fd
[1], "hello world\n", 12);

19 
	`˛o£
(
fd
[1]);

20 
n
 = 
	`ªad
(
fd
[0], 
löe
, 
MAXLINE
);

21 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

23 
	`exô
(0);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/pipe2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
	#DEF_PAGER
 "/bö/m‹e"

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
n
;

10 
fd
[2];

11 
pid_t
 
pid
;

12 *
∑gî
, *
¨gv0
;

13 
löe
[
MAXLINE
];

14 
FILE
 *
Â
;

16 i‡(
¨gc
 != 2)

17 
	`îr_quô
("usage:á.out <pathname>");

19 i‡((
Â
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

20 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

21 i‡(
	`pùe
(
fd
) < 0)

22 
	`îr_sys
("pipeÉrror");

24 i‡((
pid
 = 
	`f‹k
()) < 0) {

25 
	`îr_sys
("forkÉrror");

26 } i‡(
pid
 > 0) {

27 
	`˛o£
(
fd
[0]);

30 
	`fgës
(
löe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

31 
n
 = 
	`°æí
(
löe
);

32 i‡(
	`wrôe
(
fd
[1], 
löe
, 
n
) !=Ç)

33 
	`îr_sys
("writeÉrrorÅoÖipe");

35 i‡(
	`„º‹
(
Â
))

36 
	`îr_sys
("fgetsÉrror");

38 
	`˛o£
(
fd
[1]);

40 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

41 
	`îr_sys
("waitpidÉrror");

42 
	`exô
(0);

44 
	`˛o£
(
fd
[1]);

45 i‡(
fd
[0] !
STDIN_FILENO
) {

46 i‡(
	`dup2
(
fd
[0], 
STDIN_FILENO
) != STDIN_FILENO)

47 
	`îr_sys
("dup2ÉrrorÅo stdin");

48 
	`˛o£
(
fd
[0]);

52 i‡((
∑gî
 = 
	`gëív
("PAGER")Ë=
NULL
)

53 
∑gî
 = 
DEF_PAGER
;

54 i‡((
¨gv0
 = 
	`°ºchr
(
∑gî
, '/')Ë!
NULL
)

55 
¨gv0
++;

57 
¨gv0
 = 
∑gî
;

59 i‡(
	`exe˛
(
∑gî
, 
¨gv0
, (*)0) < 0)

60 
	`îr_sys
("exe˛Éº‹ f‹ %s", 
∑gî
);

62 
	`exô
(0);

63 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/pipe4.c

1 
	~"≠ue.h
"

3 
sig_pùe
();

6 
	$maö
()

8 
n
, 
fd1
[2], 
fd2
[2];

9 
pid_t
 
pid
;

10 
löe
[
MAXLINE
];

12 i‡(
	`sig«l
(
SIGPIPE
, 
sig_pùe
Ë=
SIG_ERR
)

13 
	`îr_sys
("signalÉrror");

15 i‡(
	`pùe
(
fd1
Ë< 0 ||Öùe(
fd2
) < 0)

16 
	`îr_sys
("pipeÉrror");

18 i‡((
pid
 = 
	`f‹k
()) < 0) {

19 
	`îr_sys
("forkÉrror");

20 } i‡(
pid
 > 0) {

21 
	`˛o£
(
fd1
[0]);

22 
	`˛o£
(
fd2
[1]);

24 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

25 
n
 = 
	`°æí
(
löe
);

26 i‡(
	`wrôe
(
fd1
[1], 
löe
, 
n
) !=Ç)

27 
	`îr_sys
("writeÉrrorÅoÖipe");

28 i‡((
n
 = 
	`ªad
(
fd2
[0], 
löe
, 
MAXLINE
)) < 0)

29 
	`îr_sys
("readÉrror fromÖipe");

30 i‡(
n
 == 0) {

31 
	`îr_msg
("child closedÖipe");

34 
löe
[
n
] = 0;

35 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

36 
	`îr_sys
("fputsÉrror");

39 i‡(
	`„º‹
(
°dö
))

40 
	`îr_sys
("fgetsÉrror on stdin");

41 
	`exô
(0);

43 
	`˛o£
(
fd1
[1]);

44 
	`˛o£
(
fd2
[0]);

45 i‡(
fd1
[0] !
STDIN_FILENO
) {

46 i‡(
	`dup2
(
fd1
[0], 
STDIN_FILENO
) != STDIN_FILENO)

47 
	`îr_sys
("dup2ÉrrorÅo stdin");

48 
	`˛o£
(
fd1
[0]);

51 i‡(
fd2
[1] !
STDOUT_FILENO
) {

52 i‡(
	`dup2
(
fd2
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

53 
	`îr_sys
("dup2ÉrrorÅo stdout");

54 
	`˛o£
(
fd2
[1]);

56 i‡(
	`exe˛
("./add2", "add2", (*)0) < 0)

57 
	`îr_sys
("execlÉrror");

59 
	`exô
(0);

60 
	}
}

63 
	$sig_pùe
(
signo
)

65 
	`¥ötf
("SIGPIPE caught\n");

66 
	`exô
(1);

67 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/popen1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
löe
[
MAXLINE
];

8 
FILE
 *
Âö
;

10 i‡((
Âö
 = 
	`p›í
("myu˛c", "r")Ë=
NULL
)

11 
	`îr_sys
("popenÉrror");

13 
	`Âuts
("¥om±> ", 
°dout
);

14 
	`fÊush
(
°dout
);

15 i‡(
	`fgës
(
löe
, 
MAXLINE
, 
Âö
Ë=
NULL
)

17 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

18 
	`îr_sys
("fputsÉrrorÅoÖipe");

20 i‡(
	`p˛o£
(
Âö
) == -1)

21 
	`îr_sys
("pcloseÉrror");

22 
	`putch¨
('\n');

23 
	`exô
(0);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/popen2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
	#PAGER
 "${PAGER:-m‹e}"

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
löe
[
MAXLINE
];

10 
FILE
 *
Âö
, *
Âout
;

12 i‡(
¨gc
 != 2)

13 
	`îr_quô
("usage:á.out <pathname>");

14 i‡((
Âö
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

15 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

17 i‡((
Âout
 = 
	`p›í
(
PAGER
, "w")Ë=
NULL
)

18 
	`îr_sys
("popenÉrror");

21 
	`fgës
(
löe
, 
MAXLINE
, 
Âö
Ë!
NULL
) {

22 i‡(
	`Âuts
(
löe
, 
Âout
Ë=
EOF
)

23 
	`îr_sys
("fputsÉrrorÅoÖipe");

25 i‡(
	`„º‹
(
Âö
))

26 
	`îr_sys
("fgetsÉrror");

27 i‡(
	`p˛o£
(
Âout
) == -1)

28 
	`îr_sys
("pcloseÉrror");

30 
	`exô
(0);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/spipe4.c

1 
	~"≠ue.h
"

3 
sig_pùe
();

6 
	$maö
()

8 
n
;

9 
fd
[2];

10 
pid_t
 
pid
;

11 
löe
[
MAXLINE
];

13 i‡(
	`sig«l
(
SIGPIPE
, 
sig_pùe
Ë=
SIG_ERR
)

14 
	`îr_sys
("signalÉrror");

16 i‡(
	`s_pùe
(
fd
) < 0)

17 
	`îr_sys
("pipeÉrror");

19 i‡((
pid
 = 
	`f‹k
()) < 0) {

20 
	`îr_sys
("forkÉrror");

21 } i‡(
pid
 > 0) {

22 
	`˛o£
(
fd
[1]);

23 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

24 
n
 = 
	`°æí
(
löe
);

25 i‡(
	`wrôe
(
fd
[0], 
löe
, 
n
) !=Ç)

26 
	`îr_sys
("writeÉrrorÅoÖipe");

27 i‡((
n
 = 
	`ªad
(
fd
[0], 
löe
, 
MAXLINE
)) < 0)

28 
	`îr_sys
("readÉrror fromÖipe");

29 i‡(
n
 == 0) {

30 
	`îr_msg
("child closedÖipe");

33 
löe
[
n
] = 0;

34 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

35 
	`îr_sys
("fputsÉrror");

38 i‡(
	`„º‹
(
°dö
))

39 
	`îr_sys
("fgetsÉrror on stdin");

40 
	`exô
(0);

42 
	`˛o£
(
fd
[0]);

43 i‡(
fd
[1] !
STDIN_FILENO
 &&

44 
	`dup2
(
fd
[1], 
STDIN_FILENO
) != STDIN_FILENO)

45 
	`îr_sys
("dup2ÉrrorÅo stdin");

46 i‡(
fd
[1] !
STDOUT_FILENO
 &&

47 
	`dup2
(
fd
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

48 
	`îr_sys
("dup2ÉrrorÅo stdout");

49 i‡(
	`exe˛
("./add2", "add2", (*)0) < 0)

50 
	`îr_sys
("execlÉrror");

52 
	`exô
(0);

53 
	}
}

56 
	$sig_pùe
(
signo
)

58 
	`¥ötf
("SIGPIPE caught\n");

59 
	`exô
(1);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/tellwait.c

1 
	~"≠ue.h
"

3 
	gpfd1
[2], 
	gpfd2
[2];

6 
	$TELL_WAIT
()

8 i‡(
	`pùe
(
pfd1
Ë< 0 ||Öùe(
pfd2
) < 0)

9 
	`îr_sys
("pipeÉrror");

10 
	}
}

13 
	$TELL_PARENT
(
pid_t
 
pid
)

15 i‡(
	`wrôe
(
pfd2
[1], "c", 1) != 1)

16 
	`îr_sys
("writeÉrror");

17 
	}
}

20 
	$WAIT_PARENT
()

22 
c
;

24 i‡(
	`ªad
(
pfd1
[0], &
c
, 1) != 1)

25 
	`îr_sys
("readÉrror");

27 i‡(
c
 != 'p')

28 
	`îr_quô
("WAIT_PARENT: incorrect data");

29 
	}
}

32 
	$TELL_CHILD
(
pid_t
 
pid
)

34 i‡(
	`wrôe
(
pfd1
[1], "p", 1) != 1)

35 
	`îr_sys
("writeÉrror");

36 
	}
}

39 
	$WAIT_CHILD
()

41 
c
;

43 i‡(
	`ªad
(
pfd2
[0], &
c
, 1) != 1)

44 
	`îr_sys
("readÉrror");

46 i‡(
c
 != 'c')

47 
	`îr_quô
("WAIT_CHILD: incorrect data");

48 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipc/tshm.c

1 
	~"≠ue.h
"

2 
	~<sys/shm.h
>

4 
	#ARRAY_SIZE
 40000

	)

5 
	#MALLOC_SIZE
 100000

	)

6 
	#SHM_SIZE
 100000

	)

7 
	#SHM_MODE
 0600

	)

9 
	g¨øy
[
ARRAY_SIZE
];

12 
	$maö
()

14 
shmid
;

15 *
±r
, *
shm±r
;

17 
	`¥ötf
("¨øy[] from %lxÅÿ%lx\n", ()&
¨øy
[0],

18 ()&
¨øy
[
ARRAY_SIZE
]);

19 
	`¥ötf
("°ackáround %lx\n", ()&
shmid
);

21 i‡((
±r
 = 
	`mÆloc
(
MALLOC_SIZE
)Ë=
NULL
)

22 
	`îr_sys
("mallocÉrror");

23 
	`¥ötf
("mÆlo˚d from %lxÅÿ%lx\n", ()
±r
,

24 ()
±r
+
MALLOC_SIZE
);

26 i‡((
shmid
 = 
	`shmgë
(
IPC_PRIVATE
, 
SHM_SIZE
, 
SHM_MODE
)) < 0)

27 
	`îr_sys
("shmgetÉrror");

28 i‡((
shm±r
 = 
	`shm©
(
shmid
, 0, 0)) == (*)-1)

29 
	`îr_sys
("shmatÉrror");

30 
	`¥ötf
("shared memoryáttached from %lxÅo %lx\n",

31 ()
shm±r
, ()shm±r+
SHM_SIZE
);

33 i‡(
	`shm˘l
(
shmid
, 
IPC_RMID
, 0) < 0)

34 
	`îr_sys
("shmctlÉrror");

36 
	`exô
(0);

37 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipp/ipp.h

1 #i‚de‡
_IPP_H


2 
	#_IPP_H


	)

12 
	#STATCLASS_OK
(
x
Ë((xË>0x0000 && (xË<0x00ff)

	)

13 
	#STATCLASS_INFO
(
x
Ë((xË>0x0100 && (xË<0x01ff)

	)

14 
	#STATCLASS_REDIR
(
x
Ë((xË>0x0200 && (xË<0x02ff)

	)

15 
	#STATCLASS_CLIERR
(
x
Ë((xË>0x0400 && (xË<0x04ff)

	)

16 
	#STATCLASS_SRVERR
(
x
Ë((xË>0x0500 && (xË<0x05ff)

	)

21 
	#STAT_OK
 0x0000

	)

22 
	#STAT_OK_ATTRIGN
 0x0001

	)

23 
	#STAT_OK_ATTRCON
 0x0002

	)

25 
	#STAT_CLI_BADREQ
 0x0400

	)

26 
	#STAT_CLI_FORBID
 0x0401

	)

27 
	#STAT_CLI_NOAUTH
 0x0402

	)

28 
	#STAT_CLI_NOPERM
 0x0403

	)

29 
	#STAT_CLI_NOTPOS
 0x0404

	)

30 
	#STAT_CLI_TIMOUT
 0x0405

	)

31 
	#STAT_CLI_NOTFND
 0x0406

	)

32 
	#STAT_CLI_OBJGONE
 0x0407

	)

33 
	#STAT_CLI_TOOBIG
 0x040
job


	)

34 
	#STAT_CLI_TOOLNG
 0x0409

	)

35 
	#STAT_CLI_BADFMT
 0x040®

	)

36 
	#STAT_CLI_NOTSUP
 0x040b

	)

37 
	#STAT_CLI_NOSCHM
 0x040¯

	)

38 
	#STAT_CLI_NOCHAR
 0x040d

	)

39 
	#STAT_CLI_ATTRCON
 0x040ê

	)

40 
	#STAT_CLI_NOCOMP
 0x040‡

	)

41 
	#STAT_CLI_COMPERR
 0x0410

	)

42 
	#STAT_CLI_FMTERR
 0x0411

	)

43 
	#STAT_CLI_ACCERR
 0x0412

	)

45 
	#STAT_SRV_INTERN
 0x0500

	)

46 
	#STAT_SRV_NOTSUP
 0x0501

	)

47 
	#STAT_SRV_UNAVAIL
 0x0502

	)

48 
	#STAT_SRV_BADVER
 0x0503

	)

49 
	#STAT_SRV_DEVERR
 0x0504

	)

50 
	#STAT_SRV_TMPERR
 0x0505

	)

51 
	#STAT_SRV_REJECT
 0x0506

	)

52 
	#STAT_SRV_TOOBUSY
 0x0507

	)

53 
	#STAT_SRV_CANCEL
 0x050
job


	)

54 
	#STAT_SRV_NOMULTI
 0x0509

	)

59 
	#OP_PRINT_JOB
 0x02

	)

60 
	#OP_PRINT_URI
 0x03

	)

61 
	#OP_VALIDATE_JOB
 0x04

	)

62 
	#OP_CREATE_JOB
 0x05

	)

63 
	#OP_SEND_DOC
 0x06

	)

64 
	#OP_SEND_URI
 0x07

	)

65 
	#OP_CANCEL_JOB
 0x0
job


	)

66 
	#OP_GET_JOB_ATTR
 0x09

	)

67 
	#OP_GET_JOBS
 0x0a

	)

68 
	#OP_GET_PRINTER_ATTR
 0x0b

	)

69 
	#OP_HOLD_JOB
 0x0c

	)

70 
	#OP_RELEASE_JOB
 0x0d

	)

71 
	#OP_RESTART_JOB
 0x0e

	)

72 
	#OP_PAUSE_PRINTER
 0x10

	)

73 
	#OP_RESUME_PRINTER
 0x11

	)

74 
	#OP_PURGE_JOBS
 0x12

	)

79 
	#TAG_OPERATION_ATTR
 0x01

	)

80 
	#TAG_JOB_ATTR
 0x02

	)

81 
	#TAG_END_OF_ATTR
 0x03

	)

82 
	#TAG_PRINTER_ATTR
 0x04

	)

83 
	#TAG_UNSUPP_ATTR
 0x05

	)

88 
	#TAG_UNSUPPORTED
 0x10

	)

89 
	#TAG_UNKNOWN
 0x12

	)

90 
	#TAG_NONE
 0x13

	)

91 
	#TAG_INTEGER
 0x21

	)

92 
	#TAG_BOOLEAN
 0x22

	)

93 
	#TAG_ENUM
 0x23

	)

94 
	#TAG_OCTSTR
 0x30

	)

95 
	#TAG_DATETIME
 0x31

	)

96 
	#TAG_RESOLUTION
 0x32

	)

97 
	#TAG_INTRANGE
 0x33

	)

98 
	#TAG_TEXTWLANG
 0x35

	)

99 
	#TAG_NAMEWLANG
 0x36

	)

100 
	#TAG_TEXTWOLANG
 0x41

	)

101 
	#TAG_NAMEWOLANG
 0x42

	)

102 
	#TAG_KEYWORD
 0x44

	)

103 
	#TAG_URI
 0x45

	)

104 
	#TAG_URISCHEME
 0x46

	)

105 
	#TAG_CHARSET
 0x47

	)

106 
	#TAG_NATULANG
 0x4
job


	)

107 
	#TAG_MIMETYPE
 0x49

	)

109 
	sùp_hdr
 {

110 
ötjob_t
 
	mmaj‹_vîsi⁄
;

111 
ötjob_t
 
	mmö‹_vîsi⁄
;

113 
öt16_t
 
	m›
;

114 
öt16_t
 
	m°
;

115 } 
	mu
;

116 
öt32_t
 
	mªque°_id
;

117 
	m©å_group
[1];

121 
	#›î©i⁄
 
u
.
›


	)

122 
	#°©ußpue
 
u
.
°


	)

	@/root/grocery-shop/language/gcc/src/apue/ipp/print.c

6 
	~"≠ue.h
"

7 
	~"¥öt.h
"

8 
	~<f˙é.h
>

9 
	~<pwd.h
>

14 
	glog_to_°dîr
 = 1;

16 
submô_fûe
(, , c⁄° *, 
size_t
, );

19 
	$maö
(
¨gc
, *
¨gv
[])

21 
fd
, 
sockfd
, 
îr
, 
ãxt
, 
c
;

22 
°©
 
sbuf
;

23 *
ho°
;

24 
addröfo
 *
aûi°
, *
aù
;

26 
îr
 = 0;

27 
ãxt
 = 0;

28 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t")) != -1) {

29 
c
) {

31 
ãxt
 = 1;

35 
îr
 = 1;

39 i‡(
îr
 || (
›töd
 !
¨gc
 - 1))

40 
	`îr_quô
("usage:Örint [-t] filename");

41 i‡((
fd
 = 
	`›í
(
¨gv
[
›töd
], 
O_RDONLY
)) < 0)

42 
	`îr_sys
("¥öt: c™'à›í %s", 
¨gv
[1]);

43 i‡(
	`f°©
(
fd
, &
sbuf
) < 0)

44 
	`îr_sys
("¥öt: c™'à°© %s", 
¨gv
[1]);

45 i‡(!
	`S_ISREG
(
sbuf
.
°_mode
))

46 
	`îr_quô
("¥öt: %†mu° bê®ªguœ∏fûe\n", 
¨gv
[1]);

51 i‡((
ho°
 = 
	`gë_¥öt£rvî
()Ë=
NULL
)

52 
	`îr_quô
("print:ÇoÖrint server defined");

53 i‡((
îr
 = 
	`gëaddæi°
(
ho°
, "¥öt", &
aûi°
)) != 0)

54 
	`îr_quô
("¥öt: gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

56 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

57 i‡((
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

58 
îr
 = 
î∫o
;

59 } i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
aù
->
ai_addr
,

60 
aù
->
ai_addæí
) < 0) {

61 
îr
 = 
î∫o
;

63 
	`submô_fûe
(
fd
, 
sockfd
, 
¨gv
[1], 
sbuf
.
°_size
, 
ãxt
);

64 
	`exô
(0);

67 
î∫o
 = 
îr
;

68 
	`îr_ªt
("¥öt: c™'àc⁄è˘ %s", 
ho°
);

69 
	`exô
(1);

70 
	}
}

76 
	$submô_fûe
(
fd
, 
sockfd
, c⁄° *
‚ame
, 
size_t
 
nbyãs
,

77 
ãxt
)

79 
ƒ
, 
nw
, 
Àn
;

80 
∑sswd
 *
pwd
;

81 
¥öåeq
 
ªq
;

82 
¥öåe•
 
ªs
;

83 
buf
[
IOBUFSZ
];

88 i‡((
pwd
 = 
	`gëpwuid
(
	`gëeuid
())Ë=
NULL
)

89 
	`°r˝y
(
ªq
.
u£∫m
, "unknown");

91 
	`°r˝y
(
ªq
.
u£∫m
, 
pwd
->
pw_«me
);

92 
ªq
.
size
 = 
	`ht⁄l
(
nbyãs
);

93 i‡(
ãxt
)

94 
ªq
.
Êags
 = 
	`ht⁄l
(
PR_TEXT
);

96 
ªq
.
Êags
 = 0;

97 i‡((
Àn
 = 
	`°æí
(
‚ame
)Ë>
JOBNM_MAX
) {

102 
	`°r˝y
(
ªq
.
jobnm
, "... ");

103 
	`°∫ˇt
(
ªq
.
jobnm
, &
‚ame
[
Àn
-
JOBNM_MAX
+5], JOBNM_MAX-5);

105 
	`°r˝y
(
ªq
.
jobnm
, 
‚ame
);

111 
nw
 = 
	`wrôí
(
sockfd
, &
ªq
, (
¥öåeq
));

112 i‡(
nw
 !(
¥öåeq
)) {

113 i‡(
nw
 < 0)

114 
	`îr_sys
("can't writeÅoÖrint server");

116 
	`îr_quô
("short write (%d/%d)ÅoÖrint server",

117 
nw
, (
¥öåeq
));

123 (
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
IOBUFSZ
)) != 0) {

124 
nw
 = 
	`wrôí
(
sockfd
, 
buf
, 
ƒ
);

125 i‡(
nw
 !
ƒ
) {

126 i‡(
nw
 < 0)

127 
	`îr_sys
("can't writeÅoÖrint server");

129 
	`îr_quô
("short write (%d/%d)ÅoÖrint server",

130 
nw
, 
ƒ
);

137 i‡((
ƒ
 = 
	`ªadn
(
sockfd
, &
ªs
, (
¥öåe•
))) !=

138 (
¥öåe•
))

139 
	`îr_sys
("can'tÑeadÑesponse from server");

140 i‡(
ªs
.
ªtcode
 != 0) {

141 
	`¥ötf
("ªje˘ed: %s\n", 
ªs
.
msg
);

142 
	`exô
(1);

144 
	`¥ötf
("job ID %u\n", 
	`¡ohl
(
ªs
.
jobid
));

146 
	`exô
(0);

147 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipp/print.h

1 #i‚de‡
_PRINT_H


2 
	#_PRINT_H


	)

6 
	~<sys/sockë.h
>

7 
	~<¨∑/öë.h
>

8 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

9 
	~<√töë/ö.h
>

11 
	~<√tdb.h
>

12 
	~<î∫o.h
>

14 
	#CONFIG_FILE
 "/ëc/¥öãr.c⁄f"

	)

15 
	#SPOOLDIR
 "/v¨/•oﬁ/¥öãr"

	)

16 
	#JOBFILE
 "jobno"

	)

17 
	#DATADIR
 "d©a"

	)

18 
	#REQDIR
 "ªqs"

	)

20 
	#FILENMSZ
 64

	)

21 
	#FILEPERM
 (
S_IRUSR
|
S_IWUSR
)

	)

22 
	#USERNM_MAX
 64

	)

23 
	#JOBNM_MAX
 256

	)

24 
	#MSGLEN_MAX
 512

	)

26 #i‚de‡
HOST_NAME_MAX


27 
	#HOST_NAME_MAX
 256

	)

30 
	#IPP_PORT
 631

	)

31 
	#QLEN
 10

	)

32 
	#IBUFSZ
 512

	)

33 
	#HBUFSZ
 512

	)

34 
	#IOBUFSZ
 
job192


	)

36 #i‚de‡
ETIME


37 
	#ETIME
 
ETIMEDOUT


	)

40 
gëaddæi°
(const *, const *,

41 
addröfo
 **);

42 *
gë_¥öt£rvî
();

43 
addröfo
 *
gë_¥öèddr
();

44 
ssize_t
 
åód
(, *, 
size_t
, );

45 
ssize_t
 
åódn
(, *, 
size_t
, );

46 
c⁄√˘_ªåy
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

47 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

52 
	s¥öåeq
 {

53 
	msize
;

54 
	mÊags
;

55 
	mu£∫m
[
USERNM_MAX
];

56 
	mjobnm
[
JOBNM_MAX
];

62 
	#PR_TEXT
 0x01

	)

67 
	s¥öåe•
 {

68 
	mªtcode
;

69 
	mjobid
;

70 
	mmsg
[
MSGLEN_MAX
];

	@/root/grocery-shop/language/gcc/src/apue/ipp/printd.c

4 
	~"≠ue.h
"

5 
	~"¥öt.h
"

6 
	~"ùp.h
"

7 
	~<f˙é.h
>

8 
	~<dúít.h
>

9 
	~<˘y≥.h
>

10 
	~<pwd.h
>

11 
	~<±hªad.h
>

12 
	~<°rögs.h
>

13 
	~<sys/£À˘.h
>

14 
	~<sys/uio.h
>

19 
	#HTTP_INFO
(
x
Ë((xË>100 && (xË<199)

	)

20 
	#HTTP_SUCCESS
(
x
Ë((xË>200 && (xË<299)

	)

25 
	sjob
 {

26 
job
 *
	m√xt
;

27 
job
 *
	m¥ev
;

28 
	mjobid
;

29 
¥öåeq
 
	mªq
;

35 
	sw‹kî_thªad
 {

36 
w‹kî_thªad
 *
	m√xt
;

37 
w‹kî_thªad
 *
	m¥ev
;

38 
±hªad_t
 
	mtid
;

39 
	msockfd
;

45 
	glog_to_°dîr
 = 0;

50 
addröfo
 *
	g¥öãr
;

51 *
	g¥öãr_«me
;

52 
±hªad_muãx_t
 
	gc⁄figlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

53 
	gªªad
;

58 
w‹kî_thªad
 *
	gw‹kîs
;

59 
±hªad_muãx_t
 
	gw‹kîlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

60 
sig£t_t
 
	gmask
;

65 
job
 *
	gjobhód
, *
	gjobèû
;

66 
	gjobfd
;

67 
	g√xtjob
;

68 
±hªad_muãx_t
 
	gjoblock
 = 
PTHREAD_MUTEX_INITIALIZER
;

69 
±hªad_c⁄d_t
 
	gjobwaô
 = 
PTHREAD_COND_INITIALIZER
;

74 
öô_ªque°
();

75 
öô_¥öãr
();

76 
upd©e_jobno
();

77 
gë_√wjobno
();

78 
add_job
(
¥öåeq
 *, );

79 
ª∂a˚_job
(
job
 *);

80 
ªmove_job
(
job
 *);

81 
buûd_q⁄°¨t
();

82 *
˛õ¡_thªad
(*);

83 *
¥öãr_thªad
(*);

84 *
sig«l_thªad
(*);

85 
ssize_t
 
ªadm‹e
(, **, , *);

86 
¥öãr_°©us
(, 
job
 *);

87 
add_w‹kî
(
±hªad_t
, );

88 
kûl_w‹kîs
();

89 
˛õ¡_˛ónup
(*);

98 
	$maö
(
¨gc
, *
¨gv
[])

100 
±hªad_t
 
tid
;

101 
addröfo
 *
aûi°
, *
aù
;

102 
sockfd
, 
îr
, 
i
, 
n
, 
maxfd
;

103 *
ho°
;

104 
fd_£t
 
ªndezvous
, 
r£t
;

105 
siga˘i⁄
 
ß
;

106 
∑sswd
 *
pwdp
;

108 i‡(
¨gc
 != 1)

109 
	`îr_quô
("usage:Örintd");

110 
	`d´m⁄ize
("printd");

112 
	`sigem±y£t
(&
ß
.
ß_mask
);

113 
ß
.
ß_Êags
 = 0;

114 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

115 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
ß
, 
NULL
) < 0)

116 
	`log_sys
("sigaction failed");

117 
	`sigem±y£t
(&
mask
);

118 
	`sigadd£t
(&
mask
, 
SIGHUP
);

119 
	`sigadd£t
(&
mask
, 
SIGTERM
);

120 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, 
NULL
)) != 0)

121 
	`log_sys
("pthread_sigmask failed");

122 
	`öô_ªque°
();

123 
	`öô_¥öãr
();

125 #ifde‡
_SC_HOST_NAME_MAX


126 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

127 i‡(
n
 < 0)

129 
n
 = 
HOST_NAME_MAX
;

131 i‡((
ho°
 = 
	`mÆloc
(
n
)Ë=
NULL
)

132 
	`log_sys
("mallocÉrror");

133 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

134 
	`log_sys
("gethostnameÉrror");

135 i‡((
îr
 = 
	`gëaddæi°
(
ho°
, "¥öt", &
aûi°
)) != 0) {

136 
	`log_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

137 
	`exô
(1);

139 
	`FD_ZERO
(&
ªndezvous
);

140 
maxfd
 = -1;

141 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

142 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

143 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

144 
	`FD_SET
(
sockfd
, &
ªndezvous
);

145 i‡(
sockfd
 > 
maxfd
)

146 
maxfd
 = 
sockfd
;

149 i‡(
maxfd
 == -1)

150 
	`log_quô
("serviceÇotÉnabled");

152 
pwdp
 = 
	`gëpw«m
("lp");

153 i‡(
pwdp
 =
NULL
)

154 
	`log_sys
("can't find userÜp");

155 i‡(
pwdp
->
pw_uid
 == 0)

156 
	`log_quô
("userÜp isÖrivileged");

157 i‡(
	`£tuid
(
pwdp
->
pw_uid
) < 0)

158 
	`log_sys
("can't change IDsÅo userÜp");

160 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
¥öãr_thªad
, NULL);

161 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
sig«l_thªad
, NULL);

162 
	`buûd_q⁄°¨t
();

164 
	`log_msg
("daemon initialized");

167 
r£t
 = 
ªndezvous
;

168 i‡(
	`£À˘
(
maxfd
+1, &
r£t
, 
NULL
, NULL, NULL) < 0)

169 
	`log_sys
("select failed");

170 
i
 = 0; i <
maxfd
; i++) {

171 i‡(
	`FD_ISSET
(
i
, &
r£t
)) {

177 
sockfd
 = 
	`ac˚±
(
i
, 
NULL
, NULL);

178 i‡(
sockfd
 < 0)

179 
	`log_ªt
("accept failed");

180 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
˛õ¡_thªad
,

181 (*)
sockfd
);

185 
	`exô
(1);

186 
	}
}

195 
	$öô_ªque°
()

197 
n
;

198 
«me
[
FILENMSZ
];

200 
	`•rötf
(
«me
, "%s/%s", 
SPOOLDIR
, 
JOBFILE
);

201 
jobfd
 = 
	`›í
(
«me
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

202 i‡(
	`wrôe_lock
(
jobfd
, 0, 
SEEK_SET
, 0) < 0)

203 
	`log_quô
("daemonálreadyÑunning");

208 i‡((
n
 = 
	`ªad
(
jobfd
, 
«me
, 
FILENMSZ
)) < 0)

209 
	`log_sys
("can'tÑead job file");

210 i‡(
n
 == 0)

211 
√xtjob
 = 1;

213 
√xtjob
 = 
	`©ﬁ
(
«me
);

214 
	}
}

222 
	$öô_¥öãr
()

224 
¥öãr
 = 
	`gë_¥öèddr
();

225 i‡(
¥öãr
 =
NULL
) {

226 
	`log_msg
("noÖrinter deviceÑegistered");

227 
	`exô
(1);

229 
¥öãr_«me
 = 
¥öãr
->
ai_ˇn⁄«me
;

230 i‡(
¥öãr_«me
 =
NULL
)

231 
¥öãr_«me
 = "printer";

232 
	`log_msg
("¥öã∏i†%s", 
¥öãr_«me
);

233 
	}
}

241 
	$upd©e_jobno
()

243 
buf
[32];

245 
	`l£ek
(
jobfd
, 0, 
SEEK_SET
);

246 
	`•rötf
(
buf
, "%ld", 
√xtjob
);

247 i‡(
	`wrôe
(
jobfd
, 
buf
, 
	`°æí
(buf)) < 0)

248 
	`log_sys
("can't update job file");

249 
	}
}

257 
	$gë_√wjobno
()

259 
jobid
;

261 
	`±hªad_muãx_lock
(&
joblock
);

262 
jobid
 = 
√xtjob
++;

263 i‡(
√xtjob
 <= 0)

264 
√xtjob
 = 1;

265 
	`±hªad_muãx_u∆ock
(&
joblock
);

266 (
jobid
);

267 
	}
}

276 
	$add_job
(
¥öåeq
 *
ªqp
, 
jobid
)

278 
job
 *
jp
;

280 i‡((
jp
 = 
	`mÆloc
((
job
))Ë=
NULL
)

281 
	`log_sys
("malloc failed");

282 
	`mem˝y
(&
jp
->
ªq
, 
ªqp
, (
¥öåeq
));

283 
jp
->
jobid
 = jobid;

284 
jp
->
√xt
 = 
NULL
;

285 
	`±hªad_muãx_lock
(&
joblock
);

286 
jp
->
¥ev
 = 
jobèû
;

287 i‡(
jobèû
 =
NULL
)

288 
jobhód
 = 
jp
;

290 
jobèû
->
√xt
 = 
jp
;

291 
jobèû
 = 
jp
;

292 
	`±hªad_muãx_u∆ock
(&
joblock
);

293 
	`±hªad_c⁄d_sig«l
(&
jobwaô
);

294 
	}
}

302 
	$ª∂a˚_job
(
job
 *
jp
)

304 
	`±hªad_muãx_lock
(&
joblock
);

305 
jp
->
¥ev
 = 
NULL
;

306 
jp
->
√xt
 = 
jobhód
;

307 i‡(
jobhód
 =
NULL
)

308 
jobèû
 = 
jp
;

310 
jobhód
->
¥ev
 = 
jp
;

311 
jobhód
 = 
jp
;

312 
	`±hªad_muãx_u∆ock
(&
joblock
);

313 
	}
}

321 
	$ªmove_job
(
job
 *
èrgë
)

323 i‡(
èrgë
->
√xt
 !
NULL
)

324 
èrgë
->
√xt
->
¥ev
 =Åarget->prev;

326 
jobèû
 = 
èrgë
->
¥ev
;

327 i‡(
èrgë
->
¥ev
 !
NULL
)

328 
èrgë
->
¥ev
->
√xt
 =Åarget->next;

330 
jobhód
 = 
èrgë
->
√xt
;

331 
	}
}

339 
	$buûd_q⁄°¨t
()

341 
fd
, 
îr
, 
ƒ
;

342 
jobid
;

343 
DIR
 *
dúp
;

344 
dúít
 *
íç
;

345 
¥öåeq
 
ªq
;

346 
d«me
[
FILENMSZ
], 
‚ame
[FILENMSZ];

348 
	`•rötf
(
d«me
, "%s/%s", 
SPOOLDIR
, 
REQDIR
);

349 i‡((
dúp
 = 
	`›ídú
(
d«me
)Ë=
NULL
)

351 (
íç
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

355 i‡(
	`°rcmp
(
íç
->
d_«me
, ".") == 0 ||

356 
	`°rcmp
(
íç
->
d_«me
, "..") == 0)

362 
	`•rötf
(
‚ame
, "%s/%s/%s", 
SPOOLDIR
, 
REQDIR
, 
íç
->
d_«me
);

363 i‡((
fd
 = 
	`›í
(
‚ame
, 
O_RDONLY
)) < 0)

365 
ƒ
 = 
	`ªad
(
fd
, &
ªq
, (
¥öåeq
));

366 i‡(
ƒ
 !(
¥öåeq
)) {

367 i‡(
ƒ
 < 0)

368 
îr
 = 
î∫o
;

370 
îr
 = 
EIO
;

371 
	`˛o£
(
fd
);

372 
	`log_msg
("build_qonstart: can'tÑead %s: %s",

373 
‚ame
, 
	`°ªº‹
(
îr
));

374 
	`u∆ök
(
‚ame
);

375 
	`•rötf
(
‚ame
, "%s/%s/%s", 
SPOOLDIR
, 
DATADIR
,

376 
íç
->
d_«me
);

377 
	`u∆ök
(
‚ame
);

380 
jobid
 = 
	`©ﬁ
(
íç
->
d_«me
);

381 
	`log_msg
("addög job %ldÅÿqueue", 
jobid
);

382 
	`add_job
(&
ªq
, 
jobid
);

384 
	`˛o£dú
(
dúp
);

385 
	}
}

393 
	$˛õ¡_thªad
(*
¨g
)

395 
n
, 
fd
, 
sockfd
, 
ƒ
, 
nw
, 
fú°
;

396 
jobid
;

397 
±hªad_t
 
tid
;

398 
¥öåeq
 
ªq
;

399 
¥öåe•
 
ªs
;

400 
«me
[
FILENMSZ
];

401 
buf
[
IOBUFSZ
];

403 
tid
 = 
	`±hªad_£lf
();

404 
	`±hªad_˛ónup_push
(
˛õ¡_˛ónup
, (*)
tid
);

405 
sockfd
 = ()
¨g
;

406 
	`add_w‹kî
(
tid
, 
sockfd
);

411 i‡((
n
 = 
	`åódn
(
sockfd
, &
ªq
, (
¥öåeq
), 10)) !=

412 (
¥öåeq
)) {

413 
ªs
.
jobid
 = 0;

414 i‡(
n
 < 0)

415 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

417 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

418 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

419 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

420 
	`±hªad_exô
((*)1);

422 
ªq
.
size
 = 
	`¡ohl
(req.size);

423 
ªq
.
Êags
 = 
	`¡ohl
(req.flags);

428 
jobid
 = 
	`gë_√wjobno
();

429 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

430 i‡((
fd
 = 
	`¸ót
(
«me
, 
FILEPERM
)) < 0) {

431 
ªs
.
jobid
 = 0;

432 i‡(
n
 < 0)

433 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

435 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

436 
	`log_msg
("˛õ¡_thªad: c™'à¸óã %s: %s", 
«me
,

437 
	`°ªº‹
(
ªs
.
ªtcode
));

438 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

439 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

440 
	`±hªad_exô
((*)1);

446 
fú°
 = 1;

447 (
ƒ
 = 
	`åód
(
sockfd
, 
buf
, 
IOBUFSZ
, 20)) > 0) {

448 i‡(
fú°
) {

449 
fú°
 = 0;

450 i‡(
	`°∫cmp
(
buf
, "%!PS", 4) != 0)

451 
ªq
.
Êags
 |
PR_TEXT
;

453 
nw
 = 
	`wrôe
(
fd
, 
buf
, 
ƒ
);

454 i‡(
nw
 !
ƒ
) {

455 i‡(
nw
 < 0)

456 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

458 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

459 
	`log_msg
("˛õ¡_thªad: c™'àwrôê%s: %s", 
«me
,

460 
	`°ªº‹
(
ªs
.
ªtcode
));

461 
	`˛o£
(
fd
);

462 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

463 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

464 
	`u∆ök
(
«me
);

465 
	`±hªad_exô
((*)1);

468 
	`˛o£
(
fd
);

473 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
REQDIR
, 
jobid
);

474 
fd
 = 
	`¸ót
(
«me
, 
FILEPERM
);

475 i‡(
fd
 < 0) {

476 
ªs
.
jobid
 = 0;

477 i‡(
n
 < 0)

478 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

480 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

481 
	`log_msg
("˛õ¡_thªad: c™'à¸óã %s: %s", 
«me
,

482 
	`°ªº‹
(
ªs
.
ªtcode
));

483 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

484 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

485 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

486 
	`u∆ök
(
«me
);

487 
	`±hªad_exô
((*)1);

489 
nw
 = 
	`wrôe
(
fd
, &
ªq
, (
¥öåeq
));

490 i‡(
nw
 !(
¥öåeq
)) {

491 
ªs
.
jobid
 = 0;

492 i‡(
nw
 < 0)

493 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

495 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

496 
	`log_msg
("˛õ¡_thªad: c™'àwrôê%s: %s", 
«me
,

497 
	`°ªº‹
(
ªs
.
ªtcode
));

498 
	`˛o£
(
fd
);

499 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

500 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

501 
	`u∆ök
(
«me
);

502 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

503 
	`u∆ök
(
«me
);

504 
	`±hªad_exô
((*)1);

506 
	`˛o£
(
fd
);

511 
ªs
.
ªtcode
 = 0;

512 
ªs
.
jobid
 = 
	`ht⁄l
(jobid);

513 
	`•rötf
(
ªs
.
msg
, "ªque° ID %ld", 
jobid
);

514 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

519 
	`log_msg
("addög job %ldÅÿqueue", 
jobid
);

520 
	`add_job
(&
ªq
, 
jobid
);

521 
	`±hªad_˛ónup_p›
(1);

523 
	}
}

531 
	$add_w‹kî
(
±hªad_t
 
tid
, 
sockfd
)

533 
w‹kî_thªad
 *
wç
;

535 i‡((
wç
 = 
	`mÆloc
((
w‹kî_thªad
))Ë=
NULL
) {

536 
	`log_ªt
("add_worker: can't malloc");

537 
	`±hªad_exô
((*)1);

539 
wç
->
tid
 =Åid;

540 
wç
->
sockfd
 = sockfd;

541 
	`±hªad_muãx_lock
(&
w‹kîlock
);

542 
wç
->
¥ev
 = 
NULL
;

543 
wç
->
√xt
 = 
w‹kîs
;

544 i‡(
w‹kîs
 =
NULL
)

545 
w‹kîs
 = 
wç
;

547 
w‹kîs
->
¥ev
 = 
wç
;

548 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

549 
	}
}

557 
	$kûl_w‹kîs
()

559 
w‹kî_thªad
 *
wç
;

561 
	`±hªad_muãx_lock
(&
w‹kîlock
);

562 
wç
 = 
w‹kîs
; wç !
NULL
; wç = wç->
√xt
)

563 
	`±hªad_ˇn˚l
(
wç
->
tid
);

564 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

565 
	}
}

573 
	$˛õ¡_˛ónup
(*
¨g
)

575 
w‹kî_thªad
 *
wç
;

576 
±hªad_t
 
tid
;

578 
tid
 = (
±hªad_t
)
¨g
;

579 
	`±hªad_muãx_lock
(&
w‹kîlock
);

580 
wç
 = 
w‹kîs
; wç !
NULL
; wç = wç->
√xt
) {

581 i‡(
wç
->
tid
 ==Åid) {

582 i‡(
wç
->
√xt
 !
NULL
)

583 
wç
->
√xt
->
¥ev
 = wtp->prev;

584 i‡(
wç
->
¥ev
 !
NULL
)

585 
wç
->
¥ev
->
√xt
 = wtp->next;

587 
w‹kîs
 = 
wç
->
√xt
;

591 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

592 i‡(
wç
 !
NULL
) {

593 
	`˛o£
(
wç
->
sockfd
);

594 
	`‰ì
(
wç
);

596 
	}
}

604 
	$sig«l_thªad
(*
¨g
)

606 
îr
, 
signo
;

609 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

610 i‡(
îr
 != 0)

611 
	`log_quô
("sigwaô faûed: %s", 
	`°ªº‹
(
îr
));

612 
signo
) {

613 
SIGHUP
:

617 
	`±hªad_muãx_lock
(&
c⁄figlock
);

618 
ªªad
 = 1;

619 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

622 
SIGTERM
:

623 
	`kûl_w‹kîs
();

624 
	`log_msg
("ãrmö©êwôh sig«»%s", 
	`°rsig«l
(
signo
));

625 
	`exô
(0);

628 
	`kûl_w‹kîs
();

629 
	`log_quô
("u√x≥˘ed sig«»%d", 
signo
);

632 
	}
}

640 
	$add_›ti⁄
(*
˝
, 
èg
, *
›äame
, *
›tvÆ
)

642 
n
;

644 
öt16_t
 
s
;

645 
c
[2];

646 } 
u
;

648 *
˝
++ = 
èg
;

649 
n
 = 
	`°æí
(
›äame
);

650 
u
.
s
 = 
	`ht⁄s
(
n
);

651 *
˝
++ = 
u
.
c
[0];

652 *
˝
++ = 
u
.
c
[1];

653 
	`°r˝y
(
˝
, 
›äame
);

654 
˝
 +
n
;

655 
n
 = 
	`°æí
(
›tvÆ
);

656 
u
.
s
 = 
	`ht⁄s
(
n
);

657 *
˝
++ = 
u
.
c
[0];

658 *
˝
++ = 
u
.
c
[1];

659 
	`°r˝y
(
˝
, 
›tvÆ
);

660 (
˝
 + 
n
);

661 
	}
}

669 
	$¥öãr_thªad
(*
¨g
)

671 
job
 *
jp
;

672 
hÀn
, 
ûí
, 
sockfd
, 
fd
, 
ƒ
, 
nw
;

673 *
i˝
, *
h˝
;

674 
ùp_hdr
 *
hp
;

675 
°©
 
sbuf
;

676 
iovec
 
iov
[2];

677 
«me
[
FILENMSZ
];

678 
hbuf
[
HBUFSZ
];

679 
ibuf
[
IBUFSZ
];

680 
buf
[
IOBUFSZ
];

681 
°r
[64];

687 
	`±hªad_muãx_lock
(&
joblock
);

688 
jobhód
 =
NULL
) {

689 
	`log_msg
("printer_thread: waiting...");

690 
	`±hªad_c⁄d_waô
(&
jobwaô
, &
joblock
);

692 
	`ªmove_job
(
jp
 = 
jobhód
);

693 
	`log_msg
("¥öãr_thªad:Öicked u∞job %ld", 
jp
->
jobid
);

694 
	`±hªad_muãx_u∆ock
(&
joblock
);

696 
	`upd©e_jobno
();

701 
	`±hªad_muãx_lock
(&
c⁄figlock
);

702 i‡(
ªªad
) {

703 
	`‰ìaddröfo
(
¥öãr
);

704 
¥öãr
 = 
NULL
;

705 
¥öãr_«me
 = 
NULL
;

706 
ªªad
 = 0;

707 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

708 
	`öô_¥öãr
();

710 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

716 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jp
->
jobid
);

717 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) < 0) {

718 
	`log_msg
("job %ld canceled - can't open %s: %s",

719 
jp
->
jobid
, 
«me
, 
	`°ªº‹
(
î∫o
));

720 
	`‰ì
(
jp
);

723 i‡(
	`f°©
(
fd
, &
sbuf
) < 0) {

724 
	`log_msg
("job %ld canceled - can't fstat %s: %s",

725 
jp
->
jobid
, 
«me
, 
	`°ªº‹
(
î∫o
));

726 
	`‰ì
(
jp
);

727 
	`˛o£
(
fd
);

730 i‡((
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

731 
	`log_msg
("job %ld deferred - can't create socket: %s",

732 
jp
->
jobid
, 
	`°ªº‹
(
î∫o
));

733 
de„r
;

735 i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
¥öãr
->
ai_addr
,

736 
¥öãr
->
ai_addæí
) < 0) {

737 
	`log_msg
("job %ld deferred - can't contactÖrinter: %s",

738 
jp
->
jobid
, 
	`°ªº‹
(
î∫o
));

739 
de„r
;

745 
i˝
 = 
ibuf
;

746 
hp
 = (
ùp_hdr
 *)
i˝
;

747 
hp
->
maj‹_vîsi⁄
 = 1;

748 
hp
->
mö‹_vîsi⁄
 = 1;

749 
hp
->
›î©i⁄
 = 
	`ht⁄s
(
OP_PRINT_JOB
);

750 
hp
->
ªque°_id
 = 
	`ht⁄l
(
jp
->
jobid
);

751 
i˝
 +
	`off£tof
(
ùp_hdr
, 
©å_group
);

752 *
i˝
++ = 
TAG_OPERATION_ATTR
;

753 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_CHARSET
, "attributes-charset",

755 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NATULANG
,

757 
	`•rötf
(
°r
, "hâp://%s:%d", 
¥öãr_«me
, 
IPP_PORT
);

758 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_URI
, "¥öãr-uri", 
°r
);

759 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NAMEWOLANG
,

760 "ªque°ög-u£r-«me", 
jp
->
ªq
.
u£∫m
);

761 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NAMEWOLANG
, "job-name",

762 
jp
->
ªq
.
jobnm
);

763 i‡(
jp
->
ªq
.
Êags
 & 
PR_TEXT
) {

764 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_MIMETYPE
, "document-format",

767 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_MIMETYPE
, "document-format",

770 *
i˝
++ = 
TAG_END_OF_ATTR
;

771 
ûí
 = 
i˝
 - 
ibuf
;

776 
h˝
 = 
hbuf
;

777 
	`•rötf
(
h˝
, "POST /%s/ù∞HTTP/1.1\r\n", 
¥öãr_«me
);

778 
h˝
 +
	`°æí
(hcp);

779 
	`•rötf
(
h˝
, "Content-Length: %ld\r\n",

780 ()
sbuf
.
°_size
 + 
ûí
);

781 
h˝
 +
	`°æí
(hcp);

782 
	`°r˝y
(
h˝
, "Content-Type:ápplication/ipp\r\n");

783 
h˝
 +
	`°æí
(hcp);

784 
	`•rötf
(
h˝
, "Ho°: %s:%d\r\n", 
¥öãr_«me
, 
IPP_PORT
);

785 
h˝
 +
	`°æí
(hcp);

786 *
h˝
++ = '\r';

787 *
h˝
++ = '\n';

788 
hÀn
 = 
h˝
 - 
hbuf
;

793 
iov
[0].
iov_ba£
 = 
hbuf
;

794 
iov
[0].
iov_Àn
 = 
hÀn
;

795 
iov
[1].
iov_ba£
 = 
ibuf
;

796 
iov
[1].
iov_Àn
 = 
ûí
;

797 i‡((
nw
 = 
	`wrôev
(
sockfd
, 
iov
, 2)Ë!
hÀn
 + 
ûí
) {

798 
	`log_ªt
("can't writeÅoÖrinter");

799 
de„r
;

801 (
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
IOBUFSZ
)) > 0) {

802 i‡((
nw
 = 
	`wrôe
(
sockfd
, 
buf
, 
ƒ
)) !=Çr) {

803 i‡(
nw
 < 0)

804 
	`log_ªt
("can't writeÅoÖrinter");

806 
	`log_msg
("sh‹àwrôê(%d/%dËtÿ¥öãr", 
nw
, 
ƒ
);

807 
de„r
;

810 i‡(
ƒ
 < 0) {

811 
	`log_ªt
("ˇn'àªad %s", 
«me
);

812 
de„r
;

818 i‡(
	`¥öãr_°©us
(
sockfd
, 
jp
)) {

819 
	`u∆ök
(
«me
);

820 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
REQDIR
, 
jp
->
jobid
);

821 
	`u∆ök
(
«me
);

822 
	`‰ì
(
jp
);

823 
jp
 = 
NULL
;

825 
de„r
:

826 
	`˛o£
(
fd
);

827 i‡(
sockfd
 >= 0)

828 
	`˛o£
(
sockfd
);

829 i‡(
jp
 !
NULL
) {

830 
	`ª∂a˚_job
(
jp
);

831 
	`¶ìp
(60);

834 
	}
}

842 
ssize_t


843 
	$ªadm‹e
(
sockfd
, **
bµ
, 
off
, *
bszp
)

845 
ssize_t
 
ƒ
;

846 *
bp
 = *
bµ
;

847 
bsz
 = *
bszp
;

849 i‡(
off
 >
bsz
) {

850 
bsz
 +
IOBUFSZ
;

851 i‡((
bp
 = 
	`ªÆloc
(*
bµ
, 
bsz
)Ë=
NULL
)

852 
	`log_sys
("readmore: can'tállocate biggerÑead buffer");

853 *
bszp
 = 
bsz
;

854 *
bµ
 = 
bp
;

856 i‡((
ƒ
 = 
	`åód
(
sockfd
, &
bp
[
off
], 
bsz
-off, 1)) > 0)

857 (
off
+
ƒ
);

860 
	}
}

869 
	$¥öãr_°©us
(
sockfd
, 
job
 *
jp
)

871 
i
, 
suc˚ss
, 
code
, 
Àn
, 
found
, 
bufsz
;

872 
jobid
;

873 
ssize_t
 
ƒ
;

874 *
°©code
, *
ªas⁄
, *
˝
, *
c⁄ã¡Àn
;

875 
ùp_hdr
 *
hp
;

876 *
bp
;

883 
suc˚ss
 = 0;

884 
bufsz
 = 
IOBUFSZ
;

885 i‡((
bp
 = 
	`mÆloc
(
IOBUFSZ
)Ë=
NULL
)

886 
	`log_sys
("printer_status: can'tállocateÑead buffer");

888 (
ƒ
 = 
	`åód
(
sockfd
, 
bp
, 
IOBUFSZ
, 5)) > 0) {

893 
˝
 = 
bp
 + 
job
;

894 
	`is•a˚
(()*
˝
))

895 
˝
++;

896 
°©code
 = 
˝
;

897 
	`isdigô
(()*
˝
))

898 
˝
++;

899 i‡(
˝
 =
°©code
) {

900 
	`log_msg
(
bp
);

902 *
˝
++ = '\0';

903 
ªas⁄
 = 
˝
;

904 *
˝
 != '\r' && *cp != '\n')

905 
˝
++;

906 *
˝
 = '\0';

907 
code
 = 
	`©oi
(
°©code
);

908 i‡(
	`HTTP_INFO
(
code
))

910 i‡(!
	`HTTP_SUCCESS
(
code
)) {

911 
bp
[
ƒ
] = '\0';

912 
	`log_msg
("îr‹: %s", 
ªas⁄
);

921 
i
 = 
˝
 - 
bp
;

923 *
˝
 !'C' && *˝ !'c' && 
i
 < 
ƒ
) {

924 
˝
++;

925 
i
++;

927 i‡(
i
 >
ƒ
 &&

928 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

929 
out
;

930 
˝
 = &
bp
[
i
];

931 i‡(
	`°∫ˇ£cmp
(
˝
, "Content-Length:", 15) == 0) {

932 
˝
 += 15;

933 
	`is•a˚
(()*
˝
))

934 
˝
++;

935 
c⁄ã¡Àn
 = 
˝
;

936 
	`isdigô
(()*
˝
))

937 
˝
++;

938 *
˝
++ = '\0';

939 
i
 = 
˝
 - 
bp
;

940 
Àn
 = 
	`©oi
(
c⁄ã¡Àn
);

943 
˝
++;

944 
i
++;

947 i‡(
i
 >
ƒ
 &&

948 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

949 
out
;

950 
˝
 = &
bp
[
i
];

952 
found
 = 0;

953 !
found
) {

954 
i
 < 
ƒ
 - 2) {

955 i‡(*
˝
 == '\n' && *(cp + 1) == '\r' &&

956 *(
˝
 + 2) == '\n') {

957 
found
 = 1;

958 
˝
 += 3;

959 
i
 += 3;

962 
˝
++;

963 
i
++;

965 i‡(
i
 >
ƒ
 &&

966 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

967 
out
;

968 
˝
 = &
bp
[
i
];

971 i‡(
ƒ
 - 
i
 < 
Àn
 &&

972 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

973 
out
;

974 
˝
 = &
bp
[
i
];

976 
hp
 = (
ùp_hdr
 *)
˝
;

977 
i
 = 
	`¡ohs
(
hp
->
°©ußpue
);

978 
jobid
 = 
	`¡ohl
(
hp
->
ªque°_id
);

979 i‡(
jobid
 !
jp
->jobid) {

983 
	`log_msg
("jobid %ld sètu†codê%d", 
jobid
, 
i
);

987 i‡(
	`STATCLASS_OK
(
i
))

988 
suc˚ss
 = 1;

993 
out
:

994 
	`‰ì
(
bp
);

995 i‡(
ƒ
 < 0) {

996 
	`log_msg
("jobid %ld:ÉrrorÑeadingÖrinterÑesponse: %s",

997 
jobid
, 
	`°ªº‹
(
î∫o
));

999 (
suc˚ss
);

1000 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/ipp/util.c

1 
	~"≠ue.h
"

2 
	~"¥öt.h
"

3 
	~<˘y≥.h
>

4 
	~<sys/£À˘.h
>

6 
	#MAXCFGLINE
 512

	)

7 
	#MAXKWLEN
 16

	)

8 
	#MAXFMTLEN
 16

	)

19 
	$gëaddæi°
(c⁄° *
ho°
, c⁄° *
£rvi˚
,

20 
addröfo
 **
aûi°µ
)

22 
îr
;

23 
addröfo
 
höt
;

25 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

26 
höt
.
ai_Ámûy
 = 
AF_INET
;

27 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

28 
höt
.
ai_¥Ÿocﬁ
 = 0;

29 
höt
.
ai_addæí
 = 0;

30 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

31 
höt
.
ai_addr
 = 
NULL
;

32 
höt
.
ai_√xt
 = 
NULL
;

33 
îr
 = 
	`gëaddröfo
(
ho°
, 
£rvi˚
, &
höt
, 
aûi°µ
);

34 (
îr
);

35 
	}
}

44 
	$sˇn_c⁄figfûe
(*
keyw‹d
)

46 
n
, 
m©ch
;

47 
FILE
 *
Â
;

48 
keybuf
[
MAXKWLEN
], 
∑âîn
[
MAXFMTLEN
];

49 
löe
[
MAXCFGLINE
];

50 
vÆbuf
[
MAXCFGLINE
];

52 i‡((
Â
 = 
	`f›í
(
CONFIG_FILE
, "r")Ë=
NULL
)

53 
	`log_sys
("ˇn'à›í %s", 
CONFIG_FILE
);

54 
	`•rötf
(
∑âîn
, "%%%d†%%%ds", 
MAXKWLEN
-1, 
MAXCFGLINE
-1);

55 
m©ch
 = 0;

56 
	`fgës
(
löe
, 
MAXCFGLINE
, 
Â
Ë!
NULL
) {

57 
n
 = 
	`ssˇnf
(
löe
, 
∑âîn
, 
keybuf
, 
vÆbuf
);

58 i‡(
n
 =2 && 
	`°rcmp
(
keyw‹d
, 
keybuf
) == 0) {

59 
m©ch
 = 1;

63 
	`f˛o£
(
Â
);

64 i‡(
m©ch
 != 0)

65 (
vÆbuf
);

67 (
NULL
);

68 
	}
}

76 
	$gë_¥öt£rvî
()

78 (
	`sˇn_c⁄figfûe
("printserver"));

79 
	}
}

86 
addröfo
 *

87 
	$gë_¥öèddr
()

89 
îr
;

90 *
p
;

91 
addröfo
 *
aûi°
;

93 i‡((
p
 = 
	`sˇn_c⁄figfûe
("¥öãr")Ë!
NULL
) {

94 i‡((
îr
 = 
	`gëaddæi°
(
p
, "ùp", &
aûi°
)) != 0) {

95 
	`log_msg
("nÿaddªs†öf‹m©i⁄ f‹ %s", 
p
);

96 (
NULL
);

98 (
aûi°
);

100 
	`log_msg
("noÖrinteráddress specified");

101 (
NULL
);

102 
	}
}

111 
ssize_t


112 
	$åód
(
fd
, *
buf
, 
size_t
 
nbyãs
, 
timout
)

114 
nfds
;

115 
fd_£t
 
ªadfds
;

116 
timevÆ
 
tv
;

118 
tv
.
tv_£c
 = 
timout
;

119 
tv
.
tv_u£c
 = 0;

120 
	`FD_ZERO
(&
ªadfds
);

121 
	`FD_SET
(
fd
, &
ªadfds
);

122 
nfds
 = 
	`£À˘
(
fd
+1, &
ªadfds
, 
NULL
, NULL, &
tv
);

123 i‡(
nfds
 <= 0) {

124 i‡(
nfds
 == 0)

125 
î∫o
 = 
ETIME
;

128 (
	`ªad
(
fd
, 
buf
, 
nbyãs
));

129 
	}
}

138 
ssize_t


139 
	$åódn
(
fd
, *
buf
, 
size_t
 
nbyãs
, 
timout
)

141 
size_t
 
∆e·
;

142 
ssize_t
 
ƒód
;

144 
∆e·
 = 
nbyãs
;

145 
∆e·
 > 0) {

146 i‡((
ƒód
 = 
	`åód
(
fd
, 
buf
, 
∆e·
, 
timout
)) < 0) {

147 i‡(
∆e·
 =
nbyãs
)

151 } i‡(
ƒód
 == 0) {

154 
∆e·
 -
ƒód
;

155 
buf
 +
ƒód
;

157 (
nbyãs
 - 
∆e·
);

158 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/bsd_ptyopen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<gΩ.h
>

6 #i‚de‡
_HAS_OPENPT


8 
	$posix_›í±
(
oÊag
)

10 
fdm
;

11 *
±r1
, *
±r2
;

12 
±m_«me
[16];

14 
	`°r˝y
(
±m_«me
, "/dev/ptyXY");

16 
±r1
 = "pqrstuvwxyzPQRST"; *ptr1 != 0;Ötr1++) {

17 
±m_«me
[
job
] = *
±r1
;

18 
±r2
 = "01234567job9abcdef"; *ptr2 != 0;Ötr2++) {

19 
±m_«me
[9] = *
±r2
;

24 i‡((
fdm
 = 
	`›í
(
±m_«me
, 
oÊag
)) < 0) {

25 i‡(
î∫o
 =
ENOENT
)

30 (
fdm
);

33 
î∫o
 = 
EAGAIN
;

35 
	}
}

38 #i‚de‡
_HAS_PTSNAME


40 
	$±¢ame
(
fdm
)

42 
±s_«me
[16];

43 *
±m_«me
;

45 
±m_«me
 = 
	`ây«me
(
fdm
);

46 i‡(
±m_«me
 =
NULL
)

47 (
NULL
);

48 
	`°∫˝y
(
±s_«me
, 
±m_«me
, (pts_name));

49 
±s_«me
[(pts_name) - 1] = '\0';

50 i‡(
	`°∫cmp
(
±s_«me
, "/dev/pty/", 9) == 0)

51 
±s_«me
[9] = 's';

53 
±s_«me
[5] = 't';

54 (
±s_«me
);

55 
	}
}

58 #i‚de‡
_HAS_GRANTPT


60 
	$gø¡±
(
fdm
)

62 
group
 *
gΩå
;

63 
gid
;

64 *
±s_«me
;

66 
±s_«me
 = 
	`±¢ame
(
fdm
);

67 i‡((
gΩå
 = 
	`gëg∫am
("ây")Ë!
NULL
)

68 
gid
 = 
gΩå
->
gr_gid
;

70 
gid
 = -1;

75 i‡(
	`chown
(
±s_«me
, 
	`gëuid
(), 
gid
) < 0)

77 (
	`chmod
(
±s_«me
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IWGRP
));

78 
	}
}

81 #i‚de‡
_HAS_UNLOCKPT


83 
	$u∆ock±
(
fdm
)

86 
	}
}

90 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

92 *
±r
;

93 
fdm
;

100 
	`°∫˝y
(
±s_«me
, "/dev/±yXX", 
±s_«mesz
);

101 
±s_«me
[
±s_«mesz
 - 1] = '\0';

102 i‡((
fdm
 = 
	`posix_›í±
(
O_RDWR
)) < 0)

104 i‡(
	`gø¡±
(
fdm
) < 0) {

105 
	`˛o£
(
fdm
);

108 i‡(
	`u∆ock±
(
fdm
) < 0) {

109 
	`˛o£
(
fdm
);

112 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

113 
	`˛o£
(
fdm
);

121 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

122 
±s_«me
[
±s_«mesz
 - 1] = '\0';

123 (
fdm
);

124 
	}
}

127 
	$±ys_›í
(*
±s_«me
)

129 
fds
;

131 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

133 (
fds
);

134 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/bufargs.c

1 
	~"≠ue.h
"

3 
	#MAXARGC
 50

	)

4 
	#WHITE
 " \t\n"

	)

14 
buf_¨gs
(*
buf
, (*
›tfunc
)(, **))

16 *
±r
, *
¨gv
[
MAXARGC
];

17 
¨gc
;

19 i‡(
	`°πok
(
buf
, 
WHITE
Ë=
NULL
)

21 
¨gv
[
¨gc
 = 0] = 
buf
;

22 (
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) != NULL) {

23 i‡(++
¨gc
 >
MAXARGC
-1)

25 
¨gv
[
¨gc
] = 
±r
;

27 
¨gv
[++
¨gc
] = 
NULL
;

34 ((*
›tfunc
)(
¨gc
, 
¨gv
));

35 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/cliconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#CLI_PATH
 "/v¨/tmp/"

	)

7 
	#CLI_PERM
 
S_IRWXU


	)

14 
	$˛i_c⁄n
(c⁄° *
«me
)

16 
fd
, 
Àn
, 
îr
, 
rvÆ
;

17 
sockaddr_un
 
un
;

20 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

24 
	`mem£t
(&
un
, 0, (un));

25 
un
.
sun_Ámûy
 = 
AF_UNIX
;

26 
	`•rötf
(
un
.
sun_∑th
, "%s%05d", 
CLI_PATH
, 
	`gëpid
());

27 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

29 
	`u∆ök
(
un
.
sun_∑th
);

30 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

31 
rvÆ
 = -2;

32 
îrout
;

34 i‡(
	`chmod
(
un
.
sun_∑th
, 
CLI_PERM
) < 0) {

35 
rvÆ
 = -3;

36 
îrout
;

40 
	`mem£t
(&
un
, 0, (un));

41 
un
.
sun_Ámûy
 = 
AF_UNIX
;

42 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

43 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

44 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

45 
rvÆ
 = -4;

46 
îrout
;

48 (
fd
);

50 
îrout
:

51 
îr
 = 
î∫o
;

52 
	`˛o£
(
fd
);

53 
î∫o
 = 
îr
;

54 (
rvÆ
);

55 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/clrfl.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$˛r_Ê
(
fd
, 
Êags
)

8 
vÆ
;

10 i‡((
vÆ
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0)

11 
	`îr_sys
("fcntl F_GETFLÉrror");

13 
vÆ
 &~
Êags
;

15 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
vÆ
) < 0)

16 
	`îr_sys
("fcntl F_SETFLÉrror");

17 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/daemonize.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<f˙é.h
>

4 #ifde‡
BSD


5 
	~<sys/time.h
>

7 
	~<sys/ªsour˚.h
>

10 
	$d´m⁄ize
(c⁄° *
cmd
)

12 
i
, 
fd0
, 
fd1
, 
fd2
;

13 
pid_t
 
pid
;

14 
æimô
 
æ
;

15 
siga˘i⁄
 
ß
;

20 
	`umask
(0);

25 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

26 
	`îr_quô
("%s: c™'àgë fûêlimô", 
cmd
);

31 i‡((
pid
 = 
	`f‹k
()) < 0)

32 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

33 i‡(
pid
 != 0)

34 
	`exô
(0);

35 
	`£tsid
();

40 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

41 
	`sigem±y£t
(&
ß
.
ß_mask
);

42 
ß
.
ß_Êags
 = 0;

43 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

44 
	`îr_quô
("%s: can't ignore SIGHUP");

45 i‡((
pid
 = 
	`f‹k
()) < 0)

46 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

47 i‡(
pid
 != 0)

48 
	`exô
(0);

54 i‡(
	`chdú
("/") < 0)

55 
	`îr_quô
("%s: can't change directoryÅo /");

60 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

61 
æ
.
æim_max
 = 1024;

62 
i
 = 0; i < 
æ
.
æim_max
; i++)

63 
	`˛o£
(
i
);

68 
fd0
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

69 
fd1
 = 
	`dup
(0);

70 
fd2
 = 
	`dup
(0);

75 
	`›ílog
(
cmd
, 
LOG_CONS
, 
LOG_DAEMON
);

76 i‡(
fd0
 !0 || 
fd1
 !1 || 
fd2
 != 2) {

77 
	`sy¶og
(
LOG_ERR
, "unexpected file descriptors %d %d %d",

78 
fd0
, 
fd1
, 
fd2
);

79 
	`exô
(1);

81 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/error.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<°d¨g.h
>

5 
îr_doô
(, , c⁄° *, 
va_li°
);

12 
	$îr_ªt
(c⁄° *
fmt
, ...)

14 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
fmt
);

17 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

18 
	`va_íd
(
≠
);

19 
	}
}

26 
	$îr_sys
(c⁄° *
fmt
, ...)

28 
va_li°
 
≠
;

30 
	`va_°¨t
(
≠
, 
fmt
);

31 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

32 
	`va_íd
(
≠
);

33 
	`exô
(1);

34 
	}
}

42 
	$îr_exô
(
îr‹
, c⁄° *
fmt
, ...)

44 
va_li°
 
≠
;

46 
	`va_°¨t
(
≠
, 
fmt
);

47 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

48 
	`va_íd
(
≠
);

49 
	`exô
(1);

50 
	}
}

57 
	$îr_dump
(c⁄° *
fmt
, ...)

59 
va_li°
 
≠
;

61 
	`va_°¨t
(
≠
, 
fmt
);

62 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

63 
	`va_íd
(
≠
);

64 
	`ab‹t
();

65 
	`exô
(1);

66 
	}
}

73 
	$îr_msg
(c⁄° *
fmt
, ...)

75 
va_li°
 
≠
;

77 
	`va_°¨t
(
≠
, 
fmt
);

78 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

79 
	`va_íd
(
≠
);

80 
	}
}

87 
	$îr_quô
(c⁄° *
fmt
, ...)

89 
va_li°
 
≠
;

91 
	`va_°¨t
(
≠
, 
fmt
);

92 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

93 
	`va_íd
(
≠
);

94 
	`exô
(1);

95 
	}
}

102 
	$îr_doô
(
î∫oÊag
, 
îr‹
, c⁄° *
fmt
, 
va_li°
 
≠
)

104 
buf
[
MAXLINE
];

106 
	`v¢¥ötf
(
buf
, 
MAXLINE
, 
fmt
, 
≠
);

107 i‡(
î∫oÊag
)

108 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-strlen(buf), ": %s",

109 
	`°ªº‹
(
îr‹
));

110 
	`°rˇt
(
buf
, "\n");

111 
	`fÊush
(
°dout
);

112 
	`Âuts
(
buf
, 
°dîr
);

113 
	`fÊush
(
NULL
);

114 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/errorlog.c

5 
	~"≠ue.h
"

6 
	~<î∫o.h
>

7 
	~<°d¨g.h
>

8 
	~<sy¶og.h
>

10 
log_doô
(, , c⁄° *, 
va_li°
 
≠
);

16 
log_to_°dîr
;

22 
	$log_›í
(c⁄° *
idít
, 
›ti⁄
, 
Ácûôy
)

24 i‡(
log_to_°dîr
 == 0)

25 
	`›ílog
(
idít
, 
›ti⁄
, 
Ácûôy
);

26 
	}
}

33 
	$log_ªt
(c⁄° *
fmt
, ...)

35 
va_li°
 
≠
;

37 
	`va_°¨t
(
≠
, 
fmt
);

38 
	`log_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

39 
	`va_íd
(
≠
);

40 
	}
}

47 
	$log_sys
(c⁄° *
fmt
, ...)

49 
va_li°
 
≠
;

51 
	`va_°¨t
(
≠
, 
fmt
);

52 
	`log_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`exô
(2);

55 
	}
}

62 
	$log_msg
(c⁄° *
fmt
, ...)

64 
va_li°
 
≠
;

66 
	`va_°¨t
(
≠
, 
fmt
);

67 
	`log_doô
(0, 
LOG_ERR
, 
fmt
, 
≠
);

68 
	`va_íd
(
≠
);

69 
	}
}

76 
	$log_quô
(c⁄° *
fmt
, ...)

78 
va_li°
 
≠
;

80 
	`va_°¨t
(
≠
, 
fmt
);

81 
	`log_doô
(0, 
LOG_ERR
, 
fmt
, 
≠
);

82 
	`va_íd
(
≠
);

83 
	`exô
(2);

84 
	}
}

91 
	$log_doô
(
î∫oÊag
, 
¥i‹ôy
, c⁄° *
fmt
, 
va_li°
 
≠
)

93 
î∫o_ßve
;

94 
buf
[
MAXLINE
];

96 
î∫o_ßve
 = 
î∫o
;

97 
	`v¢¥ötf
(
buf
, 
MAXLINE
, 
fmt
, 
≠
);

98 i‡(
î∫oÊag
)

99 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-strlen(buf), ": %s",

100 
	`°ªº‹
(
î∫o_ßve
));

101 
	`°rˇt
(
buf
, "\n");

102 i‡(
log_to_°dîr
) {

103 
	`fÊush
(
°dout
);

104 
	`Âuts
(
buf
, 
°dîr
);

105 
	`fÊush
(
°dîr
);

107 
	`sy¶og
(
¥i‹ôy
, 
buf
);

109 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/linux_ptyopen.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 #i‚de‡
_HAS_OPENPT


6 
	$posix_›í±
(
oÊag
)

8 
fdm
;

10 
fdm
 = 
	`›í
("/dev/±mx", 
oÊag
);

11 (
fdm
);

12 
	}
}

15 #i‚de‡
_HAS_PTSNAME


17 
	$±¢ame
(
fdm
)

19 
smö‹
;

20 
±s_«me
[16];

22 i‡(
	`io˘l
(
fdm
, 
TIOCGPTN
, &
smö‹
) < 0)

23 (
NULL
);

24 
	`¢¥ötf
(
±s_«me
, ’ts_«me), "/dev/±s/%d", 
smö‹
);

25 (
±s_«me
);

26 
	}
}

29 #i‚de‡
_HAS_GRANTPT


31 
	$gø¡±
(
fdm
)

33 *
±s_«me
;

35 
±s_«me
 = 
	`±¢ame
(
fdm
);

36 (
	`chmod
(
±s_«me
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IWGRP
));

37 
	}
}

40 #i‚de‡
_HAS_UNLOCKPT


42 
	$u∆ock±
(
fdm
)

44 
lock
 = 0;

46 (
	`io˘l
(
fdm
, 
TIOCSPTLCK
, &
lock
));

47 
	}
}

51 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

53 *
±r
;

54 
fdm
;

61 
	`°∫˝y
(
±s_«me
, "/dev/±mx", 
±s_«mesz
);

62 
±s_«me
[
±s_«mesz
 - 1] = '\0';

64 
fdm
 = 
	`posix_›í±
(
O_RDWR
);

65 i‡(
fdm
 < 0)

67 i‡(
	`gø¡±
(
fdm
) < 0) {

68 
	`˛o£
(
fdm
);

71 i‡(
	`u∆ock±
(
fdm
) < 0) {

72 
	`˛o£
(
fdm
);

75 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

76 
	`˛o£
(
fdm
);

84 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

85 
±s_«me
[
±s_«mesz
 - 1] = '\0';

86 (
fdm
);

87 
	}
}

90 
	$±ys_›í
(*
±s_«me
)

92 
fds
;

94 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

96 (
fds
);

97 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/lockreg.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$lock_ªg
(
fd
, 
cmd
, 
ty≥
, 
off_t
 
off£t
, 
whí˚
, off_à
Àn
)

7 
Êock
 
lock
;

9 
lock
.
l_ty≥
 = 
ty≥
;

10 
lock
.
l_°¨t
 = 
off£t
;

11 
lock
.
l_whí˚
 = 
whí˚
;

12 
lock
.
l_Àn
 = 
Àn
;

14 (
	`f˙é
(
fd
, 
cmd
, &
lock
));

15 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/locktest.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
pid_t


5 
	$lock_ã°
(
fd
, 
ty≥
, 
off_t
 
off£t
, 
whí˚
, off_à
Àn
)

7 
Êock
 
lock
;

9 
lock
.
l_ty≥
 = 
ty≥
;

10 
lock
.
l_°¨t
 = 
off£t
;

11 
lock
.
l_whí˚
 = 
whí˚
;

12 
lock
.
l_Àn
 = 
Àn
;

14 i‡(
	`f˙é
(
fd
, 
F_GETLK
, &
lock
) < 0)

15 
	`îr_sys
("fcntlÉrror");

17 i‡(
lock
.
l_ty≥
 =
F_UNLCK
)

19 (
lock
.
l_pid
);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/nspipe.c

3 
	~"≠ue.h
"

4 
	~<sys/sockë.h
>

5 
	~<sys/un.h
>

8 
	$ns_pùe
(c⁄° *
«me
, 
fd
[2])

10 
Àn
;

11 
sockaddr_un
 
unix_addr
;

13 i‡(
	`s_pùe
(
fd
) < 0)

16 
	`u∆ök
(
«me
);

18 
	`mem£t
(&
unix_addr
, 0, (unix_addr));

19 
unix_addr
.
sun_Ámûy
 = 
AF_UNIX
;

20 
	`°r˝y
(
unix_addr
.
sun_∑th
, 
«me
);

21 
Àn
 = 
	`°æí
(
unix_addr
.
sun_∑th
Ë+ (unix_addr.
sun_Ámûy
);

23 (
	`böd
(
fd
[0], (
sockaddr
 *Ë&
unix_addr
, 
Àn
));

25 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/openmax.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 #ifdef 
OPEN_MAX


6 
	g›ímax
 = 
OPEN_MAX
;

8 
	g›ímax
 = 0;

15 
	#OPEN_MAX_GUESS
 256

	)

18 
	$›í_max
()

20 i‡(
›ímax
 == 0) {

21 
î∫o
 = 0;

22 i‡((
›ímax
 = 
	`sysc⁄f
(
_SC_OPEN_MAX
)) < 0) {

23 i‡(
î∫o
 == 0)

24 
›ímax
 = 
OPEN_MAX_GUESS
;

26 
	`îr_sys
("sysconfÉrror for _SC_OPEN_MAX");

30 (
›ímax
);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/pathalloc.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 #ifdef 
PATH_MAX


6 
	g∑thmax
 = 
PATH_MAX
;

8 
	g∑thmax
 = 0;

11 
	#SUSV3
 200112L

	)

13 
	gposix_vîsi⁄
 = 0;

16 
	#PATH_MAX_GUESS
 1024

	)

19 
	$∑th_Æloc
(*
sizï
)

21 *
±r
;

22 
size
;

24 i‡(
posix_vîsi⁄
 == 0)

25 
posix_vîsi⁄
 = 
	`sysc⁄f
(
_SC_VERSION
);

27 i‡(
∑thmax
 == 0) {

28 
î∫o
 = 0;

29 i‡((
∑thmax
 = 
	`∑thc⁄f
("/", 
_PC_PATH_MAX
)) < 0) {

30 i‡(
î∫o
 == 0)

31 
∑thmax
 = 
PATH_MAX_GUESS
;

33 
	`îr_sys
("pathconfÉrror for _PC_PATH_MAX");

35 
∑thmax
++;

38 i‡(
posix_vîsi⁄
 < 
SUSV3
)

39 
size
 = 
∑thmax
 + 1;

41 
size
 = 
∑thmax
;

43 i‡((
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

44 
	`îr_sys
("mallocÉrror forÖathname");

46 i‡(
sizï
 !
NULL
)

47 *
sizï
 = 
size
;

48 (
±r
);

49 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/popen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/waô.h
>

9 
pid_t
 *
	gchûdpid
 = 
NULL
;

14 
	gmaxfd
;

16 
FILE
 *

17 
	$p›í
(c⁄° *
cmd°rög
, c⁄° *
ty≥
)

19 
i
;

20 
pfd
[2];

21 
pid_t
 
pid
;

22 
FILE
 *
Â
;

25 i‡((
ty≥
[0] != 'r' &&Åype[0] != 'w') ||Åype[1] != 0) {

26 
î∫o
 = 
EINVAL
;

27 (
NULL
);

30 i‡(
chûdpid
 =
NULL
) {

32 
maxfd
 = 
	`›í_max
();

33 i‡((
chûdpid
 = 
	`ˇŒoc
(
maxfd
, (
pid_t
))Ë=
NULL
)

34 (
NULL
);

37 i‡(
	`pùe
(
pfd
) < 0)

38 (
NULL
);

40 i‡((
pid
 = 
	`f‹k
()) < 0) {

41 (
NULL
);

42 } i‡(
pid
 == 0) {

43 i‡(*
ty≥
 == 'r') {

44 
	`˛o£
(
pfd
[0]);

45 i‡(
pfd
[1] !
STDOUT_FILENO
) {

46 
	`dup2
(
pfd
[1], 
STDOUT_FILENO
);

47 
	`˛o£
(
pfd
[1]);

50 
	`˛o£
(
pfd
[1]);

51 i‡(
pfd
[0] !
STDIN_FILENO
) {

52 
	`dup2
(
pfd
[0], 
STDIN_FILENO
);

53 
	`˛o£
(
pfd
[0]);

58 
i
 = 0; i < 
maxfd
; i++)

59 i‡(
chûdpid
[
i
] > 0)

60 
	`˛o£
(
i
);

62 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

63 
	`_exô
(127);

67 i‡(*
ty≥
 == 'r') {

68 
	`˛o£
(
pfd
[1]);

69 i‡((
Â
 = 
	`fd›í
(
pfd
[0], 
ty≥
)Ë=
NULL
)

70 (
NULL
);

72 
	`˛o£
(
pfd
[0]);

73 i‡((
Â
 = 
	`fd›í
(
pfd
[1], 
ty≥
)Ë=
NULL
)

74 (
NULL
);

77 
chûdpid
[
	`fûío
(
Â
)] = 
pid
;

78 (
Â
);

79 
	}
}

82 
	$p˛o£
(
FILE
 *
Â
)

84 
fd
, 
°©
;

85 
pid_t
 
pid
;

87 i‡(
chûdpid
 =
NULL
) {

88 
î∫o
 = 
EINVAL
;

92 
fd
 = 
	`fûío
(
Â
);

93 i‡((
pid
 = 
chûdpid
[
fd
]) == 0) {

94 
î∫o
 = 
EINVAL
;

98 
chûdpid
[
fd
] = 0;

99 i‡(
	`f˛o£
(
Â
Ë=
EOF
)

102 
	`waôpid
(
pid
, &
°©
, 0) < 0)

103 i‡(
î∫o
 !
EINTR
)

106 (
°©
);

107 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/prexit.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$¥_exô
(
°©us
)

7 i‡(
	`WIFEXITED
(
°©us
))

8 
	`¥ötf
("normalÅermination,Éxit status = %d\n",

9 
	`WEXITSTATUS
(
°©us
));

10 i‡(
	`WIFSIGNALED
(
°©us
))

11 
	`¥ötf
("abnormalÅermination, signalÇumber = %d%s\n",

12 
	`WTERMSIG
(
°©us
),

13 #ifdef 
WCOREDUMP


14 
	`WCOREDUMP
(
°©us
) ? " (core file generated)" : "");

18 i‡(
	`WIFSTOPPED
(
°©us
))

19 
	`¥ötf
("child stopped, signalÇumber = %d\n",

20 
	`WSTOPSIG
(
°©us
));

21 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/prmask.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$¥_mask
(c⁄° *
°r
)

7 
sig£t_t
 
sig£t
;

8 
î∫o_ßve
;

10 
î∫o_ßve
 = 
î∫o
;

11 i‡(
	`sig¥ocmask
(0, 
NULL
, &
sig£t
) < 0)

12 
	`îr_sys
("sigprocmaskÉrror");

14 
	`¥ötf
("%s", 
°r
);

15 i‡(
	`sigismembî
(&
sig£t
, 
SIGINT
)Ë
	`¥ötf
("SIGINT ");

16 i‡(
	`sigismembî
(&
sig£t
, 
SIGQUIT
)Ë
	`¥ötf
("SIGQUIT ");

17 i‡(
	`sigismembî
(&
sig£t
, 
SIGUSR1
)Ë
	`¥ötf
("SIGUSR1 ");

18 i‡(
	`sigismembî
(&
sig£t
, 
SIGALRM
)Ë
	`¥ötf
("SIGALRM ");

22 
	`¥ötf
("\n");

23 
î∫o
 = 
î∫o_ßve
;

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/ptyfork.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

7 
pid_t


8 
	$±y_f‹k
(*
±rfdm
, *
¶ave_«me
, 
¶ave_«mesz
,

9 c⁄° 
ãrmios
 *
¶ave_ãrmios
,

10 c⁄° 
wösize
 *
¶ave_wösize
)

12 
fdm
, 
fds
;

13 
pid_t
 
pid
;

14 
±s_«me
[20];

16 i‡((
fdm
 = 
	`±ym_›í
(
±s_«me
, (pts_name))) < 0)

17 
	`îr_sys
("ˇn'à›í ma°îÖty: %s,Éº‹ %d", 
±s_«me
, 
fdm
);

19 i‡(
¶ave_«me
 !
NULL
) {

24 
	`°∫˝y
(
¶ave_«me
, 
±s_«me
, 
¶ave_«mesz
);

25 
¶ave_«me
[
¶ave_«mesz
 - 1] = '\0';

28 i‡((
pid
 = 
	`f‹k
()) < 0) {

30 } i‡(
pid
 == 0) {

31 i‡(
	`£tsid
() < 0)

32 
	`îr_sys
("setsidÉrror");

37 i‡((
fds
 = 
	`±ys_›í
(
±s_«me
)) < 0)

38 
	`îr_sys
("can't open slaveÖty");

39 
	`˛o£
(
fdm
);

41 #if 
	`deföed
(
TIOCSCTTY
)

45 i‡(
	`io˘l
(
fds
, 
TIOCSCTTY
, (*)0) < 0)

46 
	`îr_sys
("TIOCSCTTYÉrror");

51 i‡(
¶ave_ãrmios
 !
NULL
) {

52 i‡(
	`tc£èâr
(
fds
, 
TCSANOW
, 
¶ave_ãrmios
) < 0)

53 
	`îr_sys
("tcsetattrÉrror on slaveÖty");

55 i‡(
¶ave_wösize
 !
NULL
) {

56 i‡(
	`io˘l
(
fds
, 
TIOCSWINSZ
, 
¶ave_wösize
) < 0)

57 
	`îr_sys
("TIOCSWINSZÉrror on slaveÖty");

63 i‡(
	`dup2
(
fds
, 
STDIN_FILENO
) != STDIN_FILENO)

64 
	`îr_sys
("dup2ÉrrorÅo stdin");

65 i‡(
	`dup2
(
fds
, 
STDOUT_FILENO
) != STDOUT_FILENO)

66 
	`îr_sys
("dup2ÉrrorÅo stdout");

67 i‡(
	`dup2
(
fds
, 
STDERR_FILENO
) != STDERR_FILENO)

68 
	`îr_sys
("dup2ÉrrorÅo stderr");

69 i‡(
fds
 !
STDIN_FILENO
 && fd†!
STDOUT_FILENO
 &&

70 
fds
 !
STDERR_FILENO
)

71 
	`˛o£
(
fds
);

74 *
±rfdm
 = 
fdm
;

75 (
pid
);

77 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/readn.c

1 
	~"≠ue.h
"

3 
ssize_t


4 
	$ªadn
(
fd
, *
±r
, 
size_t
 
n
)

6 
size_t
 
∆e·
;

7 
ssize_t
 
ƒód
;

9 
∆e·
 = 
n
;

10 
∆e·
 > 0) {

11 i‡((
ƒód
 = 
	`ªad
(
fd
, 
±r
, 
∆e·
)) < 0) {

12 i‡(
∆e·
 =
n
)

16 } i‡(
ƒód
 == 0) {

19 
∆e·
 -
ƒód
;

20 
±r
 +
ƒód
;

22 (
n
 - 
∆e·
);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/recvfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

9 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

11 
cmsghdr
 *
	gcm±r
 = 
NULL
;

19 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

21 
√wfd
, 
ƒ
, 
°©us
;

22 *
±r
;

23 
buf
[
MAXLINE
];

24 
iovec
 
iov
[1];

25 
msghdr
 
msg
;

27 
°©us
 = -1;

29 
iov
[0].
iov_ba£
 = 
buf
;

30 
iov
[0].
iov_Àn
 = (
buf
);

31 
msg
.
msg_iov
 = 
iov
;

32 
msg
.
msg_iovÀn
 = 1;

33 
msg
.
msg_«me
 = 
NULL
;

34 
msg
.
msg_«mñí
 = 0;

35 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

37 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

38 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

39 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

40 
	`îr_sys
("recvmsgÉrror");

41 } i‡(
ƒ
 == 0) {

42 
	`îr_ªt
("connection closed by server");

51 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

52 i‡(*
±r
++ == 0) {

53 i‡(
±r
 !&
buf
[
ƒ
-1])

54 
	`îr_dump
("message formatÉrror");

55 
°©us
 = *
±r
 & 0xFF;

56 i‡(
°©us
 == 0) {

57 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

58 
	`îr_dump
("status = 0 butÇo fd");

59 
√wfd
 = *(*)
	`CMSG_DATA
(
cm±r
);

61 
√wfd
 = -
°©us
;

63 
ƒ
 -= 2;

66 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

68 i‡(
°©us
 >= 0)

69 (
√wfd
);

71 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/semaph.c

30 
	~"≠ue.h
"

31 
	~<sys/ùc.h
>

32 
	~<sys/£m.h
>

33 
	~<î∫o.h
>

35 
£m_›
(, );

36 
£m_¸óã
(
key_t
, );

37 
£m_›í
(
key_t
);

38 
£m_rm
();

39 
£m_˛o£
();

40 
£m_waô
();

41 
£m_sig«l
();

43 
	#BIGCOUNT
 10000

	)

49 
£mbuf
 
	g›_lock
[2] = {

51 2, 1, 
SEM_UNDO


56 
£mbuf
 
	g›_íd¸óã
[2] = {

57 1, -1, 
SEM_UNDO
,

60 2, -1, 
SEM_UNDO


63 
£mbuf
 
	g›_›í
[1] = {

64 1, -1, 
SEM_UNDO


67 
£mbuf
 
	g›_˛o£
[3] = {

69 2, 1, 
SEM_UNDO
,

70 1, 1, 
SEM_UNDO


73 
£mbuf
 
	g›_u∆ock
[1] = {

74 2, -1, 
SEM_UNDO


77 
£mbuf
 
	g›_›
[1] = {

78 0, 99, 
SEM_UNDO


90 
	$£m_¸óã
(
key_t
 
key
, 
öôvÆ
)

92 
id
, 
£mvÆ
;

93 
	u£mun
 {

94 
vÆ
;

95 
£mid_ds
 *
buf
;

96 
ush‹t
 *
¨øy
;

97 } 
£m˘l_¨g
;

99 i‡(
key
 =
IPC_PRIVATE
)

102 i‡(
key
 =(
key_t
) -1)

105 
agaö
:

106 i‡((
id
 = 
	`£mgë
(
key
, 3, 0666 | 
IPC_CREAT
)) < 0)

124 i‡(
	`£m›
(
id
, &
›_lock
[0], 2) < 0) {

125 i‡(
î∫o
 =
EINVAL
)

126 
agaö
;

127 
	`îr_sys
("can'tÜock");

135 i‡((
£mvÆ
 = 
	`£m˘l
(
id
, 1, 
GETVAL
, 0)) < 0)

136 
	`îr_sys
("can't GETVAL");

138 i‡(
£mvÆ
 == 0) {

146 
£m˘l_¨g
.
vÆ
 = 
öôvÆ
;

147 i‡(
	`£m˘l
(
id
, 0, 
SETVAL
, 
£m˘l_¨g
) < 0)

148 
	`îr_sys
("can SETVAL[0]");

150 
£m˘l_¨g
.
vÆ
 = 
BIGCOUNT
;

151 i‡(
	`£m˘l
(
id
, 1, 
SETVAL
, 
£m˘l_¨g
) < 0)

152 
	`îr_sys
("can SETVAL[1]");

159 i‡(
	`£m›
(
id
, &
›_íd¸óã
[0], 2) < 0)

160 
	`îr_sys
("can'tÉnd create");

162 (
id
);

163 
	}
}

175 
	$£m_›í
(
key_t
 
key
)

177 
id
;

179 i‡(
key
 =
IPC_PRIVATE
)

182 i‡(
key
 =(
key_t
) -1)

185 i‡((
id
 = 
	`£mgë
(
key
, 3, 0)) < 0)

193 i‡(
	`£m›
(
id
, &
›_›í
[0], 1) < 0)

194 
	`îr_sys
("can't open");

196 (
id
);

197 
	}
}

208 
	$£m_rm
(
id
)

210 i‡(
	`£m˘l
(
id
, 0, 
IPC_RMID
, 0) < 0)

211 
	`îr_sys
("can't IPC_RMID");

212 
	}
}

223 
	$£m_˛o£
(
id
)

225 
£mvÆ
;

232 i‡(
	`£m›
(
id
, &
›_˛o£
[0], 3) < 0)

233 
	`îr_sys
("can't semop");

243 i‡((
£mvÆ
 = 
	`£m˘l
(
id
, 1, 
GETVAL
, 0)) < 0)

244 
	`îr_sys
("can't GETVAL");

246 i‡(
£mvÆ
 > 
BIGCOUNT
)

247 
	`îr_dump
("sem[1] > BIGCOUNT");

248 i‡(
£mvÆ
 =
BIGCOUNT
)

249 
	`£m_rm
(
id
);

251 i‡(
	`£m›
(
id
, &
›_u∆ock
[0], 1) < 0)

252 
	`îr_sys
("can't unlock");

253 
	}
}

262 
	$£m_waô
(
id
)

264 
	`£m_›
(
id
, -1);

265 
	}
}

273 
	$£m_sig«l
(
id
)

275 
	`£m_›
(
id
, 1);

276 
	}
}

284 
	$£m_›
(
id
, 
vÆue
)

286 i‡((
›_›
[0].
£m_›
 = 
vÆue
) == 0)

287 
	`îr_sys
("can't have value == 0");

289 i‡(
	`£m›
(
id
, &
›_›
[0], 1) < 0)

290 
	`îr_sys
("sem_opÉrror");

291 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/senderr.c

1 
	~"≠ue.h
"

9 
	$£nd_îr
(
fd
, 
îrcode
, c⁄° *
msg
)

11 
n
;

13 i‡((
n
 = 
	`°æí
(
msg
)) > 0)

14 i‡(
	`wrôí
(
fd
, 
msg
, 
n
) !=Ç)

17 i‡(
îrcode
 >= 0)

18 
îrcode
 = -1;

20 i‡(
	`£nd_fd
(
fd
, 
îrcode
) < 0)

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/sendfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

8 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

10 
cmsghdr
 *
	gcm±r
 = 
NULL
;

17 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

19 
iovec
 
iov
[1];

20 
msghdr
 
msg
;

21 
buf
[2];

23 
iov
[0].
iov_ba£
 = 
buf
;

24 
iov
[0].
iov_Àn
 = 2;

25 
msg
.
msg_iov
 = 
iov
;

26 
msg
.
msg_iovÀn
 = 1;

27 
msg
.
msg_«me
 = 
NULL
;

28 
msg
.
msg_«mñí
 = 0;

29 i‡(
fd_to_£nd
 < 0) {

30 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

31 
msg
.
msg_c⁄åﬁÀn
 = 0;

32 
buf
[1] = -
fd_to_£nd
;

33 i‡(
buf
[1] == 0)

34 
buf
[1] = 1;

36 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

38 
cm±r
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

39 
cm±r
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

40 
cm±r
->
cmsg_Àn
 = 
CONTROLLEN
;

41 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

42 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

43 *(*)
	`CMSG_DATA
(
cm±r
Ë
fd_to_£nd
;

44 
buf
[1] = 0;

46 
buf
[0] = 0;

47 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

50 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/servaccept.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<time.h
>

5 
	~<î∫o.h
>

7 
	#STALE
 30

	)

16 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

18 
˛ifd
, 
Àn
, 
îr
, 
rvÆ
;

19 
time_t
 
°Æëime
;

20 
sockaddr_un
 
un
;

21 
°©
 
°©buf
;

23 
Àn
 = (
un
);

24 i‡((
˛ifd
 = 
	`ac˚±
(
li°ífd
, (
sockaddr
 *)&
un
, &
Àn
)) < 0)

28 
Àn
 -
	`off£tof
(
sockaddr_un
, 
sun_∑th
);

29 
un
.
sun_∑th
[
Àn
] = 0;

31 i‡(
	`°©
(
un
.
sun_∑th
, &
°©buf
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

35 #ifdef 
S_ISSOCK


36 i‡(
	`S_ISSOCK
(
°©buf
.
°_mode
) == 0) {

37 
rvÆ
 = -3;

38 
îrout
;

41 i‡((
°©buf
.
°_mode
 & (
S_IRWXG
 | 
S_IRWXO
)) ||

42 (
°©buf
.
°_mode
 & 
S_IRWXU
) != S_IRWXU) {

43 
rvÆ
 = -4;

44 
îrout
;

47 
°Æëime
 = 
	`time
(
NULL
Ë- 
STALE
;

48 i‡(
°©buf
.
°_©ime
 < 
°Æëime
 ||

49 
°©buf
.
°_˘ime
 < 
°Æëime
 ||

50 
°©buf
.
°_mtime
 < 
°Æëime
) {

51 
rvÆ
 = -5;

52 
îrout
;

55 i‡(
uid±r
 !
NULL
)

56 *
uid±r
 = 
°©buf
.
°_uid
;

57 
	`u∆ök
(
un
.
sun_∑th
);

58 (
˛ifd
);

60 
îrout
:

61 
îr
 = 
î∫o
;

62 
	`˛o£
(
˛ifd
);

63 
î∫o
 = 
îr
;

64 (
rvÆ
);

65 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/servlisten.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#QLEN
 10

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
fd
, 
Àn
, 
îr
, 
rvÆ
;

16 
sockaddr_un
 
un
;

19 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

22 
	`u∆ök
(
«me
);

25 
	`mem£t
(&
un
, 0, (un));

26 
un
.
sun_Ámûy
 = 
AF_UNIX
;

27 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

28 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

31 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

36 i‡(
	`li°í
(
fd
, 
QLEN
) < 0) {

37 
rvÆ
 = -3;

38 
îrout
;

40 (
fd
);

42 
îrout
:

43 
îr
 = 
î∫o
;

44 
	`˛o£
(
fd
);

45 
î∫o
 = 
îr
;

46 (
rvÆ
);

47 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/setfl.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$£t_Ê
(
fd
, 
Êags
)

7 
vÆ
;

9 i‡((
vÆ
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0)

10 
	`îr_sys
("fcntl F_GETFLÉrror");

12 
vÆ
 |
Êags
;

14 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
vÆ
) < 0)

15 
	`îr_sys
("fcntl F_SETFLÉrror");

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/signal.c

1 
	~"≠ue.h
"

4 
Sigfunc
 *

5 
	$sig«l
(
signo
, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

10 
	`sigem±y£t
(&
a˘
.
ß_mask
);

11 
a˘
.
ß_Êags
 = 0;

12 i‡(
signo
 =
SIGALRM
) {

13 #ifdef 
SA_INTERRUPT


14 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

17 #ifdef 
SA_RESTART


18 
a˘
.
ß_Êags
 |
SA_RESTART
;

21 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

22 (
SIG_ERR
);

23 (
ﬂ˘
.
ß_h™dÀr
);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/signalintr.c

1 
	~"≠ue.h
"

3 
Sigfunc
 *

4 
	$sig«l_öå
(
signo
, 
Sigfunc
 *
func
)

6 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

8 
a˘
.
ß_h™dÀr
 = 
func
;

9 
	`sigem±y£t
(&
a˘
.
ß_mask
);

10 
a˘
.
ß_Êags
 = 0;

11 #ifdef 
SA_INTERRUPT


12 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

14 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

15 (
SIG_ERR
);

16 (
ﬂ˘
.
ß_h™dÀr
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/sleep.c

1 
	~"≠ue.h
"

4 
	$sig_Ærm
(
signo
)

7 
	}
}

10 
	$¶ìp
(
n£cs
)

12 
siga˘i⁄
 
√wa˘
, 
ﬁda˘
;

13 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
su•mask
;

14 
un¶ït
;

17 
√wa˘
.
ß_h™dÀr
 = 
sig_Ærm
;

18 
	`sigem±y£t
(&
√wa˘
.
ß_mask
);

19 
√wa˘
.
ß_Êags
 = 0;

20 
	`siga˘i⁄
(
SIGALRM
, &
√wa˘
, &
ﬁda˘
);

23 
	`sigem±y£t
(&
√wmask
);

24 
	`sigadd£t
(&
√wmask
, 
SIGALRM
);

25 
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
);

27 
	`Æ¨m
(
n£cs
);

29 
su•mask
 = 
ﬁdmask
;

30 
	`sigdñ£t
(&
su•mask
, 
SIGALRM
);

31 
	`sigsu•íd
(&
su•mask
);

35 
un¶ït
 = 
	`Æ¨m
(0);

36 
	`siga˘i⁄
(
SIGALRM
, &
ﬁda˘
, 
NULL
);

39 
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
);

40 (
un¶ït
);

41 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/sleepus.c

1 
	~"≠ue.h
"

2 
	~<sys/time.h
>

5 
	$¶ìp_us
(
nu£cs
)

7 
timevÆ
 
tvÆ
;

9 
tvÆ
.
tv_£c
 = 
nu£cs
 / 1000000;

10 
tvÆ
.
tv_u£c
 = 
nu£cs
 % 1000000;

11 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tvÆ
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/spipe.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

9 
	$s_pùe
(
fd
[2])

11 (
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
fd
));

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/tellwait.c

1 
	~"≠ue.h
"

3 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

4 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

7 
	$sig_u§
(
signo
)

9 
sigÊag
 = 1;

10 
	}
}

13 
	$TELL_WAIT
()

15 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

16 
	`îr_sys
("signal(SIGUSR1)Érror");

17 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

18 
	`îr_sys
("signal(SIGUSR2)Érror");

19 
	`sigem±y£t
(&
zîomask
);

20 
	`sigem±y£t
(&
√wmask
);

21 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

22 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

27 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

28 
	`îr_sys
("SIG_BLOCKÉrror");

29 
	}
}

32 
	$TELL_PARENT
(
pid_t
 
pid
)

34 
	`kûl
(
pid
, 
SIGUSR2
);

35 
	}
}

38 
	$WAIT_PARENT
()

40 
sigÊag
 == 0)

41 
	`sigsu•íd
(&
zîomask
);

42 
sigÊag
 = 0;

47 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

48 
	`îr_sys
("SIG_SETMASKÉrror");

49 
	}
}

52 
	$TELL_CHILD
(
pid_t
 
pid
)

54 
	`kûl
(
pid
, 
SIGUSR1
);

55 
	}
}

58 
	$WAIT_CHILD
()

60 
sigÊag
 == 0)

61 
	`sigsu•íd
(&
zîomask
);

62 
sigÊag
 = 0;

67 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

68 
	`îr_sys
("SIG_SETMASKÉrror");

69 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/ttymodes.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 
	~<î∫o.h
>

5 
ãrmios
 
	gßve_ãrmios
;

6 
	gâyßvefd
 = -1;

7 íum { 
	mRESET
, 
	mRAW
, 
	mCBREAK
 } 
	gây°©e
 = 
RESET
;

10 
	$ây_cbªak
(
fd
)

12 
îr
;

13 
ãrmios
 
buf
;

15 i‡(
ây°©e
 !
RESET
) {

16 
î∫o
 = 
EINVAL
;

19 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0)

21 
ßve_ãrmios
 = 
buf
;

26 
buf
.
c_lÊag
 &~(
ECHO
 | 
ICANON
);

31 
buf
.
c_cc
[
VMIN
] = 1;

32 
buf
.
c_cc
[
VTIME
] = 0;

33 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
buf
) < 0)

40 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0) {

41 
îr
 = 
î∫o
;

42 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

43 
î∫o
 = 
îr
;

46 i‡((
buf
.
c_lÊag
 & (
ECHO
 | 
ICANON
)Ë|| buf.
c_cc
[
VMIN
] != 1 ||

47 
buf
.
c_cc
[
VTIME
] != 0) {

52 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

53 
î∫o
 = 
EINVAL
;

57 
ây°©e
 = 
CBREAK
;

58 
âyßvefd
 = 
fd
;

60 
	}
}

63 
	$ây_øw
(
fd
)

65 
îr
;

66 
ãrmios
 
buf
;

68 i‡(
ây°©e
 !
RESET
) {

69 
î∫o
 = 
EINVAL
;

72 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0)

74 
ßve_ãrmios
 = 
buf
;

80 
buf
.
c_lÊag
 &~(
ECHO
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
);

87 
buf
.
c_iÊag
 &~(
BRKINT
 | 
ICRNL
 | 
INPCK
 | 
ISTRIP
 | 
IXON
);

92 
buf
.
c_cÊag
 &~(
CSIZE
 | 
PARENB
);

97 
buf
.
c_cÊag
 |
CSjob
;

102 
buf
.
c_oÊag
 &~(
OPOST
);

107 
buf
.
c_cc
[
VMIN
] = 1;

108 
buf
.
c_cc
[
VTIME
] = 0;

109 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
buf
) < 0)

116 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0) {

117 
îr
 = 
î∫o
;

118 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

119 
î∫o
 = 
îr
;

122 i‡((
buf
.
c_lÊag
 & (
ECHO
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
)) ||

123 (
buf
.
c_iÊag
 & (
BRKINT
 | 
ICRNL
 | 
INPCK
 | 
ISTRIP
 | 
IXON
)) ||

124 (
buf
.
c_cÊag
 & (
CSIZE
 | 
PARENB
 | 
CSjob
)) != CSjob ||

125 (
buf
.
c_oÊag
 & 
OPOST
Ë|| buf.
c_cc
[
VMIN
] != 1 ||

126 
buf
.
c_cc
[
VTIME
] != 0) {

131 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

132 
î∫o
 = 
EINVAL
;

136 
ây°©e
 = 
RAW
;

137 
âyßvefd
 = 
fd
;

139 
	}
}

142 
	$ây_ª£t
(
fd
)

144 i‡(
ây°©e
 =
RESET
)

146 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
) < 0)

148 
ây°©e
 = 
RESET
;

150 
	}
}

153 
	$ây_©exô
()

155 i‡(
âyßvefd
 >= 0)

156 
	`ây_ª£t
(
âyßvefd
);

157 
	}
}

159 
ãrmios
 *

160 
	$ây_ãrmios
()

162 (&
ßve_ãrmios
);

163 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lib/writen.c

1 
	~"≠ue.h
"

3 
ssize_t


4 
	$wrôí
(
fd
, c⁄° *
±r
, 
size_t
 
n
)

6 
size_t
 
∆e·
;

7 
ssize_t
 
nwrôãn
;

9 
∆e·
 = 
n
;

10 
∆e·
 > 0) {

11 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
±r
, 
∆e·
)) < 0) {

12 i‡(
∆e·
 =
n
)

16 } i‡(
nwrôãn
 == 0) {

19 
∆e·
 -
nwrôãn
;

20 
±r
 +
nwrôãn
;

22 (
n
 - 
∆e·
);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lock/deadlock.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$lockabyã
(c⁄° *
«me
, 
fd
, 
off_t
 
off£t
)

7 i‡(
	`wrôew_lock
(
fd
, 
off£t
, 
SEEK_SET
, 1) < 0)

8 
	`îr_sys
("%s: wrôew_lockÉº‹", 
«me
);

9 
	`¥ötf
("%s: gŸÅhêlock, byã %ld\n", 
«me
, 
off£t
);

10 
	}
}

13 
	$maö
()

15 
fd
;

16 
pid_t
 
pid
;

21 i‡((
fd
 = 
	`¸ót
("ãm∂ock", 
FILE_MODE
)) < 0)

22 
	`îr_sys
("creatÉrror");

23 i‡(
	`wrôe
(
fd
, "ab", 2) != 2)

24 
	`îr_sys
("writeÉrror");

26 
	`TELL_WAIT
();

27 i‡((
pid
 = 
	`f‹k
()) < 0) {

28 
	`îr_sys
("forkÉrror");

29 } i‡(
pid
 == 0) {

30 
	`lockabyã
("chûd", 
fd
, 0);

31 
	`TELL_PARENT
(
	`gëµid
());

32 
	`WAIT_PARENT
();

33 
	`lockabyã
("chûd", 
fd
, 1);

35 
	`lockabyã
("∑ª¡", 
fd
, 1);

36 
	`TELL_CHILD
(
pid
);

37 
	`WAIT_CHILD
();

38 
	`lockabyã
("∑ª¡", 
fd
, 0);

40 
	`exô
(0);

41 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/lock/mandatory.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/waô.h
>

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
fd
;

10 
pid_t
 
pid
;

11 
buf
[5];

12 
°©
 
°©buf
;

14 i‡(
¨gc
 != 2) {

15 
	`Ârötf
(
°dîr
, "ußge: %†fûíame\n", 
¨gv
[0]);

16 
	`exô
(1);

18 i‡((
fd
 = 
	`›í
(
¨gv
[1], 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 
FILE_MODE
)) < 0)

19 
	`îr_sys
("openÉrror");

20 i‡(
	`wrôe
(
fd
, "abcdef", 6) != 6)

21 
	`îr_sys
("writeÉrror");

24 i‡(
	`f°©
(
fd
, &
°©buf
) < 0)

25 
	`îr_sys
("fstatÉrror");

26 i‡(
	`fchmod
(
fd
, (
°©buf
.
°_mode
 & ~
S_IXGRP
Ë| 
S_ISGID
) < 0)

27 
	`îr_sys
("fchmodÉrror");

29 
	`TELL_WAIT
();

31 i‡((
pid
 = 
	`f‹k
()) < 0) {

32 
	`îr_sys
("forkÉrror");

33 } i‡(
pid
 > 0) {

35 i‡(
	`wrôe_lock
(
fd
, 0, 
SEEK_SET
, 0) < 0)

36 
	`îr_sys
("write_lockÉrror");

38 
	`TELL_CHILD
(
pid
);

40 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

41 
	`îr_sys
("waitpidÉrror");

43 
	`WAIT_PARENT
();

45 
	`£t_Ê
(
fd
, 
O_NONBLOCK
);

48 i‡(
	`ªad_lock
(
fd
, 0, 
SEEK_SET
, 0) != -1)

49 
	`îr_sys
("child:Ñead_lock succeeded");

50 
	`¥ötf
("read_lock ofálready-lockedÑegionÑeturns %d\n",

51 
î∫o
);

54 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1)

55 
	`îr_sys
("lseekÉrror");

56 i‡(
	`ªad
(
fd
, 
buf
, 2) < 0)

57 
	`îr_ªt
("read failed (mandatoryÜocking works)");

59 
	`¥ötf
("read OK (no mandatoryÜocking), buf = %2.2s\n",

60 
buf
);

62 
	`exô
(0);

63 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/mycat/fgetsfputs.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
buf
[
MAXLINE
];

8 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
)

9 i‡(
	`Âuts
(
buf
, 
°dout
Ë=
EOF
)

10 
	`îr_sys
("outputÉrror");

12 i‡(
	`„º‹
(
°dö
))

13 
	`îr_sys
("inputÉrror");

15 
	`exô
(0);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/mycat/getcputc.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
c
;

8 (
c
 = 
	`gëc
(
°dö
)Ë!
EOF
)

9 i‡(
	`putc
(
c
, 
°dout
Ë=
EOF
)

10 
	`îr_sys
("outputÉrror");

12 i‡(
	`„º‹
(
°dö
))

13 
	`îr_sys
("inputÉrror");

15 
	`exô
(0);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/mycat/mycat.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 4096

	)

6 
	$maö
()

8 
n
;

9 
buf
[
BUFFSIZE
];

11 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) > 0)

12 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

13 
	`îr_sys
("writeÉrror");

15 i‡(
n
 < 0)

16 
	`îr_sys
("readÉrror");

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/open.fe/main.c

1 
	~"›í.h
"

2 
	~<f˙é.h
>

4 
	#BUFFSIZE
 
job192


	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
n
, 
fd
;

10 
buf
[
BUFFSIZE
], 
löe
[
MAXLINE
];

13 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

14 i‡(
löe
[
	`°æí
(line) - 1] == '\n')

15 
löe
[
	`°æí
(line) - 1] = 0;

18 i‡((
fd
 = 
	`cs›í
(
löe
, 
O_RDONLY
)) < 0)

22 (
n
 = 
	`ªad
(
fd
, 
buf
, 
BUFFSIZE
)) > 0)

23 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

24 
	`îr_sys
("writeÉrror");

25 i‡(
n
 < 0)

26 
	`îr_sys
("readÉrror");

27 
	`˛o£
(
fd
);

30 
	`exô
(0);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/open.fe/open.c

1 
	~"›í.h
"

2 
	~<sys/uio.h
>

9 
	$cs›í
(*
«me
, 
oÊag
)

11 
pid_t
 
pid
;

12 
Àn
;

13 
buf
[10];

14 
iovec
 
iov
[3];

15 
fd
[2] = { -1, -1 };

17 i‡(
fd
[0] < 0) {

18 i‡(
	`s_pùe
(
fd
) < 0)

19 
	`îr_sys
("s_pipeÉrror");

20 i‡((
pid
 = 
	`f‹k
()) < 0) {

21 
	`îr_sys
("forkÉrror");

22 } i‡(
pid
 == 0) {

23 
	`˛o£
(
fd
[0]);

24 i‡(
fd
[1] !
STDIN_FILENO
 &&

25 
	`dup2
(
fd
[1], 
STDIN_FILENO
) != STDIN_FILENO)

26 
	`îr_sys
("dup2ÉrrorÅo stdin");

27 i‡(
fd
[1] !
STDOUT_FILENO
 &&

28 
	`dup2
(
fd
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

29 
	`îr_sys
("dup2ÉrrorÅo stdout");

30 i‡(
	`exe˛
("./opend", "opend", (*)0) < 0)

31 
	`îr_sys
("execlÉrror");

33 
	`˛o£
(
fd
[1]);

35 
	`•rötf
(
buf
, " %d", 
oÊag
);

36 
iov
[0].
iov_ba£
 = 
CL_OPEN
 " ";

37 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_OPEN
) + 1;

38 
iov
[1].
iov_ba£
 = 
«me
;

39 
iov
[1].
iov_Àn
 = 
	`°æí
(
«me
);

40 
iov
[2].
iov_ba£
 = 
buf
;

41 
iov
[2].
iov_Àn
 = 
	`°æí
(
buf
) + 1;

42 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len + iov[2].iov_len;

43 i‡(
	`wrôev
(
fd
[0], &
iov
[0], 3Ë!
Àn
)

44 
	`îr_sys
("writevÉrror");

47 (
	`ªcv_fd
(
fd
[0], 
wrôe
));

48 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/open.fe/open.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

6 
cs›í
(*, );

	@/root/grocery-shop/language/gcc/src/apue/open/open.c

1 
	~"›í.h
"

2 
	~<sys/uio.h
>

9 
	$cs›í
(*
«me
, 
oÊag
)

11 
Àn
;

12 
buf
[10];

13 
iovec
 
iov
[3];

14 
csfd
 = -1;

16 i‡(
csfd
 < 0) {

17 i‡((
csfd
 = 
	`˛i_c⁄n
(
CS_OPEN
)) < 0)

18 
	`îr_sys
("cli_connÉrror");

21 
	`•rötf
(
buf
, " %d", 
oÊag
);

22 
iov
[0].
iov_ba£
 = 
CL_OPEN
 " ";

23 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_OPEN
) + 1;

24 
iov
[1].
iov_ba£
 = 
«me
;

25 
iov
[1].
iov_Àn
 = 
	`°æí
(
«me
);

26 
iov
[2].
iov_ba£
 = 
buf
;

27 
iov
[2].
iov_Àn
 = 
	`°æí
(
buf
) + 1;

28 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len + iov[2].iov_len;

29 i‡(
	`wrôev
(
csfd
, &
iov
[0], 3Ë!
Àn
)

30 
	`îr_sys
("writevÉrror");

33 (
	`ªcv_fd
(
csfd
, 
wrôe
));

34 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/open/open.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

5 
	#CS_OPEN
 "/home/ßr/›íd"

	)

7 
cs›í
(*, );

	@/root/grocery-shop/language/gcc/src/apue/opend.fe/cliargs.c

1 
	~"›íd.h
"

9 
	$˛i_¨gs
(
¨gc
, **
¨gv
)

11 i‡(
¨gc
 !3 || 
	`°rcmp
(
¨gv
[0], 
CL_OPEN
) != 0) {

12 
	`°r˝y
(
îrmsg
, "usage: <pathname> <oflag>\n");

15 
∑th«me
 = 
¨gv
[1];

16 
oÊag
 = 
	`©oi
(
¨gv
[2]);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend.fe/main.c

1 
	~"›íd.h
"

3 
	gîrmsg
[
MAXLINE
];

4 
	goÊag
;

5 *
	g∑th«me
;

8 
	$maö
()

10 
ƒód
;

11 
buf
[
MAXLINE
];

14 i‡((
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
MAXLINE
)) < 0)

15 
	`îr_sys
("readÉrror on streamÖipe");

16 i‡(
ƒód
 == 0)

18 
	`ªque°
(
buf
, 
ƒód
, 
STDOUT_FILENO
);

20 
	`exô
(0);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend.fe/opend.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

6 
îrmsg
[];

7 
oÊag
;

8 *
∑th«me
;

10 
˛i_¨gs
(, **);

11 
ªque°
(*, , );

	@/root/grocery-shop/language/gcc/src/apue/opend.fe/request.c

1 
	~"›íd.h
"

2 
	~<f˙é.h
>

5 
	$ªque°
(*
buf
, 
ƒód
, 
fd
)

7 
√wfd
;

9 i‡(
buf
[
ƒód
-1] != 0) {

10 
	`•rötf
(
îrmsg
, "requestÇotÇullÅerminated: %*.*s\n",

11 
ƒód
,Çªad, 
buf
);

12 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

15 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0) {

16 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

19 i‡((
√wfd
 = 
	`›í
(
∑th«me
, 
oÊag
)) < 0) {

20 
	`•rötf
(
îrmsg
, "ˇn'à›í %s: %s\n", 
∑th«me
,

21 
	`°ªº‹
(
î∫o
));

22 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

25 i‡(
	`£nd_fd
(
fd
, 
√wfd
) < 0)

26 
	`îr_sys
("send_fdÉrror");

27 
	`˛o£
(
√wfd
);

28 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend/client.c

1 
	~"›íd.h
"

3 
	#NALLOC
 10

	)

6 
	$˛õ¡_Æloc
()

8 
i
;

10 i‡(
˛õ¡
 =
NULL
)

11 
˛õ¡
 = 
	`mÆloc
(
NALLOC
 * (
Clõ¡
));

13 
˛õ¡
 = 
	`ªÆloc
(˛õ¡, (
˛õ¡_size
+
NALLOC
)*(
Clõ¡
));

14 i‡(
˛õ¡
 =
NULL
)

15 
	`îr_sys
("can'tálloc for clientárray");

18 
i
 = 
˛õ¡_size
; i < clõ¡_sizê+ 
NALLOC
; i++)

19 
˛õ¡
[
i
].
fd
 = -1;

21 
˛õ¡_size
 +
NALLOC
;

22 
	}
}

28 
	$˛õ¡_add
(
fd
, 
uid_t
 
uid
)

30 
i
;

32 i‡(
˛õ¡
 =
NULL
)

33 
	`˛õ¡_Æloc
();

34 
agaö
:

35 
i
 = 0; i < 
˛õ¡_size
; i++) {

36 i‡(
˛õ¡
[
i
].
fd
 == -1) {

37 
˛õ¡
[
i
].
fd
 = fd;

38 
˛õ¡
[
i
].
uid
 = uid;

39 (
i
);

44 
	`˛õ¡_Æloc
();

45 
agaö
;

46 
	}
}

52 
	$˛õ¡_dñ
(
fd
)

54 
i
;

56 
i
 = 0; i < 
˛õ¡_size
; i++) {

57 i‡(
˛õ¡
[
i
].
fd
 == fd) {

58 
˛õ¡
[
i
].
fd
 = -1;

62 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹ fd %d", 
fd
);

63 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend/loop.poll.c

1 
	~"›íd.h
"

2 
	~<pﬁl.h
>

3 #i‡!
deföed
(
BSD
Ë&& !deföed(
MACOS
)

4 
	~<°r›ts.h
>

8 
	$lo›
()

10 
i
, 
maxi
, 
li°ífd
, 
˛ifd
, 
ƒód
;

11 
buf
[
MAXLINE
];

12 
uid_t
 
uid
;

13 
pﬁlfd
 *pollfd;

15 i‡((
pﬁlfd
 = 
	`mÆloc
(
	`›í_max
(Ë* (pﬁlfd))Ë=
NULL
)

16 
	`îr_sys
("mallocÉrror");

19 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_OPEN
)) < 0)

20 
	`log_sys
("serv_listenÉrror");

21 
	`˛õ¡_add
(
li°ífd
, 0);

22 
pﬁlfd
[0].
fd
 = 
li°ífd
;

23 
pﬁlfd
[0].
evíts
 = 
POLLIN
;

24 
maxi
 = 0;

27 i‡(
	`pﬁl
(
pﬁlfd
, 
maxi
 + 1, -1) < 0)

28 
	`log_sys
("pollÉrror");

30 i‡(
pﬁlfd
[0].
ªvíts
 & 
POLLIN
) {

32 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

33 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

34 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

35 
pﬁlfd
[
i
].
fd
 = 
˛ifd
;

36 
pﬁlfd
[
i
].
evíts
 = 
POLLIN
;

37 i‡(
i
 > 
maxi
)

38 
maxi
 = 
i
;

39 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

42 
i
 = 1; i <
maxi
; i++) {

43 i‡((
˛ifd
 = 
˛õ¡
[
i
].
fd
) < 0)

45 i‡(
pﬁlfd
[
i
].
ªvíts
 & 
POLLHUP
) {

46 
hungup
;

47 } i‡(
pﬁlfd
[
i
].
ªvíts
 & 
POLLIN
) {

49 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

50 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

51 } i‡(
ƒód
 == 0) {

52 
hungup
:

53 
	`log_msg
("closed: uid %d, fd %d",

54 
˛õ¡
[
i
].
uid
, 
˛ifd
);

55 
	`˛õ¡_dñ
(
˛ifd
);

56 
pﬁlfd
[
i
].
fd
 = -1;

57 
	`˛o£
(
˛ifd
);

59 
	`ªque°
(
buf
, 
ƒód
, 
˛ifd
, 
˛õ¡
[
i
].
uid
);

64 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend/loop.select.c

1 
	~"›íd.h
"

2 
	~<sys/time.h
>

3 
	~<sys/£À˘.h
>

6 
	$lo›
()

8 
i
, 
n
, 
maxfd
, 
maxi
, 
li°ífd
, 
˛ifd
, 
ƒód
;

9 
buf
[
MAXLINE
];

10 
uid_t
 
uid
;

11 
fd_£t
 
r£t
, 
Æl£t
;

13 
	`FD_ZERO
(&
Æl£t
);

16 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_OPEN
)) < 0)

17 
	`log_sys
("serv_listenÉrror");

18 
	`FD_SET
(
li°ífd
, &
Æl£t
);

19 
maxfd
 = 
li°ífd
;

20 
maxi
 = -1;

23 
r£t
 = 
Æl£t
;

24 i‡((
n
 = 
	`£À˘
(
maxfd
 + 1, &
r£t
, 
NULL
, NULL, NULL)) < 0)

25 
	`log_sys
("selectÉrror");

27 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

29 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

30 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

31 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

32 
	`FD_SET
(
˛ifd
, &
Æl£t
);

33 i‡(
˛ifd
 > 
maxfd
)

34 
maxfd
 = 
˛ifd
;

35 i‡(
i
 > 
maxi
)

36 
maxi
 = 
i
;

37 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

41 
i
 = 0; i <
maxi
; i++) {

42 i‡((
˛ifd
 = 
˛õ¡
[
i
].
fd
) < 0)

44 i‡(
	`FD_ISSET
(
˛ifd
, &
r£t
)) {

46 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

47 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

48 } i‡(
ƒód
 == 0) {

49 
	`log_msg
("closed: uid %d, fd %d",

50 
˛õ¡
[
i
].
uid
, 
˛ifd
);

51 
	`˛õ¡_dñ
(
˛ifd
);

52 
	`FD_CLR
(
˛ifd
, &
Æl£t
);

53 
	`˛o£
(
˛ifd
);

55 
	`ªque°
(
buf
, 
ƒód
, 
˛ifd
, 
˛õ¡
[
i
].
uid
);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend/main.c

1 
	~"›íd.h
"

2 
	~<sy¶og.h
>

4 
	gdebug
, 
	goÊag
, 
	g˛õ¡_size
, 
	glog_to_°dîr
;

5 
	gîrmsg
[
MAXLINE
];

6 *
	g∑th«me
;

7 
Clõ¡
 *
	g˛õ¡
 = 
NULL
;

10 
	$maö
(
¨gc
, *
¨gv
[])

12 
c
;

14 
	`log_›í
("›í.£rv", 
LOG_PID
, 
LOG_USER
);

16 
›ãº
 = 0;

17 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d")Ë!
EOF
) {

18 
c
) {

20 
debug
 = 
log_to_°dîr
 = 1;

24 
	`îr_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

28 i‡(
debug
 == 0)

29 
	`d´m⁄ize
("opend");

31 
	`lo›
();

32 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/opend/opend.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CS_OPEN
 "/home/ßr/›íd"

	)

5 
	#CL_OPEN
 "›í"

	)

7 
debug
;

8 
îrmsg
[];

9 
oÊag
;

10 *
∑th«me
;

13 
	mfd
;

14 
uid_t
 
	muid
;

15 } 
	tClõ¡
;

17 
Clõ¡
 *
˛õ¡
;

18 
˛õ¡_size
;

20 
˛i_¨gs
(, **);

21 
˛õ¡_add
(, 
uid_t
);

22 
˛õ¡_dñ
();

23 
lo›
();

24 
ªque°
(*, , , 
uid_t
);

	@/root/grocery-shop/language/gcc/src/apue/opend/request.c

1 
	~"›íd.h
"

2 
	~<f˙é.h
>

5 
	$ªque°
(*
buf
, 
ƒód
, 
˛ifd
, 
uid_t
 
uid
)

7 
√wfd
;

9 i‡(
buf
[
ƒód
-1] != 0) {

10 
	`•rötf
(
îrmsg
,

12 
uid
, 
ƒód
,Çªad, 
buf
);

13 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

16 
	`log_msg
("ªque°: %s, from uid %d", 
buf
, 
uid
);

19 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0) {

20 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

21 
	`log_msg
(
îrmsg
);

25 i‡((
√wfd
 = 
	`›í
(
∑th«me
, 
oÊag
)) < 0) {

26 
	`•rötf
(
îrmsg
, "can't open %s: %s\n",

27 
∑th«me
, 
	`°ªº‹
(
î∫o
));

28 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

29 
	`log_msg
(
îrmsg
);

34 i‡(
	`£nd_fd
(
˛ifd
, 
√wfd
) < 0)

35 
	`log_sys
("send_fdÉrror");

36 
	`log_msg
("£¡ fd %d ovî fd %d f‹ %s", 
√wfd
, 
˛ifd
, 
∑th«me
);

37 
	`˛o£
(
√wfd
);

38 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/echoall.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

7 **
±r
;

8 **
ívú⁄
;

10 
i
 = 0; i < 
¨gc
; i++)

11 
	`¥ötf
("¨gv[%d]: %s\n", 
i
, 
¨gv
[i]);

13 
±r
 = 
ívú⁄
; *ptr != 0;Ötr++)

14 
	`¥ötf
("%s\n", *
±r
);

16 
	`exô
(0);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/echoarg.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

8 
i
 = 0; i < 
¨gc
; i++)

9 
	`¥ötf
("¨gv[%d]: %s\n", 
i
, 
¨gv
[i]);

10 
	`exô
(0);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/exec1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 *
	gív_öô
[] = { "USER=unknown", "PATH=/tmp", 
NULL
 };

7 
	$maö
()

9 
pid_t
 
pid
;

11 i‡((
pid
 = 
	`f‹k
()) < 0) {

12 
	`îr_sys
("forkÉrror");

13 } i‡(
pid
 == 0) {

14 i‡(
	`exe˛e
("/home/sar/bin/echoall", "echoall", "myarg1",

15 "MY ARG2", (*)0, 
ív_öô
) < 0)

16 
	`îr_sys
("execleÉrror");

19 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

20 
	`îr_sys
("waitÉrror");

22 i‡((
pid
 = 
	`f‹k
()) < 0) {

23 
	`îr_sys
("forkÉrror");

24 } i‡(
pid
 == 0) {

25 i‡(
	`exe˛p
("echoall", "echoall", "only 1árg", (*)0) < 0)

26 
	`îr_sys
("execlpÉrror");

29 
	`exô
(0);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/exec2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

9 i‡((
pid
 = 
	`f‹k
()) < 0) {

10 
	`îr_sys
("forkÉrror");

11 } i‡(
pid
 == 0) {

12 i‡(
	`exe˛
("/home/sar/bin/testinterp",

14 
	`îr_sys
("execlÉrror");

16 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

17 
	`îr_sys
("waitpidÉrror");

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/fork1.c

1 
	~"≠ue.h
"

3 
	gglob
 = 6;

4 
	gbuf
[] = "a writeÅo stdout\n";

7 
	$maö
()

9 
v¨
;

10 
pid_t
 
pid
;

12 
v¨
 = 
jobjob
;

13 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, (buf)-1) != (buf)-1)

14 
	`îr_sys
("writeÉrror");

15 
	`¥ötf
("before fork\n");

17 i‡((
pid
 = 
	`f‹k
()) < 0) {

18 
	`îr_sys
("forkÉrror");

19 } i‡(
pid
 == 0) {

20 
glob
++;

21 
v¨
++;

23 
	`¶ìp
(2);

26 
	`¥ötf
("pid = %d, glob = %d, v¨ = %d\n", 
	`gëpid
(), 
glob
, 
v¨
);

27 
	`exô
(0);

28 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/fork2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

9 i‡((
pid
 = 
	`f‹k
()) < 0) {

10 
	`îr_sys
("forkÉrror");

11 } i‡(
pid
 == 0) {

12 i‡((
pid
 = 
	`f‹k
()) < 0)

13 
	`îr_sys
("forkÉrror");

14 i‡(
pid
 > 0)

15 
	`exô
(0);

23 
	`¶ìp
(2);

24 
	`¥ötf
("£c⁄d chûd,Ö¨íàpid = %d\n", 
	`gëµid
());

25 
	`exô
(0);

28 i‡(
	`waôpid
(
pid
, 
NULL
, 0) !=Öid)

29 
	`îr_sys
("waitpidÉrror");

35 
	`exô
(0);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/pracct.c

1 
	~"≠ue.h
"

2 
	~<sys/ac˘.h
>

4 #ifde‡
HAS_SA_STAT


5 
	#FMT
 "%-*.*†É = %6ld, ch¨†%7ld, sèà%3u: %¯%¯%¯%c\n"

	)

7 
	#FMT
 "%-*.*†É = %6ld, ch¨†%7ld, %¯%¯%¯%c\n"

	)

9 #i‚de‡
HAS_ACORE


10 
	#ACORE
 0

	)

12 #i‚de‡
HAS_AXSIG


13 
	#AXSIG
 0

	)

17 
	$com±2ul⁄g
(
comp_t
 
com±ime
)

19 
vÆ
;

20 
exp
;

22 
vÆ
 = 
com±ime
 & 0x1fff;

23 
exp
 = (
com±ime
 >> 13) & 7;

24 
exp
-- > 0)

25 
vÆ
 *
job
;

26 (
vÆ
);

27 
	}
}

29 
	$maö
(
¨gc
, *
¨gv
[])

31 
ac˘
 
acd©a
;

32 
FILE
 *
Â
;

34 i‡(
¨gc
 != 2)

35 
	`îr_quô
("usage:Öracct filename");

36 i‡((
Â
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

37 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

38 
	`‰ód
(&
acd©a
, ◊cd©a), 1, 
Â
) == 1) {

39 
	`¥ötf
(
FMT
, ()(
acd©a
.
ac_comm
),

40 ()(
acd©a
.
ac_comm
),ácdata.ac_comm,

41 
	`com±2ul⁄g
(
acd©a
.
ac_ëime
), com±2ul⁄g◊cd©a.
ac_io
),

42 #ifde‡
HAS_SA_STAT


43 (Ë
acd©a
.
ac_°©
,

45 
acd©a
.
ac_Êag
 & 
ACORE
 ? 'D' : ' ',

46 
acd©a
.
ac_Êag
 & 
AXSIG
 ? 'X' : ' ',

47 
acd©a
.
ac_Êag
 & 
AFORK
 ? 'F' : ' ',

48 
acd©a
.
ac_Êag
 & 
ASU
 ? 'S' : ' ');

50 i‡(
	`„º‹
(
Â
))

51 
	`îr_sys
("readÉrror");

52 
	`exô
(0);

53 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/pruids.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("ªÆ uid = %d,Éf„˘ivêuid = %d\n", 
	`gëuid
(), 
	`gëeuid
());

7 
	`exô
(0);

8 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/shell1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
buf
[
MAXLINE
];

8 
pid_t
 
pid
;

9 
°©us
;

11 
	`¥ötf
("%% ");

12 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

13 i‡(
buf
[
	`°æí
(buf) - 1] == '\n')

14 
buf
[
	`°æí
(buf) - 1] = 0;

16 i‡((
pid
 = 
	`f‹k
()) < 0) {

17 
	`îr_sys
("forkÉrror");

18 } i‡(
pid
 == 0) {

19 
	`exe˛p
(
buf
, buf, (*)0);

20 
	`îr_ªt
("couldn'àexecuã: %s", 
buf
);

21 
	`exô
(127);

25 i‡((
pid
 = 
	`waôpid
’id, &
°©us
, 0)) < 0)

26 
	`îr_sys
("waitpidÉrror");

27 
	`¥ötf
("%% ");

29 
	`exô
(0);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/shell2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
sig_öt
();

7 
	$maö
()

9 
buf
[
MAXLINE
];

10 
pid_t
 
pid
;

11 
°©us
;

13 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

14 
	`îr_sys
("signalÉrror");

16 
	`¥ötf
("%% ");

17 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

18 i‡(
buf
[
	`°æí
(buf) - 1] == '\n')

19 
buf
[
	`°æí
(buf) - 1] = 0;

21 i‡((
pid
 = 
	`f‹k
()) < 0) {

22 
	`îr_sys
("forkÉrror");

23 } i‡(
pid
 == 0) {

24 
	`exe˛p
(
buf
, buf, (*)0);

25 
	`îr_ªt
("couldn'àexecuã: %s", 
buf
);

26 
	`exô
(127);

30 i‡((
pid
 = 
	`waôpid
’id, &
°©us
, 0)) < 0)

31 
	`îr_sys
("waitpidÉrror");

32 
	`¥ötf
("%% ");

34 
	`exô
(0);

35 
	}
}

38 
	$sig_öt
(
signo
)

40 
	`¥ötf
("interrupt\n%% ");

41 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/system.c

1 
	~<sys/waô.h
>

2 
	~<î∫o.h
>

3 
	~<uni°d.h
>

6 
	$sy°em
(c⁄° *
cmd°rög
)

8 
pid_t
 
pid
;

9 
°©us
;

11 i‡(
cmd°rög
 =
NULL
)

14 i‡((
pid
 = 
	`f‹k
()) < 0) {

15 
°©us
 = -1;

16 } i‡(
pid
 == 0) {

17 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

18 
	`_exô
(127);

20 
	`waôpid
(
pid
, &
°©us
, 0) < 0) {

21 i‡(
î∫o
 !
EINTR
) {

22 
°©us
 = -1;

28 (
°©us
);

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/systest1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
°©us
;

9 i‡((
°©us
 = 
	`sy°em
("date")) < 0)

10 
	`îr_sys
("system()Érror");

11 
	`¥_exô
(
°©us
);

13 i‡((
°©us
 = 
	`sy°em
("nosuchcommand")) < 0)

14 
	`îr_sys
("system()Érror");

15 
	`¥_exô
(
°©us
);

17 i‡((
°©us
 = 
	`sy°em
("who;Éxit 44")) < 0)

18 
	`îr_sys
("system()Érror");

19 
	`¥_exô
(
°©us
);

21 
	`exô
(0);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/systest2.c

1 
	~"≠ue.h
"

4 
	$sig_öt
(
signo
)

6 
	`¥ötf
("caught SIGINT\n");

7 
	}
}

10 
	$sig_chld
(
signo
)

12 
	`¥ötf
("caught SIGCHLD\n");

13 
	}
}

16 
	$maö
()

18 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

19 
	`îr_sys
("signal(SIGINT)Érror");

20 i‡(
	`sig«l
(
SIGCHLD
, 
sig_chld
Ë=
SIG_ERR
)

21 
	`îr_sys
("signal(SIGCHLD)Érror");

22 i‡(
	`sy°em
("/bin/ed") < 0)

23 
	`îr_sys
("system()Érror");

24 
	`exô
(0);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/systest3.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
°©us
;

8 i‡(
¨gc
 < 2)

9 
	`îr_quô
("command-lineárgumentÑequired");

11 i‡((
°©us
 = 
	`sy°em
(
¨gv
[1])) < 0)

12 
	`îr_sys
("system()Érror");

13 
	`¥_exô
(
°©us
);

15 
	`exô
(0);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/tellwait1.c

1 
	~"≠ue.h
"

3 
ch¨©©ime
(*);

6 
	$maö
()

8 
pid_t
 
pid
;

10 i‡((
pid
 = 
	`f‹k
()) < 0) {

11 
	`îr_sys
("forkÉrror");

12 } i‡(
pid
 == 0) {

13 
	`ch¨©©ime
("output from child\n");

15 
	`ch¨©©ime
("output fromÖarent\n");

17 
	`exô
(0);

18 
	}
}

21 
	$ch¨©©ime
(*
°r
)

23 *
±r
;

24 
c
;

26 
	`£tbuf
(
°dout
, 
NULL
);

27 
±r
 = 
°r
; (
c
 = *ptr++) != 0; )

28 
	`putc
(
c
, 
°dout
);

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/tellwait2.c

1 
	~"≠ue.h
"

3 
ch¨©©ime
(*);

6 
	$maö
()

8 
pid_t
 
pid
;

10 
	`TELL_WAIT
();

12 i‡((
pid
 = 
	`f‹k
()) < 0) {

13 
	`îr_sys
("forkÉrror");

14 } i‡(
pid
 == 0) {

15 
	`WAIT_PARENT
();

16 
	`ch¨©©ime
("output from child\n");

18 
	`ch¨©©ime
("output fromÖarent\n");

19 
	`TELL_CHILD
(
pid
);

21 
	`exô
(0);

22 
	}
}

25 
	$ch¨©©ime
(*
°r
)

27 *
±r
;

28 
c
;

30 
	`£tbuf
(
°dout
, 
NULL
);

31 
±r
 = 
°r
; (
c
 = *ptr++) != 0; )

32 
	`putc
(
c
, 
°dout
);

33 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/test1.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
pid_t
 
pid
;

8 i‡((
pid
 = 
	`f‹k
()) < 0)

9 
	`îr_sys
("forkÉrror");

10 i‡(
pid
 != 0) {

11 
	`¶ìp
(2);

12 
	`exô
(2);

16 i‡((
pid
 = 
	`f‹k
()) < 0)

17 
	`îr_sys
("forkÉrror");

18 i‡(
pid
 != 0) {

19 
	`¶ìp
(4);

20 
	`ab‹t
();

24 i‡((
pid
 = 
	`f‹k
()) < 0)

25 
	`îr_sys
("forkÉrror");

26 i‡(
pid
 != 0) {

27 
	`exe˛
("/bö/dd", "dd", "if=/ëc/ãrmˇp", "of=/dev/nuŒ", 
NULL
);

28 
	`exô
(7);

32 i‡((
pid
 = 
	`f‹k
()) < 0)

33 
	`îr_sys
("forkÉrror");

34 i‡(
pid
 != 0) {

35 
	`¶ìp
(
job
);

36 
	`exô
(0);

40 
	`¶ìp
(6);

41 
	`kûl
(
	`gëpid
(), 
SIGKILL
);

42 
	`exô
(6);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/times1.c

1 
	~"≠ue.h
"

2 
	~<sys/times.h
>

4 
¥_times
(
˛ock_t
, 
tms
 *, tms *);

5 
do_cmd
(*);

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
i
;

12 
	`£tbuf
(
°dout
, 
NULL
);

13 
i
 = 1; i < 
¨gc
; i++)

14 
	`do_cmd
(
¨gv
[
i
]);

15 
	`exô
(0);

16 
	}
}

19 
	$do_cmd
(*
cmd
)

21 
tms
 
tms°¨t
, 
tm£nd
;

22 
˛ock_t
 
°¨t
, 
íd
;

23 
°©us
;

25 
	`¥ötf
("\ncomm™d: %s\n", 
cmd
);

27 i‡((
°¨t
 = 
	`times
(&
tms°¨t
)) == -1)

28 
	`îr_sys
("timesÉrror");

30 i‡((
°©us
 = 
	`sy°em
(
cmd
)) < 0)

31 
	`îr_sys
("system()Érror");

33 i‡((
íd
 = 
	`times
(&
tm£nd
)) == -1)

34 
	`îr_sys
("timesÉrror");

36 
	`¥_times
(
íd
-
°¨t
, &
tms°¨t
, &
tm£nd
);

37 
	`¥_exô
(
°©us
);

38 
	}
}

41 
	$¥_times
(
˛ock_t
 
ªÆ
, 
tms
 *
tms°¨t
, tm†*
tm£nd
)

43 
˛ktck
 = 0;

45 i‡(
˛ktck
 == 0)

46 i‡((
˛ktck
 = 
	`sysc⁄f
(
_SC_CLK_TCK
)) < 0)

47 
	`îr_sys
("sysconfÉrror");

48 
	`¥ötf
("Ñól: %7.2f\n", 
ªÆ
 / (Ë
˛ktck
);

49 
	`¥ötf
(" user: %7.2f\n",

50 (
tm£nd
->
tms_utime
 - 
tms°¨t
->tms_utimeË/ (Ë
˛ktck
);

51 
	`¥ötf
(" sys: %7.2f\n",

52 (
tm£nd
->
tms_°ime
 - 
tms°¨t
->tms_°imeË/ (Ë
˛ktck
);

53 
	`¥ötf
(" child user: %7.2f\n",

54 (
tm£nd
->
tms_cutime
 - 
tms°¨t
->tms_cutimeË/ (Ë
˛ktck
);

55 
	`¥ötf
(" child sys: %7.2f\n",

56 (
tm£nd
->
tms_c°ime
 - 
tms°¨t
->tms_c°imeË/ (Ë
˛ktck
);

57 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/vfork1.c

1 
	~"≠ue.h
"

3 
	gglob
 = 6;

6 
	$maö
()

8 
v¨
;

9 
pid_t
 
pid
;

11 
v¨
 = 
jobjob
;

12 
	`¥ötf
("before vfork\n");

13 i‡((
pid
 = 
	`vf‹k
()) < 0) {

14 
	`îr_sys
("vforkÉrror");

15 } i‡(
pid
 == 0) {

16 
glob
++;

17 
v¨
++;

18 
	`_exô
(0);

24 
	`¥ötf
("pid = %d, glob = %d, v¨ = %d\n", 
	`gëpid
(), 
glob
, 
v¨
);

25 
	`exô
(0);

26 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/vfork3.c

1 
	~"≠ue.h
"

3 
f1
(), 
f2
();

6 
	$maö
()

8 
	`f1
();

9 
	`f2
();

10 
	`_exô
(0);

11 
	}
}

14 
	$f1
()

16 
pid_t
 
pid
;

18 i‡((
pid
 = 
	`vf‹k
()) < 0)

19 
	`îr_sys
("vforkÉrror");

21 
	}
}

24 
	$f2
()

26 
buf
[1000];

27 
i
;

29 
i
 = 0; i < (
buf
); i++)

30 
buf
[
i
] = 0;

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/wait1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

8 
°©us
;

10 i‡((
pid
 = 
	`f‹k
()) < 0)

11 
	`îr_sys
("forkÉrror");

12 i‡(
pid
 == 0)

13 
	`exô
(7);

15 i‡(
	`waô
(&
°©us
Ë!
pid
)

16 
	`îr_sys
("waitÉrror");

17 
	`¥_exô
(
°©us
);

19 i‡((
pid
 = 
	`f‹k
()) < 0)

20 
	`îr_sys
("forkÉrror");

21 i‡(
pid
 == 0)

22 
	`ab‹t
();

24 i‡(
	`waô
(&
°©us
Ë!
pid
)

25 
	`îr_sys
("waitÉrror");

26 
	`¥_exô
(
°©us
);

28 i‡((
pid
 = 
	`f‹k
()) < 0)

29 
	`îr_sys
("forkÉrror");

30 i‡(
pid
 == 0)

31 
°©us
 /= 0;

33 i‡(
	`waô
(&
°©us
Ë!
pid
)

34 
	`îr_sys
("waitÉrror");

35 
	`¥_exô
(
°©us
);

37 
	`exô
(0);

38 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/proc/zombie.c

1 
	~"≠ue.h
"

3 #ifde‡
SOLARIS


4 
	#PSCMD
 "p†-®-ÿpid,µid,s,ây,comm"

	)

6 
	#PSCMD
 "p†-ÿpid,µid,°©e,ây,comm™d"

	)

10 
	$maö
()

12 
pid_t
 
pid
;

14 i‡((
pid
 = 
	`f‹k
()) < 0)

15 
	`îr_sys
("forkÉrror");

16 i‡(
pid
 == 0)

17 
	`exô
(0);

20 
	`¶ìp
(4);

21 
	`sy°em
(
PSCMD
);

23 
	`exô
(0);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/pty/driver.c

1 
	~"≠ue.h
"

4 
	$do_drivî
(*
drivî
)

6 
pid_t
 
chûd
;

7 
pùe
[2];

12 i‡(
	`s_pùe
(
pùe
) < 0)

13 
	`îr_sys
("can't create streamÖipe");

15 i‡((
chûd
 = 
	`f‹k
()) < 0) {

16 
	`îr_sys
("forkÉrror");

17 } i‡(
chûd
 == 0) {

18 
	`˛o£
(
pùe
[1]);

21 i‡(
	`dup2
(
pùe
[0], 
STDIN_FILENO
) != STDIN_FILENO)

22 
	`îr_sys
("dup2ÉrrorÅo stdin");

25 i‡(
	`dup2
(
pùe
[0], 
STDOUT_FILENO
) != STDOUT_FILENO)

26 
	`îr_sys
("dup2ÉrrorÅo stdout");

27 i‡(
pùe
[0] !
STDIN_FILENO
 &&Öùe[0] !
STDOUT_FILENO
)

28 
	`˛o£
(
pùe
[0]);

31 
	`exe˛p
(
drivî
, driver, (*)0);

32 
	`îr_sys
("exe˛∞îr‹ f‹: %s", 
drivî
);

35 
	`˛o£
(
pùe
[0]);

36 i‡(
	`dup2
(
pùe
[1], 
STDIN_FILENO
) != STDIN_FILENO)

37 
	`îr_sys
("dup2ÉrrorÅo stdin");

38 i‡(
	`dup2
(
pùe
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

39 
	`îr_sys
("dup2ÉrrorÅo stdout");

40 i‡(
pùe
[1] !
STDIN_FILENO
 &&Öùe[1] !
STDOUT_FILENO
)

41 
	`˛o£
(
pùe
[1]);

47 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/pty/loop.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 512

	)

5 
sig_ãrm
();

6 vﬁ©ûê
sig_©omic_t
 
	gsigˇught
;

9 
	$lo›
(
±ym
, 
ign‹ìof
)

11 
pid_t
 
chûd
;

12 
ƒód
;

13 
buf
[
BUFFSIZE
];

15 i‡((
chûd
 = 
	`f‹k
()) < 0) {

16 
	`îr_sys
("forkÉrror");

17 } i‡(
chûd
 == 0) {

19 i‡((
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) < 0)

20 
	`îr_sys
("readÉrror from stdin");

21 i‡(
ƒód
 == 0)

23 i‡(
	`wrôí
(
±ym
, 
buf
, 
ƒód
) !=Çread)

24 
	`îr_sys
("writenÉrrorÅo masterÖty");

31 i‡(
ign‹ìof
 == 0)

32 
	`kûl
(
	`gëµid
(), 
SIGTERM
);

33 
	`exô
(0);

39 i‡(
	`sig«l_öå
(
SIGTERM
, 
sig_ãrm
Ë=
SIG_ERR
)

40 
	`îr_sys
("signal_intrÉrror for SIGTERM");

43 i‡((
ƒód
 = 
	`ªad
(
±ym
, 
buf
, 
BUFFSIZE
)) <= 0)

45 i‡(
	`wrôí
(
STDOUT_FILENO
, 
buf
, 
ƒód
) !=Çread)

46 
	`îr_sys
("writenÉrrorÅo stdout");

54 i‡(
sigˇught
 == 0)

55 
	`kûl
(
chûd
, 
SIGTERM
);

59 
	}
}

66 
	$sig_ãrm
(
signo
)

68 
sigˇught
 = 1;

69 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/pty/main.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

7 #ifde‡
LINUX


8 
	#OPTSTR
 "+d:eöv"

	)

10 
	#OPTSTR
 "d:eöv"

	)

13 
£t_n€cho
();

14 
do_drivî
(*);

15 
lo›
(, );

18 
	$maö
(
¨gc
, *
¨gv
[])

20 
fdm
, 
c
, 
ign‹ìof
, 
öãø˘ive
, 
n€cho
, 
vîbo£
;

21 
pid_t
 
pid
;

22 *
drivî
;

23 
¶ave_«me
[20];

24 
ãrmios
 
‹ig_ãrmios
;

25 
wösize
 
size
;

27 
öãø˘ive
 = 
	`ißây
(
STDIN_FILENO
);

28 
ign‹ìof
 = 0;

29 
n€cho
 = 0;

30 
vîbo£
 = 0;

31 
drivî
 = 
NULL
;

33 
›ãº
 = 0;

34 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
OPTSTR
)Ë!
EOF
) {

35 
c
) {

37 
drivî
 = 
›èrg
;

41 
n€cho
 = 1;

45 
ign‹ìof
 = 1;

49 
öãø˘ive
 = 0;

53 
vîbo£
 = 1;

57 
	`îr_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

60 i‡(
›töd
 >
¨gc
)

61 
	`îr_quô
("usage:Öty [ -d driver -einv ]Örogram [árg ... ]");

63 i‡(
öãø˘ive
) {

64 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
‹ig_ãrmios
) < 0)

65 
	`îr_sys
("tcgetattrÉrror on stdin");

66 i‡(
	`io˘l
(
STDIN_FILENO
, 
TIOCGWINSZ
, (*Ë&
size
) < 0)

67 
	`îr_sys
("TIOCGWINSZÉrror");

68 
pid
 = 
	`±y_f‹k
(&
fdm
, 
¶ave_«me
, (slave_name),

69 &
‹ig_ãrmios
, &
size
);

71 
pid
 = 
	`±y_f‹k
(&
fdm
, 
¶ave_«me
, (slave_name),

72 
NULL
, NULL);

75 i‡(
pid
 < 0) {

76 
	`îr_sys
("forkÉrror");

77 } i‡(
pid
 == 0) {

78 i‡(
n€cho
)

79 
	`£t_n€cho
(
STDIN_FILENO
);

81 i‡(
	`execvp
(
¨gv
[
›töd
], &argv[optind]) < 0)

82 
	`îr_sys
("ˇn'àexecuã: %s", 
¨gv
[
›töd
]);

85 i‡(
vîbo£
) {

86 
	`Ârötf
(
°dîr
, "¶avê«mê%s\n", 
¶ave_«me
);

87 i‡(
drivî
 !
NULL
)

88 
	`Ârötf
(
°dîr
, "drivî = %s\n", 
drivî
);

91 i‡(
öãø˘ive
 && 
drivî
 =
NULL
) {

92 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

93 
	`îr_sys
("tty_rawÉrror");

94 i‡(
	`©exô
(
ây_©exô
) < 0)

95 
	`îr_sys
("atexitÉrror");

98 i‡(
drivî
)

99 
	`do_drivî
(
drivî
);

101 
	`lo›
(
fdm
, 
ign‹ìof
);

103 
	`exô
(0);

104 
	}
}

107 
	$£t_n€cho
(
fd
)

109 
ãrmios
 
°îmios
;

111 i‡(
	`tcgë©å
(
fd
, &
°îmios
) < 0)

112 
	`îr_sys
("tcgetattrÉrror");

114 
°îmios
.
c_lÊag
 &~(
ECHO
 | 
ECHOE
 | 
ECHOK
 | 
ECHONL
);

119 
°îmios
.
c_oÊag
 &~(
ONLCR
);

121 i‡(
	`tc£èâr
(
fd
, 
TCSANOW
, &
°îmios
) < 0)

122 
	`îr_sys
("tcsetattrÉrror");

123 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sess/orphan3.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$sig_hup
(
signo
)

7 
	`¥ötf
("SIGHUPÑe˚ived,Öid = %d\n", 
	`gëpid
());

8 
	}
}

11 
	$¥_ids
(*
«me
)

13 
	`¥ötf
("%s:Öid = %d,Öpid = %d,Ögrp = %d,Åpgrp = %d\n",

14 
«me
, 
	`gëpid
(), 
	`gëµid
(), 
	`gëpgΩ
(), 
	`tcgëpgΩ
(
STDIN_FILENO
));

15 
	`fÊush
(
°dout
);

16 
	}
}

19 
	$maö
()

21 
c
;

22 
pid_t
 
pid
;

24 
	`¥_ids
("parent");

25 i‡((
pid
 = 
	`f‹k
()) < 0) {

26 
	`îr_sys
("forkÉrror");

27 } i‡(
pid
 > 0) {

28 
	`¶ìp
(5);

29 
	`exô
(0);

31 
	`¥_ids
("child");

32 
	`sig«l
(
SIGHUP
, 
sig_hup
);

33 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

34 
	`¥_ids
("child");

35 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

36 
	`¥ötf
("readÉrror from controlling TTY,Érrno = %d\n",

37 
î∫o
);

38 
	`exô
(0);

40 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/abort.c

1 
	~<sig«l.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<uni°d.h
>

7 
	$ab‹t
()

9 
sig£t_t
 
mask
;

10 
siga˘i⁄
 
a˘i⁄
;

15 
	`siga˘i⁄
(
SIGABRT
, 
NULL
, &
a˘i⁄
);

16 i‡(
a˘i⁄
.
ß_h™dÀr
 =
SIG_IGN
) {

17 
a˘i⁄
.
ß_h™dÀr
 = 
SIG_DFL
;

18 
	`siga˘i⁄
(
SIGABRT
, &
a˘i⁄
, 
NULL
);

20 i‡(
a˘i⁄
.
ß_h™dÀr
 =
SIG_DFL
)

21 
	`fÊush
(
NULL
);

26 
	`sigfûl£t
(&
mask
);

27 
	`sigdñ£t
(&
mask
, 
SIGABRT
);

28 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask
, 
NULL
);

29 
	`kûl
(
	`gëpid
(), 
SIGABRT
);

34 
	`fÊush
(
NULL
);

35 
a˘i⁄
.
ß_h™dÀr
 = 
SIG_DFL
;

36 
	`siga˘i⁄
(
SIGABRT
, &
a˘i⁄
, 
NULL
);

37 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask
, 
NULL
);

38 
	`kûl
(
	`gëpid
(), 
SIGABRT
);

39 
	`exô
(1);

40 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/child.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
sig_˛d
();

7 
	$maö
()

9 
pid_t
 
pid
;

11 i‡(
	`sig«l
(
SIGCLD
, 
sig_˛d
Ë=
SIG_ERR
)

12 
	`≥º‹
("signalÉrror");

13 i‡((
pid
 = 
	`f‹k
()) < 0) {

14 
	`≥º‹
("forkÉrror");

15 } i‡(
pid
 == 0) {

16 
	`¶ìp
(2);

17 
	`_exô
(0);

19 
	`∑u£
();

20 
	`exô
(0);

21 
	}
}

24 
	$sig_˛d
(
signo
)

26 
pid_t
 
pid
;

27 
°©us
;

29 
	`¥ötf
("SIGCLDÑeceived\n");

30 i‡(
	`sig«l
(
SIGCLD
, 
sig_˛d
Ë=
SIG_ERR
)

31 
	`≥º‹
("signalÉrror");

32 i‡((
pid
 = 
	`waô
(&
°©us
)) < 0)

33 
	`≥º‹
("waitÉrror");

34 
	`¥ötf
("pid = %d\n", 
pid
);

35 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/critical.c

1 
	~"≠ue.h
"

3 
sig_quô
();

6 
	$maö
()

8 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
≥ndmask
;

10 i‡(
	`sig«l
(
SIGQUIT
, 
sig_quô
Ë=
SIG_ERR
)

11 
	`îr_sys
("can't catch SIGQUIT");

16 
	`sigem±y£t
(&
√wmask
);

17 
	`sigadd£t
(&
√wmask
, 
SIGQUIT
);

18 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

19 
	`îr_sys
("SIG_BLOCKÉrror");

21 
	`¶ìp
(5);

23 i‡(
	`sig≥ndög
(&
≥ndmask
) < 0)

24 
	`îr_sys
("sigpendingÉrror");

25 i‡(
	`sigismembî
(&
≥ndmask
, 
SIGQUIT
))

26 
	`¥ötf
("\nSIGQUITÖending\n");

31 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

32 
	`îr_sys
("SIG_SETMASKÉrror");

33 
	`¥ötf
("SIGQUIT unblocked\n");

35 
	`¶ìp
(5);

36 
	`exô
(0);

37 
	}
}

40 
	$sig_quô
(
signo
)

42 
	`¥ötf
("caught SIGQUIT\n");

43 i‡(
	`sig«l
(
SIGQUIT
, 
SIG_DFL
Ë=
SIG_ERR
)

44 
	`îr_sys
("can'tÑeset SIGQUIT");

45 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/mask.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

3 
	~<time.h
>

5 
sig_u§1
(), 
sig_Ærm
();

6 
sigjmp_buf
 
	gjmpbuf
;

7 vﬁ©ûê
sig_©omic_t
 
	gˇnjump
;

10 
	$maö
()

12 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§1
Ë=
SIG_ERR
)

13 
	`îr_sys
("signal(SIGUSR1)Érror");

14 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

15 
	`îr_sys
("signal(SIGALRM)Érror");

16 
	`¥_mask
("starting main: ");

18 i‡(
	`sig£tjmp
(
jmpbuf
, 1)) {

19 
	`¥_mask
("ending main: ");

20 
	`exô
(0);

22 
ˇnjump
 = 1;

25 
	`∑u£
();

26 
	}
}

29 
	$sig_u§1
(
signo
)

31 
time_t
 
°¨âime
;

33 i‡(
ˇnjump
 == 0)

36 
	`¥_mask
("starting sig_usr1: ");

37 
	`Æ¨m
(3);

38 
°¨âime
 = 
	`time
(
NULL
);

40 i‡(
	`time
(
NULL
Ë> 
°¨âime
 + 5)

42 
	`¥_mask
("finishing sig_usr1: ");

44 
ˇnjump
 = 0;

45 
	`sigl⁄gjmp
(
jmpbuf
, 1);

46 
	}
}

49 
	$sig_Ærm
(
signo
)

51 
	`¥_mask
("in sig_alrm: ");

52 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/read1.c

1 
	~"≠ue.h
"

3 
sig_Ærm
();

6 
	$maö
()

8 
n
;

9 
löe
[
MAXLINE
];

11 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

12 
	`îr_sys
("signal(SIGALRM)Érror");

14 
	`Æ¨m
(10);

15 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) < 0)

16 
	`îr_sys
("readÉrror");

17 
	`Æ¨m
(0);

19 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

20 
	`exô
(0);

21 
	}
}

24 
	$sig_Ærm
(
signo
)

27 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/read2.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
sig_Ærm
();

5 
jmp_buf
 
	gív_Ærm
;

8 
	$maö
()

10 
n
;

11 
löe
[
MAXLINE
];

13 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

14 
	`îr_sys
("signal(SIGALRM)Érror");

15 i‡(
	`£tjmp
(
ív_Ærm
) != 0)

16 
	`îr_quô
("readÅimeout");

18 
	`Æ¨m
(10);

19 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) < 0)

20 
	`îr_sys
("readÉrror");

21 
	`Æ¨m
(0);

23 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

24 
	`exô
(0);

25 
	}
}

28 
	$sig_Ærm
(
signo
)

30 
	`l⁄gjmp
(
ív_Ærm
, 1);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/reenter.c

1 
	~"≠ue.h
"

2 
	~<pwd.h
>

5 
	$my_Æ¨m
(
signo
)

7 
∑sswd
 *
roŸ±r
;

9 
	`¥ötf
("in signal handler\n");

10 i‡((
roŸ±r
 = 
	`gëpw«m
("roŸ")Ë=
NULL
)

11 
	`îr_sys
("getpwnam(root)Érror");

12 
	`Æ¨m
(1);

13 
	}
}

16 
	$maö
()

18 
∑sswd
 *
±r
;

20 
	`sig«l
(
SIGALRM
, 
my_Æ¨m
);

21 
	`Æ¨m
(1);

23 i‡((
±r
 = 
	`gëpw«m
("ßr")Ë=
NULL
)

24 
	`îr_sys
("getpwnamÉrror");

25 i‡(
	`°rcmp
(
±r
->
pw_«me
, "sar") != 0)

26 
	`¥ötf
("return value corrupted!,Öw_name = %s\n",

27 
±r
->
pw_«me
);

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/setops.c

1 
	~<sig«l.h
>

2 
	~<î∫o.h
>

5 
	#SIGBAD
(
signo
Ë((signoË<0 || (signoË>
NSIG
)

	)

8 
	$sigadd£t
(
sig£t_t
 *
£t
, 
signo
)

10 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

12 *
£t
 |1 << (
signo
 - 1);

14 
	}
}

17 
	$sigdñ£t
(
sig£t_t
 *
£t
, 
signo
)

19 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

21 *
£t
 &~(1 << (
signo
 - 1));

23 
	}
}

26 
	$sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signo
)

28 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

30 ((*
£t
 & (1 << (
signo
 - 1))) != 0);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/sigtstp.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 1024

	)

5 
sig_t°p
();

8 
	$maö
()

10 
n
;

11 
buf
[
BUFFSIZE
];

16 i‡(
	`sig«l
(
SIGTSTP
, 
SIG_IGN
Ë=
SIG_DFL
)

17 
	`sig«l
(
SIGTSTP
, 
sig_t°p
);

19 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) > 0)

20 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

21 
	`îr_sys
("writeÉrror");

23 i‡(
n
 < 0)

24 
	`îr_sys
("readÉrror");

26 
	`exô
(0);

27 
	}
}

30 
	$sig_t°p
(
signo
)

32 
sig£t_t
 
mask
;

39 
	`sigem±y£t
(&
mask
);

40 
	`sigadd£t
(&
mask
, 
SIGTSTP
);

41 
	`sig¥ocmask
(
SIG_UNBLOCK
, &
mask
, 
NULL
);

43 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

45 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

49 
	`sig«l
(
SIGTSTP
, 
sig_t°p
);

52 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/sigusr.c

1 
	~"≠ue.h
"

3 
sig_u§
();

6 
	$maö
()

8 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

9 
	`îr_sys
("can't catch SIGUSR1");

10 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

11 
	`îr_sys
("can't catch SIGUSR2");

13 
	`∑u£
();

14 
	}
}

17 
	$sig_u§
(
signo
)

19 i‡(
signo
 =
SIGUSR1
)

20 
	`¥ötf
("received SIGUSR1\n");

21 i‡(
signo
 =
SIGUSR2
)

22 
	`¥ötf
("received SIGUSR2\n");

24 
	`îr_dump
("ª˚ived sig«»%d\n", 
signo
);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/sleep1.c

1 
	~<sig«l.h
>

2 
	~<uni°d.h
>

5 
	$sig_Ærm
(
signo
)

8 
	}
}

11 
	$¶ìp1
(
n£cs
)

13 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

14 (
n£cs
);

15 
	`Æ¨m
(
n£cs
);

16 
	`∑u£
();

17 (
	`Æ¨m
(0));

18 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/sleep2.c

1 
	~<£tjmp.h
>

2 
	~<sig«l.h
>

3 
	~<uni°d.h
>

5 
jmp_buf
 
	gív_Ærm
;

8 
	$sig_Ærm
(
signo
)

10 
	`l⁄gjmp
(
ív_Ærm
, 1);

11 
	}
}

14 
	$¶ìp2
(
n£cs
)

16 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

17 (
n£cs
);

18 i‡(
	`£tjmp
(
ív_Ærm
) == 0) {

19 
	`Æ¨m
(
n£cs
);

20 
	`∑u£
();

22 (
	`Æ¨m
(0));

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/suspend1.c

1 
	~"≠ue.h
"

3 
sig_öt
();

6 
	$maö
()

8 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
waômask
;

10 
	`¥_mask
("program start: ");

12 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

13 
	`îr_sys
("signal(SIGINT)Érror");

14 
	`sigem±y£t
(&
waômask
);

15 
	`sigadd£t
(&
waômask
, 
SIGUSR1
);

16 
	`sigem±y£t
(&
√wmask
);

17 
	`sigadd£t
(&
√wmask
, 
SIGINT
);

22 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

23 
	`îr_sys
("SIG_BLOCKÉrror");

28 
	`¥_mask
("in criticalÑegion: ");

33 i‡(
	`sigsu•íd
(&
waômask
) != -1)

34 
	`îr_sys
("sigsuspendÉrror");

36 
	`¥_mask
("afterÑeturn from sigsuspend: ");

41 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

42 
	`îr_sys
("SIG_SETMASKÉrror");

47 
	`¥_mask
("programÉxit: ");

49 
	`exô
(0);

50 
	}
}

53 
	$sig_öt
(
signo
)

55 
	`¥_mask
("\nin sig_int: ");

56 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/suspend2.c

1 
	~"≠ue.h
"

3 vﬁ©ûê
sig_©omic_t
 
	gquôÊag
;

6 
	$sig_öt
(
signo
)

8 i‡(
signo
 =
SIGINT
)

9 
	`¥ötf
("\ninterrupt\n");

10 i‡(
signo
 =
SIGQUIT
)

11 
quôÊag
 = 1;

12 
	}
}

15 
	$maö
()

17 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
zîomask
;

19 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

20 
	`îr_sys
("signal(SIGINT)Érror");

21 i‡(
	`sig«l
(
SIGQUIT
, 
sig_öt
Ë=
SIG_ERR
)

22 
	`îr_sys
("signal(SIGQUIT)Érror");

24 
	`sigem±y£t
(&
zîomask
);

25 
	`sigem±y£t
(&
√wmask
);

26 
	`sigadd£t
(&
√wmask
, 
SIGQUIT
);

31 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

32 
	`îr_sys
("SIG_BLOCKÉrror");

34 
quôÊag
 == 0)

35 
	`sigsu•íd
(&
zîomask
);

40 
quôÊag
 = 0;

45 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

46 
	`îr_sys
("SIG_SETMASKÉrror");

48 
	`exô
(0);

49 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/system.c

1 
	~<sys/waô.h
>

2 
	~<î∫o.h
>

3 
	~<sig«l.h
>

4 
	~<uni°d.h
>

7 
	$sy°em
(c⁄° *
cmd°rög
)

9 
pid_t
 
pid
;

10 
°©us
;

11 
siga˘i⁄
 
ign‹e
, 
ßveöå
, 
ßvequô
;

12 
sig£t_t
 
chldmask
, 
ßvemask
;

14 i‡(
cmd°rög
 =
NULL
)

17 
ign‹e
.
ß_h™dÀr
 = 
SIG_IGN
;

18 
	`sigem±y£t
(&
ign‹e
.
ß_mask
);

19 
ign‹e
.
ß_Êags
 = 0;

20 i‡(
	`siga˘i⁄
(
SIGINT
, &
ign‹e
, &
ßveöå
) < 0)

22 i‡(
	`siga˘i⁄
(
SIGQUIT
, &
ign‹e
, &
ßvequô
) < 0)

24 
	`sigem±y£t
(&
chldmask
);

25 
	`sigadd£t
(&
chldmask
, 
SIGCHLD
);

26 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
chldmask
, &
ßvemask
) < 0)

29 i‡((
pid
 = 
	`f‹k
()) < 0) {

30 
°©us
 = -1;

31 } i‡(
pid
 == 0) {

33 
	`siga˘i⁄
(
SIGINT
, &
ßveöå
, 
NULL
);

34 
	`siga˘i⁄
(
SIGQUIT
, &
ßvequô
, 
NULL
);

35 
	`sig¥ocmask
(
SIG_SETMASK
, &
ßvemask
, 
NULL
);

37 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

38 
	`_exô
(127);

40 
	`waôpid
(
pid
, &
°©us
, 0) < 0)

41 i‡(
î∫o
 !
EINTR
) {

42 
°©us
 = -1;

48 i‡(
	`siga˘i⁄
(
SIGINT
, &
ßveöå
, 
NULL
) < 0)

50 i‡(
	`siga˘i⁄
(
SIGQUIT
, &
ßvequô
, 
NULL
) < 0)

52 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ßvemask
, 
NULL
) < 0)

55 (
°©us
);

56 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/signals/tsleep2.c

1 
	~"≠ue.h
"

3 
¶ìp2
();

4 
sig_öt
();

7 
	$maö
()

9 
un¶ït
;

11 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

12 
	`îr_sys
("signal(SIGINT)Érror");

13 
un¶ït
 = 
	`¶ìp2
(5);

14 
	`¥ötf
("¶ìp2Ñëu∫ed: %u\n", 
un¶ït
);

15 
	`exô
(0);

16 
	}
}

19 
	$sig_öt
(
signo
)

21 
i
, 
j
;

22 vﬁ©ûê
k
;

28 
	`¥ötf
("\nsig_int starting\n");

29 
i
 = 0; i < 300000; i++)

30 
j
 = 0; j < 4000; j++)

31 
k
 +
i
 * 
j
;

32 
	`¥ötf
("sig_int finished\n");

33 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/bindunix.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

6 
	$maö
()

8 
fd
, 
size
;

9 
sockaddr_un
 
un
;

11 
un
.
sun_Ámûy
 = 
AF_UNIX
;

12 
	`°r˝y
(
un
.
sun_∑th
, "foo.socket");

13 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socket failed");

15 
size
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

16 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
size
) < 0)

17 
	`îr_sys
("bind failed");

18 
	`¥ötf
("UNIX domain socket bound\n");

19 
	`exô
(0);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/bo.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<öây≥s.h
>

6 
	$maö
()

8 
uöt32_t
 
i
;

9 *
˝
;

11 
i
 = 0x04030201;

12 
˝
 = (*)&
i
;

13 i‡(*
˝
 == 1)

14 
	`¥ötf
("little-endian\n");

15 i‡(*
˝
 == 4)

16 
	`¥ötf
("big-endian\n");

18 
	`¥ötf
("who knows?\n");

19 
	`exô
(0);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/clconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

4 
	#MAXSLEEP
 12
job


	)

7 
	$c⁄√˘_ªåy
(
sockfd
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
)

9 
n£c
;

14 
n£c
 = 1;Ç£¯<
MAXSLEEP
;Çsec <<= 1) {

15 i‡(
	`c⁄√˘
(
sockfd
, 
addr
, 
Æí
) == 0) {

25 i‡(
n£c
 <
MAXSLEEP
/2)

26 
	`¶ìp
(
n£c
);

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/cliconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#CLI_PATH
 "/v¨/tmp/"

	)

7 
	#CLI_PERM
 
S_IRWXU


	)

14 
	$˛i_c⁄n
(c⁄° *
«me
)

16 
fd
, 
Àn
, 
îr
, 
rvÆ
;

17 
sockaddr_un
 
un
;

20 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

24 
	`mem£t
(&
un
, 0, (un));

25 
un
.
sun_Ámûy
 = 
AF_UNIX
;

26 
	`•rötf
(
un
.
sun_∑th
, "%s%05d", 
CLI_PATH
, 
	`gëpid
());

27 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

29 
	`u∆ök
(
un
.
sun_∑th
);

30 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

31 
rvÆ
 = -2;

32 
îrout
;

34 i‡(
	`chmod
(
un
.
sun_∑th
, 
CLI_PERM
) < 0) {

35 
rvÆ
 = -3;

36 
îrout
;

40 
	`mem£t
(&
un
, 0, (un));

41 
un
.
sun_Ámûy
 = 
AF_UNIX
;

42 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

43 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

44 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

45 
rvÆ
 = -4;

46 
îrout
;

48 (
fd
);

50 
îrout
:

51 
îr
 = 
î∫o
;

52 
	`˛o£
(
fd
);

53 
î∫o
 = 
îr
;

54 (
rvÆ
);

55 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/findsvc.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<¨∑/öë.h
>

4 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

5 
	~<sys/sockë.h
>

6 
	~<√töë/ö.h
>

10 
	$¥öt_Ámûy
(
addröfo
 *
aù
)

12 
	`¥ötf
(" family ");

13 
aù
->
ai_Ámûy
) {

14 
AF_INET
:

15 
	`¥ötf
("inet");

17 
AF_INET6
:

18 
	`¥ötf
("inet6");

20 
AF_UNIX
:

21 
	`¥ötf
("unix");

23 
AF_UNSPEC
:

24 
	`¥ötf
("unspecified");

27 
	`¥ötf
("unknown");

29 
	}
}

32 
	$¥öt_ty≥
(
addröfo
 *
aù
)

34 
	`¥ötf
("Åype ");

35 
aù
->
ai_sockty≥
) {

36 
SOCK_STREAM
:

37 
	`¥ötf
("stream");

39 
SOCK_DGRAM
:

40 
	`¥ötf
("datagram");

42 
SOCK_SEQPACKET
:

43 
	`¥ötf
("seqpacket");

45 
SOCK_RAW
:

46 
	`¥ötf
("raw");

49 
	`¥ötf
("unknow¿(%d)", 
aù
->
ai_sockty≥
);

51 
	}
}

54 
	$¥öt_¥Ÿocﬁ
(
addröfo
 *
aù
)

56 
	`¥ötf
("Örotocol ");

57 
aù
->
ai_¥Ÿocﬁ
) {

59 
	`¥ötf
("default");

61 
IPPROTO_TCP
:

62 
	`¥ötf
("TCP");

64 
IPPROTO_UDP
:

65 
	`¥ötf
("UDP");

67 
IPPROTO_RAW
:

68 
	`¥ötf
("raw");

71 
	`¥ötf
("unknow¿(%d)", 
aù
->
ai_¥Ÿocﬁ
);

73 
	}
}

76 
	$¥öt_Êags
(
addröfo
 *
aù
)

78 
	`¥ötf
("flags");

79 i‡(
aù
->
ai_Êags
 == 0) {

80 
	`¥ötf
(" 0");

82 i‡(
aù
->
ai_Êags
 & 
AI_PASSIVE
)

83 
	`¥ötf
("Öassive");

84 i‡(
aù
->
ai_Êags
 & 
AI_CANONNAME
)

85 
	`¥ötf
(" canon");

86 i‡(
aù
->
ai_Êags
 & 
AI_NUMERICHOST
)

87 
	`¥ötf
("Çumhost");

88 #i‡
	`deföed
(
AI_NUMERICSERV
)

89 i‡(
aù
->
ai_Êags
 & 
AI_NUMERICSERV
)

90 
	`¥ötf
("Çumserv");

92 #i‡
	`deföed
(
AI_V4MAPPED
)

93 i‡(
aù
->
ai_Êags
 & 
AI_V4MAPPED
)

94 
	`¥ötf
(" v4mapped");

96 #i‡
	`deföed
(
AI_ALL
)

97 i‡(
aù
->
ai_Êags
 & 
AI_ALL
)

98 
	`¥ötf
("áll");

101 
	}
}

104 
	$maö
(
¨gc
, *
¨gv
[])

106 
addröfo
 *
aûi°
, *
aù
;

107 
addröfo
 
höt
;

108 
sockaddr_ö
 *
söp
;

109 c⁄° *
addr
;

110 
îr
;

111 
abuf
[
INET_ADDRSTRLEN
];

113 i‡(
¨gc
 != 3)

114 
	`îr_quô
("ußge: %†nodíamê£rvi˚", 
¨gv
[0]);

115 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

116 
höt
.
ai_Ámûy
 = 0;

117 
höt
.
ai_sockty≥
 = 0;

118 
höt
.
ai_¥Ÿocﬁ
 = 0;

119 
höt
.
ai_addæí
 = 0;

120 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

121 
höt
.
ai_addr
 = 
NULL
;

122 
höt
.
ai_√xt
 = 
NULL
;

123 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1],árgv[2], &
höt
, &
aûi°
)) != 0)

124 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

125 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

126 
	`¥öt_Êags
(
aù
);

127 
	`¥öt_Ámûy
(
aù
);

128 
	`¥öt_ty≥
(
aù
);

129 
	`¥öt_¥Ÿocﬁ
(
aù
);

130 
	`¥ötf
("\n\tho° %s", 
aù
->
ai_ˇn⁄«me
?aip->ai_canonname:"-");

131 i‡(
aù
->
ai_Ámûy
 =
AF_INET
) {

132 
söp
 = (
sockaddr_ö
 *)
aù
->
ai_addr
;

133 
addr
 = 
	`öë_¡›
(
AF_INET
, &
söp
->
sö_addr
, 
abuf
,

134 
INET_ADDRSTRLEN
);

135 
	`¥ötf
("áddªs†%s", 
addr
?addr:"unknown");

136 
	`¥ötf
("Ö‹à%d", 
	`¡ohs
(
söp
->
sö_p‹t
));

138 
	`¥ötf
("\n");

140 
	`exô
(0);

141 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/initsrv1.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/sockë.h
>

6 
	$öô£rvî
(
ty≥
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
,

7 
qÀn
)

9 
fd
;

10 
îr
 = 0;

12 i‡((
fd
 = 
	`sockë
(
addr
->
ß_Ámûy
, 
ty≥
, 0)) < 0)

14 i‡(
	`böd
(
fd
, 
addr
, 
Æí
) < 0) {

15 
îr
 = 
î∫o
;

16 
îrout
;

18 i‡(
ty≥
 =
SOCK_STREAM
 ||Åy≥ =
SOCK_SEQPACKET
) {

19 i‡(
	`li°í
(
fd
, 
qÀn
) < 0) {

20 
îr
 = 
î∫o
;

21 
îrout
;

24 (
fd
);

26 
îrout
:

27 
	`˛o£
(
fd
);

28 
î∫o
 = 
îr
;

30 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/initsrv2.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/sockë.h
>

6 
	$öô£rvî
(
ty≥
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
,

7 
qÀn
)

9 
fd
, 
îr
;

10 
ªu£
 = 1;

12 i‡((
fd
 = 
	`sockë
(
addr
->
ß_Ámûy
, 
ty≥
, 0)) < 0)

14 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
ªu£
,

16 
îr
 = 
î∫o
;

17 
îrout
;

19 i‡(
	`böd
(
fd
, 
addr
, 
Æí
) < 0) {

20 
îr
 = 
î∫o
;

21 
îrout
;

23 i‡(
ty≥
 =
SOCK_STREAM
 ||Åy≥ =
SOCK_SEQPACKET
) {

24 i‡(
	`li°í
(
fd
, 
qÀn
) < 0) {

25 
îr
 = 
î∫o
;

26 
îrout
;

29 (
fd
);

31 
îrout
:

32 
	`˛o£
(
fd
);

33 
î∫o
 = 
îr
;

35 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/recvfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

9 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

11 
cmsghdr
 *
	gcm±r
 = 
NULL
;

19 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

21 
√wfd
, 
ƒ
, 
°©us
;

22 *
±r
;

23 
buf
[
MAXLINE
];

24 
iovec
 
iov
[1];

25 
msghdr
 
msg
;

27 
°©us
 = -1;

29 
iov
[0].
iov_ba£
 = 
buf
;

30 
iov
[0].
iov_Àn
 = (
buf
);

31 
msg
.
msg_iov
 = 
iov
;

32 
msg
.
msg_iovÀn
 = 1;

33 
msg
.
msg_«me
 = 
NULL
;

34 
msg
.
msg_«mñí
 = 0;

35 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

37 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

38 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

39 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

40 
	`îr_sys
("recvmsgÉrror");

41 } i‡(
ƒ
 == 0) {

42 
	`îr_ªt
("connection closed by server");

51 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

52 i‡(*
±r
++ == 0) {

53 i‡(
±r
 !&
buf
[
ƒ
-1])

54 
	`îr_dump
("message formatÉrror");

55 
°©us
 = *
±r
 & 0xFF;

56 i‡(
°©us
 == 0) {

57 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

58 
	`îr_dump
("status = 0 butÇo fd");

59 
√wfd
 = *(*)
	`CMSG_DATA
(
cm±r
);

61 
√wfd
 = -
°©us
;

63 
ƒ
 -= 2;

66 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

68 i‡(
°©us
 >= 0)

69 (
√wfd
);

71 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/recvfd2.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

5 #i‡
deföed
(
SCM_CREDS
)

6 
	#CREDSTRUCT
 
cmsg¸ed


	)

7 
	#CR_UID
 
cm¸ed_uid


	)

8 
	#CREDOPT
 
LOCAL_PEERCRED


	)

9 
	#SCM_CREDTYPE
 
SCM_CREDS


	)

10 #ñi‡
deföed
(
SCM_CREDENTIALS
)

11 
	#CREDSTRUCT
 
u¸ed


	)

12 
	#CR_UID
 
uid


	)

13 
	#CREDOPT
 
SO_PASSCRED


	)

14 
	#SCM_CREDTYPE
 
SCM_CREDENTIALS


	)

16 #îr‹ 
∑ssög
 
¸edítüls
 
is
 
unsuµ‹ãd
!

20 
	#RIGHTSLEN
 
	`CMSG_LEN
(())

	)

21 
	#CREDSLEN
 
	`CMSG_LEN
((
CREDSTRUCT
))

	)

22 
	#CONTROLLEN
 (
RIGHTSLEN
 + 
CREDSLEN
)

	)

24 
cmsghdr
 *
	gcm±r
 = 
NULL
;

32 
ªcv_ufd
(
fd
, 
uid_t
 *
uid±r
,

33 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

35 
cmsghdr
 *
cmp
;

36 
CREDSTRUCT
 *
¸edp
;

37 
√wfd
, 
ƒ
, 
°©us
;

38 *
±r
;

39 
buf
[
MAXLINE
];

40 
iovec
 
iov
[1];

41 
msghdr
 
msg
;

42 c⁄° 
⁄
 = 1;

44 
°©us
 = -1;

45 
√wfd
 = -1;

46 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
CREDOPT
, &
⁄
, ()) < 0) {

47 
	`îr_ªt
("setsockopt failed");

51 
iov
[0].
iov_ba£
 = 
buf
;

52 
iov
[0].
iov_Àn
 = (
buf
);

53 
msg
.
msg_iov
 = 
iov
;

54 
msg
.
msg_iovÀn
 = 1;

55 
msg
.
msg_«me
 = 
NULL
;

56 
msg
.
msg_«mñí
 = 0;

57 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

59 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

60 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

61 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

62 
	`îr_sys
("recvmsgÉrror");

63 } i‡(
ƒ
 == 0) {

64 
	`îr_ªt
("connection closed by server");

73 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

74 i‡(*
±r
++ == 0) {

75 i‡(
±r
 !&
buf
[
ƒ
-1])

76 
	`îr_dump
("message formatÉrror");

77 
°©us
 = *
±r
 & 0xFF;

78 i‡(
°©us
 == 0) {

79 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

80 
	`îr_dump
("status = 0 butÇo fd");

83 
cmp
 = 
	`CMSG_FIRSTHDR
(&
msg
);

84 
cmp
 !
NULL
; cm∞
	`CMSG_NXTHDR
(&
msg
, cmp)) {

85 i‡(
cmp
->
cmsg_Àvñ
 !
SOL_SOCKET
)

87 
cmp
->
cmsg_ty≥
) {

88 
SCM_RIGHTS
:

89 
√wfd
 = *(*)
	`CMSG_DATA
(
cmp
);

91 
SCM_CREDTYPE
:

92 
¸edp
 = (
CREDSTRUCT
 *)
	`CMSG_DATA
(
cmp
);

93 *
uid±r
 = 
¸edp
->
CR_UID
;

97 
√wfd
 = -
°©us
;

99 
ƒ
 -= 2;

102 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

104 i‡(
°©us
 >= 0)

105 (
√wfd
);

107 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/ruptime-dg.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sys/sockë.h
>

6 
	#BUFLEN
 12
job


	)

7 
	#TIMEOUT
 20

	)

10 
	$sigÆrm
(
signo
)

12 
	}
}

15 
	$¥öt_u±ime
(
sockfd
, 
addröfo
 *
aù
)

17 
n
;

18 
buf
[
BUFLEN
];

20 
buf
[0] = 0;

21 i‡(
	`£ndto
(
sockfd
, 
buf
, 1, 0, 
aù
->
ai_addr
,áù->
ai_addæí
) < 0)

22 
	`îr_sys
("sendtoÉrror");

23 
	`Æ¨m
(
TIMEOUT
);

24 i‡((
n
 = 
	`ªcv‰om
(
sockfd
, 
buf
, 
BUFLEN
, 0, 
NULL
, NULL)) < 0) {

25 i‡(
î∫o
 !
EINTR
)

26 
	`Æ¨m
(0);

27 
	`îr_sys
("recvÉrror");

29 
	`Æ¨m
(0);

30 
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
);

31 
	}
}

34 
	$maö
(
¨gc
, *
¨gv
[])

36 
addröfo
 *
aûi°
, *
aù
;

37 
addröfo
 
höt
;

38 
sockfd
, 
îr
;

39 
siga˘i⁄
 
ß
;

41 i‡(
¨gc
 != 2)

42 
	`îr_quô
("usage:Ñuptime hostname");

43 
ß
.
ß_h™dÀr
 = 
sigÆrm
;

44 
ß
.
ß_Êags
 = 0;

45 
	`sigem±y£t
(&
ß
.
ß_mask
);

46 i‡(
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
) < 0)

47 
	`îr_sys
("sigactionÉrror");

48 
höt
.
ai_Êags
 = 0;

49 
höt
.
ai_Ámûy
 = 0;

50 
höt
.
ai_sockty≥
 = 
SOCK_DGRAM
;

51 
höt
.
ai_¥Ÿocﬁ
 = 0;

52 
höt
.
ai_addæí
 = 0;

53 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

54 
höt
.
ai_addr
 = 
NULL
;

55 
höt
.
ai_√xt
 = 
NULL
;

56 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1], "ru±ime", &
höt
, &
aûi°
)) != 0)

57 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

59 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

60 i‡((
sockfd
 = 
	`sockë
(
aù
->
ai_Ámûy
, 
SOCK_DGRAM
, 0)) < 0) {

61 
îr
 = 
î∫o
;

63 
	`¥öt_u±ime
(
sockfd
, 
aù
);

64 
	`exô
(0);

68 
	`Ârötf
(
°dîr
, "ˇn'àc⁄è˘ %s: %s\n", 
¨gv
[1], 
	`°ªº‹
(
îr
));

69 
	`exô
(1);

70 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/ruptime.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sys/sockë.h
>

6 
	#MAXADDRLEN
 256

	)

7 
	#BUFLEN
 12
job


	)

9 
c⁄√˘_ªåy
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

12 
	$¥öt_u±ime
(
sockfd
)

14 
n
;

15 
buf
[
BUFLEN
];

17 (
n
 = 
	`ªcv
(
sockfd
, 
buf
, 
BUFLEN
, 0)) > 0)

18 
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
);

19 i‡(
n
 < 0)

20 
	`îr_sys
("recvÉrror");

21 
	}
}

24 
	$maö
(
¨gc
, *
¨gv
[])

26 
addröfo
 *
aûi°
, *
aù
;

27 
addröfo
 
höt
;

28 
sockfd
, 
îr
;

30 i‡(
¨gc
 != 2)

31 
	`îr_quô
("usage:Ñuptime hostname");

32 
höt
.
ai_Êags
 = 0;

33 
höt
.
ai_Ámûy
 = 0;

34 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

35 
höt
.
ai_¥Ÿocﬁ
 = 0;

36 
höt
.
ai_addæí
 = 0;

37 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

38 
höt
.
ai_addr
 = 
NULL
;

39 
höt
.
ai_√xt
 = 
NULL
;

40 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1], "ru±ime", &
höt
, &
aûi°
)) != 0)

41 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

42 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

43 i‡((
sockfd
 = 
	`sockë
(
aù
->
ai_Ámûy
, 
SOCK_STREAM
, 0)) < 0)

44 
îr
 = 
î∫o
;

45 i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
aù
->
ai_addr
,áù->
ai_addæí
) < 0) {

46 
îr
 = 
î∫o
;

48 
	`¥öt_u±ime
(
sockfd
);

49 
	`exô
(0);

52 
	`Ârötf
(
°dîr
, "ˇn'àc⁄√˘Åÿ%s: %s\n", 
¨gv
[1],

53 
	`°ªº‹
(
îr
));

54 
	`exô
(1);

55 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed-dg.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<sys/sockë.h
>

7 
	#BUFLEN
 12
job


	)

8 
	#MAXADDRLEN
 256

	)

10 #i‚de‡
HOST_NAME_MAX


11 
	#HOST_NAME_MAX
 256

	)

14 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

17 
	$£rve
(
sockfd
)

19 
n
;

20 
sockÀn_t
 
Æí
;

21 
FILE
 *
Â
;

22 
buf
[
BUFLEN
];

23 
abuf
[
MAXADDRLEN
];

26 
Æí
 = 
MAXADDRLEN
;

27 i‡((
n
 = 
	`ªcv‰om
(
sockfd
, 
buf
, 
BUFLEN
, 0,

28 (
sockaddr
 *)
abuf
, &
Æí
)) < 0) {

29 
	`sy¶og
(
LOG_ERR
, "ruptimed:ÑecvfromÉrror: %s",

30 
	`°ªº‹
(
î∫o
));

31 
	`exô
(1);

33 i‡((
Â
 = 
	`p›í
("/u§/bö/u±ime", "r")Ë=
NULL
) {

34 
	`•rötf
(
buf
, "îr‹: %s\n", 
	`°ªº‹
(
î∫o
));

35 
	`£ndto
(
sockfd
, 
buf
, 
	`°æí
(buf), 0,

36 (
sockaddr
 *)
abuf
, 
Æí
);

38 i‡(
	`fgës
(
buf
, 
BUFLEN
, 
Â
Ë!
NULL
)

39 
	`£ndto
(
sockfd
, 
buf
, 
	`°æí
(buf), 0,

40 (
sockaddr
 *)
abuf
, 
Æí
);

41 
	`p˛o£
(
Â
);

44 
	}
}

47 
	$maö
(
¨gc
, *
¨gv
[])

49 
addröfo
 *
aûi°
, *
aù
;

50 
addröfo
 
höt
;

51 
sockfd
, 
îr
, 
n
;

52 *
ho°
;

54 i‡(
¨gc
 != 1)

55 
	`îr_quô
("usage:Ñuptimed");

56 #ifde‡
_SC_HOST_NAME_MAX


57 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

58 i‡(
n
 < 0)

60 
n
 = 
HOST_NAME_MAX
;

61 
ho°
 = 
	`mÆloc
(
n
);

62 i‡(
ho°
 =
NULL
)

63 
	`îr_sys
("mallocÉrror");

64 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

65 
	`îr_sys
("gethostnameÉrror");

66 
	`d´m⁄ize
("ruptimed");

67 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

68 
höt
.
ai_Ámûy
 = 0;

69 
höt
.
ai_sockty≥
 = 
SOCK_DGRAM
;

70 
höt
.
ai_¥Ÿocﬁ
 = 0;

71 
höt
.
ai_addæí
 = 0;

72 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

73 
höt
.
ai_addr
 = 
NULL
;

74 
höt
.
ai_√xt
 = 
NULL
;

75 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

76 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

77 
	`gai_°ªº‹
(
îr
));

78 
	`exô
(1);

80 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

81 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_DGRAM
, 
aù
->
ai_addr
,

82 
aù
->
ai_addæí
, 0)) >= 0) {

83 
	`£rve
(
sockfd
);

84 
	`exô
(0);

87 
	`exô
(1);

88 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed-fd.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<f˙é.h
>

6 
	~<sys/sockë.h
>

7 
	~<sys/waô.h
>

9 
	#QLEN
 10

	)

11 #i‚de‡
HOST_NAME_MAX


12 
	#HOST_NAME_MAX
 256

	)

15 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

18 
	$£rve
(
sockfd
)

20 
˛fd
, 
°©us
;

21 
pid_t
 
pid
;

24 
˛fd
 = 
	`ac˚±
(
sockfd
, 
NULL
, NULL);

25 i‡(
˛fd
 < 0) {

26 
	`sy¶og
(
LOG_ERR
, "ruptimed:ácceptÉrror: %s",

27 
	`°ªº‹
(
î∫o
));

28 
	`exô
(1);

30 i‡((
pid
 = 
	`f‹k
()) < 0) {

31 
	`sy¶og
(
LOG_ERR
, "ruptimed: forkÉrror: %s",

32 
	`°ªº‹
(
î∫o
));

33 
	`exô
(1);

34 } i‡(
pid
 == 0) {

42 i‡(
	`dup2
(
˛fd
, 
STDOUT_FILENO
) != STDOUT_FILENO ||

43 
	`dup2
(
˛fd
, 
STDERR_FILENO
) != STDERR_FILENO) {

44 
	`sy¶og
(
LOG_ERR
, "ruptimed: unexpectedÉrror");

45 
	`exô
(1);

47 
	`˛o£
(
˛fd
);

48 
	`exe˛
("/usr/bin/uptime", "uptime", (*)0);

49 
	`sy¶og
(
LOG_ERR
, "ruptimed: unexpectedÑeturn fromÉxec: %s",

50 
	`°ªº‹
(
î∫o
));

52 
	`˛o£
(
˛fd
);

53 
	`waôpid
(
pid
, &
°©us
, 0);

56 
	}
}

59 
	$maö
(
¨gc
, *
¨gv
[])

61 
addröfo
 *
aûi°
, *
aù
;

62 
addröfo
 
höt
;

63 
sockfd
, 
îr
, 
n
;

64 *
ho°
;

66 i‡(
¨gc
 != 1)

67 
	`îr_quô
("usage:Ñuptimed");

68 #ifde‡
_SC_HOST_NAME_MAX


69 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

70 i‡(
n
 < 0)

72 
n
 = 
HOST_NAME_MAX
;

73 
ho°
 = 
	`mÆloc
(
n
);

74 i‡(
ho°
 =
NULL
)

75 
	`îr_sys
("mallocÉrror");

76 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

77 
	`îr_sys
("gethostnameÉrror");

78 
	`d´m⁄ize
("ruptimed");

79 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

80 
höt
.
ai_Ámûy
 = 0;

81 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

82 
höt
.
ai_¥Ÿocﬁ
 = 0;

83 
höt
.
ai_addæí
 = 0;

84 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

85 
höt
.
ai_addr
 = 
NULL
;

86 
höt
.
ai_√xt
 = 
NULL
;

87 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

88 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

89 
	`gai_°ªº‹
(
îr
));

90 
	`exô
(1);

92 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

93 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

94 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

95 
	`£rve
(
sockfd
);

96 
	`exô
(0);

99 
	`exô
(1);

100 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<sys/sockë.h
>

7 
	#BUFLEN
 12
job


	)

8 
	#QLEN
 10

	)

10 #i‚de‡
HOST_NAME_MAX


11 
	#HOST_NAME_MAX
 256

	)

14 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

17 
	$£rve
(
sockfd
)

19 
˛fd
;

20 
FILE
 *
Â
;

21 
buf
[
BUFLEN
];

24 
˛fd
 = 
	`ac˚±
(
sockfd
, 
NULL
, NULL);

25 i‡(
˛fd
 < 0) {

26 
	`sy¶og
(
LOG_ERR
, "ruptimed:ácceptÉrror: %s",

27 
	`°ªº‹
(
î∫o
));

28 
	`exô
(1);

30 i‡((
Â
 = 
	`p›í
("/u§/bö/u±ime", "r")Ë=
NULL
) {

31 
	`•rötf
(
buf
, "îr‹: %s\n", 
	`°ªº‹
(
î∫o
));

32 
	`£nd
(
˛fd
, 
buf
, 
	`°æí
(buf), 0);

34 
	`fgës
(
buf
, 
BUFLEN
, 
Â
Ë!
NULL
)

35 
	`£nd
(
˛fd
, 
buf
, 
	`°æí
(buf), 0);

36 
	`p˛o£
(
Â
);

38 
	`˛o£
(
˛fd
);

40 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[])

45 
addröfo
 *
aûi°
, *
aù
;

46 
addröfo
 
höt
;

47 
sockfd
, 
îr
, 
n
;

48 *
ho°
;

50 i‡(
¨gc
 != 1)

51 
	`îr_quô
("usage:Ñuptimed");

52 #ifde‡
_SC_HOST_NAME_MAX


53 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

54 i‡(
n
 < 0)

56 
n
 = 
HOST_NAME_MAX
;

57 
ho°
 = 
	`mÆloc
(
n
);

58 i‡(
ho°
 =
NULL
)

59 
	`îr_sys
("mallocÉrror");

60 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

61 
	`îr_sys
("gethostnameÉrror");

62 
	`d´m⁄ize
("ruptimed");

63 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

64 
höt
.
ai_Ámûy
 = 0;

65 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

66 
höt
.
ai_¥Ÿocﬁ
 = 0;

67 
höt
.
ai_addæí
 = 0;

68 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

69 
höt
.
ai_addr
 = 
NULL
;

70 
höt
.
ai_√xt
 = 
NULL
;

71 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

72 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

73 
	`gai_°ªº‹
(
îr
));

74 
	`exô
(1);

76 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

77 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

78 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

79 
	`£rve
(
sockfd
);

80 
	`exô
(0);

83 
	`exô
(1);

84 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/sendfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

8 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

10 
cmsghdr
 *
	gcm±r
 = 
NULL
;

17 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

19 
iovec
 
iov
[1];

20 
msghdr
 
msg
;

21 
buf
[2];

23 
iov
[0].
iov_ba£
 = 
buf
;

24 
iov
[0].
iov_Àn
 = 2;

25 
msg
.
msg_iov
 = 
iov
;

26 
msg
.
msg_iovÀn
 = 1;

27 
msg
.
msg_«me
 = 
NULL
;

28 
msg
.
msg_«mñí
 = 0;

29 i‡(
fd_to_£nd
 < 0) {

30 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

31 
msg
.
msg_c⁄åﬁÀn
 = 0;

32 
buf
[1] = -
fd_to_£nd
;

33 i‡(
buf
[1] == 0)

34 
buf
[1] = 1;

36 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

38 
cm±r
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

39 
cm±r
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

40 
cm±r
->
cmsg_Àn
 = 
CONTROLLEN
;

41 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

42 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

43 *(*)
	`CMSG_DATA
(
cm±r
Ë
fd_to_£nd
;

44 
buf
[1] = 0;

46 
buf
[0] = 0;

47 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

50 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/sendfd2.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

4 #i‡
deföed
(
SCM_CREDS
)

5 
	#CREDSTRUCT
 
cmsg¸ed


	)

6 
	#SCM_CREDTYPE
 
SCM_CREDS


	)

7 #ñi‡
deföed
(
SCM_CREDENTIALS
)

8 
	#CREDSTRUCT
 
u¸ed


	)

9 
	#SCM_CREDTYPE
 
SCM_CREDENTIALS


	)

11 #îr‹ 
∑ssög
 
¸edítüls
 
is
 
unsuµ‹ãd
!

15 
	#RIGHTSLEN
 
	`CMSG_LEN
(())

	)

16 
	#CREDSLEN
 
	`CMSG_LEN
((
CREDSTRUCT
))

	)

17 
	#CONTROLLEN
 (
RIGHTSLEN
 + 
CREDSLEN
)

	)

19 
cmsghdr
 *
	gcm±r
 = 
NULL
;

26 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

28 
CREDSTRUCT
 *
¸edp
;

29 
cmsghdr
 *
cmp
;

30 
iovec
 
iov
[1];

31 
msghdr
 
msg
;

32 
buf
[2];

34 
iov
[0].
iov_ba£
 = 
buf
;

35 
iov
[0].
iov_Àn
 = 2;

36 
msg
.
msg_iov
 = 
iov
;

37 
msg
.
msg_iovÀn
 = 1;

38 
msg
.
msg_«me
 = 
NULL
;

39 
msg
.
msg_«mñí
 = 0;

40 
msg
.
msg_Êags
 = 0;

41 i‡(
fd_to_£nd
 < 0) {

42 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

43 
msg
.
msg_c⁄åﬁÀn
 = 0;

44 
buf
[1] = -
fd_to_£nd
;

45 i‡(
buf
[1] == 0)

46 
buf
[1] = 1;

48 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

50 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

51 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

52 
cmp
 = 
cm±r
;

53 
cmp
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

54 
cmp
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

55 
cmp
->
cmsg_Àn
 = 
RIGHTSLEN
;

56 *(*)
	`CMSG_DATA
(
cmp
Ë
fd_to_£nd
;

58 
cmp
 = 
	`CMSG_NXTHDR
(&
msg
, cmp);

59 
cmp
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

60 
cmp
->
cmsg_ty≥
 = 
SCM_CREDTYPE
;

61 
cmp
->
cmsg_Àn
 = 
CREDSLEN
;

62 
¸edp
 = (
CREDSTRUCT
 *)
	`CMSG_DATA
(
cmp
);

63 #i‡
	`deföed
(
SCM_CREDENTIALS
)

64 
¸edp
->
uid
 = 
	`gëeuid
();

65 
¸edp
->
gid
 = 
	`gëegid
();

66 
¸edp
->
pid
 = 
	`gëpid
();

68 
buf
[1] = 0;

70 
buf
[0] = 0;

71 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

74 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/servaccept.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<time.h
>

5 
	~<î∫o.h
>

7 
	#STALE
 30

	)

16 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

18 
˛ifd
, 
Àn
, 
îr
, 
rvÆ
;

19 
time_t
 
°Æëime
;

20 
sockaddr_un
 
un
;

21 
°©
 
°©buf
;

23 
Àn
 = (
un
);

24 i‡((
˛ifd
 = 
	`ac˚±
(
li°ífd
, (
sockaddr
 *)&
un
, &
Àn
)) < 0)

28 
Àn
 -
	`off£tof
(
sockaddr_un
, 
sun_∑th
);

29 
un
.
sun_∑th
[
Àn
] = 0;

31 i‡(
	`°©
(
un
.
sun_∑th
, &
°©buf
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

35 #ifdef 
S_ISSOCK


36 i‡(
	`S_ISSOCK
(
°©buf
.
°_mode
) == 0) {

37 
rvÆ
 = -3;

38 
îrout
;

41 i‡((
°©buf
.
°_mode
 & (
S_IRWXG
 | 
S_IRWXO
)) ||

42 (
°©buf
.
°_mode
 & 
S_IRWXU
) != S_IRWXU) {

43 
rvÆ
 = -4;

44 
îrout
;

47 
°Æëime
 = 
	`time
(
NULL
Ë- 
STALE
;

48 i‡(
°©buf
.
°_©ime
 < 
°Æëime
 ||

49 
°©buf
.
°_˘ime
 < 
°Æëime
 ||

50 
°©buf
.
°_mtime
 < 
°Æëime
) {

51 
rvÆ
 = -5;

52 
îrout
;

55 i‡(
uid±r
 !
NULL
)

56 *
uid±r
 = 
°©buf
.
°_uid
;

57 
	`u∆ök
(
un
.
sun_∑th
);

58 (
˛ifd
);

60 
îrout
:

61 
îr
 = 
î∫o
;

62 
	`˛o£
(
˛ifd
);

63 
î∫o
 = 
îr
;

64 (
rvÆ
);

65 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/servlisten.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#QLEN
 10

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
fd
, 
Àn
, 
îr
, 
rvÆ
;

16 
sockaddr_un
 
un
;

19 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

22 
	`u∆ök
(
«me
);

25 
	`mem£t
(&
un
, 0, (un));

26 
un
.
sun_Ámûy
 = 
AF_UNIX
;

27 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

28 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

31 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

36 i‡(
	`li°í
(
fd
, 
QLEN
) < 0) {

37 
rvÆ
 = -3;

38 
îrout
;

40 (
fd
);

42 
îrout
:

43 
îr
 = 
î∫o
;

44 
	`˛o£
(
fd
);

45 
î∫o
 = 
îr
;

46 (
rvÆ
);

47 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/sockets/spipe.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

9 
	$s_pùe
(
fd
[2])

11 (
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
fd
));

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/std/conf.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 
¥_sysc⁄f
(*, );

6 
¥_∑thc⁄f
(*, *, );

9 
	$maö
(
¨gc
, *
¨gv
[])

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:á.out <dirname>");

14 #ifde‡
ARG_MAX


15 
	`¥ötf
("ARG_MAX deföedÅÿbê%d\n", 
ARG_MAX
+0);

17 
	`¥ötf
("no symbol for ARG_MAX\n");

19 #ifde‡
_SC_ARG_MAX


20 
	`¥_sysc⁄f
("ARG_MAX =", 
_SC_ARG_MAX
);

22 
	`¥ötf
("no symbol for _SC_ARG_MAX\n");

24 #ifde‡
ATEXIT_MAX


25 
	`¥ötf
("ATEXIT_MAX deföedÅÿbê%d\n", 
ATEXIT_MAX
+0);

27 
	`¥ötf
("no symbol for ATEXIT_MAX\n");

29 #ifde‡
_SC_ATEXIT_MAX


30 
	`¥_sysc⁄f
("ATEXIT_MAX =", 
_SC_ATEXIT_MAX
);

32 
	`¥ötf
("no symbol for _SC_ATEXIT_MAX\n");

34 #ifde‡
CHARCLASS_NAME_MAX


35 
	`¥ötf
("CHARCLASS_NAME_MAX deföedÅÿbê%d\n", 
CHARCLASS_NAME_MAX
+0);

37 
	`¥ötf
("no symbol for CHARCLASS_NAME_MAX\n");

39 #ifde‡
_SC_CHARCLASS_NAME_MAX


40 
	`¥_sysc⁄f
("CHARCLASS_NAME_MAX =", 
_SC_CHARCLASS_NAME_MAX
);

42 
	`¥ötf
("no symbol for _SC_CHARCLASS_NAME_MAX\n");

44 #ifde‡
CHILD_MAX


45 
	`¥ötf
("CHILD_MAX deföedÅÿbê%d\n", 
CHILD_MAX
+0);

47 
	`¥ötf
("no symbol for CHILD_MAX\n");

49 #ifde‡
_SC_CHILD_MAX


50 
	`¥_sysc⁄f
("CHILD_MAX =", 
_SC_CHILD_MAX
);

52 
	`¥ötf
("no symbol for _SC_CHILD_MAX\n");

54 #ifde‡
CLOCKTICKSPERSECOND


55 
	`¥ötf
("CLOCKTICKSPERSECOND /*˛ockÅicks/£c⁄d*/ deföedÅÿbê%d\n", 
CLOCKTICKSPERSECOND
 +0);

57 
	`¥ötf
("no symbol for CLOCKTICKSPERSECOND /*clockÅicks/second*/\n");

59 #ifde‡
_SC_CLK_TCK


60 
	`¥_sysc⁄f
("CLOCKTICKSPERSECOND /*˛ockÅicks/£c⁄d*/ =", 
_SC_CLK_TCK
);

62 
	`¥ötf
("no symbol for _SC_CLK_TCK\n");

64 #ifde‡
COLL_WEIGHTS_MAX


65 
	`¥ötf
("COLL_WEIGHTS_MAX deföedÅÿbê%d\n", 
COLL_WEIGHTS_MAX
+0);

67 
	`¥ötf
("no symbol for COLL_WEIGHTS_MAX\n");

69 #ifde‡
_SC_COLL_WEIGHTS_MAX


70 
	`¥_sysc⁄f
("COLL_WEIGHTS_MAX =", 
_SC_COLL_WEIGHTS_MAX
);

72 
	`¥ötf
("no symbol for _SC_COLL_WEIGHTS_MAX\n");

74 #ifde‡
HOST_NAME_MAX


75 
	`¥ötf
("HOST_NAME_MAX deföedÅÿbê%d\n", 
HOST_NAME_MAX
+0);

77 
	`¥ötf
("no symbol for HOST_NAME_MAX\n");

79 #ifde‡
_SC_HOST_NAME_MAX


80 
	`¥_sysc⁄f
("HOST_NAME_MAX =", 
_SC_HOST_NAME_MAX
);

82 
	`¥ötf
("no symbol for _SC_HOST_NAME_MAX\n");

84 #ifde‡
IOV_MAX


85 
	`¥ötf
("IOV_MAX deföedÅÿbê%d\n", 
IOV_MAX
+0);

87 
	`¥ötf
("no symbol for IOV_MAX\n");

89 #ifde‡
_SC_IOV_MAX


90 
	`¥_sysc⁄f
("IOV_MAX =", 
_SC_IOV_MAX
);

92 
	`¥ötf
("no symbol for _SC_IOV_MAX\n");

94 #ifde‡
LINE_MAX


95 
	`¥ötf
("LINE_MAX deföedÅÿbê%d\n", 
LINE_MAX
+0);

97 
	`¥ötf
("no symbol for LINE_MAX\n");

99 #ifde‡
_SC_LINE_MAX


100 
	`¥_sysc⁄f
("LINE_MAX =", 
_SC_LINE_MAX
);

102 
	`¥ötf
("no symbol for _SC_LINE_MAX\n");

104 #ifde‡
LOGIN_NAME_MAX


105 
	`¥ötf
("LOGIN_NAME_MAX deföedÅÿbê%d\n", 
LOGIN_NAME_MAX
+0);

107 
	`¥ötf
("no symbol for LOGIN_NAME_MAX\n");

109 #ifde‡
_SC_LOGIN_NAME_MAX


110 
	`¥_sysc⁄f
("LOGIN_NAME_MAX =", 
_SC_LOGIN_NAME_MAX
);

112 
	`¥ötf
("no symbol for _SC_LOGIN_NAME_MAX\n");

114 #ifde‡
NGROUPS_MAX


115 
	`¥ötf
("NGROUPS_MAX deföedÅÿbê%d\n", 
NGROUPS_MAX
+0);

117 
	`¥ötf
("no symbol for NGROUPS_MAX\n");

119 #ifde‡
_SC_NGROUPS_MAX


120 
	`¥_sysc⁄f
("NGROUPS_MAX =", 
_SC_NGROUPS_MAX
);

122 
	`¥ötf
("no symbol for _SC_NGROUPS_MAX\n");

124 #ifde‡
OPEN_MAX


125 
	`¥ötf
("OPEN_MAX deföedÅÿbê%d\n", 
OPEN_MAX
+0);

127 
	`¥ötf
("no symbol for OPEN_MAX\n");

129 #ifde‡
_SC_OPEN_MAX


130 
	`¥_sysc⁄f
("OPEN_MAX =", 
_SC_OPEN_MAX
);

132 
	`¥ötf
("no symbol for _SC_OPEN_MAX\n");

134 #ifde‡
PAGESIZE


135 
	`¥ötf
("PAGESIZE deföedÅÿbê%d\n", 
PAGESIZE
+0);

137 
	`¥ötf
("no symbol for PAGESIZE\n");

139 #ifde‡
_SC_PAGESIZE


140 
	`¥_sysc⁄f
("PAGESIZE =", 
_SC_PAGESIZE
);

142 
	`¥ötf
("no symbol for _SC_PAGESIZE\n");

144 #ifde‡
PAGE_SIZE


145 
	`¥ötf
("PAGE_SIZE deföedÅÿbê%d\n", 
PAGE_SIZE
+0);

147 
	`¥ötf
("no symbol for PAGE_SIZE\n");

149 #ifde‡
_SC_PAGE_SIZE


150 
	`¥_sysc⁄f
("PAGE_SIZE =", 
_SC_PAGE_SIZE
);

152 
	`¥ötf
("no symbol for _SC_PAGE_SIZE\n");

154 #ifde‡
RE_DUP_MAX


155 
	`¥ötf
("RE_DUP_MAX deföedÅÿbê%d\n", 
RE_DUP_MAX
+0);

157 
	`¥ötf
("no symbol for RE_DUP_MAX\n");

159 #ifde‡
_SC_RE_DUP_MAX


160 
	`¥_sysc⁄f
("RE_DUP_MAX =", 
_SC_RE_DUP_MAX
);

162 
	`¥ötf
("no symbol for _SC_RE_DUP_MAX\n");

164 #ifde‡
STREAM_MAX


165 
	`¥ötf
("STREAM_MAX deföedÅÿbê%d\n", 
STREAM_MAX
+0);

167 
	`¥ötf
("no symbol for STREAM_MAX\n");

169 #ifde‡
_SC_STREAM_MAX


170 
	`¥_sysc⁄f
("STREAM_MAX =", 
_SC_STREAM_MAX
);

172 
	`¥ötf
("no symbol for _SC_STREAM_MAX\n");

174 #ifde‡
SYMLOOP_MAX


175 
	`¥ötf
("SYMLOOP_MAX deföedÅÿbê%d\n", 
SYMLOOP_MAX
+0);

177 
	`¥ötf
("no symbol for SYMLOOP_MAX\n");

179 #ifde‡
_SC_SYMLOOP_MAX


180 
	`¥_sysc⁄f
("SYMLOOP_MAX =", 
_SC_SYMLOOP_MAX
);

182 
	`¥ötf
("no symbol for _SC_SYMLOOP_MAX\n");

184 #ifde‡
TTY_NAME_MAX


185 
	`¥ötf
("TTY_NAME_MAX deföedÅÿbê%d\n", 
TTY_NAME_MAX
+0);

187 
	`¥ötf
("no symbol for TTY_NAME_MAX\n");

189 #ifde‡
_SC_TTY_NAME_MAX


190 
	`¥_sysc⁄f
("TTY_NAME_MAX =", 
_SC_TTY_NAME_MAX
);

192 
	`¥ötf
("no symbol for _SC_TTY_NAME_MAX\n");

194 #ifde‡
TZNAME_MAX


195 
	`¥ötf
("TZNAME_MAX deföedÅÿbê%d\n", 
TZNAME_MAX
+0);

197 
	`¥ötf
("no symbol for TZNAME_MAX\n");

199 #ifde‡
_SC_TZNAME_MAX


200 
	`¥_sysc⁄f
("TZNAME_MAX =", 
_SC_TZNAME_MAX
);

202 
	`¥ötf
("no symbol for _SC_TZNAME_MAX\n");

204 #ifde‡
MAX_CANON


205 
	`¥ötf
("MAX_CANON deföedÅÿbê%d\n", 
MAX_CANON
+0);

207 
	`¥ötf
("no symbol for MAX_CANON\n");

209 #ifde‡
_PC_MAX_CANON


210 
	`¥_∑thc⁄f
("MAX_CANON =", 
¨gv
[1], 
_PC_MAX_CANON
);

212 
	`¥ötf
("no symbol for _PC_MAX_CANON\n");

214 #ifde‡
MAX_INPUT


215 
	`¥ötf
("MAX_INPUT deföedÅÿbê%d\n", 
MAX_INPUT
+0);

217 
	`¥ötf
("no symbol for MAX_INPUT\n");

219 #ifde‡
_PC_MAX_INPUT


220 
	`¥_∑thc⁄f
("MAX_INPUT =", 
¨gv
[1], 
_PC_MAX_INPUT
);

222 
	`¥ötf
("no symbol for _PC_MAX_INPUT\n");

224 #ifde‡
FILESIZEBITS


225 
	`¥ötf
("FILESIZEBITS deföedÅÿbê%d\n", 
FILESIZEBITS
+0);

227 
	`¥ötf
("no symbol for FILESIZEBITS\n");

229 #ifde‡
_PC_FILESIZEBITS


230 
	`¥_∑thc⁄f
("FILESIZEBITS =", 
¨gv
[1], 
_PC_FILESIZEBITS
);

232 
	`¥ötf
("no symbol for _PC_FILESIZEBITS\n");

234 #ifde‡
LINK_MAX


235 
	`¥ötf
("LINK_MAX deföedÅÿbê%d\n", 
LINK_MAX
+0);

237 
	`¥ötf
("no symbol for LINK_MAX\n");

239 #ifde‡
_PC_LINK_MAX


240 
	`¥_∑thc⁄f
("LINK_MAX =", 
¨gv
[1], 
_PC_LINK_MAX
);

242 
	`¥ötf
("no symbol for _PC_LINK_MAX\n");

244 #ifde‡
NAME_MAX


245 
	`¥ötf
("NAME_MAX deföedÅÿbê%d\n", 
NAME_MAX
+0);

247 
	`¥ötf
("no symbol for NAME_MAX\n");

249 #ifde‡
_PC_NAME_MAX


250 
	`¥_∑thc⁄f
("NAME_MAX =", 
¨gv
[1], 
_PC_NAME_MAX
);

252 
	`¥ötf
("no symbol for _PC_NAME_MAX\n");

254 #ifde‡
PATH_MAX


255 
	`¥ötf
("PATH_MAX deföedÅÿbê%d\n", 
PATH_MAX
+0);

257 
	`¥ötf
("no symbol for PATH_MAX\n");

259 #ifde‡
_PC_PATH_MAX


260 
	`¥_∑thc⁄f
("PATH_MAX =", 
¨gv
[1], 
_PC_PATH_MAX
);

262 
	`¥ötf
("no symbol for _PC_PATH_MAX\n");

264 #ifde‡
PIPE_BUF


265 
	`¥ötf
("PIPE_BUF deföedÅÿbê%d\n", 
PIPE_BUF
+0);

267 
	`¥ötf
("no symbol for PIPE_BUF\n");

269 #ifde‡
_PC_PIPE_BUF


270 
	`¥_∑thc⁄f
("PIPE_BUF =", 
¨gv
[1], 
_PC_PIPE_BUF
);

272 
	`¥ötf
("no symbol for _PC_PIPE_BUF\n");

274 #ifde‡
SYMLINK_MAX


275 
	`¥ötf
("SYMLINK_MAX deföedÅÿbê%d\n", 
SYMLINK_MAX
+0);

277 
	`¥ötf
("no symbol for SYMLINK_MAX\n");

279 #ifde‡
_PC_SYMLINK_MAX


280 
	`¥_∑thc⁄f
("SYMLINK_MAX =", 
¨gv
[1], 
_PC_SYMLINK_MAX
);

282 
	`¥ötf
("no symbol for _PC_SYMLINK_MAX\n");

284 
	`exô
(0);

285 
	}
}

288 
	$¥_sysc⁄f
(*
mesg
, 
«me
)

290 
vÆ
;

292 
	`Âuts
(
mesg
, 
°dout
);

293 
î∫o
 = 0;

294 i‡((
vÆ
 = 
	`sysc⁄f
(
«me
)) < 0) {

295 i‡(
î∫o
 != 0) {

296 i‡(
î∫o
 =
EINVAL
)

297 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

299 
	`îr_sys
("sysconfÉrror");

301 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

304 
	`¥ötf
(" %ld\n", 
vÆ
);

306 
	}
}

309 
	$¥_∑thc⁄f
(*
mesg
, *
∑th
, 
«me
)

311 
vÆ
;

313 
	`Âuts
(
mesg
, 
°dout
);

314 
î∫o
 = 0;

315 i‡((
vÆ
 = 
	`∑thc⁄f
(
∑th
, 
«me
)) < 0) {

316 i‡(
î∫o
 != 0) {

317 i‡(
î∫o
 =
EINVAL
)

318 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

320 
	`îr_sys
("∑thc⁄‡îr‹,Ö©h = %s", 
∑th
);

322 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

325 
	`¥ötf
(" %ld\n", 
vÆ
);

327 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/std/options.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
¥_sysc⁄f
(*, );

5 
¥_∑thc⁄f
(*, *, );

8 
	$maö
(
¨gc
, *
¨gv
[])

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <dirname>");

13 #ifde‡
_POSIX_ADVISORY_INFO


14 
	`¥ötf
("_POSIX_ADVISORY_INFO i†deföed (vÆ i†%d)\n", 
_POSIX_ADVISORY_INFO
+0);

16 
	`¥ötf
("_POSIX_ADVISORY_INFO is undefined\n");

18 #ifde‡
_SC_ADVISORY_INFO


19 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_ADVISORY_INFO =", 
_SC_ADVISORY_INFO
);

21 
	`¥ötf
("no symbol for _POSIX_ADVISORY_INFO\n");

23 
	`¥ötf
("\n");

24 #ifde‡
_POSIX_ASYNCHRONOUS_IO


25 
	`¥ötf
("_POSIX_ASYNCHRONOUS_IO i†deföed (vÆ i†%d)\n", 
_POSIX_ASYNCHRONOUS_IO
+0);

27 
	`¥ötf
("_POSIX_ASYNCHRONOUS_IO is undefined\n");

29 #ifde‡
_SC_ASYNCHRONOUS_IO


30 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_ASYNCHRONOUS_IO =", 
_SC_ASYNCHRONOUS_IO
);

32 
	`¥ötf
("no symbol for _POSIX_ASYNCHRONOUS_IO\n");

34 
	`¥ötf
("\n");

35 #ifde‡
_POSIX_BARRIERS


36 
	`¥ötf
("_POSIX_BARRIERS i†deföed (vÆ i†%d)\n", 
_POSIX_BARRIERS
+0);

38 
	`¥ötf
("_POSIX_BARRIERS is undefined\n");

40 #ifde‡
_SC_BARRIERS


41 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_BARRIERS =", 
_SC_BARRIERS
);

43 
	`¥ötf
("no symbol for _POSIX_BARRIERS\n");

45 
	`¥ötf
("\n");

46 #ifde‡
_POSIX_CPUTIME


47 
	`¥ötf
("_POSIX_CPUTIME i†deföed (vÆ i†%d)\n", 
_POSIX_CPUTIME
+0);

49 
	`¥ötf
("_POSIX_CPUTIME is undefined\n");

51 #ifde‡
_SC_CPUTIME


52 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_CPUTIME =", 
_SC_CPUTIME
);

54 
	`¥ötf
("no symbol for _POSIX_CPUTIME\n");

56 
	`¥ötf
("\n");

57 #ifde‡
_POSIX_CLOCK_SELECTION


58 
	`¥ötf
("_POSIX_CLOCK_SELECTION i†deföed (vÆ i†%d)\n", 
_POSIX_CLOCK_SELECTION
+0);

60 
	`¥ötf
("_POSIX_CLOCK_SELECTION is undefined\n");

62 #ifde‡
_SC_CLOCK_SELECTION


63 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_CLOCK_SELECTION =", 
_SC_CLOCK_SELECTION
);

65 
	`¥ötf
("no symbol for _POSIX_CLOCK_SELECTION\n");

67 
	`¥ötf
("\n");

68 #ifde‡
_POSIX_FSYNC


69 
	`¥ötf
("_POSIX_FSYNC i†deföed (vÆ i†%d)\n", 
_POSIX_FSYNC
+0);

71 
	`¥ötf
("_POSIX_FSYNC is undefined\n");

73 #ifde‡
_SC_FSYNC


74 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_FSYNC =", 
_SC_FSYNC
);

76 
	`¥ötf
("no symbol for _POSIX_FSYNC\n");

78 
	`¥ötf
("\n");

79 #ifde‡
_POSIX_IPV6


80 
	`¥ötf
("_POSIX_IPV6 i†deföed (vÆ i†%d)\n", 
_POSIX_IPV6
+0);

82 
	`¥ötf
("_POSIX_IPV6 is undefined\n");

84 #ifde‡
_SC_IPV6


85 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_IPV6 =", 
_SC_IPV6
);

87 
	`¥ötf
("no symbol for _POSIX_IPV6\n");

89 
	`¥ötf
("\n");

90 #ifde‡
_POSIX_MAPPED_FILES


91 
	`¥ötf
("_POSIX_MAPPED_FILES i†deföed (vÆ i†%d)\n", 
_POSIX_MAPPED_FILES
+0);

93 
	`¥ötf
("_POSIX_MAPPED_FILES is undefined\n");

95 #ifde‡
_SC_MAPPED_FILES


96 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MAPPED_FILES =", 
_SC_MAPPED_FILES
);

98 
	`¥ötf
("no symbol for _POSIX_MAPPED_FILES\n");

100 
	`¥ötf
("\n");

101 #ifde‡
_POSIX_MEMLOCK


102 
	`¥ötf
("_POSIX_MEMLOCK i†deföed (vÆ i†%d)\n", 
_POSIX_MEMLOCK
+0);

104 
	`¥ötf
("_POSIX_MEMLOCK is undefined\n");

106 #ifde‡
_SC_MEMLOCK


107 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMLOCK =", 
_SC_MEMLOCK
);

109 
	`¥ötf
("no symbol for _POSIX_MEMLOCK\n");

111 
	`¥ötf
("\n");

112 #ifde‡
_POSIX_MEMLOCK_RANGE


113 
	`¥ötf
("_POSIX_MEMLOCK_RANGE i†deföed (vÆ i†%d)\n", 
_POSIX_MEMLOCK_RANGE
+0);

115 
	`¥ötf
("_POSIX_MEMLOCK_RANGE is undefined\n");

117 #ifde‡
_SC_MEMLOCK_RANGE


118 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMLOCK_RANGE =", 
_SC_MEMLOCK_RANGE
);

120 
	`¥ötf
("no symbol for _POSIX_MEMLOCK_RANGE\n");

122 
	`¥ötf
("\n");

123 #ifde‡
_POSIX_MONOTONIC_CLOCK


124 
	`¥ötf
("_POSIX_MONOTONIC_CLOCK i†deföed (vÆ i†%d)\n", 
_POSIX_MONOTONIC_CLOCK
+0);

126 
	`¥ötf
("_POSIX_MONOTONIC_CLOCK is undefined\n");

128 #ifde‡
_SC_MONOTONIC_CLOCK


129 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MONOTONIC_CLOCK =", 
_SC_MONOTONIC_CLOCK
);

131 
	`¥ötf
("no symbol for _POSIX_MONOTONIC_CLOCK\n");

133 
	`¥ötf
("\n");

134 #ifde‡
_POSIX_MEMORY_PROTECTION


135 
	`¥ötf
("_POSIX_MEMORY_PROTECTION i†deföed (vÆ i†%d)\n", 
_POSIX_MEMORY_PROTECTION
+0);

137 
	`¥ötf
("_POSIX_MEMORY_PROTECTION is undefined\n");

139 #ifde‡
_SC_MEMORY_PROTECTION


140 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMORY_PROTECTION =", 
_SC_MEMORY_PROTECTION
);

142 
	`¥ötf
("no symbol for _POSIX_MEMORY_PROTECTION\n");

144 
	`¥ötf
("\n");

145 #ifde‡
_POSIX_MESSAGE_PASSING


146 
	`¥ötf
("_POSIX_MESSAGE_PASSING i†deföed (vÆ i†%d)\n", 
_POSIX_MESSAGE_PASSING
+0);

148 
	`¥ötf
("_POSIX_MESSAGE_PASSING is undefined\n");

150 #ifde‡
_SC_MESSAGE_PASSING


151 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MESSAGE_PASSING =", 
_SC_MESSAGE_PASSING
);

153 
	`¥ötf
("no symbol for _POSIX_MESSAGE_PASSING\n");

155 
	`¥ötf
("\n");

156 #ifde‡
_POSIX_PRIORITIZED_IO


157 
	`¥ötf
("_POSIX_PRIORITIZED_IO i†deföed (vÆ i†%d)\n", 
_POSIX_PRIORITIZED_IO
+0);

159 
	`¥ötf
("_POSIX_PRIORITIZED_IO is undefined\n");

161 #ifde‡
_SC_PRIORITIZED_IO


162 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_PRIORITIZED_IO =", 
_SC_PRIORITIZED_IO
);

164 
	`¥ötf
("no symbol for _POSIX_PRIORITIZED_IO\n");

166 
	`¥ötf
("\n");

167 #ifde‡
_POSIX_PRIORITIZED_SCHEDULING


168 
	`¥ötf
("_POSIX_PRIORITIZED_SCHEDULING i†deföed (vÆ i†%d)\n", 
_POSIX_PRIORITIZED_SCHEDULING
+0);

170 
	`¥ötf
("_POSIX_PRIORITIZED_SCHEDULING is undefined\n");

172 #ifde‡
_SC_PRIORITIZED_SCHEDULING


173 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_PRIORITIZED_SCHEDULING =", 
_SC_PRIORITIZED_SCHEDULING
);

175 
	`¥ötf
("no symbol for _POSIX_PRIORITIZED_SCHEDULING\n");

177 
	`¥ötf
("\n");

178 #ifde‡
_POSIX_RAW_SOCKETS


179 
	`¥ötf
("_POSIX_RAW_SOCKETS i†deföed (vÆ i†%d)\n", 
_POSIX_RAW_SOCKETS
+0);

181 
	`¥ötf
("_POSIX_RAW_SOCKETS is undefined\n");

183 #ifde‡
_SC_RAW_SOCKETS


184 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_RAW_SOCKETS =", 
_SC_RAW_SOCKETS
);

186 
	`¥ötf
("no symbol for _POSIX_RAW_SOCKETS\n");

188 
	`¥ötf
("\n");

189 #ifde‡
_POSIX_REALTIME_SIGNALS


190 
	`¥ötf
("_POSIX_REALTIME_SIGNALS i†deföed (vÆ i†%d)\n", 
_POSIX_REALTIME_SIGNALS
+0);

192 
	`¥ötf
("_POSIX_REALTIME_SIGNALS is undefined\n");

194 #ifde‡
_SC_REALTIME_SIGNALS


195 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_REALTIME_SIGNALS =", 
_SC_REALTIME_SIGNALS
);

197 
	`¥ötf
("no symbol for _POSIX_REALTIME_SIGNALS\n");

199 
	`¥ötf
("\n");

200 #ifde‡
_POSIX_SEMAPHORES


201 
	`¥ötf
("_POSIX_SEMAPHORES i†deföed (vÆ i†%d)\n", 
_POSIX_SEMAPHORES
+0);

203 
	`¥ötf
("_POSIX_SEMAPHORES is undefined\n");

205 #ifde‡
_SC_SEMAPHORES


206 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SEMAPHORES =", 
_SC_SEMAPHORES
);

208 
	`¥ötf
("no symbol for _POSIX_SEMAPHORES\n");

210 
	`¥ötf
("\n");

211 #ifde‡
_POSIX_SHARED_MEMORY_OBJECTS


212 
	`¥ötf
("_POSIX_SHARED_MEMORY_OBJECTS i†deföed (vÆ i†%d)\n", 
_POSIX_SHARED_MEMORY_OBJECTS
+0);

214 
	`¥ötf
("_POSIX_SHARED_MEMORY_OBJECTS is undefined\n");

216 #ifde‡
_SC_SHARED_MEMORY_OBJECTS


217 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SHARED_MEMORY_OBJECTS =", 
_SC_SHARED_MEMORY_OBJECTS
);

219 
	`¥ötf
("no symbol for _POSIX_SHARED_MEMORY_OBJECTS\n");

221 
	`¥ötf
("\n");

222 #ifde‡
_POSIX_SYNCHRONIZED_IO


223 
	`¥ötf
("_POSIX_SYNCHRONIZED_IO i†deföed (vÆ i†%d)\n", 
_POSIX_SYNCHRONIZED_IO
+0);

225 
	`¥ötf
("_POSIX_SYNCHRONIZED_IO is undefined\n");

227 #ifde‡
_SC_SYNCHRONIZED_IO


228 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SYNCHRONIZED_IO =", 
_SC_SYNCHRONIZED_IO
);

230 
	`¥ötf
("no symbol for _POSIX_SYNCHRONIZED_IO\n");

232 
	`¥ötf
("\n");

233 #ifde‡
_POSIX_SPIN_LOCKS


234 
	`¥ötf
("_POSIX_SPIN_LOCKS i†deföed (vÆ i†%d)\n", 
_POSIX_SPIN_LOCKS
+0);

236 
	`¥ötf
("_POSIX_SPIN_LOCKS is undefined\n");

238 #ifde‡
_SC_SPIN_LOCKS


239 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPIN_LOCKS =", 
_SC_SPIN_LOCKS
);

241 
	`¥ötf
("no symbol for _POSIX_SPIN_LOCKS\n");

243 
	`¥ötf
("\n");

244 #ifde‡
_POSIX_SPAWN


245 
	`¥ötf
("_POSIX_SPAWN i†deföed (vÆ i†%d)\n", 
_POSIX_SPAWN
+0);

247 
	`¥ötf
("_POSIX_SPAWN is undefined\n");

249 #ifde‡
_SC_SPAWN


250 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPAWN =", 
_SC_SPAWN
);

252 
	`¥ötf
("no symbol for _POSIX_SPAWN\n");

254 
	`¥ötf
("\n");

255 #ifde‡
_POSIX_SPORADIC_SERVER


256 
	`¥ötf
("_POSIX_SPORADIC_SERVER i†deföed (vÆ i†%d)\n", 
_POSIX_SPORADIC_SERVER
+0);

258 
	`¥ötf
("_POSIX_SPORADIC_SERVER is undefined\n");

260 #ifde‡
_SC_SPORADIC_SERVER


261 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPORADIC_SERVER =", 
_SC_SPORADIC_SERVER
);

263 
	`¥ötf
("no symbol for _POSIX_SPORADIC_SERVER\n");

265 
	`¥ötf
("\n");

266 #ifde‡
_POSIX_THREAD_CPUTIME


267 
	`¥ötf
("_POSIX_THREAD_CPUTIME i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_CPUTIME
+0);

269 
	`¥ötf
("_POSIX_THREAD_CPUTIME is undefined\n");

271 #ifde‡
_SC_THREAD_CPUTIME


272 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_CPUTIME =", 
_SC_THREAD_CPUTIME
);

274 
	`¥ötf
("no symbol for _POSIX_THREAD_CPUTIME\n");

276 
	`¥ötf
("\n");

277 #ifde‡
_POSIX_TRACE_EVENT_FILTER


278 
	`¥ötf
("_POSIX_TRACE_EVENT_FILTER i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_EVENT_FILTER
+0);

280 
	`¥ötf
("_POSIX_TRACE_EVENT_FILTER is undefined\n");

282 #ifde‡
_SC_TRACE_EVENT_FILTER


283 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_EVENT_FILTER =", 
_SC_TRACE_EVENT_FILTER
);

285 
	`¥ötf
("no symbol for _POSIX_TRACE_EVENT_FILTER\n");

287 
	`¥ötf
("\n");

288 #ifde‡
_POSIX_THREADS


289 
	`¥ötf
("_POSIX_THREADS i†deföed (vÆ i†%d)\n", 
_POSIX_THREADS
+0);

291 
	`¥ötf
("_POSIX_THREADS is undefined\n");

293 #ifde‡
_SC_THREADS


294 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREADS =", 
_SC_THREADS
);

296 
	`¥ötf
("no symbol for _POSIX_THREADS\n");

298 
	`¥ötf
("\n");

299 #ifde‡
_POSIX_TIMEOUTS


300 
	`¥ötf
("_POSIX_TIMEOUTS i†deföed (vÆ i†%d)\n", 
_POSIX_TIMEOUTS
+0);

302 
	`¥ötf
("_POSIX_TIMEOUTS is undefined\n");

304 #ifde‡
_SC_TIMEOUTS


305 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TIMEOUTS =", 
_SC_TIMEOUTS
);

307 
	`¥ötf
("no symbol for _POSIX_TIMEOUTS\n");

309 
	`¥ötf
("\n");

310 #ifde‡
_POSIX_TIMERS


311 
	`¥ötf
("_POSIX_TIMERS i†deföed (vÆ i†%d)\n", 
_POSIX_TIMERS
+0);

313 
	`¥ötf
("_POSIX_TIMERS is undefined\n");

315 #ifde‡
_SC_TIMERS


316 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TIMERS =", 
_SC_TIMERS
);

318 
	`¥ötf
("no symbol for _POSIX_TIMERS\n");

320 
	`¥ötf
("\n");

321 #ifde‡
_POSIX_THREAD_PRIO_INHERIT


322 
	`¥ötf
("_POSIX_THREAD_PRIO_INHERIT i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIO_INHERIT
+0);

324 
	`¥ötf
("_POSIX_THREAD_PRIO_INHERIT is undefined\n");

326 #ifde‡
_SC_THREAD_PRIO_INHERIT


327 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIO_INHERIT =", 
_SC_THREAD_PRIO_INHERIT
);

329 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIO_INHERIT\n");

331 
	`¥ötf
("\n");

332 #ifde‡
_POSIX_THREAD_PRIO_PROTECT


333 
	`¥ötf
("_POSIX_THREAD_PRIO_PROTECT i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIO_PROTECT
+0);

335 
	`¥ötf
("_POSIX_THREAD_PRIO_PROTECT is undefined\n");

337 #ifde‡
_SC_THREAD_PRIO_PROTECT


338 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIO_PROTECT =", 
_SC_THREAD_PRIO_PROTECT
);

340 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIO_PROTECT\n");

342 
	`¥ötf
("\n");

343 #ifde‡
_POSIX_THREAD_PRIORITY_SCHEDULING


344 
	`¥ötf
("_POSIX_THREAD_PRIORITY_SCHEDULING i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIORITY_SCHEDULING
+0);

346 
	`¥ötf
("_POSIX_THREAD_PRIORITY_SCHEDULING is undefined\n");

348 #ifde‡
_SC_THREAD_PRIORITY_SCHEDULING


349 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIORITY_SCHEDULING =", 
_SC_THREAD_PRIORITY_SCHEDULING
);

351 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIORITY_SCHEDULING\n");

353 
	`¥ötf
("\n");

354 #ifde‡
_POSIX_TRACE


355 
	`¥ötf
("_POSIX_TRACE i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE
+0);

357 
	`¥ötf
("_POSIX_TRACE is undefined\n");

359 #ifde‡
_SC_TRACE


360 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE =", 
_SC_TRACE
);

362 
	`¥ötf
("no symbol for _POSIX_TRACE\n");

364 
	`¥ötf
("\n");

365 #ifde‡
_POSIX_TRACE_INHERIT


366 
	`¥ötf
("_POSIX_TRACE_INHERIT i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_INHERIT
+0);

368 
	`¥ötf
("_POSIX_TRACE_INHERIT is undefined\n");

370 #ifde‡
_SC_TRACE_INHERIT


371 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_INHERIT =", 
_SC_TRACE_INHERIT
);

373 
	`¥ötf
("no symbol for _POSIX_TRACE_INHERIT\n");

375 
	`¥ötf
("\n");

376 #ifde‡
_POSIX_TRACE_LOG


377 
	`¥ötf
("_POSIX_TRACE_LOG i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_LOG
+0);

379 
	`¥ötf
("_POSIX_TRACE_LOG is undefined\n");

381 #ifde‡
_SC_TRACE_LOG


382 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_LOG =", 
_SC_TRACE_LOG
);

384 
	`¥ötf
("no symbol for _POSIX_TRACE_LOG\n");

386 
	`¥ötf
("\n");

387 #ifde‡
_POSIX_THREAD_ATTR_STACKADDR


388 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKADDR i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_ATTR_STACKADDR
+0);

390 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKADDR is undefined\n");

392 #ifde‡
_SC_THREAD_ATTR_STACKADDR


393 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_ATTR_STACKADDR =", 
_SC_THREAD_ATTR_STACKADDR
);

395 
	`¥ötf
("no symbol for _POSIX_THREAD_ATTR_STACKADDR\n");

397 
	`¥ötf
("\n");

398 #ifde‡
_POSIX_THREAD_SAFE_FUNCTIONS


399 
	`¥ötf
("_POSIX_THREAD_SAFE_FUNCTIONS i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_SAFE_FUNCTIONS
+0);

401 
	`¥ötf
("_POSIX_THREAD_SAFE_FUNCTIONS is undefined\n");

403 #ifde‡
_SC_THREAD_SAFE_FUNCTIONS


404 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_SAFE_FUNCTIONS =", 
_SC_THREAD_SAFE_FUNCTIONS
);

406 
	`¥ötf
("no symbol for _POSIX_THREAD_SAFE_FUNCTIONS\n");

408 
	`¥ötf
("\n");

409 #ifde‡
_POSIX_THREAD_PROCESS_SHARED


410 
	`¥ötf
("_POSIX_THREAD_PROCESS_SHARED i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PROCESS_SHARED
+0);

412 
	`¥ötf
("_POSIX_THREAD_PROCESS_SHARED is undefined\n");

414 #ifde‡
_SC_THREAD_PROCESS_SHARED


415 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PROCESS_SHARED =", 
_SC_THREAD_PROCESS_SHARED
);

417 
	`¥ötf
("no symbol for _POSIX_THREAD_PROCESS_SHARED\n");

419 
	`¥ötf
("\n");

420 #ifde‡
_POSIX_THREAD_SPORADIC_SERVER


421 
	`¥ötf
("_POSIX_THREAD_SPORADIC_SERVER i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_SPORADIC_SERVER
+0);

423 
	`¥ötf
("_POSIX_THREAD_SPORADIC_SERVER is undefined\n");

425 #ifde‡
_SC_THREAD_SPORADIC_SERVER


426 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_SPORADIC_SERVER =", 
_SC_THREAD_SPORADIC_SERVER
);

428 
	`¥ötf
("no symbol for _POSIX_THREAD_SPORADIC_SERVER\n");

430 
	`¥ötf
("\n");

431 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


432 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKSIZE i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_ATTR_STACKSIZE
+0);

434 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKSIZE is undefined\n");

436 #ifde‡
_SC_THREAD_ATTR_STACKSIZE


437 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_ATTR_STACKSIZE =", 
_SC_THREAD_ATTR_STACKSIZE
);

439 
	`¥ötf
("no symbol for _POSIX_THREAD_ATTR_STACKSIZE\n");

441 
	`¥ötf
("\n");

442 #ifde‡
_POSIX_TYPED_MEMORY_OBJECTS


443 
	`¥ötf
("_POSIX_TYPED_MEMORY_OBJECTS i†deföed (vÆ i†%d)\n", 
_POSIX_TYPED_MEMORY_OBJECTS
+0);

445 
	`¥ötf
("_POSIX_TYPED_MEMORY_OBJECTS is undefined\n");

447 #ifde‡
_SC_TYPED_MEMORY_OBJECTS


448 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TYPED_MEMORY_OBJECTS =", 
_SC_TYPED_MEMORY_OBJECTS
);

450 
	`¥ötf
("no symbol for _POSIX_TYPED_MEMORY_OBJECTS\n");

452 
	`¥ötf
("\n");

453 #ifde‡
_XOPEN_UNIX


454 
	`¥ötf
("_XOPEN_UNIX i†deföed (vÆ i†%d)\n", 
_XOPEN_UNIX
+0);

456 
	`¥ötf
("_XOPEN_UNIX is undefined\n");

458 #ifde‡
_SC_XOPEN_UNIX


459 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_UNIX =", 
_SC_XOPEN_UNIX
);

461 
	`¥ötf
("no symbol for _XOPEN_UNIX\n");

463 
	`¥ötf
("\n");

464 #ifde‡
_XOPEN_STREAMS


465 
	`¥ötf
("_XOPEN_STREAMS i†deföed (vÆ i†%d)\n", 
_XOPEN_STREAMS
+0);

467 
	`¥ötf
("_XOPEN_STREAMS is undefined\n");

469 #ifde‡
_SC_XOPEN_STREAMS


470 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_STREAMS =", 
_SC_XOPEN_STREAMS
);

472 
	`¥ötf
("no symbol for _XOPEN_STREAMS\n");

474 
	`¥ötf
("\n");

475 #ifde‡
_XOPEN_CRYPT


476 
	`¥ötf
("_XOPEN_CRYPT i†deföed (vÆ i†%d)\n", 
_XOPEN_CRYPT
+0);

478 
	`¥ötf
("_XOPEN_CRYPT is undefined\n");

480 #ifde‡
_SC_XOPEN_CRYPT


481 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_CRYPT =", 
_SC_XOPEN_CRYPT
);

483 
	`¥ötf
("no symbol for _XOPEN_CRYPT\n");

485 
	`¥ötf
("\n");

486 #ifde‡
_XOPEN_LEGACY


487 
	`¥ötf
("_XOPEN_LEGACY i†deföed (vÆ i†%d)\n", 
_XOPEN_LEGACY
+0);

489 
	`¥ötf
("_XOPEN_LEGACY is undefined\n");

491 #ifde‡
_SC_XOPEN_LEGACY


492 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_LEGACY =", 
_SC_XOPEN_LEGACY
);

494 
	`¥ötf
("no symbol for _XOPEN_LEGACY\n");

496 
	`¥ötf
("\n");

497 #ifde‡
_XOPEN_REALTIME


498 
	`¥ötf
("_XOPEN_REALTIME i†deföed (vÆ i†%d)\n", 
_XOPEN_REALTIME
+0);

500 
	`¥ötf
("_XOPEN_REALTIME is undefined\n");

502 #ifde‡
_SC_XOPEN_REALTIME


503 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_REALTIME =", 
_SC_XOPEN_REALTIME
);

505 
	`¥ötf
("no symbol for _XOPEN_REALTIME\n");

507 
	`¥ötf
("\n");

508 #ifde‡
_XOPEN_REALTIME_THREADS


509 
	`¥ötf
("_XOPEN_REALTIME_THREADS i†deföed (vÆ i†%d)\n", 
_XOPEN_REALTIME_THREADS
+0);

511 
	`¥ötf
("_XOPEN_REALTIME_THREADS is undefined\n");

513 #ifde‡
_SC_XOPEN_REALTIME_THREADS


514 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_REALTIME_THREADS =", 
_SC_XOPEN_REALTIME_THREADS
);

516 
	`¥ötf
("no symbol for _XOPEN_REALTIME_THREADS\n");

518 
	`¥ötf
("\n");

519 #ifde‡
_POSIX_JOB_CONTROL


520 
	`¥ötf
("_POSIX_JOB_CONTROL i†deföed (vÆ i†%d)\n", 
_POSIX_JOB_CONTROL
+0);

522 
	`¥ötf
("_POSIX_JOB_CONTROL is undefined\n");

524 #ifde‡
_SC_JOB_CONTROL


525 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_JOB_CONTROL =", 
_SC_JOB_CONTROL
);

527 
	`¥ötf
("no symbol for _POSIX_JOB_CONTROL\n");

529 
	`¥ötf
("\n");

530 #ifde‡
_POSIX_READER_WRITER_LOCKS


531 
	`¥ötf
("_POSIX_READER_WRITER_LOCKS i†deföed (vÆ i†%d)\n", 
_POSIX_READER_WRITER_LOCKS
+0);

533 
	`¥ötf
("_POSIX_READER_WRITER_LOCKS is undefined\n");

535 #ifde‡
_SC_READER_WRITER_LOCKS


536 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_READER_WRITER_LOCKS =", 
_SC_READER_WRITER_LOCKS
);

538 
	`¥ötf
("no symbol for _POSIX_READER_WRITER_LOCKS\n");

540 
	`¥ötf
("\n");

541 #ifde‡
_POSIX_REGEXP


542 
	`¥ötf
("_POSIX_REGEXP i†deföed (vÆ i†%d)\n", 
_POSIX_REGEXP
+0);

544 
	`¥ötf
("_POSIX_REGEXP is undefined\n");

546 #ifde‡
_SC_REGEXP


547 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_REGEXP =", 
_SC_REGEXP
);

549 
	`¥ötf
("no symbol for _POSIX_REGEXP\n");

551 
	`¥ötf
("\n");

552 #ifde‡
_POSIX_SAVED_IDS


553 
	`¥ötf
("_POSIX_SAVED_IDS i†deföed (vÆ i†%d)\n", 
_POSIX_SAVED_IDS
+0);

555 
	`¥ötf
("_POSIX_SAVED_IDS is undefined\n");

557 #ifde‡
_SC_SAVED_IDS


558 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SAVED_IDS =", 
_SC_SAVED_IDS
);

560 
	`¥ötf
("no symbol for _POSIX_SAVED_IDS\n");

562 
	`¥ötf
("\n");

563 #ifde‡
_POSIX_SHELL


564 
	`¥ötf
("_POSIX_SHELL i†deföed (vÆ i†%d)\n", 
_POSIX_SHELL
+0);

566 
	`¥ötf
("_POSIX_SHELL is undefined\n");

568 #ifde‡
_SC_SHELL


569 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SHELL =", 
_SC_SHELL
);

571 
	`¥ötf
("no symbol for _POSIX_SHELL\n");

573 
	`¥ötf
("\n");

574 #ifde‡
_XOPEN_ENH_I1jobN


575 
	`¥ötf
("_XOPEN_ENH_I1jobN i†deföed (vÆ i†%d)\n", 
_XOPEN_ENH_I1jobN
+0);

577 
	`¥ötf
("_XOPEN_ENH_I1jobN is undefined\n");

579 #ifde‡
_SC_XOPEN_ENH_I1jobN


580 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_ENH_I1jobN =", 
_SC_XOPEN_ENH_I1jobN
);

582 
	`¥ötf
("no symbol for _XOPEN_ENH_I1jobN\n");

584 
	`¥ötf
("\n");

585 #ifde‡
_XOPEN_SHM


586 
	`¥ötf
("_XOPEN_SHM i†deföed (vÆ i†%d)\n", 
_XOPEN_SHM
+0);

588 
	`¥ötf
("_XOPEN_SHM is undefined\n");

590 #ifde‡
_SC_XOPEN_SHM


591 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_SHM =", 
_SC_XOPEN_SHM
);

593 
	`¥ötf
("no symbol for _XOPEN_SHM\n");

595 
	`¥ötf
("\n");

596 #ifde‡
_POSIX_VERSION


597 
	`¥ötf
("_POSIX_VERSION i†deföed (vÆ i†%d)\n", 
_POSIX_VERSION
+0);

599 
	`¥ötf
("_POSIX_VERSION is undefined\n");

601 #ifde‡
_SC_VERSION


602 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_VERSION =", 
_SC_VERSION
);

604 
	`¥ötf
("no symbol for _POSIX_VERSION\n");

606 
	`¥ötf
("\n");

607 #ifde‡
_XOPEN_VERSION


608 
	`¥ötf
("_XOPEN_VERSION i†deföed (vÆ i†%d)\n", 
_XOPEN_VERSION
+0);

610 
	`¥ötf
("_XOPEN_VERSION is undefined\n");

612 #ifde‡
_SC_XOPEN_VERSION


613 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_VERSION =", 
_SC_XOPEN_VERSION
);

615 
	`¥ötf
("no symbol for _XOPEN_VERSION\n");

617 
	`¥ötf
("\n");

618 #ifde‡
_POSIX_CHOWN_RESTRICTED


619 
	`¥ötf
("_POSIX_CHOWN_RESTRICTED i†deföed (vÆ i†%d)\n", 
_POSIX_CHOWN_RESTRICTED
+0);

621 
	`¥ötf
("_POSIX_CHOWN_RESTRICTED is undefined\n");

623 #ifde‡
_PC_CHOWN_RESTRICTED


624 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_CHOWN_RESTRICTED =", 
¨gv
[1], 
_PC_CHOWN_RESTRICTED
);

626 
	`¥ötf
("no symbol for _POSIX_CHOWN_RESTRICTED\n");

628 
	`¥ötf
("\n");

629 #ifde‡
_POSIX_NO_TRUNC


630 
	`¥ötf
("_POSIX_NO_TRUNC i†deföed (vÆ i†%d)\n", 
_POSIX_NO_TRUNC
+0);

632 
	`¥ötf
("_POSIX_NO_TRUNC is undefined\n");

634 #ifde‡
_PC_NO_TRUNC


635 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_NO_TRUNC =", 
¨gv
[1], 
_PC_NO_TRUNC
);

637 
	`¥ötf
("no symbol for _POSIX_NO_TRUNC\n");

639 
	`¥ötf
("\n");

640 #ifde‡
_POSIX_VDISABLE


641 
	`¥ötf
("_POSIX_VDISABLE i†deföed (vÆ i†%d)\n", 
_POSIX_VDISABLE
+0);

643 
	`¥ötf
("_POSIX_VDISABLE is undefined\n");

645 #ifde‡
_PC_VDISABLE


646 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_VDISABLE =", 
¨gv
[1], 
_PC_VDISABLE
);

648 
	`¥ötf
("no symbol for _POSIX_VDISABLE\n");

650 
	`¥ötf
("\n");

651 #ifde‡
POSIX_ASYNC_IO


652 
	`¥ötf
("POSIX_ASYNC_IO i†deföed (vÆ i†%d)\n", 
POSIX_ASYNC_IO
+0);

654 
	`¥ötf
("POSIX_ASYNC_IO is undefined\n");

656 #ifde‡
_PC_ASYNC_IO


657 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_ASYNC_IO =", 
¨gv
[1], 
_PC_ASYNC_IO
);

659 
	`¥ötf
("no symbol for POSIX_ASYNC_IO\n");

661 
	`¥ötf
("\n");

662 #ifde‡
POSIX_PRIO_IO


663 
	`¥ötf
("POSIX_PRIO_IO i†deföed (vÆ i†%d)\n", 
POSIX_PRIO_IO
+0);

665 
	`¥ötf
("POSIX_PRIO_IO is undefined\n");

667 #ifde‡
_PC_PRIO_IO


668 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_PRIO_IO =", 
¨gv
[1], 
_PC_PRIO_IO
);

670 
	`¥ötf
("no symbol for POSIX_PRIO_IO\n");

672 
	`¥ötf
("\n");

673 #ifde‡
POSIX_SYNC_IO


674 
	`¥ötf
("POSIX_SYNC_IO i†deföed (vÆ i†%d)\n", 
POSIX_SYNC_IO
+0);

676 
	`¥ötf
("POSIX_SYNC_IO is undefined\n");

678 #ifde‡
_PC_SYNC_IO


679 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_SYNC_IO =", 
¨gv
[1], 
_PC_SYNC_IO
);

681 
	`¥ötf
("no symbol for POSIX_SYNC_IO\n");

683 
	`¥ötf
("\n");

684 
	`exô
(0);

685 
	}
}

688 
	$¥_sysc⁄f
(*
mesg
, 
«me
)

690 
vÆ
;

692 
	`Âuts
(
mesg
, 
°dout
);

693 
î∫o
 = 0;

694 i‡((
vÆ
 = 
	`sysc⁄f
(
«me
)) < 0) {

695 i‡(
î∫o
 != 0) {

696 i‡(
î∫o
 =
EINVAL
)

697 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

699 
	`îr_sys
("sysconfÉrror");

701 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

704 
	`¥ötf
(" %ld\n", 
vÆ
);

706 
	}
}

709 
	$¥_∑thc⁄f
(*
mesg
, *
∑th
, 
«me
)

711 
vÆ
;

713 
	`Âuts
(
mesg
, 
°dout
);

714 
î∫o
 = 0;

715 i‡((
vÆ
 = 
	`∑thc⁄f
(
∑th
, 
«me
)) < 0) {

716 i‡(
î∫o
 != 0) {

717 i‡(
î∫o
 =
EINVAL
)

718 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

720 
	`îr_sys
("∑thc⁄‡îr‹,Ö©h = %s", 
∑th
);

722 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

725 
	`¥ötf
(" %ld\n", 
vÆ
);

727 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/stdio/buf.c

1 
	~"≠ue.h
"

3 #i‡
deföed
(
MACOS
)

4 
	#_IO_UNBUFFERED
 
__SNBF


	)

5 
	#_IO_LINE_BUF
 
__SLBF


	)

6 
	#_IO_fûe_Êags
 
_Êags


	)

7 
	#BUFFERSZ
(
Â
Ë(Â)->
_bf
.
_size


	)

9 
	#BUFFERSZ
(
Â
Ë((Â)->
_IO_buf_íd
 - (Â)->
_IO_buf_ba£
)

	)

12 
¥_°dio
(c⁄° *, 
FILE
 *);

15 
	$maö
()

17 
FILE
 *
Â
;

19 
	`Âuts
("íã∏™y ch¨a˘î\n", 
°dout
);

20 i‡(
	`gëch¨
(Ë=
EOF
)

21 
	`îr_sys
("getcharÉrror");

22 
	`Âuts
("⁄êlöêtÿ°™d¨dÉº‹\n", 
°dîr
);

24 
	`¥_°dio
("°dö", 
°dö
);

25 
	`¥_°dio
("°dout", 
°dout
);

26 
	`¥_°dio
("°dîr", 
°dîr
);

28 i‡((
Â
 = 
	`f›í
("/ëc/mŸd", "r")Ë=
NULL
)

29 
	`îr_sys
("fopenÉrror");

30 i‡(
	`gëc
(
Â
Ë=
EOF
)

31 
	`îr_sys
("getcÉrror");

32 
	`¥_°dio
("/ëc/mŸd", 
Â
);

33 
	`exô
(0);

34 
	}
}

37 
	$¥_°dio
(c⁄° *
«me
, 
FILE
 *
Â
)

39 
	`¥ötf
("°ªam = %s, ", 
«me
);

44 i‡(
Â
->
_IO_fûe_Êags
 & 
_IO_UNBUFFERED
)

45 
	`¥ötf
("unbuffered");

46 i‡(
Â
->
_IO_fûe_Êags
 & 
_IO_LINE_BUF
)

47 
	`¥ötf
("line buffered");

49 
	`¥ötf
("fully buffered");

50 
	`¥ötf
(", buf„∏sizê%d\n", 
	`BUFFERSZ
(
Â
));

51 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/stdio/tempfiles.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
«me
[
L_tm≤am
], 
löe
[
MAXLINE
];

7 
FILE
 *
Â
;

9 
	`¥ötf
("%s\n", 
	`tm≤am
(
NULL
));

11 
	`tm≤am
(
«me
);

12 
	`¥ötf
("%s\n", 
«me
);

14 i‡((
Â
 = 
	`tmpfûe
()Ë=
NULL
)

15 
	`îr_sys
("tmpfileÉrror");

16 
	`Âuts
("⁄êlöêo‡ouçut\n", 
Â
);

17 
	`ªwöd
(
Â
);

18 i‡(
	`fgës
(
löe
, ÷öe), 
Â
Ë=
NULL
)

19 
	`îr_sys
("fgetsÉrror");

20 
	`Âuts
(
löe
, 
°dout
);

22 
	`exô
(0);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/stdio/tempnam.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 i‡(
¨gc
 != 3)

7 
	`îr_quô
("usage:á.out <directory> <prefix>");

9 
	`¥ötf
("%s\n", 
	`ãm≤am
(
¨gv
[1][0] !' ' ?árgv[1] : 
NULL
,

10 
¨gv
[2][0] !' ' ?árgv[2] : 
NULL
));

12 
	`exô
(0);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/cliconn.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

10 
	$˛i_c⁄n
(c⁄° *
«me
)

12 
fd
;

15 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDWR
)) < 0)

17 i‡(
	`iß°ªam
(
fd
) == 0) {

18 
	`˛o£
(
fd
);

21 (
fd
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/isastream.c

1 
	~<°r›ts.h
>

2 
	~<uni°d.h
>

5 
	$iß°ªam
(
fd
)

7 (
	`io˘l
(
fd
, 
I_CANPUT
, 0) != -1);

8 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/ptyopen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<°r›ts.h
>

7 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

9 *
±r
;

10 
fdm
;

17 
	`°∫˝y
(
±s_«me
, "/dev/±mx", 
±s_«mesz
);

18 
±s_«me
[
±s_«mesz
 - 1] = '\0';

19 i‡((
fdm
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

21 i‡(
	`gø¡±
(
fdm
) < 0) {

22 
	`˛o£
(
fdm
);

25 i‡(
	`u∆ock±
(
fdm
) < 0) {

26 
	`˛o£
(
fdm
);

29 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

30 
	`˛o£
(
fdm
);

38 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

39 
±s_«me
[
±s_«mesz
 - 1] = '\0';

40 (
fdm
);

41 
	}
}

44 
	$±ys_›í
(*
±s_«me
)

46 
fds
, 
£tup
;

51 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

57 i‡((
£tup
 = 
	`io˘l
(
fds
, 
I_FIND
, "ldterm")) < 0) {

58 
	`˛o£
(
fds
);

61 i‡(
£tup
 == 0) {

62 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ptem") < 0) {

63 
	`˛o£
(
fds
);

66 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ldterm") < 0) {

67 
	`˛o£
(
fds
);

68 (-
job
);

70 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ttcompat") < 0) {

71 
	`˛o£
(
fds
);

75 (
fds
);

76 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/recvfd.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

11 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

13 
√wfd
, 
ƒód
, 
Êag
, 
°©us
;

14 *
±r
;

15 
buf
[
MAXLINE
];

16 
°rbuf
 
d©
;

17 
°ºecvfd
 
ªcvfd
;

19 
°©us
 = -1;

21 
d©
.
buf
 = buf;

22 
d©
.
maxÀn
 = 
MAXLINE
;

23 
Êag
 = 0;

24 i‡(
	`gëmsg
(
fd
, 
NULL
, &
d©
, &
Êag
) < 0)

25 
	`îr_sys
("getmsgÉrror");

26 
ƒód
 = 
d©
.
Àn
;

27 i‡(
ƒód
 == 0) {

28 
	`îr_ªt
("connection closed by server");

38 
±r
 = 
buf
;Öå < &buf[
ƒód
]; ) {

39 i‡(*
±r
++ == 0) {

40 i‡(
±r
 !&
buf
[
ƒód
-1])

41 
	`îr_dump
("message formatÉrror");

42 
°©us
 = *
±r
 & 0xFF;

43 i‡(
°©us
 == 0) {

44 i‡(
	`io˘l
(
fd
, 
I_RECVFD
, &
ªcvfd
) < 0)

46 
√wfd
 = 
ªcvfd
.
fd
;

48 
√wfd
 = -
°©us
;

50 
ƒód
 -= 2;

53 i‡(
ƒód
 > 0)

54 i‡((*
u£rfunc
)(
STDERR_FILENO
, 
buf
, 
ƒód
) !=Çread)

57 i‡(
°©us
 >= 0)

58 (
√wfd
);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/sendfd.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

9 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

11 
buf
[2];

13 
buf
[0] = 0;

14 i‡(
fd_to_£nd
 < 0) {

15 
buf
[1] = -
fd_to_£nd
;

16 i‡(
buf
[1] == 0)

17 
buf
[1] = 1;

19 
buf
[1] = 0;

22 i‡(
	`wrôe
(
fd
, 
buf
, 2) != 2)

25 i‡(
fd_to_£nd
 >= 0)

26 i‡(
	`io˘l
(
fd
, 
I_SENDFD
, 
fd_to_£nd
) < 0)

29 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/servaccept.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

10 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

12 
°ºecvfd
 
ªcvfd
;

14 i‡(
	`io˘l
(
li°ífd
, 
I_RECVFD
, &
ªcvfd
) < 0)

16 i‡(
uid±r
 !
NULL
)

17 *
uid±r
 = 
ªcvfd
.
uid
;

18 (
ªcvfd
.
fd
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/servlisten.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

6 
	#FIFO_MODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
ãmpfd
;

16 
fd
[2];

21 
	`u∆ök
(
«me
);

22 i‡((
ãmpfd
 = 
	`¸ót
(
«me
, 
FIFO_MODE
)) < 0)

24 i‡(
	`˛o£
(
ãmpfd
) < 0)

26 i‡(
	`pùe
(
fd
) < 0)

31 i‡(
	`io˘l
(
fd
[1], 
I_PUSH
, "connld") < 0) {

32 
	`˛o£
(
fd
[0]);

33 
	`˛o£
(
fd
[1]);

36 i‡(
	`Áâach
(
fd
[1], 
«me
) < 0) {

37 
	`˛o£
(
fd
[0]);

38 
	`˛o£
(
fd
[1]);

41 
	`˛o£
(
fd
[1]);

43 (
fd
[0]);

44 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/spipe.c

1 
	~"≠ue.h
"

8 
	$s_pùe
(
fd
[2])

10 (
	`pùe
(
fd
));

11 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/strlist.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

6 
	#FMNAMESZ
 
job


	)

9 
	$maö
(
¨gc
, *
¨gv
[])

11 
fd
, 
i
, 
nmods
;

12 
°r_li°
 
li°
;

14 i‡(
¨gc
 != 2)

15 
	`îr_quô
("ußge: %†<∑th«me>", 
¨gv
[0]);

18 i‡((
fd
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

19 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

22 i‡(
	`iß°ªam
(
fd
) == 0)

23 
	`îr_quô
("%†i†nŸá såóm", 
¨gv
[1]);

29 i‡((
nmods
 = 
	`io˘l
(
fd
, 
I_LIST
, (*) 0)) < 0)

30 
	`îr_sys
("I_LISTÉrror forÇmods");

31 
	`¥ötf
("#moduÀ†%d\n", 
nmods
);

37 
li°
.
¶_modli°
 = 
	`ˇŒoc
(
nmods
, (
°r_mli°
));

38 i‡(
li°
.
¶_modli°
 =
NULL
)

39 
	`îr_sys
("callocÉrror");

40 
li°
.
¶_nmods
 = 
nmods
;

45 i‡(
	`io˘l
(
fd
, 
I_LIST
, &
li°
) < 0)

46 
	`îr_sys
("I_LISTÉrror forÜist");

51 
i
 = 1; i <
nmods
; i++)

52 
	`¥ötf
(" %s: %s\n", (
i
 =
nmods
) ? "driver" : "module",

53 
li°
.
¶_modli°
++->
l_«me
);

55 
	`exô
(0);

56 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/streams/t_isastream.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
iß°ªam
(
fd
);

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
i
, 
fd
;

11 
i
 = 1; i < 
¨gc
; i++) {

12 i‡((
fd
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
)) < 0) {

13 
	`îr_ªt
("%s: c™'à›í", 
¨gv
[
i
]);

17 i‡(
	`iß°ªam
(
fd
) == 0)

18 
	`îr_ªt
("%s:ÇŸá såóm", 
¨gv
[
i
]);

20 
	`îr_msg
("%s: såóm†devi˚", 
¨gv
[
i
]);

23 
	`exô
(0);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/csize.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

5 
	$maö
()

7 
ãrmios
 
ãrm
;

9 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
ãrm
) < 0)

10 
	`îr_sys
("tcgetattrÉrror");

12 
ãrm
.
c_cÊag
 & 
CSIZE
) {

13 
CS5
:

14 
	`¥ötf
("5 bits/byte\n");

16 
CS6
:

17 
	`¥ötf
("6 bits/byte\n");

19 
CS7
:

20 
	`¥ötf
("7 bits/byte\n");

22 
CSjob
:

23 
	`¥ötf
("job bits/byte\n");

26 
	`¥ötf
("unknown bits/byte\n");

29 
ãrm
.
c_cÊag
 &~
CSIZE
;

30 
ãrm
.
c_cÊag
 |
CSjob
;

31 i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSANOW
, &
ãrm
) < 0)

32 
	`îr_sys
("tcsetattrÉrror");

34 
	`exô
(0);

35 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/ctermid.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	g˘îmid_«me
[
L_˘îmid
];

7 
	$˘îmid
(*
°r
)

9 i‡(
°r
 =
NULL
)

10 
°r
 = 
˘îmid_«me
;

11 (
	`°r˝y
(
°r
, "/dev/tty"));

12 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/getpass.c

1 
	~<sig«l.h
>

2 
	~<°dio.h
>

3 
	~<ãrmios.h
>

5 
	#MAX_PASS_LEN
 
job


	)

8 
	$gë∑ss
(c⁄° *
¥om±
)

10 
buf
[
MAX_PASS_LEN
 + 1];

11 *
±r
;

12 
sig£t_t
 
sig
, 
osig
;

13 
ãrmios
 
ts
, 
Ÿs
;

14 
FILE
 *
Â
;

15 
c
;

17 i‡((
Â
 = 
	`f›í
(
	`˘îmid
(
NULL
), "r+")) == NULL)

18 (
NULL
);

19 
	`£tbuf
(
Â
, 
NULL
);

21 
	`sigem±y£t
(&
sig
);

22 
	`sigadd£t
(&
sig
, 
SIGINT
);

23 
	`sigadd£t
(&
sig
, 
SIGTSTP
);

24 
	`sig¥ocmask
(
SIG_BLOCK
, &
sig
, &
osig
);

26 
	`tcgë©å
(
	`fûío
(
Â
), &
ts
);

27 
Ÿs
 = 
ts
;

28 
ts
.
c_lÊag
 &~(
ECHO
 | 
ECHOE
 | 
ECHOK
 | 
ECHONL
);

29 
	`tc£èâr
(
	`fûío
(
Â
), 
TCSAFLUSH
, &
ts
);

30 
	`Âuts
(
¥om±
, 
Â
);

32 
±r
 = 
buf
;

33 (
c
 = 
	`gëc
(
Â
)Ë!
EOF
 && c != '\n')

34 i‡(
±r
 < &
buf
[
MAX_PASS_LEN
])

35 *
±r
++ = 
c
;

36 *
±r
 = 0;

37 
	`putc
('\n', 
Â
);

39 
	`tc£èâr
(
	`fûío
(
Â
), 
TCSAFLUSH
, &
Ÿs
);

40 
	`sig¥ocmask
(
SIG_SETMASK
, &
osig
, 
NULL
);

41 
	`f˛o£
(
Â
);

42 (
buf
);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/isatty.c

1 
	~<ãrmios.h
>

4 
	$ißây
(
fd
)

6 
ãrmios
 
ts
;

8 (
	`tcgë©å
(
fd
, &
ts
) != -1);

9 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/settty.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

5 
	$maö
()

7 
ãrmios
 
ãrm
;

8 
vdißbÀ
;

10 i‡(
	`ißây
(
STDIN_FILENO
) == 0)

11 
	`îr_quô
("standard input isÇotáÅerminal device");

13 i‡((
vdißbÀ
 = 
	`Â©hc⁄f
(
STDIN_FILENO
, 
_PC_VDISABLE
)) < 0)

14 
	`îr_quô
("fpathconfÉrror or _POSIX_VDISABLEÇot inÉffect");

16 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
ãrm
) < 0)

17 
	`îr_sys
("tcgetattrÉrror");

19 
ãrm
.
c_cc
[
VINTR
] = 
vdißbÀ
;

20 
ãrm
.
c_cc
[
VEOF
] = 2;

22 i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
ãrm
) < 0)

23 
	`îr_sys
("tcsetattrÉrror");

25 
	`exô
(0);

26 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/t_getpass.c

1 
	~"≠ue.h
"

3 *
gë∑ss
(const *);

6 
	$maö
()

8 *
±r
;

10 i‡((
±r
 = 
	`gë∑ss
("E¡îÖassw‹d:")Ë=
NULL
)

11 
	`îr_sys
("getpassÉrror");

12 
	`¥ötf
("∑ssw‹d: %s\n", 
±r
);

16 *
±r
 != 0)

17 *
±r
++ = 0;

18 
	`exô
(0);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/t_isatty.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("fd 0: %s\n", 
	`ißây
(0) ? "tty" : "notáÅty");

7 
	`¥ötf
("fd 1: %s\n", 
	`ißây
(1) ? "tty" : "notáÅty");

8 
	`¥ötf
("fd 2: %s\n", 
	`ißây
(2) ? "tty" : "notáÅty");

9 
	`exô
(0);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/t_raw.c

1 
	~"≠ue.h
"

4 
	$sig_ˇtch
(
signo
)

6 
	`¥ötf
("signal caught\n");

7 
	`ây_ª£t
(
STDIN_FILENO
);

8 
	`exô
(0);

9 
	}
}

12 
	$maö
()

14 
i
;

15 
c
;

17 i‡(
	`sig«l
(
SIGINT
, 
sig_ˇtch
Ë=
SIG_ERR
)

18 
	`îr_sys
("signal(SIGINT)Érror");

19 i‡(
	`sig«l
(
SIGQUIT
, 
sig_ˇtch
Ë=
SIG_ERR
)

20 
	`îr_sys
("signal(SIGQUIT)Érror");

21 i‡(
	`sig«l
(
SIGTERM
, 
sig_ˇtch
Ë=
SIG_ERR
)

22 
	`îr_sys
("signal(SIGTERM)Érror");

24 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

25 
	`îr_sys
("tty_rawÉrror");

26 
	`¥ötf
("EnterÑaw mode characters,Åerminate with DELETE\n");

27 (
i
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) == 1) {

28 i‡((
c
 &= 255) == 0177)

30 
	`¥ötf
("%o\n", 
c
);

32 i‡(
	`ây_ª£t
(
STDIN_FILENO
) < 0)

33 
	`îr_sys
("tty_resetÉrror");

34 i‡(
i
 <= 0)

35 
	`îr_sys
("readÉrror");

36 i‡(
	`ây_cbªak
(
STDIN_FILENO
) < 0)

37 
	`îr_sys
("tty_cbreakÉrror");

38 
	`¥ötf
("\nEnter cbreak mode characters,Åerminate with SIGINT\n");

39 (
i
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) == 1) {

40 
c
 &= 255;

41 
	`¥ötf
("%o\n", 
c
);

43 i‡(
	`ây_ª£t
(
STDIN_FILENO
) < 0)

44 
	`îr_sys
("tty_resetÉrror");

45 i‡(
i
 <= 0)

46 
	`îr_sys
("readÉrror");

48 
	`exô
(0);

49 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/t_ttyname.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 *
«me
;

7 i‡(
	`ißây
(0)) {

8 
«me
 = 
	`ây«me
(0);

9 i‡(
«me
 =
NULL
)

10 
«me
 = "undefined";

12 
«me
 = "notáÅty";

14 
	`¥ötf
("fd 0: %s\n", 
«me
);

15 i‡(
	`ißây
(1)) {

16 
«me
 = 
	`ây«me
(1);

17 i‡(
«me
 =
NULL
)

18 
«me
 = "undefined";

20 
«me
 = "notáÅty";

22 
	`¥ötf
("fd 1: %s\n", 
«me
);

23 i‡(
	`ißây
(2)) {

24 
«me
 = 
	`ây«me
(2);

25 i‡(
«me
 =
NULL
)

26 
«me
 = "undefined";

28 
«me
 = "notáÅty";

30 
	`¥ötf
("fd 2: %s\n", 
«me
);

31 
	`exô
(0);

32 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/ttyname.c

1 
	~<sys/°©.h
>

2 
	~<dúít.h
>

3 
	~<limôs.h
>

4 
	~<°rög.h
>

5 
	~<ãrmios.h
>

6 
	~<uni°d.h
>

7 
	~<°dlib.h
>

9 
	sdevdú
 {

10 
devdú
 *
	md_√xt
;

11 *
	md_«me
;

14 
devdú
 *
	ghód
;

15 
devdú
 *
	gèû
;

16 
	g∑th«me
[
_POSIX_PATH_MAX
 + 1];

19 
	$add
(*
dú«me
)

21 
devdú
 *
ddp
;

22 
Àn
;

24 
Àn
 = 
	`°æí
(
dú«me
);

29 i‡((
dú«me
[
Àn
-1] == '.') && (dirname[len-2] == '/' ||

30 (
dú«me
[
Àn
-2] == '.' && dirname[len-3] == '/')))

32 i‡(
	`°rcmp
(
dú«me
, "/dev/fd") == 0)

34 
ddp
 = 
	`mÆloc
((
devdú
));

35 i‡(
ddp
 =
NULL
)

38 
ddp
->
d_«me
 = 
	`°rdup
(
dú«me
);

39 i‡(
ddp
->
d_«me
 =
NULL
) {

40 
	`‰ì
(
ddp
);

43 
ddp
->
d_√xt
 = 
NULL
;

44 i‡(
èû
 =
NULL
) {

45 
hód
 = 
ddp
;

46 
èû
 = 
ddp
;

48 
èû
->
d_√xt
 = 
ddp
;

49 
èû
 = 
ddp
;

51 
	}
}

54 
	$˛ónup
()

56 
devdú
 *
ddp
, *
nddp
;

58 
ddp
 = 
hód
;

59 
ddp
 !
NULL
) {

60 
nddp
 = 
ddp
->
d_√xt
;

61 
	`‰ì
(
ddp
->
d_«me
);

62 
	`‰ì
(
ddp
);

63 
ddp
 = 
nddp
;

65 
hód
 = 
NULL
;

66 
èû
 = 
NULL
;

67 
	}
}

70 
	$£¨chdú
(*
dú«me
, 
°©
 *
fd°©p
)

72 
°©
 
dev°©
;

73 
DIR
 *
dp
;

74 
devÀn
;

75 
dúít
 *
dúp
;

77 
	`°r˝y
(
∑th«me
, 
dú«me
);

78 i‡((
dp
 = 
	`›ídú
(
dú«me
)Ë=
NULL
)

79 (
NULL
);

80 
	`°rˇt
(
∑th«me
, "/");

81 
devÀn
 = 
	`°æí
(
∑th«me
);

82 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
) {

83 
	`°∫˝y
(
∑th«me
 + 
devÀn
, 
dúp
->
d_«me
,

84 
_POSIX_PATH_MAX
 - 
devÀn
);

89 i‡(
	`°rcmp
(
∑th«me
, "/dev/stdin") == 0 ||

90 
	`°rcmp
(
∑th«me
, "/dev/stdout") == 0 ||

91 
	`°rcmp
(
∑th«me
, "/dev/stderr") == 0)

93 i‡(
	`°©
(
∑th«me
, &
dev°©
) < 0)

95 i‡(
	`S_ISDIR
(
dev°©
.
°_mode
)) {

96 
	`add
(
∑th«me
);

99 i‡(
dev°©
.
°_öo
 =
fd°©p
->st_ino &&

100 
dev°©
.
°_dev
 =
fd°©p
->st_dev) {

101 
	`˛o£dú
(
dp
);

102 (
∑th«me
);

106 
	`˛o£dú
(
dp
);

107 (
NULL
);

108 
	}
}

111 
	$ây«me
(
fd
)

113 
°©
 
fd°©
;

114 
devdú
 *
ddp
;

115 *
rvÆ
;

117 i‡(
	`ißây
(
fd
) == 0)

118 (
NULL
);

119 i‡(
	`f°©
(
fd
, &
fd°©
) < 0)

120 (
NULL
);

121 i‡(
	`S_ISCHR
(
fd°©
.
°_mode
) == 0)

122 (
NULL
);

124 
rvÆ
 = 
	`£¨chdú
("/dev", &
fd°©
);

125 i‡(
rvÆ
 =
NULL
) {

126 
ddp
 = 
hód
; dd∞!
NULL
; dd∞ddp->
d_√xt
)

127 i‡((
rvÆ
 = 
	`£¨chdú
(
ddp
->
d_«me
, &
fd°©
)Ë!
NULL
)

131 
	`˛ónup
();

132 (
rvÆ
);

133 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/termios/winch.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

8 
	$¥_wösize
(
fd
)

10 
wösize
 
size
;

12 i‡(
	`io˘l
(
fd
, 
TIOCGWINSZ
, (*Ë&
size
) < 0)

13 
	`îr_sys
("TIOCGWINSZÉrror");

14 
	`¥ötf
("%dÑows, %d cﬁumns\n", 
size
.
ws_row
, size.
ws_cﬁ
);

15 
	}
}

18 
	$sig_wöch
(
signo
)

20 
	`¥ötf
("SIGWINCHÑeceived\n");

21 
	`¥_wösize
(
STDIN_FILENO
);

22 
	}
}

25 
	$maö
()

27 i‡(
	`ißây
(
STDIN_FILENO
) == 0)

28 
	`exô
(1);

29 i‡(
	`sig«l
(
SIGWINCH
, 
sig_wöch
Ë=
SIG_ERR
)

30 
	`îr_sys
("signalÉrror");

31 
	`¥_wösize
(
STDIN_FILENO
);

33 
	`∑u£
();

34 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/atfork.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
±hªad_muãx_t
 
	glock1
 = 
PTHREAD_MUTEX_INITIALIZER
;

5 
±hªad_muãx_t
 
	glock2
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 
	$¥ï¨e
()

10 
	`¥ötf
("preparingÜocks...\n");

11 
	`±hªad_muãx_lock
(&
lock1
);

12 
	`±hªad_muãx_lock
(&
lock2
);

13 
	}
}

16 
	$∑ª¡
()

18 
	`¥ötf
("parent unlockingÜocks...\n");

19 
	`±hªad_muãx_u∆ock
(&
lock1
);

20 
	`±hªad_muãx_u∆ock
(&
lock2
);

21 
	}
}

24 
	$chûd
()

26 
	`¥ötf
("child unlockingÜocks...\n");

27 
	`±hªad_muãx_u∆ock
(&
lock1
);

28 
	`±hªad_muãx_u∆ock
(&
lock2
);

29 
	}
}

32 
	$thr_‚
(*
¨g
)

34 
	`¥ötf
("thread started...\n");

35 
	`∑u£
();

37 
	}
}

40 
	$maö
()

42 
îr
;

43 
pid_t
 
pid
;

44 
±hªad_t
 
tid
;

46 #i‡
	`deföed
(
BSD
Ë|| deföed(
MACOS
)

47 
	`¥ötf
("pthread_atfork is unsupported\n");

49 i‡((
îr
 = 
	`±hªad_©f‹k
(
¥ï¨e
, 
∑ª¡
, 
chûd
)) != 0)

50 
	`îr_exô
(
îr
, "can't install fork handlers");

51 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

52 i‡(
îr
 != 0)

53 
	`îr_exô
(
îr
, "can't createÅhread");

54 
	`¶ìp
(2);

55 
	`¥ötf
("parentáboutÅo fork...\n");

56 i‡((
pid
 = 
	`f‹k
()) < 0)

57 
	`îr_quô
("fork failed");

58 i‡(
pid
 == 0)

59 
	`¥ötf
("childÑeturned from fork\n");

61 
	`¥ötf
("parentÑeturned from fork\n");

63 
	`exô
(0);

64 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/detach.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

5 
makëhªad
(*(*
‚
)(*), *
¨g
)

7 
	gîr
;

8 
±hªad_t
 
	gtid
;

9 
±hªad_©å_t
 
	g©å
;

11 
	gîr
 = 
±hªad_©å_öô
(&
©å
);

12 i‡(
	gîr
 != 0)

13 (
îr
);

14 
	gîr
 = 
±hªad_©å_£tdëach°©e
(&
©å
, 
PTHREAD_CREATE_DETACHED
);

15 i‡(
	gîr
 == 0)

16 
îr
 = 
±hªad_¸óã
(&
tid
, &
©å
, 
‚
, 
¨g
);

17 
±hªad_©å_de°roy
(&
©å
);

18 (
	gîr
);

	@/root/grocery-shop/language/gcc/src/apue/threadctl/getenv1.c

1 
	~<limôs.h
>

2 
	~<°rög.h
>

3 
	~"≠ue.h
"

5 
	gívbuf
[
ARG_MAX
];

7 **
ívú⁄
;

10 
	$gëív
(c⁄° *
«me
)

12 
i
, 
Àn
;

14 
Àn
 = 
	`°æí
(
«me
);

15 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

16 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

17 (
ívú⁄
[
i
][
Àn
] == '=')) {

18 
	`°r˝y
(
ívbuf
, &
ívú⁄
[
i
][
Àn
+1]);

19 (
ívbuf
);

22 (
NULL
);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/getenv2.c

1 
	~<°rög.h
>

2 
	~<î∫o.h
>

3 
	~<±hªad.h
>

4 
	~<°dlib.h
>

6 **
ívú⁄
;

8 
±hªad_muãx_t
 
	gív_muãx
;

9 
±hªad_⁄˚_t
 
	göô_d⁄e
 = 
PTHREAD_ONCE_INIT
;

12 
	$thªad_öô
()

14 
±hªad_muãx©å_t
 
©å
;

16 
	`±hªad_muãx©å_öô
(&
©å
);

17 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_RECURSIVE
);

18 
	`±hªad_muãx_öô
(&
ív_muãx
, &
©å
);

19 
	`±hªad_muãx©å_de°roy
(&
©å
);

20 
	}
}

23 
	$gëív_r
(c⁄° *
«me
, *
buf
, 
buÊí
)

25 
i
, 
Àn
, 
ﬁí
;

27 
	`±hªad_⁄˚
(&
öô_d⁄e
, 
thªad_öô
);

28 
Àn
 = 
	`°æí
(
«me
);

29 
	`±hªad_muãx_lock
(&
ív_muãx
);

30 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

31 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

32 (
ívú⁄
[
i
][
Àn
] == '=')) {

33 
ﬁí
 = 
	`°æí
(&
ívú⁄
[
i
][
Àn
+1]);

34 i‡(
ﬁí
 >
buÊí
) {

35 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

36 (
ENOSPC
);

38 
	`°r˝y
(
buf
, &
ívú⁄
[
i
][
Àn
+1]);

39 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

43 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

44 (
ENOENT
);

45 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/getenv3.c

1 
	~<limôs.h
>

2 
	~<°rög.h
>

3 
	~<±hªad.h
>

4 
	~<°dlib.h
>

6 
	~"≠ue.h
"

8 
±hªad_key_t
 
	gkey
;

9 
±hªad_⁄˚_t
 
	göô_d⁄e
 = 
PTHREAD_ONCE_INIT
;

10 
±hªad_muãx_t
 
	gív_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

12 **
ívú⁄
;

15 
	$thªad_öô
()

17 
	`±hªad_key_¸óã
(&
key
, 
‰ì
);

18 
	}
}

21 
	$gëív
(c⁄° *
«me
)

23 
i
, 
Àn
;

24 *
ívbuf
;

26 
	`±hªad_⁄˚
(&
öô_d⁄e
, 
thªad_öô
);

27 
	`±hªad_muãx_lock
(&
ív_muãx
);

28 
ívbuf
 = (*)
	`±hªad_gë•ecific
(
key
);

29 i‡(
ívbuf
 =
NULL
) {

30 
ívbuf
 = 
	`mÆloc
(
ARG_MAX
);

31 i‡(
ívbuf
 =
NULL
) {

32 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

33 (
NULL
);

35 
	`±hªad_£t•ecific
(
key
, 
ívbuf
);

37 
Àn
 = 
	`°æí
(
«me
);

38 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

39 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

40 (
ívú⁄
[
i
][
Àn
] == '=')) {

41 
	`°r˝y
(
ívbuf
, &
ívú⁄
[
i
][
Àn
+1]);

42 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

43 (
ívbuf
);

46 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

47 (
NULL
);

48 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/suspend.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
	gquôÊag
;

5 
sig£t_t
 
	gmask
;

7 
±hªad_muãx_t
 
	glock
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 
±hªad_c⁄d_t
 
	gwaôloc
 = 
PTHREAD_COND_INITIALIZER
;

11 
	$thr_‚
(*
¨g
)

13 
îr
, 
signo
;

16 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

17 i‡(
îr
 != 0)

18 
	`îr_exô
(
îr
, "sigwait failed");

19 
signo
) {

20 
SIGINT
:

21 
	`¥ötf
("\ninterrupt\n");

24 
SIGQUIT
:

25 
	`±hªad_muãx_lock
(&
lock
);

26 
quôÊag
 = 1;

27 
	`±hªad_muãx_u∆ock
(&
lock
);

28 
	`±hªad_c⁄d_sig«l
(&
waôloc
);

32 
	`¥ötf
("u√x≥˘ed sig«»%d\n", 
signo
);

33 
	`exô
(1);

36 
	}
}

39 
	$maö
()

41 
îr
;

42 
sig£t_t
 
ﬁdmask
;

43 
±hªad_t
 
tid
;

45 
	`sigem±y£t
(&
mask
);

46 
	`sigadd£t
(&
mask
, 
SIGINT
);

47 
	`sigadd£t
(&
mask
, 
SIGQUIT
);

48 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, &
ﬁdmask
)) != 0)

49 
	`îr_exô
(
îr
, "SIG_BLOCKÉrror");

51 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

52 i‡(
îr
 != 0)

53 
	`îr_exô
(
îr
, "can't createÅhread");

55 
	`±hªad_muãx_lock
(&
lock
);

56 
quôÊag
 == 0)

57 
	`±hªad_c⁄d_waô
(&
waôloc
, &
lock
);

58 
	`±hªad_muãx_u∆ock
(&
lock
);

61 
quôÊag
 = 0;

64 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

65 
	`îr_sys
("SIG_SETMASKÉrror");

66 
	`exô
(0);

67 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threadctl/timeout.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

3 
	~<time.h
>

4 
	~<sys/time.h
>

6 
makëhªad
(*(*)(*), *);

8 
	sto_öfo
 {

9 (*
	mto_‚
)(*);

10 *
	mto_¨g
;

11 
time•ec
 
	mto_waô
;

14 
	#SECTONSEC
 1000000000

	)

15 
	#USECTONSEC
 1000

	)

18 
	$timeout_hñ≥r
(*
¨g
)

20 
to_öfo
 *
tù
;

22 
tù
 = (
to_öfo
 *)
¨g
;

23 
	`«no¶ìp
(&
tù
->
to_waô
, 
NULL
);

24 (*
tù
->
to_‚
)—ù->
to_¨g
);

26 
	}
}

29 
timeout
(c⁄° 
time•ec
 *
whí
, (*
func
)(*), *
¨g
)

31 
time•ec
 
now
;

32 
timevÆ
 
tv
;

33 
to_öfo
 *
tù
;

34 
îr
;

36 
	`gëtimeofday
(&
tv
, 
NULL
);

37 
now
.
tv_£c
 = 
tv
.tv_sec;

38 
now
.
tv_n£c
 = 
tv
.
tv_u£c
 * 
USECTONSEC
;

39 i‡((
whí
->
tv_£c
 > 
now
.tv_sec) ||

40 (
whí
->
tv_£c
 =
now
.tv_£¯&& whí->
tv_n£c
 >Çow.tv_nsec)) {

41 
tù
 = 
	`mÆloc
((
to_öfo
));

42 i‡(
tù
 !
NULL
) {

43 
tù
->
to_‚
 = 
func
;

44 
tù
->
to_¨g
 = 
¨g
;

45 
tù
->
to_waô
.
tv_£c
 = 
whí
->tv_£¯- 
now
.tv_sec;

46 i‡(
whí
->
tv_n£c
 >
now
.tv_nsec) {

47 
tù
->
to_waô
.
tv_n£c
 = 
whí
->tv_n£¯- 
now
.tv_nsec;

49 
tù
->
to_waô
.
tv_£c
--;

50 
tù
->
to_waô
.
tv_n£c
 = 
SECTONSEC
 - 
now
.tv_nsec +

51 
whí
->
tv_n£c
;

53 
îr
 = 
	`makëhªad
(
timeout_hñ≥r
, (*)
tù
);

54 i‡(
îr
 == 0)

63 (*
func
)(
¨g
);

64 
	}
}

66 
±hªad_muãx©å_t
 
	g©å
;

67 
±hªad_muãx_t
 
	gmuãx
;

70 
	$ªåy
(*
¨g
)

72 
	`±hªad_muãx_lock
(&
muãx
);

74 
	`±hªad_muãx_u∆ock
(&
muãx
);

75 
	}
}

78 
	$maö
()

80 
îr
, 
c⁄dôi⁄
, 
¨g
;

81 
time•ec
 
whí
;

83 i‡((
îr
 = 
	`±hªad_muãx©å_öô
(&
©å
)) != 0)

84 
	`îr_exô
(
îr
, "pthread_mutexattr_init failed");

85 i‡((
îr
 = 
	`±hªad_muãx©å_£ây≥
(&
©å
,

86 
PTHREAD_MUTEX_RECURSIVE
)) != 0)

87 
	`îr_exô
(
îr
, "can't setÑecursiveÅype");

88 i‡((
îr
 = 
	`±hªad_muãx_öô
(&
muãx
, &
©å
)) != 0)

89 
	`îr_exô
(
îr
, "can't createÑecursive mutex");

91 
	`±hªad_muãx_lock
(&
muãx
);

93 i‡(
c⁄dôi⁄
) {

95 
	`timeout
(&
whí
, 
ªåy
, (*)
¨g
);

98 
	`±hªad_muãx_u∆ock
(&
muãx
);

100 
	`exô
(0);

101 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/badexit2.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	ma
, 
	mb
, 
	mc
, 
	md
;

9 
	$¥ötfoo
(c⁄° *
s
, c⁄° 
foo
 *
Â
)

11 
	`¥ötf
(
s
);

12 
	`¥ötf
(" såu˘uªáà0x%x\n", ()
Â
);

13 
	`¥ötf
(" foo.®%d\n", 
Â
->
a
);

14 
	`¥ötf
(" foo.b = %d\n", 
Â
->
b
);

15 
	`¥ötf
(" foo.¯%d\n", 
Â
->
c
);

16 
	`¥ötf
(" foo.d = %d\n", 
Â
->
d
);

17 
	}
}

20 
	$thr_‚1
(*
¨g
)

22 
foo
 foo = {1, 2, 3, 4};

24 
	`¥ötfoo
("thªad 1:\n", &
foo
);

25 
	`±hªad_exô
((*)&
foo
);

26 
	}
}

29 
	$thr_‚2
(*
¨g
)

31 
	`¥ötf
("thªad 2: ID i†%d\n", ()
	`±hªad_£lf
());

32 
	`±hªad_exô
((*)0);

33 
	}
}

36 
	$maö
()

38 
îr
;

39 
±hªad_t
 
tid1
, 
tid2
;

40 
foo
 *
Â
;

42 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

43 i‡(
îr
 != 0)

44 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

45 
îr
 = 
	`±hªad_joö
(
tid1
, (*)&
Â
);

46 i‡(
îr
 != 0)

47 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

48 
	`¶ìp
(1);

49 
	`¥ötf
("parent starting secondÅhread\n");

50 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, NULL);

51 i‡(
îr
 != 0)

52 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

53 
	`¶ìp
(1);

54 
	`¥ötfoo
("∑ª¡:\n", 
Â
);

55 
	`exô
(0);

56 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/cleanup.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

5 
	$˛ónup
(*
¨g
)

7 
	`¥ötf
("˛ónup: %s\n", (*)
¨g
);

8 
	}
}

11 
	$thr_‚1
(*
¨g
)

13 
	`¥ötf
("thread 1 start\n");

14 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 1 first handler");

15 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 1 second handler");

16 
	`¥ötf
("thread 1Öush complete\n");

17 i‡(
¨g
)

19 
	`±hªad_˛ónup_p›
(0);

20 
	`±hªad_˛ónup_p›
(0);

22 
	}
}

25 
	$thr_‚2
(*
¨g
)

27 
	`¥ötf
("thread 2 start\n");

28 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 2 first handler");

29 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 2 second handler");

30 
	`¥ötf
("thread 2Öush complete\n");

31 i‡(
¨g
)

32 
	`±hªad_exô
((*)2);

33 
	`±hªad_˛ónup_p›
(0);

34 
	`±hªad_˛ónup_p›
(0);

35 
	`±hªad_exô
((*)2);

36 
	}
}

39 
	$maö
()

41 
îr
;

42 
±hªad_t
 
tid1
, 
tid2
;

43 *
åë
;

45 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, (*)1);

46 i‡(
îr
 != 0)

47 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

48 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, (*)1);

49 i‡(
îr
 != 0)

50 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

51 
îr
 = 
	`±hªad_joö
(
tid1
, &
åë
);

52 i‡(
îr
 != 0)

53 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

54 
	`¥ötf
("thªad 1Éxô codê%d\n", ()
åë
);

55 
îr
 = 
	`±hªad_joö
(
tid2
, &
åë
);

56 i‡(
îr
 != 0)

57 
	`îr_quô
("ˇn'àjoö wôhÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

58 
	`¥ötf
("thªad 2Éxô codê%d\n", ()
åë
);

59 
	`exô
(0);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/condvar.c

1 
	~<±hªad.h
>

3 
	smsg
 {

4 
msg
 *
	mm_√xt
;

8 
msg
 *
	gw‹kq
;

9 
±hªad_c⁄d_t
 
	gqªady
 = 
PTHREAD_COND_INITIALIZER
;

10 
±hªad_muãx_t
 
	gqlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

13 
	$¥o˚ss_msg
()

15 
msg
 *
mp
;

18 
	`±hªad_muãx_lock
(&
qlock
);

19 
w‹kq
 =
NULL
)

20 
	`±hªad_c⁄d_waô
(&
qªady
, &
qlock
);

21 
mp
 = 
w‹kq
;

22 
w‹kq
 = 
mp
->
m_√xt
;

23 
	`±hªad_muãx_u∆ock
(&
qlock
);

26 
	}
}

29 
	$íqueue_msg
(
msg
 *
mp
)

31 
	`±hªad_muãx_lock
(&
qlock
);

32 
mp
->
m_√xt
 = 
w‹kq
;

33 
w‹kq
 = 
mp
;

34 
	`±hªad_muãx_u∆ock
(&
qlock
);

35 
	`±hªad_c⁄d_sig«l
(&
qªady
);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/exitstatus.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

5 
	$thr_‚1
(*
¨g
)

7 
	`¥ötf
("thread 1Ñeturning\n");

9 
	}
}

12 
	$thr_‚2
(*
¨g
)

14 
	`¥ötf
("thread 2Éxiting\n");

15 
	`±hªad_exô
((*)2);

16 
	}
}

19 
	$maö
()

21 
îr
;

22 
±hªad_t
 
tid1
, 
tid2
;

23 *
åë
;

25 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

26 i‡(
îr
 != 0)

27 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

28 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, NULL);

29 i‡(
îr
 != 0)

30 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

31 
îr
 = 
	`±hªad_joö
(
tid1
, &
åë
);

32 i‡(
îr
 != 0)

33 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

34 
	`¥ötf
("thªad 1Éxô codê%d\n", ()
åë
);

35 
îr
 = 
	`±hªad_joö
(
tid2
, &
åë
);

36 i‡(
îr
 != 0)

37 
	`îr_quô
("ˇn'àjoö wôhÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

38 
	`¥ötf
("thªad 2Éxô codê%d\n", ()
åë
);

39 
	`exô
(0);

40 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/mutex1.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	mf_cou¡
;

6 
±hªad_muãx_t
 
	mf_lock
;

10 
foo
 *

11 
	$foo_Æloc
()

13 
foo
 *
Â
;

15 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

16 
Â
->
f_cou¡
 = 1;

17 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

18 
	`‰ì
(
Â
);

19 (
NULL
);

23 (
Â
);

24 
	}
}

27 
	$foo_hﬁd
(
foo
 *
Â
)

29 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

30 
Â
->
f_cou¡
++;

31 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

32 
	}
}

35 
	$foo_ªÀ
(
foo
 *
Â
)

37 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

38 i‡(--
Â
->
f_cou¡
 == 0) {

39 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

40 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

41 
	`‰ì
(
Â
);

43 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

45 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/mutex2.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	#NHASH
 29

	)

5 
	#HASH
(
Â
Ë((()Â)%
NHASH
)

	)

7 
foo
 *
	gfh
[
NHASH
];

9 
±hªad_muãx_t
 
	ghashlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

11 
	sfoo
 {

12 
	mf_cou¡
;

13 
±hªad_muãx_t
 
	mf_lock
;

14 
foo
 *
	mf_√xt
;

15 
	mf_id
;

19 
foo
 *

20 
	$foo_Æloc
()

22 
foo
 *
Â
;

23 
idx
;

25 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

26 
Â
->
f_cou¡
 = 1;

27 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

28 
	`‰ì
(
Â
);

29 (
NULL
);

31 
idx
 = 
	`HASH
(
Â
);

32 
	`±hªad_muãx_lock
(&
hashlock
);

33 
Â
->
f_√xt
 = 
fh
[
idx
];

34 
fh
[
idx
] = 
Â
->
f_√xt
;

35 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

36 
	`±hªad_muãx_u∆ock
(&
hashlock
);

38 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

40 (
Â
);

41 
	}
}

44 
	$foo_hﬁd
(
foo
 *
Â
)

46 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

47 
Â
->
f_cou¡
++;

48 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

49 
	}
}

51 
foo
 *

52 
	$foo_föd
(
id
)

54 
foo
 *
Â
;

55 
idx
;

57 
idx
 = 
	`HASH
(
Â
);

58 
	`±hªad_muãx_lock
(&
hashlock
);

59 
Â
 = 
fh
[
idx
]; f∞!
NULL
; f∞Â->
f_√xt
) {

60 i‡(
Â
->
f_id
 =
id
) {

61 
	`foo_hﬁd
(
Â
);

65 
	`±hªad_muãx_u∆ock
(&
hashlock
);

66 (
Â
);

67 
	}
}

70 
	$foo_ªÀ
(
foo
 *
Â
)

72 
foo
 *
tÂ
;

73 
idx
;

75 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

76 i‡(
Â
->
f_cou¡
 == 1) {

77 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

78 
	`±hªad_muãx_lock
(&
hashlock
);

79 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

81 i‡(
Â
->
f_cou¡
 != 1) {

82 
Â
->
f_cou¡
--;

83 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

84 
	`±hªad_muãx_u∆ock
(&
hashlock
);

88 
idx
 = 
	`HASH
(
Â
);

89 
tÂ
 = 
fh
[
idx
];

90 i‡(
tÂ
 =
Â
) {

91 
fh
[
idx
] = 
Â
->
f_√xt
;

93 
tÂ
->
f_√xt
 !
Â
)

94 
tÂ
 =ÅÂ->
f_√xt
;

95 
tÂ
->
f_√xt
 = 
Â
->f_next;

97 
	`±hªad_muãx_u∆ock
(&
hashlock
);

98 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

99 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

100 
	`‰ì
(
Â
);

102 
Â
->
f_cou¡
--;

103 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

105 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/mutex3.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	#NHASH
 29

	)

5 
	#HASH
(
Â
Ë((()Â)%
NHASH
)

	)

7 
foo
 *
	gfh
[
NHASH
];

8 
±hªad_muãx_t
 
	ghashlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

10 
	sfoo
 {

11 
	mf_cou¡
;

12 
±hªad_muãx_t
 
	mf_lock
;

13 
foo
 *
	mf_√xt
;

14 
	mf_id
;

18 
foo
 *

19 
	$foo_Æloc
()

21 
foo
 *
Â
;

22 
idx
;

24 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

25 
Â
->
f_cou¡
 = 1;

26 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

27 
	`‰ì
(
Â
);

28 (
NULL
);

30 
idx
 = 
	`HASH
(
Â
);

31 
	`±hªad_muãx_lock
(&
hashlock
);

32 
Â
->
f_√xt
 = 
fh
[
idx
];

33 
fh
[
idx
] = 
Â
->
f_√xt
;

34 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

35 
	`±hªad_muãx_u∆ock
(&
hashlock
);

38 (
Â
);

39 
	}
}

42 
	$foo_hﬁd
(
foo
 *
Â
)

44 
	`±hªad_muãx_lock
(&
hashlock
);

45 
Â
->
f_cou¡
++;

46 
	`±hªad_muãx_u∆ock
(&
hashlock
);

47 
	}
}

49 
foo
 *

50 
	$foo_föd
(
id
)

52 
foo
 *
Â
;

53 
idx
;

55 
idx
 = 
	`HASH
(
Â
);

56 
	`±hªad_muãx_lock
(&
hashlock
);

57 
Â
 = 
fh
[
idx
]; f∞!
NULL
; f∞Â->
f_√xt
) {

58 i‡(
Â
->
f_id
 =
id
) {

59 
Â
->
f_cou¡
++;

63 
	`±hªad_muãx_u∆ock
(&
hashlock
);

64 (
Â
);

65 
	}
}

68 
	$foo_ªÀ
(
foo
 *
Â
)

70 
foo
 *
tÂ
;

71 
idx
;

73 
	`±hªad_muãx_lock
(&
hashlock
);

74 i‡(--
Â
->
f_cou¡
 == 0) {

75 
idx
 = 
	`HASH
(
Â
);

76 
tÂ
 = 
fh
[
idx
];

77 i‡(
tÂ
 =
Â
) {

78 
fh
[
idx
] = 
Â
->
f_√xt
;

80 
tÂ
->
f_√xt
 !
Â
)

81 
tÂ
 =ÅÂ->
f_√xt
;

82 
tÂ
->
f_√xt
 = 
Â
->f_next;

84 
	`±hªad_muãx_u∆ock
(&
hashlock
);

85 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

86 
	`‰ì
(
Â
);

88 
	`±hªad_muãx_u∆ock
(&
hashlock
);

90 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/rwlock.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	sjob
 {

5 
job
 *
	mj_√xt
;

6 
job
 *
	mj_¥ev
;

7 
±hªad_t
 
	mj_id
;

11 
	squeue
 {

12 
job
 *
	mq_hód
;

13 
job
 *
	mq_èû
;

14 
±hªad_rwlock_t
 
	mq_lock
;

21 
	$queue_öô
(
queue
 *
qp
)

23 
îr
;

25 
qp
->
q_hód
 = 
NULL
;

26 
qp
->
q_èû
 = 
NULL
;

27 
îr
 = 
	`±hªad_rwlock_öô
(&
qp
->
q_lock
, 
NULL
);

28 i‡(
îr
 != 0)

29 (
îr
);

34 
	}
}

40 
	$job_ö£π
(
queue
 *
qp
, 
job
 *
jp
)

42 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

43 
jp
->
j_√xt
 = 
qp
->
q_hód
;

44 
jp
->
j_¥ev
 = 
NULL
;

45 i‡(
qp
->
q_hód
 !
NULL
)

46 
qp
->
q_hód
->
j_¥ev
 = 
jp
;

48 
qp
->
q_èû
 = 
jp
;

49 
qp
->
q_hód
 = 
jp
;

50 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

51 
	}
}

57 
	$job_≠≥nd
(
queue
 *
qp
, 
job
 *
jp
)

59 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

60 
jp
->
j_√xt
 = 
NULL
;

61 
jp
->
j_¥ev
 = 
qp
->
q_èû
;

62 i‡(
qp
->
q_èû
 !
NULL
)

63 
qp
->
q_èû
->
j_√xt
 = 
jp
;

65 
qp
->
q_hód
 = 
jp
;

66 
qp
->
q_èû
 = 
jp
;

67 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

68 
	}
}

74 
	$job_ªmove
(
queue
 *
qp
, 
job
 *
jp
)

76 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

77 i‡(
jp
 =
qp
->
q_hód
) {

78 
qp
->
q_hód
 = 
jp
->
j_√xt
;

79 i‡(
qp
->
q_èû
 =
jp
)

80 
qp
->
q_èû
 = 
NULL
;

81 } i‡(
jp
 =
qp
->
q_èû
) {

82 
qp
->
q_èû
 = 
jp
->
j_¥ev
;

83 i‡(
qp
->
q_hód
 =
jp
)

84 
qp
->
q_hód
 = 
NULL
;

86 
jp
->
j_¥ev
->
j_√xt
 = jp->j_next;

87 
jp
->
j_√xt
->
j_¥ev
 = jp->j_prev;

89 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

90 
	}
}

95 
job
 *

96 
	$job_föd
(
queue
 *
qp
, 
±hªad_t
 
id
)

98 
job
 *
jp
;

100 i‡(
	`±hªad_rwlock_rdlock
(&
qp
->
q_lock
) != 0)

101 (
NULL
);

103 
jp
 = 
qp
->
q_hód
; j∞!
NULL
; j∞jp->
j_√xt
)

104 i‡(
	`±hªad_equÆ
(
jp
->
j_id
, 
id
))

107 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

108 (
jp
);

109 
	}
}

	@/root/grocery-shop/language/gcc/src/apue/threads/threadid.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
±hªad_t
 
	g¡id
;

7 
	$¥ötids
(c⁄° *
s
)

9 
pid_t
 
pid
;

10 
±hªad_t
 
tid
;

12 
pid
 = 
	`gëpid
();

13 
tid
 = 
	`±hªad_£lf
();

14 
	`¥ötf
("%†pid %uÅid %u (0x%x)\n", 
s
, ()
pid
,

15 ()
tid
, ()tid);

16 
	}
}

19 
	$thr_‚
(*
¨g
)

21 
	`¥ötids
("newÅhread: ");

23 
	}
}

26 
	$maö
()

28 
îr
;

30 
îr
 = 
	`±hªad_¸óã
(&
¡id
, 
NULL
, 
thr_‚
, NULL);

31 i‡(
îr
 != 0)

32 
	`îr_quô
("ˇn'à¸óãÅhªad: %s\n", 
	`°ªº‹
(
îr
));

33 
	`¥ötids
("mainÅhread:");

34 
	`¥ötf
("±hªad_¸óã:%u\n", ()
¡id
);

35 
	`¶ìp
(1);

36 
	`exô
(0);

37 
	}
}

	@/root/grocery-shop/language/gcc/src/array/array.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
¨øy
[3][3] = {{3,4,5},{10,5,6},{0,1,1}};

9 **
p
 = 
NULL
;

10 *
l
 = 
NULL
;

12 
p
 = (**)
¨øy
;

13 
l
 = *
p
+1;

14 
	`¥ötf
("%p, %p, %p, %p\n", 
p
, 
l
, 
¨øy
,árray[0]);

17 
s
 = 3;

18 
	`¥ötf
("%d %d\n", (
s
<<1), (s<<2));

20 *
hód
 = 
NULL
;

22 
hód
 = (*)
	`mÆloc
(100);

23 i‡(
NULL
 =
hód
) {

26 
	`mem£t
(
hód
, 0, 100);

27 
	`¥ötf
("addªss:%p\n", 
hód
);

29 (*
±
)[3] = 
¨øy
;

30 
	`¥ötf
("%p, %p, %d, %d\n", 
±
+1, *pt, *(*pt+1), *(*pt+2));

32 
abc
[4] = {1, 2, 0};

33 
	`¥ötf
("%∞%∞\n", 
abc
, &abc);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/array/init.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

12 
	$¨øy_exåa_comma
()

14 
¨øy
[] = {3, 4, 5, 
job
, 9, 10,};

15 
i
;

17 
i
=0; i<(
¨øy
)/4; i++) {

18 
	`¥ötf
("%d\n", 
¨øy
[
i
]);

22 
	}
}

25 
	$maö
(
¨gc
, **
¨gv
)

27 
	`¨øy_exåa_comma
();

30 
	}
}

	@/root/grocery-shop/language/gcc/src/array/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	$func
(*
¨øy
, 
m
, 
n
) {

5 
i
,
j
;

6 
i
=0;i<
m
;i++) {

7 
j
=0;j<
n
;j++)

8 
	`¥ötf
("\t%d", *(
¨øy
 +
i
*
n
 +
j
));

9 
	`¥ötf
("\n");

12 
	}
}

14 
	$func2
(**
¨øy
, 
m
)

16 
	`¥ötf
("Func2\n");

19 
	}
}

21 
	$func1
(**
¨øy
, 
m
, 
n
) {

22 
	`¥ötf
("---\n");

24 
	}
}

26 
	$⁄e_dimísi⁄
(c⁄° 
¨øy
[], 
m
)

28 
i
 = 0;

30 
i
=0; i<
m
; i++) {

31 
	`¥ötf
("¨øy[%d]=%d ", 
i
, 
¨øy
[i]);

33 
	`¥ötf
("\n");

36 
	}
}

39 
	$¨øy_ã°_sizeof
()

41 
¨øy
[12];

43 
	`¥ötf
("ÊµãËØï12‰∏™ÂÖÉÁ¥†ÁöÑÊï¥ÂûãÊï∞ÁªÑÁöÑsizeofÂÄºÔºö%u\n", (
¨øy
));

46 
	}
}

48 
	$maö
(
¨gc
,** 
¨gv
) {

49 
m
=3,
n
=3;

50 
¨øy
[][3] = {{1,2,3},{4,5,6},{7,
job
,9}};

51 
⁄e
[] = {4, 
job
, 9, 10};

52 **
p
 = 
NULL
;

55 
	`func
(
¨øy
[0], 
m
, 
n
);

61 
	`⁄e_dimísi⁄
(
⁄e
, 4);

64 
p
 = (**)
¨øy
;

68 
	`¨øy_ã°_sizeof
();

71 
	}
}

	@/root/grocery-shop/language/gcc/src/base64/base64.c

1 
	~<°döt.h
>

2 
	~<°dlib.h
>

5 
	gícodög_èbÀ
[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',

13 *
	gdecodög_èbÀ
 = 
NULL
;

14 
	gmod_èbÀ
[] = {0, 2, 1};

17 
buûd_decodög_èbÀ
();

19 *
	$ba£64_ícode
(c⁄° *
d©a
, 
size_t
 
öput_Àngth
,

20 
size_t
 *
ouçut_Àngth
)

22 
i
, 
j
;

23 
uöt32_t
 
o˘ë_a
, 
o˘ë_b
, 
o˘ë_c
, 
åùÀ
;

24 *
ícoded_d©a
 = 
NULL
;

26 *
ouçut_Àngth
 = 4 * ((
öput_Àngth
 + 2) / 3);

28 
ícoded_d©a
 = 
	`mÆloc
(*
ouçut_Àngth
);

29 i‡(
ícoded_d©a
 =
NULL
)  NULL;

31 
i
 = 0, 
j
 = 0; i < 
öput_Àngth
;) {

33 
o˘ë_a
 = 
i
 < 
öput_Àngth
 ? ()
d©a
[i++] : 0;

34 
o˘ë_b
 = 
i
 < 
öput_Àngth
 ? ()
d©a
[i++] : 0;

35 
o˘ë_c
 = 
i
 < 
öput_Àngth
 ? ()
d©a
[i++] : 0;

37 
åùÀ
 = (
o˘ë_a
 << 0x10Ë+ (
o˘ë_b
 << 0x0
job
Ë+ 
o˘ë_c
;

39 
ícoded_d©a
[
j
++] = 
ícodög_èbÀ
[(
åùÀ
 >> 3 * 6) & 0x3F];

40 
ícoded_d©a
[
j
++] = 
ícodög_èbÀ
[(
åùÀ
 >> 2 * 6) & 0x3F];

41 
ícoded_d©a
[
j
++] = 
ícodög_èbÀ
[(
åùÀ
 >> 1 * 6) & 0x3F];

42 
ícoded_d©a
[
j
++] = 
ícodög_èbÀ
[(
åùÀ
 >> 0 * 6) & 0x3F];

45 
i
 = 0; i < 
mod_èbÀ
[
öput_Àngth
 % 3]; i++)

46 
ícoded_d©a
[*
ouçut_Àngth
 - 1 - 
i
] = '=';

48  
ícoded_d©a
;

49 
	}
}

52 *
	$ba£64_decode
(c⁄° *
d©a
, 
size_t
 
öput_Àngth
,

53 
size_t
 *
ouçut_Àngth
)

55 *
decoded_d©a
 = 
NULL
;

56 
uöt32_t
 
£xãt_a
, 
£xãt_b
, 
£xãt_c
, 
£xãt_d
, 
åùÀ
;

57 
i
, 
j
;

59 i‡(
decodög_èbÀ
 =
NULL
)

60 
	`buûd_decodög_èbÀ
();

62 i‡(
öput_Àngth
 % 4 !0Ë 
NULL
;

64 *
ouçut_Àngth
 = 
öput_Àngth
 / 4 * 3;

65 i‡(
d©a
[
öput_Àngth
 - 1] ='='Ë(*
ouçut_Àngth
)--;

66 i‡(
d©a
[
öput_Àngth
 - 2] ='='Ë(*
ouçut_Àngth
)--;

68 
decoded_d©a
 = 
	`mÆloc
(*
ouçut_Àngth
);

69 i‡(
decoded_d©a
 =
NULL
)  NULL;

71 
i
 = 0, 
j
 = 0; i < 
öput_Àngth
;) {

73 
£xãt_a
 = 
d©a
[
i
] == '=' ? 0 & i++ :

74 
decodög_èbÀ
[
d©a
[
i
++]];

75 
£xãt_b
 = 
d©a
[
i
] == '=' ? 0 & i++ :

76 
decodög_èbÀ
[
d©a
[
i
++]];

77 
£xãt_c
 = 
d©a
[
i
] == '=' ? 0 & i++ :

78 
decodög_èbÀ
[
d©a
[
i
++]];

79 
£xãt_d
 = 
d©a
[
i
] == '=' ? 0 & i++ :

80 
decodög_èbÀ
[
d©a
[
i
++]];

82 
åùÀ
 = (
£xãt_a
 << 3 * 6)

83 + (
£xãt_b
 << 2 * 6)

84 + (
£xãt_c
 << 1 * 6)

85 + (
£xãt_d
 << 0 * 6);

87 i‡(
j
 < *
ouçut_Àngth
)

88 
decoded_d©a
[
j
++] = (
åùÀ
 >> 2 * 
job
) & 0xFF;

89 i‡(
j
 < *
ouçut_Àngth
)

90 
decoded_d©a
[
j
++] = (
åùÀ
 >> 1 * 
job
) & 0xFF;

91 i‡(
j
 < *
ouçut_Àngth
)

92 
decoded_d©a
[
j
++] = (
åùÀ
 >> 0 * 
job
) & 0xFF;

95  
decoded_d©a
;

96 
	}
}

99 
	$buûd_decodög_èbÀ
()

101 
i
;

103 
decodög_èbÀ
 = 
	`mÆloc
(256);

105 
i
 = 0; i < 64; i++) {

106 
decodög_èbÀ
[(Ë
ícodög_èbÀ
[
i
]] = i;

108 
	}
}

111 
	$ba£64_˛ónup
()

113 
	`‰ì
(
decodög_èbÀ
);

114 
	}
}

	@/root/grocery-shop/language/gcc/src/base64/base64.h

1 #i‚de‡
_SRC_LIBSERVERS_BASE64_H_


2 
	#_SRC_LIBSERVERS_BASE64_H_


	)

4 *
ba£64_ícode
(c⁄° *
d©a
, 
size_t
 
öput_Àngth
,

5 
size_t
 *
ouçut_Àngth
);

6 *
ba£64_decode
(c⁄° *
d©a
, 
size_t
 
öput_Àngth
,

7 
size_t
 *
ouçut_Àngth
);

8 
ba£64_˛ónup
();

	@/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-1.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
dogs
;

6 
	`¥ötf
("How many dogs do you have?\n");

7 
	`sˇnf
("%d", &
dogs
);

8 
	`¥ötf
("Sÿyou havê%d dog(s)!\n", 
dogs
);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-2.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
	`¥ötf
("Concrete contains gravelánd cement.\n");

7 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-3.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
	`¥ötf
("A .c is usedÅoÉndá CÖrogram filename.\n");

7 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch02/fathm_ft.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
„ë
, 
Áthoms
;

7 
Áthoms
 = 2;

8 
„ë
 = 6 * 
Áthoms
;

9 
	`¥ötf
("Thîê¨ê%d fìàö %d f©homs!\n", 
„ë
, 
Áthoms
);

10 
	`¥ötf
("Yes, I said %d fìt!\n", 6 * 
Áthoms
);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch02/first.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
num
;

5 
num
 = 1;

7 
	`¥ötf
("Iámá simple ");

8 
	`¥ötf
("computer.\n");

9 
	`¥ötf
("My fav‹ôênumbî i†%d beˇu£ iài†fú°.\n",
num
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch02/nogood.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
, 
n2
, 
n3
;

	@/root/grocery-shop/language/gcc/src/cPrimer/ch02/stillbad.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
, 
n2
, 
n3
;

8 
n
 = 5;

9 
n2
 = 
n
 *Ç;

10 
n3
 = 
n2
 *Ç2;

11 
	`¥ötf
("¿%d,Ç squ¨ed = %d,Ç cubed = %d\n", 
n
, 
n2
, 
n3
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch02/two_func.c

2 
	~<°dio.h
>

3 
buéî
();

4 
	$maö
()

6 
	`¥ötf
("I will summonÅhe butler function.\n");

7 
	`buéî
();

8 
	`¥ötf
("Yes. Bring me someÅeaánd writeable CD-ROMS.\n");

11 
	}
}

13 
	$buéî
()

15 
	`¥ötf
("YouÑang, sir?\n");

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/altnames.c

2 
	~<°dio.h
>

3 
	~<öây≥s.h
>

4 
	$maö
()

6 
öt16_t
 
me16
;

8 
me16
 = 4593;

9 
	`¥ötf
("First,ássume int16_t is short: ");

10 
	`¥ötf
("me16 = %hd\n", 
me16
);

11 
	`¥ötf
("Next,Üet'sÇot makeányássumptions.\n");

12 
	`¥ötf
("Instead, useá \"macro\" from inttypes.h: ");

13 
	`¥ötf
("me16 = %" 
PRId16
 "\n", 
me16
);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/badcount.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
f
 = 4;

6 
g
 = 5;

7 
h
 = 5.0f;

9 
	`¥ötf
("%d\n", 
f
, 
g
);

10 
	`¥ötf
("%d %d\n",
f
);

11 
	`¥ötf
("%d %f\n", 
h
, 
g
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/bases.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
x
 = 100;

7 
	`¥ötf
("de¯%d; o˘Æ = %o; hex = %x\n", 
x
, x, x);

8 
	`¥ötf
("de¯%d; o˘Æ = %#o; hex = %#x\n", 
x
, x, x);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/charcode.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

7 
	`¥ötf
("PleaseÉnterá character.\n");

8 
	`sˇnf
("%c", &
ch
);

9 
	`¥ötf
("Thêcodêf‹ %¯i†%d.\n", 
ch
, ch);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/escape.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ßœry
;

7 
	`¥ötf
("\aEnter your desired monthly salary:");

8 
	`¥ötf
(" $_______\b\b\b\b\b\b\b");

9 
	`sˇnf
("%f", &
ßœry
);

10 
	`¥ötf
("\n\t$%.2‡®m⁄th i†$%.2‡®yór.", 
ßœry
,

11 
ßœry
 * 12.0);

12 
	`¥ötf
("\rGee!\n");

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/floaterr.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
a
,
b
;

7 
b
 = 2.0e20 + 1.0;

8 
a
 = 
b
 - 2.0e20;

9 
	`¥ötf
("%‡\n", 
a
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/print1.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ãn
 = 10;

6 
two
 = 2;

8 
	`¥ötf
("Doing itÑight: ");

9 
	`¥ötf
("%d möu†%d i†%d\n", 
ãn
, 2,Åí - 
two
 );

10 
	`¥ötf
("Doing it wrong: ");

11 
	`¥ötf
("%d möu†%d i†%d\n", 
ãn
 );

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/print2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
un
 = 3000000000;

6 
íd
 = 200;

7 
big
 = 65537;

8 
vîybig
 = 1234567
job90job642
;

10 
	`¥ötf
("u¿%uándÇŸ %d\n", 
un
, un);

11 
	`¥ötf
("íd = %hdánd %d\n", 
íd
,Énd);

12 
	`¥ötf
("big = %ldándÇŸ %hd\n", 
big
, big);

13 
	`¥ötf
("vîybig%ŒdándÇŸ %ld\n", 
vîybig
, verybig);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/rhodium.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
weight
;

6 
vÆue
;

8 
	`¥ötf
("Are you worth your weight inÑhodium?\n");

9 
	`¥ötf
("Let's check it out.\n");

10 
	`¥ötf
("PleaseÉnter your weight inÖounds: ");

13 
	`sˇnf
("%f", &
weight
);

16 
vÆue
 = 770.0 * 
weight
 * 14.5
job33
;

17 
	`¥ötf
("You∏weighàöÑhodium i†w‹th $%.2f.\n", 
vÆue
);

18 
	`¥ötf
("YouáreÉasily worthÅhat! IfÑhodiumÖrices drop,\n");

19 
	`¥ötf
("eat moreÅo maintain your value.\n");

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/showf_pt.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
abﬂt
 = 32000.0;

6 
abë
 = 2.14e9;

7 
dù
 = 5.32e-5;

9 
	`¥ötf
("%‡ˇ¿bêwrôã¿%e\n", 
abﬂt
,áboat);

10 
	`¥ötf
("%‡ˇ¿bêwrôã¿%e\n", 
abë
,ábet);

11 
	`¥ötf
("%‡ˇ¿bêwrôã¿%e\n", 
dù
, dip);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/toobig.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
i
 = 21474
job3647
;

6 
j
 = 4294967295;

8 
	`¥ötf
("%d %d %d\n", 
i
, i+1, i+2);

9 
	`¥ötf
("%u %u %u\n", 
j
, j+1, j+2);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch03/typesize.c

2 
	~<°dio.h
>

3 
	$maö
()

6 
	`¥ötf
("Type int hasá size of %u bytes.\n", ());

7 
	`¥ötf
("Type char hasá size of %u bytes.\n", ());

8 
	`¥ötf
("TypeÜong hasá size of %u bytes.\n", ());

9 
	`¥ötf
("Type double hasá size of %u bytes.\n",

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/defines.c

2 
	~<°dio.h
>

3 
	~<limôs.h
>

4 
	~<Êﬂt.h
>

5 
	$maö
()

7 
	`¥ötf
("SomeÇumberÜimits forÅhis system:\n");

8 
	`¥ötf
("Bigge° i¡: %d\n", 
INT_MAX
);

9 
	`¥ötf
("SmÆÀ°Ü⁄gÜ⁄g: %Œd\n", 
LLONG_MIN
);

10 
	`¥ötf
("O√ byã = %d bô†⁄Åhi†sy°em.\n", 
CHAR_BIT
);

11 
	`¥ötf
("L¨ge° doubÀ: %e\n", 
DBL_MAX
);

12 
	`¥ötf
("SmÆÀ°Ç‹mÆ flﬂt: %e\n", 
FLT_MIN
);

13 
	`¥ötf
("Êﬂà¥ecisi⁄ = %d digôs\n", 
FLT_DIG
);

14 
	`¥ötf
("Êﬂàïsû⁄ = %e\n", 
FLT_EPSILON
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/flags.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("%x %X %#x\n", 31, 31, 31);

6 
	`¥ötf
("**%d**% d**% d**\n", 42, 42, -42);

7 
	`¥ötf
("**%5d**%5.3d**%05d**%05.3d**\n", 6, 6, 6, 6);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/floatcnv.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n1
 = 3.0;

6 
n2
 = 3.0;

7 
n3
 = 2000000000;

8 
n4
 = 1234567
job90
;

10 
	`¥ötf
("%.1ê%.1ê%.1ê%.1e\n", 
n1
, 
n2
, 
n3
, 
n4
);

11 
	`¥ötf
("%ld %ld\n", 
n3
, 
n4
);

12 
	`¥ötf
("%ld %ld %ld %ld\n", 
n1
, 
n2
, 
n3
, 
n4
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/floats.c

2 
	~<°dio.h
>

4 
	$maö
()

6 c⁄° 
RENT
 = 3
job52
.99;

8 
	`¥ötf
("*%f*\n", 
RENT
);

9 
	`¥ötf
("*%e*\n", 
RENT
);

10 
	`¥ötf
("*%4.2f*\n", 
RENT
);

11 
	`¥ötf
("*%3.1f*\n", 
RENT
);

12 
	`¥ötf
("*%10.3f*\n", 
RENT
);

13 
	`¥ötf
("*%10.3e*\n", 
RENT
);

14 
	`¥ötf
("*%+4.2f*\n", 
RENT
);

15 
	`¥ötf
("*%010.2f*\n", 
RENT
);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/input.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
age
;

6 
as£ts
;

7 
≥t
[30];

9 
	`¥ötf
("Enter youráge,ássets,ánd favoriteÖet.\n");

10 
	`sˇnf
("%d %f", &
age
, &
as£ts
);

11 
	`sˇnf
("%s", 
≥t
);

12 
	`¥ötf
("%d $%.2‡%s\n", 
age
, 
as£ts
, 
≥t
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/intconv.c

2 
	~<°dio.h
>

3 
	#PAGES
 336

	)

4 
	#WORDS
 6561
job


	)

5 
	$maö
()

7 
num
 = 
PAGES
;

8 
mnum
 = -
PAGES
;

10 
	`¥ötf
("numá†sh‹à™d unsig√d sh‹t: %hd %hu\n", 
num
,

11 
num
);

12 
	`¥ötf
("-numá†sh‹à™d unsig√d sh‹t: %hd %hu\n", 
mnum
,

13 
mnum
);

14 
	`¥ötf
("numá†öà™d ch¨: %d %c\n", 
num
,Çum);

15 
	`¥ötf
("WORDSás int, short,ánd char: %d %hd %c\n",

16 
WORDS
, WORDS, WORDS);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/longstrg.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("Here's one wayÅoÖrintá ");

6 
	`¥ötf
("long string.\n");

7 
	`¥ötf
("Here'sánother wayÅoÖrintá \

8 
°rög
.\
n
");

9 
	`¥ötf
("Here'sÅheÇewest wayÅoÖrintá "

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/pizza.c

2 
	~<°dio.h
>

3 
	#PI
 3.14159

	)

4 
	$maö
()

6 
¨ó
, 
cúcum
, 
ødius
;

8 
	`¥ötf
("What isÅheÑadius of yourÖizza?\n");

9 
	`sˇnf
("%f", &
ødius
);

10 
¨ó
 = 
PI
 * 
ødius
 *Ñadius;

11 
cúcum
 = 2.0 * 
PI
 *
ødius
;

12 
	`¥ötf
("Your basicÖizzaÖarametersáreás follows:\n");

13 
	`¥ötf
("cúcum„ªn˚ = %1.2f,áª®%1.2f\n", 
cúcum
,

14 
¨ó
);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/praise1.c

2 
	~<°dio.h
>

3 
	#PRAISE
 "Wh©á su≥∏m¨vñou†«me!"

	)

4 
	$maö
()

6 
«me
[40];

8 
	`¥ötf
("What's yourÇame?\n");

9 
	`sˇnf
("%s", 
«me
);

10 
	`¥ötf
("Hñlo, %s. %s\n", 
«me
, 
PRAISE
);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/praise2.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#PRAISE
 "Wh©á su≥∏m¨vñou†«me!"

	)

5 
	$maö
()

7 
«me
[40];

9 
	`¥ötf
("What's yourÇame?\n");

10 
	`sˇnf
("%s", 
«me
);

11 
	`¥ötf
("Hñlo, %s. %s\n", 
«me
, 
PRAISE
);

12 
	`¥ötf
("YourÇame of %dÜetters occupies %d memory cells.\n",

13 
	`°æí
(
«me
), Çame);

14 
	`¥ötf
("TheÖhrase ofÖraise has %dÜetters ",

15 
	`°æí
(
PRAISE
));

16 
	`¥ötf
("™d occupõ†%d mem‹y cñls.\n",  
PRAISE
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/printout.c

2 
	~<°dio.h
>

3 
	#PI
 3.141593

	)

4 
	$maö
()

6 
numbî
 = 5;

7 
e•ªsso
 = 13.5;

8 
co°
 = 3100;

10 
	`¥ötf
("Thê%d CEO†dønk %‡cup†o‡e•ªsso.\n", 
numbî
,

11 
e•ªsso
);

12 
	`¥ötf
("ThêvÆuêo‡pòi†%f.\n", 
PI
);

13 
	`¥ötf
("Farewell!ÅhouártÅoo dear for myÖshitessing,\n");

14 
	`¥ötf
("%c%d\n", '$', 2 * 
co°
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/prntval.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
bph2o
 = 212;

6 
rv
;

8 
rv
 = 
	`¥ötf
("%d F i†w©î'†boûögÖoöt.\n", 
bph2o
);

9 
	`¥ötf
("TheÖrintf() functionÖrinted %d characters.\n",

10 
rv
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/skip2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
;

7 
	`¥ötf
("PleaseÉnterÅhree integers:\n");

8 
	`sˇnf
("%*d %*d %d", &
n
);

9 
	`¥ötf
("Thêœ° i¡egî wa†%d\n", 
n
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/strings.c

2 
	~<°dio.h
>

3 
	#BLURB
 "Authíti¯imô©i⁄!"

	)

4 
	$maö
()

6 
	`¥ötf
("/%2s/\n", 
BLURB
);

7 
	`¥ötf
("/%24s/\n", 
BLURB
);

8 
	`¥ötf
("/%24.5s/\n", 
BLURB
);

9 
	`¥ötf
("/%-24.5s/\n", 
BLURB
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/talkback.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#DENSITY
 62.4

5 
	`maö
()

	)

7 
	gweight
, 
	gvﬁume
;

8 
	gsize
, 
	gÀâîs
;

9 
	g«me
[40];

11 
¥ötf
("Hi! What's your firstÇame?\n");

12 
sˇnf
("%s", 
«me
);

13 
¥ötf
("%s, wh©'†you∏weighàöÖounds?\n", 
«me
);

14 
sˇnf
("%f", &
weight
);

15 
	gsize
 =  
«me
;

16 
	gÀâîs
 = 
°æí
(
«me
);

17 
	gvﬁume
 = 
weight
 / 
DENSITY
;

18 
¥ötf
("Well, %s, your volume is %2.2f cubic feet.\n",

19 
«me
, 
vﬁume
);

20 
¥ötf
("Also, your firstÇame has %dÜetters,\n",

21 
Àâîs
);

22 
¥ötf
("™d wêhavê%d byã†tÿ°‹êô in.\n", 
size
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/varwid.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
width
, 
¥ecisi⁄
;

6 
numbî
 = 256;

7 
weight
 = 242.5;

9 
	`¥ötf
("What field width?\n");

10 
	`sˇnf
("%d", &
width
);

11 
	`¥ötf
("Thênumbî i†:%*d:\n", 
width
, 
numbî
);

12 
	`¥ötf
("NowÉnterá widthándáÖrecision:\n");

13 
	`sˇnf
("%d %d", &
width
, &
¥ecisi⁄
);

14 
	`¥ötf
("Weighà%*.*f\n", 
width
, 
¥ecisi⁄
, 
weight
);

15 
	`¥ötf
("Done!\n");

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch04/width.c

2 
	~<°dio.h
>

3 
	#PAGES
 931

	)

4 
	$maö
()

6 
	`¥ötf
("*%d*\n", 
PAGES
);

7 
	`¥ötf
("*%2d*\n", 
PAGES
);

8 
	`¥ötf
("*%10d*\n", 
PAGES
);

9 
	`¥ötf
("*%-10d*\n", 
PAGES
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/add_one.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
u…ø
 = 0, 
su≥r
 = 0;

7 
su≥r
 < 5)

9 
su≥r
++;

10 ++
u…ø
;

11 
	`¥ötf
("su≥∏%d, u…ø = %d \n", 
su≥r
, 
u…ø
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/addemup.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
cou¡
, 
sum
;

7 
cou¡
 = 0;

8 
sum
 = 0;

9 
cou¡
++ < 20)

10 
sum
 = sum + 
cou¡
;

11 
	`¥ötf
("sum = %d\n", 
sum
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/bottles.c

2 
	~<°dio.h
>

3 
	#MAX
 100

	)

4 
	$maö
()

6 
cou¡
 = 
MAX
 + 1;

8 --
cou¡
 > 0) {

9 
	`¥ötf
("%d bottles of spring water onÅhe wall, "

10 "%d bŸée†o‡•rög w©î!\n", 
cou¡
, count);

11 
	`¥ötf
("Take one downándÖass itáround,\n");

12 
	`¥ötf
("%d bŸée†o‡•rög w©î!\n\n", 
cou¡
 - 1);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/convert.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

6 
i
;

7 
Ê
;

9 
Ê
 = 
i
 = 
ch
 = 'C';

10 
	`¥ötf
("ch = %c, i = %d, f»%2.2f\n", 
ch
, 
i
, 
Ê
);

11 
ch
 = ch + 1;

12 
i
 = 
Ê
 + 2 * 
ch
;

13 
Ê
 = 2.0 * 
ch
 + 
i
;

14 
	`¥ötf
("ch = %c, i = %d, f»%2.2f\n", 
ch
, 
i
, 
Ê
);

15 
ch
 = 5212205.17;

16 
	`¥ötf
("Now ch = %c\n", 
ch
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/divide.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("integer division: 5/4 is %d \n", 5/4);

6 
	`¥ötf
("integer division: 6/3 is %d \n", 6/3);

7 
	`¥ötf
("integer division: 7/4 is %d \n", 7/4);

8 
	`¥ötf
("floating division: 7./4. is %1.2f \n", 7./4.);

9 
	`¥ötf
("mixed division: 7./4 is %1.2f \n", 7./4);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/golf.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
j™e
, 
èrz™
, 
chìè
;

7 
chìè
 = 
èrz™
 = 
j™e
 = 6
job
;

8 
	`¥ötf
(" cheetaÅarzan jane\n");

9 
	`¥ötf
("Fú°Ñound sc‹ê%4d %jobd %jobd\n",
chìè
,
èrz™
,
j™e
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/min_sec.c

2 
	~<°dio.h
>

3 
	#SEC_PER_MIN
 60

4 
	`maö
()

	)

6 
	g£c
, 
	gmö
, 
	gÀ·
;

8 
¥ötf
("Convert secondsÅo minutesánd seconds!\n");

9 
¥ötf
("EnterÅheÇumber of seconds (<=0Åo quit):\n");

10 
sˇnf
("%d", &
£c
);

11 
	g£c
 > 0)

13 
	gmö
 = 
£c
 / 
SEC_PER_MIN
;

14 
	gÀ·
 = 
£c
 % 
SEC_PER_MIN
;

15 
¥ötf
("%d sec⁄d†i†%d möuãs, %d sec⁄ds.\n", 
£c
,

16 
mö
, 
À·
);

17 
¥ötf
("EnterÇext value (<=0Åo quit):\n");

18 
sˇnf
("%d", &
£c
);

20 
¥ötf
("Done!\n");

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/post_pre.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
a
 = 1, 
b
 = 1;

6 
≠lus
, 
∂usb
;

8 
≠lus
 = 
a
++;

9 
∂usb
 = ++
b
;

10 
	`¥ötf
("aáplus bÖlusb \n");

11 
	`¥ötf
("%1d %5d %5d %5d\n", 
a
, 
≠lus
, 
b
, 
∂usb
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/pound.c

2 
	~<°dio.h
>

3 
pound
(
n
);

5 
	$maö
()

7 
times
 = 5;

8 
ch
 = '!';

9 
f
 = 6.0;

11 
	`pound
(
times
);

12 
	`pound
(
ch
);

13 
	`pound
((Ë
f
);

16 
	}
}

18 
	$pound
(
n
)

20 
n
-- > 0)

21 
	`¥ötf
("#");

22 
	`¥ötf
("\n");

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/rules.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
t›
, 
sc‹e
;

7 
t›
 = 
sc‹e
 = -(2 + 5) * 6 + (4 + 3 * (2 + 3));

8 
	`¥ötf
("t› = %d \n", 
t›
);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/running.c

2 
	~<°dio.h
>

3 c⁄° 
	gS_PER_M
 = 60;

4 c⁄° 
	gS_PER_H
 = 3600;

5 c⁄° 
	gM_PER_K
 = 0.62137;

6 
	$maö
()

8 
di°k
, 
di°m
;

9 
øã
;

10 
mö
, 
£c
;

11 
time
;

12 
mtime
;

13 
mmö
, 
m£c
;

15 
	`¥ötf
("ThisÖrogram converts yourÅime forá metricÑace\n");

16 
	`¥ötf
("toáÅime forÑunningá mileándÅo youráverage\n");

17 
	`¥ötf
("speed in milesÖer hour.\n");

18 
	`¥ötf
("PleaseÉnter, in kilometers,Åhe distanceÑun.\n");

19 
	`sˇnf
("%lf", &
di°k
);

20 
	`¥ötf
("NextÉnterÅheÅime in minutesánd seconds.\n");

21 
	`¥ötf
("Begin byÉnteringÅhe minutes.\n");

22 
	`sˇnf
("%d", &
mö
);

23 
	`¥ötf
("NowÉnterÅhe seconds.\n");

24 
	`sˇnf
("%d", &
£c
);

26 
time
 = 
S_PER_M
 * 
mö
 + 
£c
;

28 
di°m
 = 
M_PER_K
 * 
di°k
;

30 
øã
 = 
di°m
 / 
time
 * 
S_PER_H
;

32 
mtime
 = (Ë
time
 / 
di°m
;

33 
mmö
 = (Ë
mtime
 / 
S_PER_M
;

34 
m£c
 = (Ë
mtime
 % 
S_PER_M
;

35 
	`¥ötf
("YouÑan %1.2f km (%1.2f miles) in %d min, %d sec.\n",

36 
di°k
, 
di°m
, 
mö
, 
£c
);

37 
	`¥ötf
("ThatÖace correspondsÅoÑunningá mile in %d min, ",

38 
mmö
);

39 
	`¥ötf
("%d sec.\nYou∏avîagê•ìd wa†%1.2‡mph.\n",
m£c
,

40 
øã
);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/shoes1.c

2 
	~<°dio.h
>

3 
	#ADJUST
 7.64

	)

4 
	#SCALE
 0.325

	)

5 
	$maö
()

7 
sh€
, 
foŸ
;

9 
sh€
 = 9.0;

10 
foŸ
 = 
SCALE
 * 
sh€
 + 
ADJUST
;

11 
	`¥ötf
("Shoe size (men's) footÜength\n");

12 
	`¥ötf
("%10.1‡%15.2‡öches\n", 
sh€
, 
foŸ
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/shoes2.c

2 
	~<°dio.h
>

3 
	#ADJUST
 7.64

	)

4 
	#SCALE
 0.325

	)

5 
	$maö
()

7 
sh€
, 
foŸ
;

9 
	`¥ötf
("Shoe size (men's) footÜength\n");

10 
sh€
 = 3.0;

11 
sh€
 < 1
job
.5)

13 
foŸ
 = 
SCALE
*
sh€
 + 
ADJUST
;

14 
	`¥ötf
("%10.1‡%15.2‡öches\n", 
sh€
, 
foŸ
);

15 
sh€
 = shoe + 1.0;

17 
	`¥ötf
("IfÅhe shoe fits, wear it.\n");

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/sizeof.c

3 
	~<°dio.h
>

4 
	$maö
()

6 
n
 = 0;

7 
size_t
 
ötsize
;

9 
ötsize
 =  ();

10 
	`¥ötf
("n = %d,Ç has %zd bytes;áll ints have %zd bytes.\n",

11 
n
, Ç, 
ötsize
 );

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/squares.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
num
 = 1;

7 
num
 < 21)

9 
	`¥ötf
("%4d %6d\n", 
num
,Çum *Çum);

10 
num
 =Çum + 1;

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch05/wheat.c

2 
	~<°dio.h
>

3 
	#SQUARES
 64

	)

4 
	#CROP
 1E15

	)

5 
	$maö
()

7 
cuºít
, 
tŸÆ
;

8 
cou¡
 = 1;

10 
	`¥ötf
("square grainsÅotal ");

11 
	`¥ötf
("fraction of \n");

12 
	`¥ötf
("ádded grains ");

13 
	`¥ötf
("USÅotal\n");

14 
tŸÆ
 = 
cuºít
 = 1.0;

15 
	`¥ötf
("%4d %13.2ê%12.2ê%12.2e\n", 
cou¡
, 
cuºít
,

16 
tŸÆ
,ÅŸÆ/
CROP
);

17 
cou¡
 < 
SQUARES
)

19 
cou¡
 = count + 1;

20 
cuºít
 = 2.0 * current;

22 
tŸÆ
 =ÅŸÆ + 
cuºít
;

23 
	`¥ötf
("%4d %13.2ê%12.2ê%12.2e\n", 
cou¡
, 
cuºít
,

24 
tŸÆ
,ÅŸÆ/
CROP
);

26 
	`¥ötf
("That'sáll.\n");

29 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/boolean.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
num
;

6 
sum
 = 0L;

7 
_Boﬁ
 
öput_is_good
;

9 
	`¥ötf
("PleaseÉnterán integerÅo be summed ");

10 
	`¥ötf
("(qÅo quit): ");

11 
öput_is_good
 = (
	`sˇnf
("%ld", &
num
) == 1);

12 
öput_is_good
)

14 
sum
 = sum + 
num
;

15 
	`¥ötf
("PleaseÉnterÇext integer (qÅo quit): ");

16 
öput_is_good
 = (
	`sˇnf
("%ld", &
num
) == 1);

18 
	`¥ötf
("Tho£ i¡egî†sumÅÿ%ld.\n", 
sum
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/cmpflt.c

2 
	~<m©h.h
>

3 
	~<°dio.h
>

4 
	$maö
()

6 c⁄° 
ANSWER
 = 3.14159;

7 
ª•⁄£
;

9 
	`¥ötf
("What isÅhe value ofÖi?\n");

10 
	`sˇnf
("%lf", &
ª•⁄£
);

11 
	`Ábs
(
ª•⁄£
 - 
ANSWER
) > 0.0001)

13 
	`¥ötf
("Tryágain!\n");

14 
	`sˇnf
("%lf", &
ª•⁄£
);

16 
	`¥ötf
("CloseÉnough!\n");

19 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/do_while.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
£¸ë_code
 = 13;

6 
code_íãªd
;

10 
	`¥ötf
("ToÉnterÅheÅriskaidekaphobiaÅherapy club,\n");

11 
	`¥ötf
("pleaseÉnterÅhe secret codeÇumber: ");

12 
	`sˇnf
("%d", &
code_íãªd
);

13 } 
code_íãªd
 !
£¸ë_code
);

14 
	`¥ötf
("Congratulations! Youáre cured!\n");

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/entry.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
£¸ë_code
 = 13;

6 
code_íãªd
;

8 
	`¥ötf
("ToÉnterÅheÅriskaidekaphobiaÅherapy club,\n");

9 
	`¥ötf
("pleaseÉnterÅhe secret codeÇumber: ");

10 
	`sˇnf
("%d", &
code_íãªd
);

11 
code_íãªd
 !
£¸ë_code
)

13 
	`¥ötf
("ToÉnterÅheÅriskaidekaphobiaÅherapy club,\n");

14 
	`¥ötf
("pleaseÉnterÅhe secret codeÇumber: ");

15 
	`sˇnf
("%d", &
code_íãªd
);

17 
	`¥ötf
("Congratulations! Youáre cured!\n");

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_13s.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
;

7 
n
 = 2;Ç < 60;Ç =Ç + 13)

8 
	`¥ötf
("%d \n", 
n
);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_char.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

7 
ch
 = 'a'; ch <= 'z'; ch++)

8 
	`¥ötf
("ThêASCII vÆuêf‹ %¯i†%d.\n", 
ch
, ch);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_cube.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
num
;

7 
	`¥ötf
("ÇÇ cubed\n");

8 
num
 = 1;Çum <= 6;Çum++)

9 
	`¥ötf
("%5d %5d\n", 
num
,Çum*num*num);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_down.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
£cs
;

7 
£cs
 = 5; secs > 0; secs--)

8 
	`¥ötf
("%d sec⁄ds!\n", 
£cs
);

9 
	`¥ötf
("We have ignition!\n");

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_geo.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
debt
;

7 
debt
 = 100.0; debt < 150.0; debt = debt * 1.1)

8 
	`¥ötf
("You∏debài†now $%.2f.\n", 
debt
);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_none.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
™s
, 
n
;

7 
™s
 = 2;

8 
n
 = 3; 
™s
 <= 25; )

9 
™s
 =án†* 
n
;

10 
	`¥ötf
("¿%d;án†%d.\n", 
n
, 
™s
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_show.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
num
 = 0;

7 
	`¥ötf
("Kì∞íãrögÇumbîs!\n"); 
num
 != 6; )

8 
	`sˇnf
("%d", &
num
);

9 
	`¥ötf
("That'sÅhe one I want!\n");

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_wild.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
x
;

6 
y
 = 55;

8 
x
 = 1; 
y
 <= 75; y = (++x * 5) + 50)

9 
	`¥ötf
("%10d %10d\n", 
x
, 
y
);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/postage.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
FIRST_OZ
 = 37;

6 c⁄° 
NEXT_OZ
 = 23;

7 
oun˚s
, 
co°
;

9 
	`¥ötf
(" ounces cost\n");

10 
oun˚s
=1, 
co°
=
FIRST_OZ
; ounces <= 16; ounces++,

11 
co°
 +
NEXT_OZ
)

12 
	`¥ötf
("%5d $%4.2f\n", 
oun˚s
, 
co°
/100.0);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/power.c

2 
	~<°dio.h
>

3 
powî
(
n
, 
p
);

4 
	$maö
()

6 
x
, 
xpow
;

7 
exp
;

9 
	`¥ötf
("EnteráÇumberándÅheÖositive integerÖower");

10 
	`¥ötf
("Åo which\ntheÇumber will beÑaised. Enter q");

11 
	`¥ötf
("Åo quit.\n");

12 
	`sˇnf
("%lf%d", &
x
, &
exp
) == 2)

14 
xpow
 = 
	`powî
(
x
,
exp
);

15 
	`¥ötf
("%.3gÅÿthêpowî %d i†%.5g\n", 
x
, 
exp
, 
xpow
);

16 
	`¥ötf
("EnterÇextÖair ofÇumbers or qÅo quit.\n");

18 
	`¥ötf
("Hope youÉnjoyedÅhisÖowerÅrip -- bye!\n");

21 
	}
}

23 
	$powî
(
n
, 
p
)

25 
pow
 = 1;

26 
i
;

28 
i
 = 1; i <
p
; i++)

29 
pow
 *
n
;

31  
pow
;

32 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/rows1.c

2 
	~<°dio.h
>

3 
	#ROWS
 6

	)

4 
	#CHARS
 10

	)

5 
	$maö
()

7 
row
;

8 
ch
;

10 
row
 = 0;Ñow < 
ROWS
;Ñow++)

12 
ch
 = 'A'; ch < ('A' + 
CHARS
); ch++)

13 
	`¥ötf
("%c", 
ch
);

14 
	`¥ötf
("\n");

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/rows2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
ROWS
 = 6;

6 c⁄° 
CHARS
 = 6;

7 
row
;

8 
ch
;

10 
row
 = 0;Ñow < 
ROWS
;Ñow++)

12 
ch
 = ('A' + 
row
); ch < ('A' + 
CHARS
); ch++)

13 
	`¥ötf
("%c", 
ch
);

14 
	`¥ötf
("\n");

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/scores_in.c

2 
	~<°dio.h
>

3 
	#SIZE
 10

	)

4 
	#PAR
 72

	)

5 
	$maö
()

7 
ödex
, 
sc‹e
[
SIZE
];

8 
sum
 = 0;

9 
avîage
;

11 
	`¥ötf
("E¡î %d gﬁ‡sc‹es:\n", 
SIZE
);

12 
ödex
 = 0; index < 
SIZE
; index++)

13 
	`sˇnf
("%d", &
sc‹e
[
ödex
]);

14 
	`¥ötf
("The scoresÑead ináreás follows:\n");

15 
ödex
 = 0; index < 
SIZE
; index++)

16 
	`¥ötf
("%5d", 
sc‹e
[
ödex
]);

17 
	`¥ötf
("\n");

18 
ödex
 = 0; index < 
SIZE
; index++)

19 
sum
 +
sc‹e
[
ödex
];

20 
avîage
 = (Ë
sum
 / 
SIZE
;

21 
	`¥ötf
("Sum o‡sc‹e†%d,ávîagê%.2f\n", 
sum
, 
avîage
);

22 
	`¥ötf
("Th©'†®h™diˇ∞o‡%.0f.\n", 
avîage
 - 
PAR
);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/summing.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
num
;

6 
sum
 = 0L;

7 
°©us
;

9 
	`¥ötf
("PleaseÉnterán integerÅo be summed ");

10 
	`¥ötf
("(qÅo quit): ");

11 
°©us
 = 
	`sˇnf
("%ld", &
num
);

12 
°©us
 == 1)

14 
sum
 = sum + 
num
;

15 
	`¥ötf
("PleaseÉnterÇext integer (qÅo quit): ");

16 
°©us
 = 
	`sˇnf
("%ld", &
num
);

18 
	`¥ötf
("Tho£ i¡egî†sumÅÿ%ld.\n", 
sum
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/sweetie1.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
NUMBER
 = 22;

6 
cou¡
 = 1;

8 
cou¡
 <
NUMBER
)

10 
	`¥ötf
("Be my Valentine!\n");

11 
cou¡
++;

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/sweetie2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
NUMBER
 = 22;

6 
cou¡
;

8 
cou¡
 = 1; cou¡ <
NUMBER
; count++)

9 
	`¥ötf
("Be my Valentine!\n");

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/t_and_f.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
åue_vÆ
, 
Ál£_vÆ
;

7 
åue_vÆ
 = (10 > 2);

8 
Ál£_vÆ
 = (10 == 2);

9 
	`¥ötf
("åuê%d; fÆ£ = %d \n", 
åue_vÆ
, 
Ál£_vÆ
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/trouble.c

3 
	~<°dio.h
>

4 
	$maö
()

6 
num
;

7 
sum
 = 0L;

8 
°©us
;

10 
	`¥ötf
("PleaseÉnterán integerÅo be summed ");

11 
	`¥ötf
("(qÅo quit): ");

12 
°©us
 = 
	`sˇnf
("%ld", &
num
);

13 
°©us
 = 1)

15 
sum
 = sum + 
num
;

16 
	`¥ötf
("PleaseÉnterÇext integer (qÅo quit): ");

17 
°©us
 = 
	`sˇnf
("%ld", &
num
);

19 
	`¥ötf
("Tho£ i¡egî†sumÅÿ%ld.\n", 
sum
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/truth.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
 = 3;

7 
n
)

8 
	`¥ötf
("%2d i†åue\n", 
n
--);

9 
	`¥ötf
("%2d i†Ál£\n", 
n
);

11 
n
 = -3;

12 
n
)

13 
	`¥ötf
("%2d i†åue\n", 
n
++);

14 
	`¥ötf
("%2d i†Ál£\n", 
n
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/when.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
 = 5;

7 
n
 < 7)

9 
	`¥ötf
("¿%d\n", 
n
);

10 
n
++;

11 
	`¥ötf
("NowÇ = %d\n", 
n
);

13 
	`¥ötf
("TheÜoop has finished.\n");

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/while1.c

3 
	~<°dio.h
>

4 
	$maö
()

6 
n
 = 0;

8 
n
 < 3)

9 
	`¥ötf
("¿i†%d\n", 
n
);

10 
n
++;

11 
	`¥ötf
("That'sállÅhisÖrogram does\n");

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/while2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
 = 0;

7 
n
++ < 3);

8 
	`¥ötf
("¿i†%d\n", 
n
);

9 
	`¥ötf
("That'sállÅhisÖrogram does.\n");

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch06/zeno.c

2 
	~<°dio.h
>

4 
	$maö
()

6 
t_˘
;

7 
time
, 
x
;

8 
limô
;

10 
	`¥ötf
("EnterÅheÇumber ofÅerms you want: ");

11 
	`sˇnf
("%d", &
limô
);

12 
time
=0, 
x
=1, 
t_˘
=1;Å_˘ <
limô
;Å_ct++, x *= 2.0)

14 
time
 +1.0/
x
;

15 
	`¥ötf
("timê%‡whíÅîm†%d.\n", 
time
, 
t_˘
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/animals.c

2 
	~<°dio.h
>

3 
	~<˘y≥.h
>

4 
	$maö
()

6 
ch
;

8 
	`¥ötf
("Give meáÜetter ofÅheálphabet,ánd I will give ");

9 
	`¥ötf
("anánimalÇame\nbeginning withÅhatÜetter.\n");

10 
	`¥ötf
("PleaseÅype ináÜetter;Åype #ÅoÉnd myáct.\n");

11 (
ch
 = 
	`gëch¨
()) != '#')

13 if('\n' =
ch
)

15 i‡(
	`i¶owî
(
ch
))

16 
ch
)

19 
	`¥ötf
("argali,á wild sheep of Asia\n");

22 
	`¥ötf
("babirusa,á wildÖig of Malay\n");

25 
	`¥ötf
("coati,Ñacoonlike mammal\n");

28 
	`¥ötf
("desman,áquatic, molelike critter\n");

31 
	`¥ötf
("echidna,Åhe spinyánteater\n");

34 
	`¥ötf
("fisher, brownish marten\n");

37 
	`¥ötf
("That'sá stumper!\n");

40 
	`¥ötf
("IÑecognize onlyÜowercaseÜetters.\n");

41 
	`gëch¨
() != '\n')

43 
	`¥ötf
("PleaseÅypeánotherÜetter orá #.\n");

45 
	`¥ötf
("Bye!\n");

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/break.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
Àngth
, 
width
;

7 
	`¥ötf
("EnterÅheÜength ofÅheÑectangle:\n");

8 
	`sˇnf
("%f", &
Àngth
) == 1)

10 
	`¥ötf
("Lígth = %0.2f:\n", 
Àngth
);

11 
	`¥ötf
("Enter its width:\n");

12 i‡(
	`sˇnf
("%f", &
width
) != 1)

14 
	`¥ötf
("Width = %0.2f:\n", 
width
);

15 
	`¥ötf
("Aª®%0.2f:\n", 
Àngth
 * 
width
);

16 
	`¥ötf
("EnterÅheÜength ofÅheÑectangle:\n");

18 
	`¥ötf
("Done.\n");

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/chcount.c

2 
	~<°dio.h
>

3 
	#PERIOD
 '.'

	)

4 
	$maö
()

6 
ch
;

7 
ch¨cou¡
 = 0;

9 (
ch
 = 
	`gëch¨
()Ë!
PERIOD
)

11 i‡(
ch
 != '"' && ch != '\'')

12 
ch¨cou¡
++;

14 
	`¥ötf
("Thîê¨ê%dÇ⁄-quŸêch¨a˘îs.\n", 
ch¨cou¡
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/colddays.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
FREEZING
 = 0;

6 
ãm≥øtuª
;

7 
cﬁd_days
 = 0;

8 
Æl_days
 = 0;

10 
	`¥ötf
("EnterÅheÜist of dailyÜowÅemperatures.\n");

11 
	`¥ötf
("Use Celsius,ándÉnter qÅo quit.\n");

12 
	`sˇnf
("%f", &
ãm≥øtuª
) == 1)

14 
Æl_days
++;

15 i‡(
ãm≥øtuª
 < 
FREEZING
)

16 
cﬁd_days
++;

18 i‡(
Æl_days
 != 0)

19 
	`¥ötf
("%d daysÅotal: %.1f%% were below freezing.\n",

20 
Æl_days
, 100.0 * (Ë
cﬁd_days
 /áll_days);

21 i‡(
Æl_days
 == 0)

22 
	`¥ötf
("No dataÉntered!\n");

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/cypher1.c

2 
	~<°dio.h
>

3 
	#SPACE
 ' '

	)

4 
	$maö
()

6 
ch
;

8 
ch
 = 
	`gëch¨
();

9 
ch
 != '\n')

11 i‡(
ch
 =
SPACE
)

12 
	`putch¨
(
ch
);

14 
	`putch¨
(
ch
 + 1);

15 
ch
 = 
	`gëch¨
();

17 
	`putch¨
(
ch
);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/cypher2.c

2 
	~<°dio.h
>

3 
	~<˘y≥.h
>

4 
	$maö
()

6 
ch
;

8 (
ch
 = 
	`gëch¨
()) != '\n')

10 i‡(
	`ißÕha
(
ch
))

11 
	`putch¨
(
ch
 + 1);

13 
	`putch¨
(
ch
);

15 
	`putch¨
(
ch
);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/divisors.c

2 
	~<°dio.h
>

3 
	~<°dboﬁ.h
>

4 
	$maö
()

6 
num
;

7 
div
;

8 
boﬁ
 
isPrime
;

10 
	`¥ötf
("PleaseÉnterán integer foránalysis; ");

11 
	`¥ötf
("Enter qÅo quit.\n");

12 
	`sˇnf
("%lu", &
num
) == 1)

14 
div
 = 2, 
isPrime

åue
; (div * divË<
num
; div++)

16 i‡(
num
 % 
div
 == 0)

18 i‡((
div
 * divË!
num
)

19 
	`¥ötf
("%lu is divisible by %luánd %lu.\n",

20 
num
, 
div
,Çum / div);

22 
	`¥ötf
("%lu is divisible by %lu.\n",

23 
num
, 
div
);

24 
isPrime

Ál£
;

27 i‡(
isPrime
)

28 
	`¥ötf
("%lu i†¥ime.\n", 
num
);

29 
	`¥ötf
("PleaseÉnteránother integer foránalysis; ");

30 
	`¥ötf
("Enter qÅo quit.\n");

32 
	`¥ötf
("Bye.\n");

35 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/electric.c

2 
	~<°dio.h
>

3 
	#RATE1
 0.125
job9


	)

4 
	#RATE2
 0.17901

	)

5 
	#RATE3
 0.20971

	)

6 
	#BREAK1
 360.0

	)

7 
	#BREAK2
 6
job0
.0

	)

8 
	#BASE1
 (
RATE1
 * 
BREAK1
)

	)

10 
	#BASE2
 (
BASE1
 + (
RATE2
 * (
BREAK2
 - 
BREAK1
)))

	)

12 
	$maö
()

14 
kwh
;

15 
bûl
;

17 
	`¥ötf
("PleaseÉnterÅhe kwh used.\n");

18 
	`sˇnf
("%lf", &
kwh
);

19 i‡(
kwh
 <
BREAK1
)

20 
bûl
 = 
RATE1
 * 
kwh
;

21 i‡(
kwh
 <
BREAK2
)

22 
bûl
 = 
BASE1
 + (
RATE2
 * (
kwh
 - 
BREAK1
));

24 
bûl
 = 
BASE2
 + (
RATE3
 * (
kwh
 - 
BREAK2
));

25 
	`¥ötf
("Thêch¨gêf‹ %.1‡kwh i†$%1.2f.\n", 
kwh
, 
bûl
);

28 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/paint.c

2 
	~<°dio.h
>

3 
	#COVERAGE
 200

	)

4 
	$maö
()

6 
sq_„ë
;

7 
ˇns
;

9 
	`¥ötf
("EnterÇumber of square feetÅo beÖainted:\n");

10 
	`sˇnf
("%d", &
sq_„ë
) == 1)

12 
ˇns
 = 
sq_„ë
 / 
COVERAGE
;

13 
ˇns
 +((
sq_„ë
 % 
COVERAGE
 == 0)) ? 0 : 1;

14 
	`¥ötf
("YouÇìd %d %†o‡∑öt.\n", 
ˇns
,

15 
ˇns
 == 1 ? "can" : "cans");

16 
	`¥ötf
("EnterÇext value (qÅo quit):\n");

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/skippart.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
MIN
 = 0.0f;

6 c⁄° 
MAX
 = 100.0f;

8 
sc‹e
;

9 
tŸÆ
 = 0.0f;

10 
n
 = 0;

11 
mö
 = 
MAX
;

12 
max
 = 
MIN
;

14 
	`¥ötf
("EnterÅhe first score (qÅo quit): ");

15 
	`sˇnf
("%f", &
sc‹e
) == 1)

17 i‡(
sc‹e
 < 
MIN
 || sc‹ê> 
MAX
)

19 
	`¥ötf
("%0.1f isán invalid value. Tryágain: ",

20 
sc‹e
);

23 
	`¥ötf
("Ac˚±ög %0.1f:\n", 
sc‹e
);

24 
mö
 = (
sc‹e
 < min)? score: min;

25 
max
 = (
sc‹e
 > max)? score: max;

26 
tŸÆ
 +
sc‹e
;

27 
n
++;

28 
	`¥ötf
("EnterÇext score (qÅo quit): ");

30 i‡(
n
 > 0)

32 
	`¥ötf
("Avîagêo‡%d sc‹e†i†%0.1f.\n", 
n
, 
tŸÆ
 /Ç);

33 
	`¥ötf
("Low = %0.1f, high = %0.1f\n", 
mö
, 
max
);

36 
	`¥ötf
("No valid scores wereÉntered.\n");

38 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/vowels.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

6 
a_˘
, 
e_˘
, 
i_˘
, 
o_˘
, 
u_˘
;

8 
a_˘
 = 
e_˘
 = 
i_˘
 = 
o_˘
 = 
u_˘
 = 0;

10 
	`¥ötf
("Enter someÅext;Énter #Åo quit.\n");

11 (
ch
 = 
	`gëch¨
()) != '#')

13 
ch
)

16 'A' : 
a_˘
++;

19 'E' : 
e_˘
++;

22 'I' : 
i_˘
++;

25 'O' : 
o_˘
++;

28 'U' : 
u_˘
++;

33 
	`¥ötf
("number of vowels: A E I O U\n");

34 
	`¥ötf
(" %4d %4d %4d %4d %4d\n",

35 
a_˘
, 
e_˘
, 
i_˘
, 
o_˘
, 
u_˘
);

38 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch07/wordcnt.c

2 
	~<°dio.h
>

3 
	~<˘y≥.h
>

4 
	~<°dboﬁ.h
>

5 
	#STOP
 '|'

	)

6 
	$maö
()

8 
c
;

9 
¥ev
;

10 
n_ch¨s
 = 0L;

11 
n_löes
 = 0;

12 
n_w‹ds
 = 0;

13 
p_löes
 = 0;

14 
boﬁ
 
öw‹d
 = 
Ál£
;

16 
	`¥ötf
("EnterÅextÅo beánalyzed (|ÅoÅerminate):\n");

17 
¥ev
 = '\n';

18 (
c
 = 
	`gëch¨
()Ë!
STOP
)

20 
n_ch¨s
++;

21 i‡(
c
 == '\n')

22 
n_löes
++;

23 i‡(!
	`is•a˚
(
c
Ë&& !
öw‹d
)

25 
öw‹d
 = 
åue
;

26 
n_w‹ds
++;

28 i‡(
	`is•a˚
(
c
Ë&& 
öw‹d
)

29 
öw‹d
 = 
Ál£
;

30 
¥ev
 = 
c
;

33 i‡(
¥ev
 != '\n')

34 
p_löes
 = 1;

35 
	`¥ötf
("characters = %ld, words = %d,Üines = %d, ",

36 
n_ch¨s
, 
n_w‹ds
, 
n_löes
);

37 
	`¥ötf
("∑πü»löe†%d\n", 
p_löes
);

40 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/checking.c

2 
	~<°dio.h
>

3 
	~<°dboﬁ.h
>

5 
gë_öt
();

7 
boﬁ
 
bad_limôs
(
begö
, 
íd
, 
low
, 
high
);

10 
sum_squ¨es
(
a
, 
b
);

11 
	$maö
()

13 c⁄° 
MIN
 = -1000;

14 c⁄° 
MAX
 = +1000;

15 
°¨t
;

16 
°›
;

17 
™swî
;

19 
	`¥ötf
("ThisÖrogram computesÅhe sum ofÅhe squares of "

24 
°¨t
 = 
	`gë_öt
();

25 
	`¥ötf
("upperÜimit: ");

26 
°›
 = 
	`gë_öt
();

27 
°¨t
 !=0 || 
°›
 != 0)

29 i‡(
	`bad_limôs
(
°¨t
, 
°›
, 
MIN
, 
MAX
))

30 
	`¥ötf
("PleaseÅryágain.\n");

33 
™swî
 = 
	`sum_squ¨es
(
°¨t
, 
°›
);

34 
	`¥ötf
("The sum ofÅhe squares ofÅhe integers ");

35 
	`¥ötf
("‰om %dÅÿ%d i†%g\n", 
°¨t
, 
°›
, 
™swî
);

37 
	`¥ötf
("EnterÅheÜimits (enter 0 for both "

39 
	`¥ötf
("lowerÜimit: ");

40 
°¨t
 = 
	`gë_öt
();

41 
	`¥ötf
("upperÜimit: ");

42 
°›
 = 
	`gë_öt
();

44 
	`¥ötf
("Done.\n");

47 
	}
}

49 
	$gë_öt
()

51 
öput
;

52 
ch
;

54 
	`sˇnf
("%d", &
öput
) != 1)

56 (
ch
 = 
	`gëch¨
()) != '\n')

57 
	`putch¨
(
ch
);

58 
	`¥ötf
(" isÇotán integer.\nPleaseÉnterán ");

59 
	`¥ötf
("integer value, suchás 25, -17job, or 3: ");

62  
öput
;

63 
	}
}

65 
	$sum_squ¨es
(
a
, 
b
)

67 
tŸÆ
 = 0;

68 
i
;

70 
i
 = 
a
; i <
b
; i++)

71 
tŸÆ
 +
i
 * i;

73  
tŸÆ
;

74 
	}
}

76 
boﬁ
 
	$bad_limôs
(
begö
, 
íd
, 
low
, 
high
)

78 
boﬁ
 
nŸ_good
 = 
Ál£
;

80 i‡(
begö
 > 
íd
)

82 
	`¥ötf
("%d i¢'àsmÆÀ∏th™ %d.\n", 
begö
, 
íd
);

83 
nŸ_good
 = 
åue
;

85 i‡(
begö
 < 
low
 || 
íd
 <Üow)

87 
	`¥ötf
("VÆue†mu° bê%d o∏gª©î.\n", 
low
);

88 
nŸ_good
 = 
åue
;

90 i‡(
begö
 > 
high
 || 
íd
 > high)

92 
	`¥ötf
("VÆue†mu° bê%d o∏Àss.\n", 
high
);

93 
nŸ_good
 = 
åue
;

96  
nŸ_good
;

97 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/echo.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

7 (
ch
 = 
	`gëch¨
()) != '#')

8 
	`putch¨
(
ch
);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/echo_eof.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
ch
;

7 (
ch
 = 
	`gëch¨
()Ë!
EOF
)

8 
	`putch¨
(
ch
);

11 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/file_eof.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	$maö
()

6 
ch
;

7 
FILE
 * 
Â
;

8 
‚ame
[50];

10 
	`¥ötf
("EnterÅheÇame ofÅhe file: ");

11 
	`sˇnf
("%s", 
‚ame
);

12 
Â
 = 
	`f›í
(
‚ame
, "r");

13 i‡(
Â
 =
NULL
)

15 
	`¥ötf
("FailedÅo open file. Bye\n");

16 
	`exô
(1);

19 (
ch
 = 
	`gëc
(
Â
)Ë!
EOF
)

20 
	`putch¨
(
ch
);

21 
	`f˛o£
(
Â
);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/guess.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
guess
 = 1;

7 
	`¥ötf
("Pickán integer from 1Åo 100. I willÅryÅo guess ");

8 
	`¥ötf
("it.\nRespond withá y if my guess isÑightánd with");

9 
	`¥ötf
("\nanÇ if it is wrong.\n");

10 
	`¥ötf
("Uh...i†you∏numbî %d?\n", 
guess
);

11 
	`gëch¨
() != 'y')

12 
	`¥ötf
("Wñl,Åhí, i†ô %d?\n", ++
guess
);

13 
	`¥ötf
("I knew I could do it!\n");

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/menuette.c

2 
	~<°dio.h
>

3 
gë_choi˚
();

4 
gë_fú°
();

5 
gë_öt
();

6 
cou¡
();

7 
	$maö
()

9 
choi˚
;

10 
	`cou¡
();

12  (
choi˚
 = 
	`gë_choi˚
()) != 'q')

14 
choi˚
)

16 'a' : 
	`¥ötf
("BuyÜow, sell high.\n");

18 'b' : 
	`putch¨
('\a');

20 'c' : 
	`cou¡
();

22  : 
	`¥ötf
("ProgramÉrror!\n");

26 
	`¥ötf
("Bye.\n");

29 
	}
}

31 
	$cou¡
()

33 
n
,
i
;

35 
	`¥ötf
("Count how far? Enterán integer:\n");

36 
n
 = 
	`gë_öt
();

37 
i
 = 1; i <
n
; i++)

38 
	`¥ötf
("%d\n", 
i
);

39  
	`gëch¨
() != '\n')

41 
	}
}

43 
	$gë_choi˚
()

45 
ch
;

47 
	`¥ötf
("EnterÅheÜetter of your choice:\n");

48 
	`¥ötf
("a.ádvice b. bell\n");

49 
	`¥ötf
("c. count q. quit\n");

50 
ch
 = 
	`gë_fú°
();

51  (
ch
 < 'a' || ch > 'c') && ch != 'q')

53 
	`¥ötf
("PleaseÑespond withá, b, c, or q.\n");

54 
ch
 = 
	`gë_fú°
();

57  
ch
;

58 
	}
}

60 
	$gë_fú°
()

62 
ch
;

64 
ch
 = 
	`gëch¨
();

65 
	`gëch¨
() != '\n')

68  
ch
;

69 
	}
}

71 
	$gë_öt
()

73 
öput
;

74 
ch
;

76 
	`sˇnf
("%d", &
öput
) != 1)

78 (
ch
 = 
	`gëch¨
()) != '\n')

79 
	`putch¨
(
ch
);

80 
	`¥ötf
(" isÇotán integer.\nPleaseÉnterán ");

81 
	`¥ötf
("integer value, suchás 25, -17job, or 3: ");

84  
öput
;

85 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/showchar1.c

2 
	~<°dio.h
>

3 
di•œy
(
¸
, 
löes
, 
width
);

4 
	$maö
()

6 
ch
;

7 
rows
, 
cﬁs
;

8 
	`¥ötf
("Enterá characterándÅwo integers:\n");

9 (
ch
 = 
	`gëch¨
()) != '\n')

11 
	`sˇnf
("%d %d", &
rows
, &
cﬁs
);

12 
	`di•œy
(
ch
, 
rows
, 
cﬁs
);

13 
	`¥ötf
("Enteránother characterándÅwo integers;\n");

14 
	`¥ötf
("EnteráÇewlineÅo quit.\n");

16 
	`¥ötf
("Bye.\n");

19 
	}
}

21 
	$di•œy
(
¸
, 
löes
, 
width
)

23 
row
, 
cﬁ
;

25 
row
 = 1;Ñow <
löes
;Ñow++)

27 
cﬁ
 = 1; cﬁ <
width
; col++)

28 
	`putch¨
(
¸
);

29 
	`putch¨
('\n');

31 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch08/showchar2.c

2 
	~<°dio.h
>

3 
di•œy
(
¸
, 
löes
, 
width
);

4 
	$maö
()

6 
ch
;

7 
rows
, 
cﬁs
;

9 
	`¥ötf
("Enterá characterándÅwo integers:\n");

10 (
ch
 = 
	`gëch¨
()) != '\n')

12 i‡(
	`sˇnf
("%d %d",&
rows
, &
cﬁs
) != 2)

14 
	`di•œy
(
ch
, 
rows
, 
cﬁs
);

15 
	`gëch¨
() != '\n')

17 
	`¥ötf
("Enteránother characterándÅwo integers;\n");

18 
	`¥ötf
("EnteráÇewlineÅo quit.\n");

20 
	`¥ötf
("Bye.\n");

23 
	}
}

25 
	$di•œy
(
¸
, 
löes
, 
width
)

27 
row
, 
cﬁ
;

29 
row
 = 1;Ñow <
löes
;Ñow++)

31 
cﬁ
 = 1; cﬁ <
width
; col++)

32 
	`putch¨
(
¸
);

33 
	`putch¨
('\n');

35 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/binary.c

2 
	~<°dio.h
>

3 
to_bö¨y
(
n
);

5 
	$maö
()

7 
numbî
;

8 
	`¥ötf
("Enterán integer (qÅo quit):\n");

9 
	`sˇnf
("%ul", &
numbî
) == 1)

11 
	`¥ötf
("BinaryÉquivalent: ");

12 
	`to_bö¨y
(
numbî
);

13 
	`putch¨
('\n');

14 
	`¥ötf
("Enterán integer (qÅo quit):\n");

16 
	`¥ötf
("Done.\n");

19 
	}
}

21 
	$to_bö¨y
(
n
)

23 
r
;

25 
r
 = 
n
 % 2;

26 i‡(
n
 >= 2)

27 
	`to_bö¨y
(
n
 / 2);

28 
	`putch¨
('0' + 
r
);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/factor.c

2 
	~<°dio.h
>

3 
Á˘
(
n
);

4 
rÁ˘
(
n
);

5 
	$maö
()

7 
num
;

9 
	`¥ötf
("ThisÖrogram calculates factorials.\n");

10 
	`¥ötf
("Enterá value inÅheÑange 0-12 (qÅo quit):\n");

11 
	`sˇnf
("%d", &
num
) == 1)

13 i‡(
num
 < 0)

14 
	`¥ötf
("NoÇegativeÇumbers,Ölease.\n");

15 i‡(
num
 > 12)

16 
	`¥ötf
("Keep input under 13.\n");

19 
	`¥ötf
("loop: %d factorial = %ld\n",

20 
num
, 
	`Á˘
(num));

21 
	`¥ötf
("recursion: %d factorial = %ld\n",

22 
num
, 
	`rÁ˘
(num));

24 
	`¥ötf
("Enterá value inÅheÑange 0-12 (qÅo quit):\n");

26 
	`¥ötf
("Bye.\n");

29 
	}
}

31 
	$Á˘
(
n
)

33 
™s
;

35 
™s
 = 1; 
n
 > 1;Ç--)

36 
™s
 *
n
;

38  
™s
;

39 
	}
}

41 
	$rÁ˘
(
n
)

43 
™s
;

45 i‡(
n
 > 0)

46 
™s

n
 * 
	`rÁ˘
(n-1);

48 
™s
 = 1;

50  
™s
;

51 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/hotel.c

2 
	~<°dio.h
>

3 
	~"hŸñ.h
"

4 
	$míu
()

6 
code
, 
°©us
;

8 
	`¥ötf
("\n%s%s\n", 
STARS
, STARS);

9 
	`¥ötf
("EnterÅheÇumber ofÅhe desired hotel:\n");

10 
	`¥ötf
("1) Fairfield Arms 2) Hotel Olympic\n");

11 
	`¥ötf
("3) Chertworthy Plaza 4) The Stockton\n");

12 
	`¥ötf
("5) quit\n");

13 
	`¥ötf
("%s%s\n", 
STARS
, STARS);

14 (
°©us
 = 
	`sˇnf
("%d", &
code
)) != 1 ||

15 (
code
 < 1 || code > 5))

17 i‡(
°©us
 != 1)

18 
	`sˇnf
("%*s");

19 
	`¥ötf
("Enterán integer from 1Åo 5,Ölease.\n");

22  
code
;

23 
	}
}

25 
	$gënights
()

27 
nights
;

29 
	`¥ötf
("How manyÇightsáreÇeeded? ");

30 
	`sˇnf
("%d", &
nights
) != 1)

32 
	`sˇnf
("%*s");

33 
	`¥ötf
("PleaseÉnterán integer, suchás 2.\n");

36  
nights
;

37 
	}
}

39 
	$show¥i˚
(
øã
, 
nights
)

41 
n
;

42 
tŸÆ
 = 0.0;

43 
Á˘‹
 = 1.0;

45 
n
 = 1;Ç <
nights
;Ç++, 
Á˘‹
 *
DISCOUNT
)

46 
tŸÆ
 +
øã
 * 
Á˘‹
;

47 
	`¥ötf
("ThêtŸÆ co° wû»bê$%0.2f.\n", 
tŸÆ
);

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/hotel.h

2 
	#QUIT
 5

	)

3 
	#HOTEL1
 
job0
.00

	)

4 
	#HOTEL2
 125.00

	)

5 
	#HOTEL3
 155.00

	)

6 
	#HOTEL4
 200.00

	)

7 
	#DISCOUNT
 0.95

	)

8 
	#STARS
 "**********************************"

	)

11 
míu
();

14 
gënights
();

18 
show¥i˚
(
øã
, 
nights
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/lesser.c

2 
	~<°dio.h
>

3 
imö
(, );

5 
	$maö
()

7 
evû1
, 
evû2
;

9 
	`¥ötf
("EnteráÖair of integers (qÅo quit):\n");

10 
	`sˇnf
("%d %d", &
evû1
, &
evû2
) == 2)

12 
	`¥ötf
("TheÜesser of %dánd %d is %d.\n",

13 
evû1
, 
evû2
, 
	`imö
(evil1,evil2));

14 
	`¥ötf
("EnteráÖair of integers (qÅo quit):\n");

16 
	`¥ötf
("Bye.\n");

19 
	}
}

21 
	$imö
(
n
,
m
)

23 
mö
;

25 i‡(
n
 < 
m
)

26 
mö
 = 
n
;

28 
mö
 = 
m
;

30  
mö
;

31 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/lethead1.c

2 
	~<°dio.h
>

3 
	#NAME
 "GIGATHINK, INC."

	)

4 
	#ADDRESS
 "101 Megabuck Pœza"

	)

5 
	#PLACE
 "Meg≠ﬁis, CA 94904"

	)

6 
	#WIDTH
 40

	)

8 
°¨b¨
();

10 
	$maö
()

12 
	`°¨b¨
();

13 
	`¥ötf
("%s\n", 
NAME
);

14 
	`¥ötf
("%s\n", 
ADDRESS
);

15 
	`¥ötf
("%s\n", 
PLACE
);

16 
	`°¨b¨
();

19 
	}
}

21 
	$°¨b¨
()

23 
cou¡
;

25 
cou¡
 = 1; cou¡ <
WIDTH
; count++)

26 
	`putch¨
('*');

27 
	`putch¨
('\n');

28 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/lethead2.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#NAME
 "GIGATHINK, INC."

	)

5 
	#ADDRESS
 "101 Megabuck Pœza"

	)

6 
	#PLACE
 "Meg≠ﬁis, CA 94904"

	)

7 
	#WIDTH
 40

	)

8 
	#SPACE
 ' '

	)

10 
show_n_ch¨
(
ch
, 
num
);

12 
	$maö
()

14 
•a˚s
;

16 
	`show_n_ch¨
('*', 
WIDTH
);

17 
	`putch¨
('\n');

18 
	`show_n_ch¨
(
SPACE
, 12);

19 
	`¥ötf
("%s\n", 
NAME
);

20 
•a˚s
 = (
WIDTH
 - 
	`°æí
(
ADDRESS
)) / 2;

23 
	`show_n_ch¨
(
SPACE
, 
•a˚s
);

24 
	`¥ötf
("%s\n", 
ADDRESS
);

25 
	`show_n_ch¨
(
SPACE
, (
WIDTH
 - 
	`°æí
(
PLACE
)) / 2);

27 
	`¥ötf
("%s\n", 
PLACE
);

28 
	`show_n_ch¨
('*', 
WIDTH
);

29 
	`putch¨
('\n');

32 
	}
}

35 
	$show_n_ch¨
(
ch
, 
num
)

37 
cou¡
;

39 
cou¡
 = 1; cou¡ <
num
; count++)

40 
	`putch¨
(
ch
);

41 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/loccheck.c

2 
	~<°dio.h
>

3 
mikado
();

4 
	$maö
()

6 
pooh
 = 2, 
bah
 = 5;

8 
	`¥ötf
("In main(),Öooh = %dánd &pooh = %p\n",

9 
pooh
, &pooh);

10 
	`¥ötf
("In main(), bah = %dánd &bah = %p\n",

11 
bah
, &bah);

12 
	`mikado
(
pooh
);

15 
	}
}

17 
	$mikado
(
bah
)

19 
pooh
 = 10;

21 
	`¥ötf
("In mikado(),Öooh = %dánd &pooh = %p\n",

22 
pooh
, &pooh);

23 
	`¥ötf
("In mikado(), bah = %dánd &bah = %p\n",

24 
bah
, &bah);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/misuse.c

2 
	~<°dio.h
>

3 
imax
();

5 
	$maö
()

7 
	`¥ötf
("The maximum of %dánd %d is %d.\n",

8 3, 5, 
	`imax
(3));

9 
	`¥ötf
("The maximum of %dánd %d is %d.\n",

10 3, 5, 
	`imax
(3.0, 5.0));

12 
	}
}

14 
	$imax
(
n
, 
m
)

15 
n
, 
m
;

17 
max
;

19 i‡(
n
 > 
m
)

20 
max
 = 
n
;

22 
max
 = 
m
;

24  
max
;

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/proto.c

2 
	~<°dio.h
>

3 
imax
(, );

4 
	$maö
()

6 
	`¥ötf
("The maximum of %dánd %d is %d.\n",

7 3, 5, 
	`imax
(3));

8 
	`¥ötf
("The maximum of %dánd %d is %d.\n",

9 3, 5, 
	`imax
(3.0, 5.0));

11 
	}
}

13 
	$imax
(
n
, 
m
)

15 
max
;

17 i‡(
n
 > 
m
)

18 
max
 = 
n
;

20 
max
 = 
m
;

22  
max
;

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/recur.c

2 
	~<°dio.h
>

3 
up_™d_down
();

5 
	$maö
()

7 
	`up_™d_down
(1);

9 
	}
}

11 
	$up_™d_down
(
n
)

13 
	`¥ötf
("Levñ %d:ÇÜoˇti⁄ %p\n", 
n
, &n);

14 i‡(
n
 < 4)

15 
	`up_™d_down
(
n
+1);

16 
	`¥ötf
("LEVEL %d:ÇÜoˇti⁄ %p\n", 
n
, &n);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap1.c

2 
	~<°dio.h
>

3 
öãrch™ge
(
u
, 
v
);

5 
	$maö
()

7 
x
 = 5, 
y
 = 10;

9 
	`¥ötf
("OrigöÆly x = %dánd y = %d.\n", 
x
 , 
y
);

10 
	`öãrch™ge
(
x
, 
y
);

11 
	`¥ötf
("Now x = %dánd y = %d.\n", 
x
, 
y
);

14 
	}
}

16 
	$öãrch™ge
(
u
, 
v
)

18 
ãmp
;

20 
ãmp
 = 
u
;

21 
u
 = 
v
;

22 
v
 = 
ãmp
;

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap2.c

2 
	~<°dio.h
>

3 
öãrch™ge
(
u
, 
v
);

5 
	$maö
()

7 
x
 = 5, 
y
 = 10;

9 
	`¥ötf
("OrigöÆly x = %dánd y = %d.\n", 
x
 , 
y
);

10 
	`öãrch™ge
(
x
, 
y
);

11 
	`¥ötf
("Now x = %dánd y = %d.\n", 
x
, 
y
);

14 
	}
}

16 
	$öãrch™ge
(
u
, 
v
)

18 
ãmp
;

20 
	`¥ötf
("OrigöÆly u = %dánd v = %d.\n", 
u
 , 
v
);

21 
ãmp
 = 
u
;

22 
u
 = 
v
;

23 
v
 = 
ãmp
;

24 
	`¥ötf
("Now u = %dánd v = %d.\n", 
u
, 
v
);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap3.c

2 
	~<°dio.h
>

3 
öãrch™ge
(* 
u
, * 
v
);

5 
	$maö
()

7 
x
 = 5, 
y
 = 10;

9 
	`¥ötf
("OrigöÆly x = %dánd y = %d.\n", 
x
, 
y
);

10 
	`öãrch™ge
(&
x
, &
y
);

11 
	`¥ötf
("Now x = %dánd y = %d.\n", 
x
, 
y
);

14 
	}
}

16 
	$öãrch™ge
(* 
u
, * 
v
)

18 
ãmp
;

20 
ãmp
 = *
u
;

21 *
u
 = *
v
;

22 *
v
 = 
ãmp
;

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch09/usehotel.c

3 
	~<°dio.h
>

4 
	~"hŸñ.h
"

6 
	$maö
()

8 
nights
;

9 
hŸñ_øã
;

10 
code
;

12 (
code
 = 
	`míu
()Ë!
QUIT
)

14 
code
)

16 1 : 
hŸñ_øã
 = 
HOTEL1
;

18 2 : 
hŸñ_øã
 = 
HOTEL2
;

20 3 : 
hŸñ_øã
 = 
HOTEL3
;

22 4 : 
hŸñ_øã
 = 
HOTEL4
;

24 : 
hŸñ_øã
 = 0.0;

25 
	`¥ötf
("Oops!\n");

28 
nights
 = 
	`gënights
();

29 
	`show¥i˚
(
hŸñ_øã
, 
nights
);

31 
	`¥ötf
("Thank youánd goodbye.");

34 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/arf.c

2 
	~<°dio.h
>

3 
	#SIZE
 5

	)

4 
show_¨øy
(c⁄° 
¨
[], 
n
);

5 
mu…_¨øy
(
¨
[], 
n
, 
mu…
);

6 
	$maö
()

8 
dù
[
SIZE
] = {20.0, 17.66, 
job
.2, 15.3, 22.22};

10 
	`¥ötf
("The original dipárray:\n");

11 
	`show_¨øy
(
dù
, 
SIZE
);

12 
	`mu…_¨øy
(
dù
, 
SIZE
, 2.5);

13 
	`¥ötf
("The dipárrayáfter calling mult_array():\n");

14 
	`show_¨øy
(
dù
, 
SIZE
);

17 
	}
}

20 
	$show_¨øy
(c⁄° 
¨
[], 
n
)

22 
i
;

24 
i
 = 0; i < 
n
; i++)

25 
	`¥ötf
("%job.3‡", 
¨
[
i
]);

26 
	`putch¨
('\n');

27 
	}
}

30 
	$mu…_¨øy
(
¨
[], 
n
, 
mu…
)

32 
i
;

34 
i
 = 0; i < 
n
; i++)

35 
¨
[
i
] *
mu…
;

36 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/array2d.c

2 
	~<°dio.h
>

3 
	#ROWS
 3

	)

4 
	#COLS
 4

	)

5 
sum_rows
(
¨
[][
COLS
], 
rows
);

6 
sum_cﬁs
([][
COLS
], );

7 
sum2d
((*
¨
)[
COLS
], 
rows
);

8 
	$maö
()

10 
junk
[
ROWS
][
COLS
] = {

11 {2,4,6,
job
},

13 {12,10,
job
,6}

16 
	`sum_rows
(
junk
, 
ROWS
);

17 
	`sum_cﬁs
(
junk
, 
ROWS
);

18 
	`¥ötf
("Sum o‡Æ»ñemít†%d\n", 
	`sum2d
(
junk
, 
ROWS
));

21 
	}
}

23 
	$sum_rows
(
¨
[][
COLS
], 
rows
)

25 
r
;

26 
c
;

27 
tŸ
;

29 
r
 = 0;Ñ < 
rows
;Ñ++)

31 
tŸ
 = 0;

32 
c
 = 0; c < 
COLS
; c++)

33 
tŸ
 +
¨
[
r
][
c
];

34 
	`¥ötf
("row %d: sum = %d\n", 
r
, 
tŸ
);

36 
	}
}

38 
	$sum_cﬁs
(
¨
[][
COLS
], 
rows
)

40 
r
;

41 
c
;

42 
tŸ
;

44 
c
 = 0; c < 
COLS
; c++)

46 
tŸ
 = 0;

47 
r
 = 0;Ñ < 
rows
;Ñ++)

48 
tŸ
 +
¨
[
r
][
c
];

49 
	`¥ötf
("cﬁ %d: sum = %d\n", 
c
, 
tŸ
);

51 
	}
}

53 
	$sum2d
(
¨
[][
COLS
], 
rows
)

55 
r
;

56 
c
;

57 
tŸ
 = 0;

59 
r
 = 0;Ñ < 
rows
;Ñ++)

60 
c
 = 0; c < 
COLS
; c++)

61 
tŸ
 +
¨
[
r
][
c
];

63  
tŸ
;

64 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/bounds.c

2 
	~<°dio.h
>

3 
	#SIZE
 4

	)

4 
	$maö
()

6 
vÆue1
 = 44;

7 
¨r
[
SIZE
];

8 
vÆue2
 = 
jobjob
;

9 
i
;

11 
	`¥ötf
("vÆue1 = %d, vÆue2 = %d\n", 
vÆue1
, 
vÆue2
);

12 
i
 = -1; i <
SIZE
; i++)

13 
¨r
[
i
] = 2 * i + 1;

15 
i
 = -1; i < 7; i++)

16 
	`¥ötf
("%2d %d\n", 
i
 , 
¨r
[i]);

17 
	`¥ötf
("vÆue1 = %d, vÆue2 = %d\n", 
vÆue1
, 
vÆue2
);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon1.c

2 
	~<°dio.h
>

3 
	#MONTHS
 12

	)

5 
	$maö
()

7 
days
[
MONTHS
] = {31,2
job
,31,30,31,30,31,31,30,31,30,31};

8 
ödex
;

10 
ödex
 = 0; index < 
MONTHS
; index++)

11 
	`¥ötf
("M⁄th %d ha†%2d days.\n", 
ödex
 +1,

12 
days
[
ödex
]);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° 
days
[] = {31,2
job
,31,30,31,30,31,31,30,31};

6 
ödex
;

8 
ödex
 = 0; index <  
days
 /  days[0]; index++)

9 
	`¥ötf
("M⁄th %2d ha†%d days.\n", 
ödex
 +1,

10 
days
[
ödex
]);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon3.c

2 
	~<°dio.h
>

3 
	#MONTHS
 12

	)

5 
	$maö
()

7 
days
[
MONTHS
] = {31,2
job
,31,30,31,30,31,31,30,31,30,31};

8 
ödex
;

10 
ödex
 = 0; index < 
MONTHS
; index++)

11 
	`¥ötf
("M⁄th %2d ha†%d days.\n", 
ödex
 +1,

12 *(
days
 + 
ödex
));

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/designate.c

2 
	~<°dio.h
>

3 
	#MONTHS
 12

	)

4 
	$maö
()

6 
days
[
MONTHS
] = {31,2
job
, [4] = 31,30,31, [1] = 29};

7 
i
;

9 
i
 = 0; i < 
MONTHS
; i++)

10 
	`¥ötf
("%2d %d\n", 
i
 + 1, 
days
[i]);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/flc.c

2 
	~<°dio.h
>

3 
	#COLS
 4

	)

4 
sum2d
(
¨
[][
COLS
], 
rows
);

5 
sum
(
¨
[], 
n
);

7 
	$maö
()

9 
tŸÆ1
, 
tŸÆ2
, 
tŸÆ3
;

10 * 
±1
;

11 (*
±2
)[
COLS
];

13 
±1
 = ([2]) {10, 20};

14 
±2
 = ([2][
COLS
]Ë{ {1,2,3,-9}, {4,5,6,-
job
} };

16 
tŸÆ1
 = 
	`sum
(
±1
, 2);

17 
tŸÆ2
 = 
	`sum2d
(
±2
, 2);

18 
tŸÆ3
 = 
	`sum
(([]){4,4,4,5,5,5}, 6);

19 
	`¥ötf
("tŸÆ1 = %d\n", 
tŸÆ1
);

20 
	`¥ötf
("tŸÆ2 = %d\n", 
tŸÆ2
);

21 
	`¥ötf
("tŸÆ3 = %d\n", 
tŸÆ3
);

24 
	}
}

26 
	$sum
(
¨
[], 
n
)

28 
i
;

29 
tŸÆ
 = 0;

31  
i
 = 0; i < 
n
; i++)

32 
tŸÆ
 +
¨
[
i
];

34  
tŸÆ
;

35 
	}
}

37 
	$sum2d
(
¨
[][
COLS
], 
rows
)

39 
r
;

40 
c
;

41 
tŸ
 = 0;

43 
r
 = 0;Ñ < 
rows
;Ñ++)

44 
c
 = 0; c < 
COLS
; c++)

45 
tŸ
 +
¨
[
r
][
c
];

47  
tŸ
;

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/no_data.c

2 
	~<°dio.h
>

3 
	#SIZE
 4

	)

4 
	$maö
()

6 
no_d©a
[
SIZE
];

7 
i
;

9 
	`¥ötf
("%2s%14s\n",

11 
i
 = 0; i < 
SIZE
; i++)

12 
	`¥ötf
("%2d%14d\n", 
i
, 
no_d©a
[i]);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/order.c

2 
	~<°dio.h
>

3 
	gd©a
[2] = {100, 200};

4 
	gm‹ed©a
[2] = {300, 400};

5 
	$maö
()

7 * 
p1
, * 
p2
, * 
p3
;

9 
p1
 = 
p2
 = 
d©a
;

10 
p3
 = 
m‹ed©a
;

11 
	`¥ötf
(" *p1 = %d, *p2 = %d, *p3 = %d\n",

12 *
p1
 , *
p2
 , *
p3
);

13 
	`¥ötf
("*p1++ = %d, *++p2 = %d, (*p3)++ = %d\n",

14 *
p1
++ , *++
p2
 , (*
p3
)++);

15 
	`¥ötf
(" *p1 = %d, *p2 = %d, *p3 = %d\n",

16 *
p1
 , *
p2
 , *
p3
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/pnt_add.c

2 
	~<°dio.h
>

3 
	#SIZE
 4

	)

4 
	$maö
()

6 
d©es
 [
SIZE
];

7 * 
±i
;

8 
ödex
;

9 
bûls
[
SIZE
];

10 * 
±f
;

12 
±i
 = 
d©es
;

13 
±f
 = 
bûls
;

14 
	`¥ötf
("%23s %10s\n", "short", "double");

15 
ödex
 = 0; index < 
SIZE
; index ++)

16 
	`¥ötf
("pointers + %d: %10p %10p\n",

17 
ödex
, 
±i
 + index, 
±f
 + index);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/ptr_ops.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
u∫
[5] = {100,200,300,400,500};

6 * 
±r1
, * 
±r2
, *
±r3
;

8 
±r1
 = 
u∫
;

9 
±r2
 = &
u∫
[2];

12 
	`¥ötf
("pointer value, dereferencedÖointer,Öointeráddress:\n");

13 
	`¥ötf
("ptr1 = %p, *ptr1 =%d, &ptr1 = %p\n",

14 
±r1
, *ptr1, &ptr1);

17 
±r3
 = 
±r1
 + 4;

18 
	`¥ötf
("\naddingán intÅoáÖointer:\n");

19 
	`¥ötf
("ptr1 + 4 = %p, *(ptr4 + 3) = %d\n",

20 
±r1
 + 4, *(ptr1 + 3));

21 
±r1
++;

22 
	`¥ötf
("\nvaluesáfterÖtr1++:\n");

23 
	`¥ötf
("ptr1 = %p, *ptr1 =%d, &ptr1 = %p\n",

24 
±r1
, *ptr1, &ptr1);

25 
±r2
--;

26 
	`¥ötf
("\nvaluesáfter --ptr2:\n");

27 
	`¥ötf
("ptr2 = %p, *ptr2 = %d, &ptr2 = %p\n",

28 
±r2
, *ptr2, &ptr2);

29 --
±r1
;

30 ++
±r2
;

31 
	`¥ötf
("\nPointersÑesetÅo original values:\n");

32 
	`¥ötf
("±r1 = %p,Öå2 = %p\n", 
±r1
, 
±r2
);

34 
	`¥ötf
("\nsubtracting oneÖointer frománother:\n");

35 
	`¥ötf
("ptr2 = %p,Ötr1 = %p,Ötr2 -Ötr1 = %d\n",

36 
±r2
, 
±r1
,Ötr2 -Ötr1);

38 
	`¥ötf
("\nsubtractingán int fromáÖointer:\n");

39 
	`¥ötf
("ptr3 = %p,Ötr3 - 2 = %p\n",

40 
±r3
,Ötr3 - 2);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/rain.c

3 
	~<°dio.h
>

4 
	#MONTHS
 12

5 
	#YEARS
 5

6 
	`maö
()

	)

9 c⁄° 
	gøö
[
YEARS
][
MONTHS
] =

12 {
job
.5,job.2,1.2,1.6,2.4,0.0,5.2,0.9,0.3,0.9,1.4,7.3},

13 {9.1,
job
.5,6.7,4.3,2.1,0.job,0.2,0.2,1.1,2.3,6.1,job.4},

14 {7.2,9.9,
job
.4,3.3,1.2,0.job,0.4,0.0,0.6,1.7,4.3,6.2},

15 {7.6,5.6,3.
job
,2.job,3.job,0.2,0.0,0.0,0.0,1.3,2.6,5.2}

17 
	gyór
, 
	gm⁄th
;

18 
	gsubtŸ
, 
	gtŸÆ
;

20 
¥ötf
(" YEAR RAINFALL (inches)\n");

21 
	gyór
 = 0, 
	gtŸÆ
 = 0; yó∏< 
	gYEARS
; year++)

23 
	gm⁄th
 = 0, 
	gsubtŸ
 = 0; m⁄th < 
	gMONTHS
; month++)

24 
	gsubtŸ
 +
øö
[
yór
][
m⁄th
];

25 
¥ötf
("%5d %15.1f\n", 2000 + 
yór
, 
subtŸ
);

26 
	gtŸÆ
 +
subtŸ
;

28 
¥ötf
("\nThe yearlyáverage is %.1f inches.\n\n",

29 
tŸÆ
/
YEARS
);

30 
¥ötf
("MONTHLY AVERAGES:\n\n");

31 
¥ötf
(" Jan Feb Mar Apr May Jun Jul Aug Sep Oct ");

32 
¥ötf
(" Nov Dec\n");

34 
	gm⁄th
 = 0; m⁄th < 
	gMONTHS
; month++)

36 
	gyór
 = 0, 
	gsubtŸ
 =0; yó∏< 
	gYEARS
; year++)

37 
	gsubtŸ
 +
øö
[
yór
][
m⁄th
];

38 
¥ötf
("%4.1‡", 
subtŸ
/
YEARS
);

40 
¥ötf
("\n");

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/some_data.c

2 
	~<°dio.h
>

3 
	#SIZE
 4

	)

4 
	$maö
()

6 
some_d©a
[
SIZE
] = {1492, 1066};

7 
i
;

9 
	`¥ötf
("%2s%14s\n",

11 
i
 = 0; i < 
SIZE
; i++)

12 
	`¥ötf
("%2d%14d\n", 
i
, 
some_d©a
[i]);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/sum_arr1.c

3 
	~<°dio.h
>

4 
	#SIZE
 10

	)

5 
sum
(
¨
[], 
n
);

6 
	$maö
()

8 
m¨bÀs
[
SIZE
] = {20,10,5,39,4,16,19,26,31,20};

9 
™swî
;

11 
™swî
 = 
	`sum
(
m¨bÀs
, 
SIZE
);

12 
	`¥ötf
("ThêtŸÆÇumbî o‡m¨bÀ†i†%ld.\n", 
™swî
);

13 
	`¥ötf
("The size of marbles is %zd bytes.\n",

14  
m¨bÀs
);

17 
	}
}

19 
	$sum
(
¨
[], 
n
)

21 
i
;

22 
tŸÆ
 = 0;

24  
i
 = 0; i < 
n
; i++)

25 
tŸÆ
 +
¨
[
i
];

26 
	`¥ötf
("Thêsizêo‡¨ i†%zd byãs.\n",  
¨
);

28  
tŸÆ
;

29 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/sum_arr2.c

2 
	~<°dio.h
>

3 
	#SIZE
 10

	)

4 
sump
(* 
°¨t
, * 
íd
);

5 
	$maö
()

7 
m¨bÀs
[
SIZE
] = {20,10,5,39,4,16,19,26,31,20};

8 
™swî
;

10 
™swî
 = 
	`sump
(
m¨bÀs
, m¨bÀ†+ 
SIZE
);

11 
	`¥ötf
("ThêtŸÆÇumbî o‡m¨bÀ†i†%ld.\n", 
™swî
);

14 
	}
}

17 
	$sump
(* 
°¨t
, * 
íd
)

19 
tŸÆ
 = 0;

21 
°¨t
 < 
íd
)

23 
tŸÆ
 +*
°¨t
;

24 
°¨t
++;

27  
tŸÆ
;

28 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/vararr2d.c

2 
	~<°dio.h
>

3 
	#ROWS
 3

	)

4 
	#COLS
 4

	)

5 
sum2d
(
rows
, 
cﬁs
, 
¨
[rows][cols]);

6 
	$maö
()

8 
i
, 
j
;

9 
rs
 = 3;

10 
cs
 = 10;

11 
junk
[
ROWS
][
COLS
] = {

12 {2,4,6,
job
},

14 {12,10,
job
,6}

17 
m‹ejunk
[
ROWS
-1][
COLS
+2] = {

19 {5,6,7,
job
,9,10}

22 
v¨r
[
rs
][
cs
];

24 
i
 = 0; i < 
rs
; i++)

25 
j
 = 0; j < 
cs
; j++)

26 
v¨r
[
i
][
j
] = i * j + j;

28 
	`¥ötf
("3x5árray\n");

29 
	`¥ötf
("Sum ofállÉlements = %d\n",

30 
	`sum2d
(
ROWS
, 
COLS
, 
junk
));

32 
	`¥ötf
("2x6árray\n");

33 
	`¥ötf
("Sum ofállÉlements = %d\n",

34 
	`sum2d
(
ROWS
-1, 
COLS
+2, 
m‹ejunk
));

36 
	`¥ötf
("3x10 VLA\n");

37 
	`¥ötf
("Sum ofállÉlements = %d\n",

38 
	`sum2d
(
rs
, 
cs
, 
v¨r
));

41 
	}
}

44 
	$sum2d
(
rows
, 
cﬁs
, 
¨
[rows][cols])

46 
r
;

47 
c
;

48 
tŸ
 = 0;

50 
r
 = 0;Ñ < 
rows
;Ñ++)

51 
c
 = 0; c < 
cﬁs
; c++)

52 
tŸ
 +
¨
[
r
][
c
];

54  
tŸ
;

55 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/zippo1.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
zùpo
[4][2] = { {2,4}, {6,
job
}, {1,3}, {5, 7} };

7 
	`¥ötf
(" zippo = %p, zippo + 1 = %p\n",

8 
zùpo
, zippo + 1);

9 
	`¥ötf
("zippo[0] = %p, zippo[0] + 1 = %p\n",

10 
zùpo
[0], zippo[0] + 1);

11 
	`¥ötf
(" *zippo = %p, *zippo + 1 = %p\n",

12 *
zùpo
, *zippo + 1);

13 
	`¥ötf
("zùpo[0][0] = %d\n", 
zùpo
[0][0]);

14 
	`¥ötf
(" *zùpo[0] = %d\n", *
zùpo
[0]);

15 
	`¥ötf
(" **zùpÿ%d\n", **
zùpo
);

16 
	`¥ötf
(" zùpo[2][1] = %d\n", 
zùpo
[2][1]);

17 
	`¥ötf
("*(*(zùpo+2Ë+ 1Ë%d\n", *(*(
zùpo
+2) + 1));

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch10/zippo2.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
zùpo
[4][2] = { {2,4}, {6,
job
}, {1,3}, {5, 7} };

6 (*
pz
)[2];

7 
pz
 = 
zùpo
;

9 
	`¥ötf
("Öz = %p,Öz + 1 = %p\n",

10 
pz
,Öz + 1);

11 
	`¥ötf
("pz[0] = %p,Öz[0] + 1 = %p\n",

12 
pz
[0],Öz[0] + 1);

13 
	`¥ötf
(" *pz = %p, *pz + 1 = %p\n",

14 *
pz
, *pz + 1);

15 
	`¥ötf
("pz[0][0] = %d\n", 
pz
[0][0]);

16 
	`¥ötf
(" *pz[0] = %d\n", *
pz
[0]);

17 
	`¥ötf
(" **pz = %d\n", **
pz
);

18 
	`¥ötf
("Öz[2][1] = %d\n", 
pz
[2][1]);

19 
	`¥ötf
("*(*’z+2Ë+ 1Ë%d\n", *(*(
pz
+2) + 1));

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/compare.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#ANSWER
 "Gø¡"

	)

5 
	#MAX
 40

	)

6 
	$maö
()

8 
åy
[
MAX
];

10 
	`puts
("Who is buried in Grant'sÅomb?");

11 
	`gës
(
åy
);

12 
	`°rcmp
(
åy
,
ANSWER
) != 0)

14 
	`puts
("No,Åhat's wrong. Tryágain.");

15 
	`gës
(
åy
);

17 
	`puts
("That'sÑight!");

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/compback.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	$maö
()

7 
	`¥ötf
("strcmp(\"A\", \"A\") is ");

8 
	`¥ötf
("%d\n", 
	`°rcmp
("A", "A"));

10 
	`¥ötf
("strcmp(\"A\", \"B\") is ");

11 
	`¥ötf
("%d\n", 
	`°rcmp
("A", "B"));

13 
	`¥ötf
("strcmp(\"B\", \"A\") is ");

14 
	`¥ötf
("%d\n", 
	`°rcmp
("B", "A"));

16 
	`¥ötf
("strcmp(\"C\", \"A\") is ");

17 
	`¥ötf
("%d\n", 
	`°rcmp
("C", "A"));

19 
	`¥ötf
("strcmp(\"Z\", \"a\") is ");

20 
	`¥ötf
("%d\n", 
	`°rcmp
("Z", "a"));

22 
	`¥ötf
("strcmp(\"apples\", \"apple\") is ");

23 
	`¥ötf
("%d\n", 
	`°rcmp
("apples", "apple"));

26 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy1.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 40

	)

5 
	#LIM
 5

	)

7 
	$maö
()

9 
qw‹ds
[
LIM
][
SIZE
];

10 
ãmp
[
SIZE
];

11 
i
 = 0;

13 
	`¥ötf
("E¡î %d w‹d†begönög wôh q:\n", 
LIM
);

14 
i
 < 
LIM
 && 
	`gës
(
ãmp
))

16 i‡(
ãmp
[0] != 'q')

17 
	`¥ötf
("%†d€¢'àbegö wôh q!\n", 
ãmp
);

20 
	`°r˝y
(
qw‹ds
[
i
], 
ãmp
);

21 
i
++;

24 
	`puts
("HereáreÅhe wordsáccepted:");

25 
i
 = 0; i < 
LIM
; i++)

26 
	`puts
(
qw‹ds
[
i
]);

29 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy2.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#WORDS
 "bó°"

	)

5 
	#SIZE
 40

	)

7 
	$maö
()

9 c⁄° * 
‹ig
 = 
WORDS
;

10 
c›y
[
SIZE
] = "BeÅhe bestÅhat you can be.";

11 * 
ps
;

13 
	`puts
(
‹ig
);

14 
	`puts
(
c›y
);

15 
ps
 = 
	`°r˝y
(
c›y
 + 7, 
‹ig
);

16 
	`puts
(
c›y
);

17 
	`puts
(
ps
);

20 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy3.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 40

	)

5 
	#TARGSIZE
 7

	)

6 
	#LIM
 5

	)

7 
	$maö
()

9 
qw‹ds
[
LIM
][
TARGSIZE
];

10 
ãmp
[
SIZE
];

11 
i
 = 0;

13 
	`¥ötf
("E¡î %d w‹d†begönög wôh q:\n", 
LIM
);

14 
i
 < 
LIM
 && 
	`gës
(
ãmp
))

16 i‡(
ãmp
[0] != 'q')

17 
	`¥ötf
("%†d€¢'àbegö wôh q!\n", 
ãmp
);

20 
	`°∫˝y
(
qw‹ds
[
i
], 
ãmp
, 
TARGSIZE
 - 1);

21 
qw‹ds
[
i
][
TARGSIZE
 - 1] = '\0';

22 
i
++;

25 
	`puts
("HereáreÅhe wordsáccepted:");

26 
i
 = 0; i < 
LIM
; i++)

27 
	`puts
(
qw‹ds
[
i
]);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/format.c

2 
	~<°dio.h
>

3 
	#MAX
 20

	)

5 
	$maö
()

7 
fú°
[
MAX
];

8 
œ°
[
MAX
];

9 
f‹mÆ
[2 * 
MAX
 + 10];

10 
¥ize
;

12 
	`puts
("Enter your firstÇame:");

13 
	`gës
(
fú°
);

14 
	`puts
("Enter yourÜastÇame:");

15 
	`gës
(
œ°
);

16 
	`puts
("Enter yourÖrize money:");

17 
	`sˇnf
("%lf", &
¥ize
);

18 
	`•rötf
(
f‹mÆ
, "%s, %-19s: $%6.2f\n", 
œ°
, 
fú°
, 
¥ize
);

19 
	`puts
(
f‹mÆ
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/hello.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
i
, 
times
;

9 i‡(
¨gc
 < 2 || (
times
 = 
	`©oi
(
¨gv
[1])) < 1)

10 
	`¥ötf
("Ußge: %†posôive-numbî\n", 
¨gv
[0]);

12 
i
 = 0; i < 
times
; i++)

13 
	`puts
("Hello, goodÜooking!");

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/join_chk.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 30

	)

5 
	#BUGSIZE
 13

	)

6 
	$maö
()

8 
Êowî
[
SIZE
];

9 
add⁄
[] = "s smellÜike old shoes.";

10 
bug
[
BUGSIZE
];

11 
avaûabÀ
;

13 
	`puts
("What is your favorite flower?");

14 
	`gës
(
Êowî
);

15 i‡((
	`°æí
(
add⁄
Ë+ såÀn(
Êowî
Ë+ 1Ë<
SIZE
)

16 
	`°rˇt
(
Êowî
, 
add⁄
);

17 
	`puts
(
Êowî
);

18 
	`puts
("What is your favorite bug?");

19 
	`gës
(
bug
);

20 
avaûabÀ
 = 
BUGSIZE
 - 
	`°æí
(
bug
) - 1;

21 
	`°∫ˇt
(
bug
, 
add⁄
, 
avaûabÀ
);

22 
	`puts
(
bug
);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/mod_str.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<˘y≥.h
>

5 
	#LIMIT
 
job0


	)

6 
ToUµî
(*);

7 
Pun˘Cou¡
(const *);

9 
	$maö
()

11 
löe
[
LIMIT
];

13 
	`puts
("PleaseÉnteráÜine:");

14 
	`gës
(
löe
);

15 
	`ToUµî
(
löe
);

16 
	`puts
(
löe
);

17 
	`¥ötf
("ThatÜine has %dÖunctuation characters.\n",

18 
	`Pun˘Cou¡
(
löe
));

21 
	}
}

23 
	$ToUµî
(* 
°r
)

25 *
°r
)

27 *
°r
 = 
	`touµî
(*str);

28 
°r
++;

30 
	}
}

32 
	$Pun˘Cou¡
(c⁄° * 
°r
)

34 
˘
 = 0;

35 *
°r
)

37 i‡(
	`i•un˘
(*
°r
))

38 
˘
++;

39 
°r
++;

42  
˘
;

43 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/name1.c

2 
	~<°dio.h
>

3 
	#MAX
 
job1


	)

4 
	$maö
()

6 
«me
[
MAX
];

8 
	`¥ötf
("Hi, what's yourÇame?\n");

9 
	`gës
(
«me
);

10 
	`¥ötf
("Ni˚Çame, %s.\n", 
«me
);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/name2.c

2 
	~<°dio.h
>

3 
	#MAX
 
job1


	)

4 
	$maö
()

6 
«me
[
MAX
];

7 * 
±r
;

9 
	`¥ötf
("Hi, what's yourÇame?\n");

10 
±r
 = 
	`gës
(
«me
);

11 
	`¥ötf
("%s? Ah! %s!\n", 
«me
, 
±r
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/name3.c

2 
	~<°dio.h
>

3 
	#MAX
 
job1


	)

4 
	$maö
()

6 
«me
[
MAX
];

7 * 
±r
;

9 
	`¥ötf
("Hi, what's yourÇame?\n");

10 
±r
 = 
	`fgës
(
«me
, 
MAX
, 
°dö
);

11 
	`¥ötf
("%s? Ah! %s!\n", 
«me
, 
±r
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/nogo.c

2 
	~<°dio.h
>

3 
	#ANSWER
 "Gø¡"

	)

4 
	$maö
()

6 
åy
[40];

8 
	`puts
("Who is buried in Grant'sÅomb?");

9 
	`gës
(
åy
);

10 
åy
 !
ANSWER
)

12 
	`puts
("No,Åhat's wrong. Tryágain.");

13 
	`gës
(
åy
);

15 
	`puts
("That'sÑight!");

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/nono.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
side_a
[] = "Side A";

6 
d⁄t
[] = {'W', 'O', 'W', '!' };

7 
side_b
[] = "Side B";

9 
	`puts
(
d⁄t
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/p_and_s.c

2 
	~<°dio.h
>

3 
	$maö
()

5 c⁄° * 
mesg
 = "Don't beá fool!";

6 c⁄° * 
c›y
;

8 
c›y
 = 
mesg
;

9 
	`¥ötf
("%s\n", 
c›y
);

10 
	`¥ötf
("mesg = %s; &mesg = %p; value = %p\n",

11 
mesg
, &mesg, mesg);

12 
	`¥ötf
("copy = %s; &copy = %p; value = %p\n",

13 
c›y
, &copy, copy);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/put1.c

2 
	~<°dio.h
>

3 
	$put1
(c⁄° * 
°rög
)

5 *
°rög
 != '\0')

6 
	`putch¨
(*
°rög
++);

7 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/put2.c

2 
	~<°dio.h
>

3 
	$put2
(c⁄° * 
°rög
)

5 
cou¡
 = 0;

6 *
°rög
)

8 
	`putch¨
(*
°rög
++);

9 
cou¡
++;

11 
	`putch¨
('\n');

13 (
cou¡
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/put_out.c

2 
	~<°dio.h
>

3 
	#DEF
 "Iámá #deföed såög."

	)

4 
	$maö
()

6 
°r1
[
job0
] = "Anárray was initializedÅo me.";

7 c⁄° * 
°r2
 = "AÖointer was initializedÅo me.";

9 
	`puts
("I'mánárgumentÅoÖuts().");

10 
	`puts
(
DEF
);

11 
	`puts
(
°r1
);

12 
	`puts
(
°r2
);

13 
	`puts
(&
°r1
[5]);

14 
	`puts
(
°r2
+4);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/put_put.c

2 
	~<°dio.h
>

3 
put1
(const *);

4 
put2
(const *);

6 
	$maö
()

8 
	`put1
("If I'dás much money");

9 
	`put1
("ás I could spend,\n");

10 
	`¥ötf
("I count %d characters.\n",

11 
	`put2
("IÇever would cry old chairsÅo mend."));

14 
	}
}

16 
	$put1
(c⁄° * 
°rög
)

18 *
°rög
)

19 
	`putch¨
(*
°rög
++);

20 
	}
}

22 
	$put2
(c⁄° * 
°rög
)

24 
cou¡
 = 0;

25 *
°rög
)

27 
	`putch¨
(*
°rög
++);

28 
cou¡
++;

30 
	`putch¨
('\n');

32 (
cou¡
);

33 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/quit_chk.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 
job1


	)

5 
	#LIM
 100

	)

6 
	#STOP
 "quô"

	)

7 
	$maö
()

9 
öput
[
LIM
][
SIZE
];

10 
˘
 = 0;

12 
	`¥ötf
("E¡î u∞tÿ%dÜöe†—y≥ quôÅÿquô):\n", 
LIM
);

13 
˘
 < 
LIM
 && 
	`gës
(
öput
[˘]Ë!
NULL
 &&

14 
	`°rcmp
(
öput
[
˘
],
STOP
) != 0)

16 
˘
++;

18 
	`¥ötf
("%d såög†íãªd\n", 
˘
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/quotes.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("%s, %p, %c\n", "We", "are", *"space farers");

8 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/repeat.c

2 
	~<°dio.h
>

3 
	$maö
(
¨gc
, *
¨gv
[])

5 
cou¡
;

7 
	`¥ötf
("Thêcomm™dÜöêha†%dárgumíts:\n", 
¨gc
 - 1);

8 
cou¡
 = 1; cou¡ < 
¨gc
; count++)

9 
	`¥ötf
("%d: %s\n", 
cou¡
, 
¨gv
[count]);

10 
	`¥ötf
("\n");

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/scan_str.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
«me1
[11], 
«me2
[11];

6 
cou¡
;

8 
	`¥ötf
("PleaseÉnter 2Çames.\n");

9 
cou¡
 = 
	`sˇnf
("%5†%10s",
«me1
, 
«me2
);

10 
	`¥ötf
("IÑeadÅhe %dÇames %sánd %s.\n",

11 
cou¡
, 
«me1
, 
«me2
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/sort_str.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 
job1


	)

5 
	#LIM
 20

	)

6 
	#HALT
 ""

	)

7 
°§t
(*
°rögs
[], 
num
);

9 
	$maö
()

11 
öput
[
LIM
][
SIZE
];

12 *
±°r
[
LIM
];

13 
˘
 = 0;

14 
k
;

16 
	`¥ötf
("I≈uàu∞tÿ%dÜöes,ánd I wû»s‹àthem.\n",
LIM
);

17 
	`¥ötf
("To stop,ÖressÅhe Enter keyátáÜine's start.\n");

18 
˘
 < 
LIM
 && 
	`gës
(
öput
[˘]Ë!
NULL


19 && 
öput
[
˘
][0] != '\0')

21 
±°r
[
˘
] = 
öput
[ct];

22 
˘
++;

24 
	`°§t
(
±°r
, 
˘
);

25 
	`puts
("\nHere'sÅhe sortedÜist:\n");

26 
k
 = 0; k < 
˘
; k++)

27 
	`puts
(
±°r
[
k
]) ;

30 
	}
}

33 
	$°§t
(*
°rögs
[], 
num
)

35 *
ãmp
;

36 
t›
, 
£ek
;

38 
t›
 = 0;Å› < 
num
-1;Åop++)

39 
£ek
 = 
t›
 + 1; sìk < 
num
; seek++)

40 i‡(
	`°rcmp
(
°rögs
[
t›
],°rögs[
£ek
]) > 0)

42 
ãmp
 = 
°rögs
[
t›
];

43 
°rögs
[
t›
] = såögs[
£ek
];

44 
°rögs
[
£ek
] = 
ãmp
;

46 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/starsrch.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#LISTSIZE
 5

	)

5 
	$maö
()

7 c⁄° * 
li°
[
LISTSIZE
] =

13 
cou¡
 = 0;

14 
i
;

16 
i
 = 0; i < 
LISTSIZE
; i++)

17 i‡(
	`°∫cmp
(
li°
[
i
],"astro", 5) == 0)

19 
	`¥ötf
("Found: %s\n", 
li°
[
i
]);

20 
cou¡
++;

22 
	`¥ötf
("TheÜist contained %d words beginning"

23 " wôhá°ro.\n", 
cou¡
);

26 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/str_cat.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	#SIZE
 
job0


	)

5 
	$maö
()

7 
Êowî
[
SIZE
];

8 
add⁄
[] = "s smellÜike old shoes.";

10 
	`puts
("What is your favorite flower?");

11 
	`gës
(
Êowî
);

12 
	`°rˇt
(
Êowî
, 
add⁄
);

13 
	`puts
(
Êowî
);

14 
	`puts
(
add⁄
);

17 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/strcnvt.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	$maö
()

7 
numbî
[30];

8 * 
íd
;

9 
vÆue
;

11 
	`puts
("EnteráÇumber (emptyÜineÅo quit):");

12 
	`gës
(
numbî
) &&Çumber[0] != '\0')

14 
vÆue
 = 
	`°πﬁ
(
numbî
, &
íd
, 10);

15 
	`¥ötf
("value: %ld, stoppedát %s (%d)\n",

16 
vÆue
, 
íd
, *end);

17 
vÆue
 = 
	`°πﬁ
(
numbî
, &
íd
, 16);

18 
	`¥ötf
("value: %ld, stoppedát %s (%d)\n",

19 
vÆue
, 
íd
, *end);

20 
	`puts
("NextÇumber:");

22 
	`puts
("Bye!\n");

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/strings.c

2 
	~<°dio.h
>

3 
	#MSG
 "You mu° havêm™yÅÆíts. Tñ»mêsome."

	)

5 
	#LIM
 5

	)

6 
	#LINELEN
 
job1


7 
	`maö
()

	)

9 
	g«me
[
LINELEN
];

10 
	gèÀ¡s
[
LINELEN
];

11 
	gi
;

14 c⁄° 
	gm1
[40] = "Limit yourselfÅo oneÜine's worth.";

17 c⁄° 
	gm2
[] = "If you can'tÅhink ofánything, fake it.";

19 c⁄° *
	gm3
 = "\nEnoughábout me -- what's yourÇame?";

22 c⁄° *
	gmyèl
[
LIM
] = {

29 
¥ötf
("Hi! I'm ClydeÅhe Computer."

31 
¥ötf
("Let meÅell you some ofÅhem.\n");

32 
puts
("What wereÅhey? Ah, yes, here'sáÖartialÜist.");

33 
	gi
 = 0; i < 
	gLIM
; i++)

34 
puts
(
myèl
[
i
]);

35 
puts
(
m3
);

36 
gës
(
«me
);

37 
¥ötf
("Wñl, %s, %s\n", 
«me
, 
MSG
);

38 
¥ötf
("%s\n%s\n", 
m1
, 
m2
);

39 
gës
(
èÀ¡s
);

40 
puts
("Let's see if I've gotÅhatÜist:");

41 
puts
(
èÀ¡s
);

42 
¥ötf
("Th™k†f‹Åhêöf‹m©i⁄, %s.\n", 
«me
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch11/test_fit.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
fô
(*, );

6 
	$maö
()

8 
mesg
[] = "Things should beás simpleásÖshitible,"

11 
	`puts
(
mesg
);

12 
	`fô
(
mesg
,3
job
);

13 
	`puts
(
mesg
);

14 
	`puts
("Let'sÜookát some more ofÅhe string.");

15 
	`puts
(
mesg
 + 39);

18 
	}
}

20 
	$fô
(*
°rög
, 
size
)

22 i‡(
	`°æí
(
°rög
Ë> 
size
)

23 *(
°rög
 + 
size
) = '\0';

24 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/diceroll.c

2 
	~"di˚rﬁl.h
"

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	grﬁl_cou¡
 = 0;

8 
	$rﬁÀm
(
sides
)

10 
rﬁl
;

12 
rﬁl
 = 
	`ønd
(Ë% 
sides
 + 1;

13 ++
rﬁl_cou¡
;

15  
rﬁl
;

16 
	}
}

18 
	$rﬁl_n_di˚
(
di˚
, 
sides
)

20 
d
;

21 
tŸÆ
 = 0;

22 i‡(
sides
 < 2)

24 
	`¥ötf
("NeedátÜeast 2 sides.\n");

27 i‡(
di˚
 < 1)

29 
	`¥ötf
("NeedátÜeast 1 die.\n");

33 
d
 = 0; d < 
di˚
; d++)

34 
tŸÆ
 +
	`rﬁÀm
(
sides
);

36  
tŸÆ
;

37 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/diceroll.h

2 
rﬁl_cou¡
;

4 
rﬁl_n_di˚
(
di˚
, 
sides
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/dyn_arr.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	$maö
()

7 * 
±d
;

8 
max
;

9 
numbî
;

10 
i
 = 0;

12 
	`puts
("What isÅhe maximumÇumber ofÅype doubleÉntries?");

13 
	`sˇnf
("%d", &
max
);

14 
±d
 = (*Ë
	`mÆloc
(
max
 *  ());

15 i‡(
±d
 =
NULL
)

17 
	`puts
("Memoryállocation failed. Goodbye.");

18 
	`exô
(
EXIT_FAILURE
);

21 
	`puts
("EnterÅhe values (qÅo quit):");

22 
i
 < 
max
 && 
	`sˇnf
("%lf", &
±d
[i]) == 1)

23 ++
i
;

24 
	`¥ötf
("Hîê¨êyou∏%dÉ¡rõs:\n", 
numbî
 = 
i
);

25 
i
 = 0; i < 
numbî
; i++)

27 
	`¥ötf
("%7.2‡", 
±d
[
i
]);

28 i‡(
i
 % 7 == 6)

29 
	`putch¨
('\n');

31 i‡(
i
 % 7 != 0)

32 
	`putch¨
('\n');

33 
	`puts
("Done.");

34 
	`‰ì
(
±d
);

37 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/forc99.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
n
 = 10;

7 
	`¥ötf
("InôüŒy,Ç = %d\n", 
n
);

8 
n
 = 1;Ç < 3;Ç++)

9 
	`¥ötf
("lo› 1:Ç = %d\n", 
n
);

10 
	`¥ötf
("A·îÜo› 1,Ç = %d\n", 
n
);

11 
n
 = 1;Ç < 3;Ç++)

13 
	`¥ötf
("lo› 2 indexÇ = %d\n", 
n
);

14 
n
 = 30;

15 
	`¥ötf
("lo› 2:Ç = %d\n", 
n
);

16 
n
++;

18 
	`¥ötf
("A·îÜo› 2,Ç = %d\n", 
n
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/global.c

2 
	~<°dio.h
>

3 
	gunôs
 = 0;

4 
¸ôic
();

5 
	$maö
()

7 
unôs
;

9 
	`¥ötf
("How manyÖoundsÅoá firkin of butter?\n");

10 
	`sˇnf
("%d", &
unôs
);

11  
unôs
 != 56)

12 
	`¸ôic
();

13 
	`¥ötf
("You must haveÜooked it up!\n");

16 
	}
}

18 
	$¸ôic
()

21 
	`¥ötf
("NoÜuck, chummy. Tryágain.\n");

22 
	`sˇnf
("%d", &
unôs
);

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/hiding.c

2 
	~<°dio.h
>

3 
	$maö
()

5 
x
 = 30;

7 
	`¥ötf
("x i¿ouã∏block: %d\n", 
x
);

9 
x
 = 77;

10 
	`¥ötf
("x i¿ö√∏block: %d\n", 
x
);

12 
	`¥ötf
("x i¿ouã∏block: %d\n", 
x
);

13 
x
++ < 33)

15 
x
 = 100;

16 
x
++;

17 
	`¥ötf
("x i¿whûêlo›: %d\n", 
x
);

19 
	`¥ötf
("x i¿ouã∏block: %d\n", 
x
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/loc_stat.c

2 
	~<°dio.h
>

3 
åy°©
();

5 
	$maö
()

7 
cou¡
;

9 
cou¡
 = 1; count <= 3; count++)

11 
	`¥ötf
("Hîêcome†ôî©i⁄ %d:\n", 
cou¡
);

12 
	`åy°©
();

16 
	}
}

18 
	$åy°©
()

20 
Áde
 = 1;

21 
°ay
 = 1;

23 
	`¥ötf
("Ádê%dánd sèy = %d\n", 
Áde
++, 
°ay
++);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/manydice.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<time.h
>

6 
	~"di˚rﬁl.h
"

8 
	$maö
()

10 
di˚
,
rﬁl
;

11 
sides
;

13 
	`§™d
((Ë
	`time
(0));

14 
	`¥ötf
("EnterÅheÇumber of sidesÖer die, 0Åo stop.\n");

15 
	`sˇnf
("%d", &
sides
) == 1 && sides > 0)

17 
	`¥ötf
("How many dice?\n");

18 
	`sˇnf
("%d", &
di˚
);

19 
rﬁl
 = 
	`rﬁl_n_di˚
(
di˚
, 
sides
);

20 
	`¥ötf
("You haveÑolledá %d using %d %d-sided dice.\n",

21 
rﬁl
, 
di˚
, 
sides
);

22 
	`¥ötf
("How many sides? Enter 0Åo stop.\n");

24 
	`¥ötf
("TheÑollem() function was called %dÅimes.\n",

25 
rﬁl_cou¡
);

27 
	`¥ötf
("GOOD FORTUNE TO YOU!\n");

30 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/parta.c

2 
	~<°dio.h
>

3 
ªp‹t_cou¡
();

4 
accumuœã
(
k
);

5 
	gcou¡
 = 0;

7 
	$maö
()

9 
vÆue
;

10 
i
;

12 
	`¥ötf
("EnteráÖositive integer (0Åo quit): ");

13 
	`sˇnf
("%d", &
vÆue
) == 1 && value > 0)

15 ++
cou¡
;

16 
i
 = 
vÆue
; i >= 0; i--)

17 
	`accumuœã
(
i
);

18 
	`¥ötf
("EnteráÖositive integer (0Åo quit): ");

20 
	`ªp‹t_cou¡
();

23 
	}
}

25 
	$ªp‹t_cou¡
()

27 
	`¥ötf
("Lo›Éxecuãd %dÅimes\n", 
cou¡
);

28 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/partb.c

2 
	~<°dio.h
>

4 
cou¡
;

6 
	gtŸÆ
 = 0;

7 
accumuœã
(
k
);

10 
	$accumuœã
(
k
)

12 
subtŸÆ
 = 0;

14 i‡(
k
 <= 0)

16 
	`¥ötf
("lo› cy˛e: %d\n", 
cou¡
);

17 
	`¥ötf
("subtŸÆ: %d;ÅŸÆ: %d\n", 
subtŸÆ
, 
tŸÆ
);

18 
subtŸÆ
 = 0;

22 
subtŸÆ
 +
k
;

23 
tŸÆ
 +
k
;

25 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/r_drive0.c

3 
	~<°dio.h
>

4 
ønd0
();

6 
	$maö
()

8 
cou¡
;

10 
cou¡
 = 0; count < 5; count++)

11 
	`¥ötf
("%hd\n", 
	`ønd0
());

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/r_drive1.c

3 
	~<°dio.h
>

4 
§™d1
(
x
);

5 
ønd1
();

7 
	$maö
()

9 
cou¡
;

10 
£ed
;

12 
	`¥ötf
("PleaseÉnter your choice for seed.\n");

13 
	`sˇnf
("%u", &
£ed
) == 1)

15 
	`§™d1
(
£ed
);

16 
cou¡
 = 0; count < 5; count++)

17 
	`¥ötf
("%hd\n", 
	`ønd1
());

18 
	`¥ötf
("PleaseÉnterÇext seed (qÅo quit):\n");

20 
	`¥ötf
("Done\n");

23 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/rand0.c

3 
	g√xt
 = 1;

5 
	$ønd0
()

8 
√xt
 =Çext * 1103515245 + 12345;

9  (Ë(
√xt
/65536Ë% 3276
job
;

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch12/s_and_r.c

3 
	g√xt
 = 1;

5 
	$ønd1
()

8 
√xt
 =Çext * 1103515245 + 12345;

9  (Ë(
√xt
/65536Ë% 3276
job
;

10 
	}
}

12 
	$§™d1
(
£ed
)

14 
√xt
 = 
£ed
;

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/addaword.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	#MAX
 40

	)

6 
	$maö
()

8 
FILE
 *
Â
;

9 
w‹ds
[
MAX
];

11 i‡((
Â
 = 
	`f›í
("w‹dy", "a+")Ë=
NULL
)

13 
	`Ârötf
(
°dout
,"Can't open \"words\" file.\n");

14 
	`exô
(1);

17 
	`puts
("Enter wordsÅoáddÅoÅhe file;ÖressÅhe Enter");

18 
	`puts
("keyátÅhe beginning ofáÜineÅoÅerminate.");

19 
	`gës
(
w‹ds
Ë!
NULL
 && words[0] != '\0')

20 
	`Ârötf
(
Â
, "%†", 
w‹ds
);

22 
	`puts
("File contents:");

23 
	`ªwöd
(
Â
);

24 
	`fsˇnf
(
Â
,"%s",
w‹ds
) == 1)

25 
	`puts
(
w‹ds
);

27 i‡(
	`f˛o£
(
Â
) != 0)

28 
	`Ârötf
(
°dîr
,"Error closing file\n");

31 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/append.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	#BUFSIZE
 1024

	)

6 
	#SLEN
 
job1


	)

7 
≠≥nd
(
FILE
 *
sour˚
, FILE *
de°
);

9 
	$maö
()

11 
FILE
 *
Á
, *
fs
;

12 
fûes
 = 0;

13 
fûe_≠p
[
SLEN
];

14 
fûe_§c
[
SLEN
];

15 
	`puts
("EnterÇame of destination file:");

16 
	`gës
(
fûe_≠p
);

17 i‡((
Á
 = 
	`f›í
(
fûe_≠p
, "a")Ë=
NULL
)

19 
	`Ârötf
(
°dîr
, "C™'à›í %s\n", 
fûe_≠p
);

20 
	`exô
(2);

22 i‡(
	`£tvbuf
(
Á
, 
NULL
, 
_IOFBF
, 
BUFSIZE
) != 0)

24 
	`Âuts
("C™'à¸óã ouçuàbuf„r\n", 
°dîr
);

25 
	`exô
(3);

27 
	`puts
("EnterÇame of first source file (emptyÜineÅo quit):");

28 
	`gës
(
fûe_§c
) && file_src[0] != '\0')

30 i‡(
	`°rcmp
(
fûe_§c
, 
fûe_≠p
) == 0)

31 
	`Âuts
("C™'à≠≥nd fûêtÿô£lf\n",
°dîr
);

32 i‡((
fs
 = 
	`f›í
(
fûe_§c
, "r")Ë=
NULL
)

33 
	`Ârötf
(
°dîr
, "C™'à›í %s\n", 
fûe_§c
);

36 i‡(
	`£tvbuf
(
fs
, 
NULL
, 
_IOFBF
, 
BUFSIZE
) != 0)

38 
	`Âuts
("C™'à¸óã i≈uàbuf„r\n",
°dîr
);

41 
	`≠≥nd
(
fs
, 
Á
);

42 i‡(
	`„º‹
(
fs
) != 0)

43 
	`Ârötf
(
°dîr
,"Error inÑeading file %s.\n",

44 
fûe_§c
);

45 i‡(
	`„º‹
(
Á
) != 0)

46 
	`Ârötf
(
°dîr
,"Error in writing file %s.\n",

47 
fûe_≠p
);

48 
	`f˛o£
(
fs
);

49 
fûes
++;

50 
	`¥ötf
("Fûê%†≠≥nded.\n", 
fûe_§c
);

51 
	`puts
("Next file (emptyÜineÅo quit):");

54 
	`¥ötf
("D⁄e. %d fûe†≠≥nded.\n", 
fûes
);

55 
	`f˛o£
(
Á
);

58 
	}
}

60 
	$≠≥nd
(
FILE
 *
sour˚
, FILE *
de°
)

62 
size_t
 
byãs
;

63 
ãmp
[
BUFSIZE
];

65 (
byãs
 = 
	`‰ód
(
ãmp
,(),
BUFSIZE
,
sour˚
)) > 0)

66 
	`fwrôe
(
ãmp
,  (), 
byãs
, 
de°
);

67 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/count.c

2 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
ch
;

8 
FILE
 *
Â
;

9 
cou¡
 = 0;

11 i‡(
¨gc
 != 2)

13 
	`¥ötf
("Ußge: %†fûíame\n", 
¨gv
[0]);

14 
	`exô
(1);

16 i‡((
Â
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

18 
	`¥ötf
("C™'à›í %s\n", 
¨gv
[1]);

19 
	`exô
(1);

21 (
ch
 = 
	`gëc
(
Â
)Ë!
EOF
)

23 
	`putc
(
ch
,
°dout
);

24 
cou¡
++;

26 
	`f˛o£
(
Â
);

27 
	`¥ötf
("Fûê%†ha†%ld ch¨a˘îs\n", 
¨gv
[1], 
cou¡
);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/parrot.c

2 
	~<°dio.h
>

3 
	#MAXLINE
 20

	)

4 
	$maö
()

6 
löe
[
MAXLINE
];

8 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
 &&

9 
löe
[0] != '\n')

10 
	`Âuts
(
löe
, 
°dout
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/randbin.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	#ARSIZE
 1000

	)

6 
	$maö
()

8 
numbîs
[
ARSIZE
];

9 
vÆue
;

10 c⁄° * 
fûe
 = "numbers.dat";

11 
i
;

12 
pos
;

13 
FILE
 *
iofûe
;

16 
i
 = 0; i < 
ARSIZE
; i++)

17 
numbîs
[
i
] = 100.0 * i + 1.0 / (i + 1);

19 i‡((
iofûe
 = 
	`f›í
(
fûe
, "wb")Ë=
NULL
)

21 
	`Ârötf
(
°dîr
, "CouldÇŸ o≥¿%†f‹ ouçut.\n", 
fûe
);

22 
	`exô
(1);

25 
	`fwrôe
(
numbîs
,  (), 
ARSIZE
, 
iofûe
);

26 
	`f˛o£
(
iofûe
);

27 i‡((
iofûe
 = 
	`f›í
(
fûe
, "rb")Ë=
NULL
)

29 
	`Ârötf
(
°dîr
,

30 "CouldÇŸ o≥¿%†f‹Ñ™domác˚ss.\n", 
fûe
);

31 
	`exô
(1);

34 
	`¥ötf
("E¡îá¿ödex i¿thêøngê0-%d.\n", 
ARSIZE
 - 1);

35 
	`sˇnf
("%d", &
i
);

36 
i
 >0 && i < 
ARSIZE
)

38 
pos
 = (Ë
i
 * ();

39 
	`f£ek
(
iofûe
, 
pos
, 
SEEK_SET
);

40 
	`‰ód
(&
vÆue
,  (), 1, 
iofûe
);

41 
	`¥ötf
("ThêvÆuêthîêi†%f.\n", 
vÆue
);

42 
	`¥ötf
("Next index (out ofÑangeÅo quit):\n");

43 
	`sˇnf
("%d", &
i
);

46 
	`f˛o£
(
iofûe
);

47 
	`puts
("Bye!");

50 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/reducto.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	#LEN
 40

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
FILE
 *
ö
, *
out
;

10 
ch
;

11 
«me
[
LEN
];

12 
cou¡
 = 0;

15 i‡(
¨gc
 < 2)

17 
	`Ârötf
(
°dîr
, "Ußge: %†fûíame\n", 
¨gv
[0]);

18 
	`exô
(1);

21 i‡((
ö
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

23 
	`Ârötf
(
°dîr
, "I couldn't openÅhe file \"%s\"\n",

24 
¨gv
[1]);

25 
	`exô
(2);

28 
	`°∫˝y
(
«me
,
¨gv
[1], 
LEN
 - 5);

29 
«me
[
LEN
 - 5] = '\0';

30 
	`°rˇt
(
«me
,".red");

31 i‡((
out
 = 
	`f›í
(
«me
, "w")Ë=
NULL
)

33 
	`Ârötf
(
°dîr
,"Can't create output file.\n");

34 
	`exô
(3);

37 (
ch
 = 
	`gëc
(
ö
)Ë!
EOF
)

38 i‡(
cou¡
++ % 3 == 0)

39 
	`putc
(
ch
, 
out
);

41 i‡(
	`f˛o£
(
ö
Ë!0 || f˛o£(
out
) != 0)

42 
	`Ârötf
(
°dîr
,"Error in closing files\n");

45 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/reverse.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	#CNTL_Z
 '\032'

	)

5 
	#SLEN
 50

	)

6 
	$maö
()

8 
fûe
[
SLEN
];

9 
ch
;

10 
FILE
 *
Â
;

11 
cou¡
, 
œ°
;

13 
	`puts
("EnterÅheÇame ofÅhe fileÅo beÖrocessed:");

14 
	`gës
(
fûe
);

15 i‡((
Â
 = 
	`f›í
(
fûe
,"rb")Ë=
NULL
)

17 
	`¥ötf
("ªvî£ c™'à›í %s\n", 
fûe
);

18 
	`exô
(1);

21 
	`f£ek
(
Â
, 0L, 
SEEK_END
);

22 
œ°
 = 
	`·ñl
(
Â
);

28 
cou¡
 = 
œ°
- 1; count >= 0; count--)

30 
	`f£ek
(
Â
, 
cou¡
, 
SEEK_SET
);

31 
ch
 = 
	`gëc
(
Â
);

33 i‡(
ch
 !
CNTL_Z
 && ch != '\r')

34 
	`putch¨
(
ch
);

42 
	`putch¨
('\n');

43 
	`f˛o£
(
Â
);

46 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch13/setbuf.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	$maö
()

6 
	`¥ötf
("%d\n", 
BUFSIZ
);

10 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/book.c

2 
	~<°dio.h
>

3 
	#MAXTITL
 41

	)

4 
	#MAXAUTL
 31

	)

6 
	sbook
 {

7 
	mtôÀ
[
MAXTITL
];

8 
	mauth‹
[
MAXAUTL
];

9 
	mvÆue
;

12 
	$maö
()

14 
book
 
libøry
;

16 
	`¥ötf
("PleaseÉnterÅhe bookÅitle.\n");

17 
	`gës
(
libøry
.
tôÀ
);

18 
	`¥ötf
("NowÉnterÅheáuthor.\n");

19 
	`gës
(
libøry
.
auth‹
);

20 
	`¥ötf
("NowÉnterÅhe value.\n");

21 
	`sˇnf
("%f", &
libøry
.
vÆue
);

22 
	`¥ötf
("%†by %s: $%.2f\n",
libøry
.
tôÀ
,

23 
libøry
.
auth‹
,Üibøry.
vÆue
);

24 
	`¥ötf
("%s: \"%s\" ($%.2f)\n", 
libøry
.
auth‹
,

25 
libøry
.
tôÀ
,Üibøry.
vÆue
);

26 
	`¥ötf
("Done.\n");

29 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/booksave.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	#MAXTITL
 40

	)

5 
	#MAXAUTL
 40

	)

6 
	#MAXBKS
 10

	)

8 
	sbook
 {

9 
	mtôÀ
[
MAXTITL
];

10 
	mauth‹
[
MAXAUTL
];

11 
	mvÆue
;

14 
	$maö
()

16 
book
 
libøry
[
MAXBKS
];

17 
cou¡
 = 0;

18 
ödex
, 
fûecou¡
;

19 
FILE
 * 
pbooks
;

20 
size
 =  (
book
);

22 i‡((
pbooks
 = 
	`f›í
("book.d©", "a+b")Ë=
NULL
)

24 
	`Âuts
("C™'à›í book.d© fûe\n",
°dîr
);

25 
	`exô
(1);

28 
	`ªwöd
(
pbooks
);

29 
cou¡
 < 
MAXBKS
 && 
	`‰ód
(&
libøry
[cou¡], 
size
,

30 1, 
pbooks
) == 1)

32 i‡(
cou¡
 == 0)

33 
	`puts
("Current contents of book.dat:");

34 
	`¥ötf
("%†by %s: $%.2f\n",
libøry
[
cou¡
].
tôÀ
,

35 
libøry
[
cou¡
].
auth‹
,Üibøry[cou¡].
vÆue
);

36 
cou¡
++;

38 
fûecou¡
 = 
cou¡
;

39 i‡(
cou¡
 =
MAXBKS
)

41 
	`Âuts
("Thêbook.d© fûêi†fuŒ.", 
°dîr
);

42 
	`exô
(2);

45 
	`puts
("PleaseáddÇew bookÅitles.");

46 
	`puts
("Press [enter]átÅhe start ofáÜineÅo stop.");

47 
cou¡
 < 
MAXBKS
 && 
	`gës
(
libøry
[cou¡].
tôÀ
Ë!
NULL


48 && 
libøry
[
cou¡
].
tôÀ
[0] != '\0')

50 
	`puts
("NowÉnterÅheáuthor.");

51 
	`gës
(
libøry
[
cou¡
].
auth‹
);

52 
	`puts
("NowÉnterÅhe value.");

53 
	`sˇnf
("%f", &
libøry
[
cou¡
++].
vÆue
);

54 
	`gëch¨
() != '\n')

56 i‡(
cou¡
 < 
MAXBKS
)

57 
	`puts
("EnterÅheÇextÅitle.");

60 i‡(
cou¡
 > 0)

62 
	`puts
("Here isÅheÜist of your books:");

63 
ödex
 = 0; index < 
cou¡
; index++)

64 
	`¥ötf
("%†by %s: $%.2f\n",
libøry
[
ödex
].
tôÀ
,

65 
libøry
[
ödex
].
auth‹
,Üibøry[ödex].
vÆue
);

66 
	`fwrôe
(&
libøry
[
fûecou¡
], 
size
, 
cou¡
 - filecount,

67 
pbooks
);

70 
	`puts
("No books? Too bad.\n");

72 
	`puts
("Bye.\n");

73 
	`f˛o£
(
pbooks
);

76 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/complit.c

2 
	~<°dio.h
>

3 
	#MAXTITL
 41

	)

4 
	#MAXAUTL
 31

	)

6 
	sbook
 {

7 
	mtôÀ
[
MAXTITL
];

8 
	mauth‹
[
MAXAUTL
];

9 
	mvÆue
;

12 
	$maö
()

14 
book
 
ªadfú°
;

15 
sc‹e
;

17 
	`¥ötf
("EnterÅest score: ");

18 
	`sˇnf
("%d",&
sc‹e
);

20 if(
sc‹e
 >
job4
)

21 
ªadfú°
 = (
book
) {"Crimeánd Punishment",

25 
ªadfú°
 = (
book
) {"Mr. Bouncy's Nice Hat",

28 
	`¥ötf
("YourássignedÑeading:\n");

29 
	`¥ötf
("%†by %s: $%.2f\n",
ªadfú°
.
tôÀ
,

30 
ªadfú°
.
auth‹
,Ñódfú°.
vÆue
);

33 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/enum.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dboﬁ.h
>

6 
	e•e˘rum
 {
	mªd
, 
	m‹™ge
, 
	myñlow
, 
	mgªí
, 
	mblue
, 
	mviﬁë
};

7 c⁄° * 
	gcﬁ‹s
[] = {"red", "orange", "yellow",

9 
	#LEN
 30

	)

11 
	$maö
()

13 
choi˚
[
LEN
];

14 
•e˘rum
 
cﬁ‹
;

15 
boﬁ
 
cﬁ‹_is_found
 = 
Ál£
;

17 
	`puts
("Enterá color (emptyÜineÅo quit):");

18 
	`gës
(
choi˚
Ë!
NULL
 && choice[0] != '\0')

20 
cﬁ‹
 = 
ªd
; cﬁ‹ <
viﬁë
; color++)

22 i‡(
	`°rcmp
(
choi˚
, 
cﬁ‹s
[
cﬁ‹
]) == 0)

24 
cﬁ‹_is_found
 = 
åue
;

28 i‡(
cﬁ‹_is_found
)

29 
cﬁ‹
)

31 
ªd
 : 
	`puts
("RosesáreÑed.");

33 
‹™ge
 : 
	`puts
("Poppiesáre orange.");

35 
yñlow
 : 
	`puts
("Sunflowersáre yellow.");

37 
gªí
 : 
	`puts
("Grass is green.");

39 
blue
 : 
	`puts
("Bluebellsáre blue.");

41 
viﬁë
 : 
	`puts
("Violetsáre violet.");

45 
	`¥ötf
("I d⁄'àknowábouàthêcﬁ‹ %s.\n", 
choi˚
);

46 
cﬁ‹_is_found
 = 
Ál£
;

47 
	`puts
("Next color,Ölease (emptyÜineÅo quit):");

49 
	`puts
("Goodbye!");

52 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/flexmemb.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	sÊex


7 
	mcou¡
;

8 
	mavîage
;

9 
	msc‹es
[];

12 
showFÀx
(c⁄° 
Êex
 * 
p
);

14 
	$maö
()

16 
Êex
 * 
pf1
, *
pf2
;

17 
n
 = 5;

18 
i
;

19 
tŸ
 = 0;

22 
pf1
 = 
	`mÆloc
((
Êex
Ë+ 
n
 * ());

23 
pf1
->
cou¡
 = 
n
;

24 
i
 = 0; i < 
n
; i++)

26 
pf1
->
sc‹es
[
i
] = 20.0 - i;

27 
tŸ
 +
pf1
->
sc‹es
[
i
];

29 
pf1
->
avîage
 = 
tŸ
 / 
n
;

30 
	`showFÀx
(
pf1
);

32 
n
 = 9;

33 
tŸ
 = 0;

34 
pf2
 = 
	`mÆloc
((
Êex
Ë+ 
n
 * ());

35 
pf2
->
cou¡
 = 
n
;

36 
i
 = 0; i < 
n
; i++)

38 
pf2
->
sc‹es
[
i
] = 20.0 - i/2.0;

39 
tŸ
 +
pf2
->
sc‹es
[
i
];

41 
pf2
->
avîage
 = 
tŸ
 / 
n
;

42 
	`showFÀx
(
pf2
);

43 
	`‰ì
(
pf1
);

44 
	`‰ì
(
pf2
);

47 
	}
}

49 
	$showFÀx
(c⁄° 
Êex
 * 
p
)

51 
i
;

52 
	`¥ötf
("Scores : ");

53 
i
 = 0; i < 
p
->
cou¡
; i++)

54 
	`¥ötf
("%g ", 
p
->
sc‹es
[
i
]);

55 
	`¥ötf
("\nAvîage: %g\n", 
p
->
avîage
);

56 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/friend.c

2 
	~<°dio.h
>

3 
	#LEN
 20

	)

4 c⁄° * 
	gmsgs
[5] =

13 
	s«mes
 {

14 
	mfú°
[
LEN
];

15 
	mœ°
[
LEN
];

18 
	sguy
 {

19 
«mes
 
	mh™dÀ
;

20 
	mÁvfood
[
LEN
];

21 
	mjob
[
LEN
];

22 
	möcome
;

25 
	$maö
()

27 
guy
 
„Œow
 = {

31 5
job112
.00

34 
	`¥ötf
("Dó∏%s, \n\n", 
„Œow
.
h™dÀ
.
fú°
);

35 
	`¥ötf
("%s%s.\n", 
msgs
[0], 
„Œow
.
h™dÀ
.
fú°
);

36 
	`¥ötf
("%s%s\n", 
msgs
[1], 
„Œow
.
job
);

37 
	`¥ötf
("%s\n", 
msgs
[2]);

38 
	`¥ötf
("%s%s%s", 
msgs
[3], 
„Œow
.
Ávfood
, msgs[4]);

39 i‡(
„Œow
.
öcome
 > 150000.0)

40 
	`puts
("!!");

41 i‡(
„Œow
.
öcome
 > 75000.0)

42 
	`puts
("!");

44 
	`puts
(".");

45 
	`¥ötf
("\n%40s%s\n", " ", "See you soon,");

46 
	`¥ötf
("%40s%s\n", " ", "Shalala");

49 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/friends.c

2 
	~<°dio.h
>

3 
	#LEN
 20

	)

5 
	s«mes
 {

6 
	mfú°
[
LEN
];

7 
	mœ°
[
LEN
];

10 
	sguy
 {

11 
«mes
 
	mh™dÀ
;

12 
	mÁvfood
[
LEN
];

13 
	mjob
[
LEN
];

14 
	möcome
;

17 
	$maö
()

19 
guy
 
„Œow
[2] = {

23 5
job112
.00

31 
guy
 * 
him
;

33 
	`¥ötf
("addªs†#1: %∞#2: %p\n", &
„Œow
[0], &fellow[1]);

34 
him
 = &
„Œow
[0];

35 
	`¥ötf
("poöã∏#1: %∞#2: %p\n", 
him
, him + 1);

36 
	`¥ötf
("him->income is $%.2f: (*him).income is $%.2f\n",

37 
him
->
öcome
, (*him).income);

38 
him
++;

39 
	`¥ötf
("him->favfood is %s: him->handle.last is %s\n",

40 
him
->
Ávfood
, him->
h™dÀ
.
œ°
);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/func_ptr.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<˘y≥.h
>

6 
showmíu
();

7 
óéöe
();

8 
show
((* 
Â
)(*), * 
°r
);

9 
	`ToUµî
(*);

10 
	`ToLowî
(*);

11 
	`Tøn•o£
(*);

12 
	`Dummy
(*);

14 
	$maö
()

16 
löe
[
job1
];

17 
c›y
[
job1
];

18 
choi˚
;

19 (*
pfun
)(*);

22 
	`puts
("Enterá string (emptyÜineÅo quit):");

23 
	`gës
(
löe
Ë!
NULL
 &&Üine[0] != '\0')

25 (
choi˚
 = 
	`showmíu
()) != 'n')

27 
choi˚
 )

29 'u' : 
pfun
 = 
ToUµî
; ;

30 'l' : 
pfun
 = 
ToLowî
; ;

31 't' : 
pfun
 = 
Tøn•o£
; ;

32 'o' : 
pfun
 = 
Dummy
; ;

34 
	`°r˝y
(
c›y
, 
löe
);

35 
	`show
(
pfun
, 
c›y
);

37 
	`puts
("Enterá string (emptyÜineÅo quit):");

39 
	`puts
("Bye!");

42 
	}
}

44 
	$showmíu
()

46 
™s
;

47 
	`puts
("Enter menu choice:");

48 
	`puts
("u) uppercaseÜ)Üowercase");

49 
	`puts
("t)Åransposed case o) original case");

50 
	`puts
("n)Çext string");

51 
™s
 = 
	`gëch¨
();

52 
™s
 = 
	`tﬁowî
(ans);

53 
	`óéöe
();

54 
	`°rchr
("u…⁄", 
™s
Ë=
NULL
)

56 
	`puts
("PleaseÉnterá u,Ü,Å, o, orÇ:");

57 
™s
 = 
	`tﬁowî
(
	`gëch¨
());

58 
	`óéöe
();

61  
™s
;

62 
	}
}

64 
	$óéöe
()

66 
	`gëch¨
() != '\n')

68 
	}
}

70 
	$ToUµî
(* 
°r
)

72 *
°r
)

74 *
°r
 = 
	`touµî
(*str);

75 
°r
++;

77 
	}
}

79 
	$ToLowî
(* 
°r
)

81 *
°r
)

83 *
°r
 = 
	`tﬁowî
(*str);

84 
°r
++;

86 
	}
}

87 
	$Tøn•o£
(* 
°r
)

89 *
°r
)

91 i‡(
	`i¶owî
(*
°r
))

92 *
°r
 = 
	`touµî
(*str);

93 i‡(
	`isuµî
(*
°r
))

94 *
°r
 = 
	`tﬁowî
(*str);

95 
°r
++;

97 
	}
}

99 
	$Dummy
(* 
°r
)

102 
	}
}

104 
show
((* 
Â
)(*), * 
°r
)

106 (*
Â
)(
°r
);

107 
	`puts
(
°r
);

108 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds1.c

2 
	~<°dio.h
>

3 
	#FUNDLEN
 50

	)

5 
	sfunds
 {

6 
	mb™k
[
FUNDLEN
];

7 
	mb™kfund
;

8 
	mßve
[
FUNDLEN
];

9 
	mßvefund
;

12 
sum
(, );

14 
	$maö
()

16 
funds
 
°™
 = {

23 
	`¥ötf
("Stan hasáÅotal of $%.2f.\n",

24 
	`sum
(
°™
.
b™kfund
, sèn.
ßvefund
) );

26 
	}
}

29 
	$sum
(
x
, 
y
)

31 (
x
 + 
y
);

32 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds2.c

2 
	~<°dio.h
>

3 
	#FUNDLEN
 50

	)

5 
	sfunds
 {

6 
	mb™k
[
FUNDLEN
];

7 
	mb™kfund
;

8 
	mßve
[
FUNDLEN
];

9 
	mßvefund
;

12 
sum
(c⁄° 
funds
 *);

14 
	$maö
()

16 
funds
 
°™
 = {

22 
	`¥ötf
("Sè¿ha†®tŸÆ o‡$%.2f.\n", 
	`sum
(&
°™
));

25 
	}
}

27 
	$sum
(c⁄° 
funds
 * 
m⁄ey
)

29 (
m⁄ey
->
b™kfund
 + m⁄ey->
ßvefund
);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds3.c

2 
	~<°dio.h
>

3 
	#FUNDLEN
 50

	)

5 
	sfunds
 {

6 
	mb™k
[
FUNDLEN
];

7 
	mb™kfund
;

8 
	mßve
[
FUNDLEN
];

9 
	mßvefund
;

12 
sum
(
funds
 
moﬁah
);

14 
	$maö
()

16 
funds
 
°™
 = {

22 
	`¥ötf
("Sè¿ha†®tŸÆ o‡$%.2f.\n", 
	`sum
(
°™
));

25 
	}
}

27 
	$sum
(
funds
 
moﬁah
)

29 (
moﬁah
.
b™kfund
 + moﬁah.
ßvefund
);

30 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds4.c

2 
	~<°dio.h
>

3 
	#FUNDLEN
 50

	)

4 
	#N
 2

	)

6 
	sfunds
 {

7 
	mb™k
[
FUNDLEN
];

8 
	mb™kfund
;

9 
	mßve
[
FUNDLEN
];

10 
	mßvefund
;

13 
sum
(c⁄° 
funds
 
m⁄ey
[], 
n
);

15 
	$maö
()

17 
funds
 
j⁄es
[
N
] = {

26 3534.2
job
,

28 3203.
job9


32 
	`¥ötf
("The Joneses haveáÅotal of $%.2f.\n",

33 
	`sum
(
j⁄es
,
N
));

36 
	}
}

38 
	$sum
(c⁄° 
funds
 
m⁄ey
[], 
n
)

40 
tŸÆ
;

41 
i
;

43 
i
 = 0, 
tŸÆ
 = 0; i < 
n
; i++)

44 
tŸÆ
 +
m⁄ey
[
i
].
b™kfund
 + m⁄ey[i].
ßvefund
;

46 (
tŸÆ
);

47 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/manybook.c

2 
	~<°dio.h
>

3 
	#MAXTITL
 40

	)

4 
	#MAXAUTL
 40

	)

5 
	#MAXBKS
 100

	)

7 
	sbook
 {

8 
	mtôÀ
[
MAXTITL
];

9 
	mauth‹
[
MAXAUTL
];

10 
	mvÆue
;

13 
	$maö
()

15 
book
 
libøry
[
MAXBKS
];

16 
cou¡
 = 0;

17 
ödex
;

19 
	`¥ötf
("PleaseÉnterÅhe bookÅitle.\n");

20 
	`¥ötf
("Press [enter]átÅhe start ofáÜineÅo stop.\n");

21 
cou¡
 < 
MAXBKS
 && 
	`gës
(
libøry
[cou¡].
tôÀ
Ë!
NULL


22 && 
libøry
[
cou¡
].
tôÀ
[0] != '\0')

24 
	`¥ötf
("NowÉnterÅheáuthor.\n");

25 
	`gës
(
libøry
[
cou¡
].
auth‹
);

26 
	`¥ötf
("NowÉnterÅhe value.\n");

27 
	`sˇnf
("%f", &
libøry
[
cou¡
++].
vÆue
);

28 
	`gëch¨
() != '\n')

30 i‡(
cou¡
 < 
MAXBKS
)

31 
	`¥ötf
("EnterÅheÇextÅitle.\n");

34 i‡(
cou¡
 > 0)

36 
	`¥ötf
("Here isÅheÜist of your books:\n");

37 
ödex
 = 0; index < 
cou¡
; index++)

38 
	`¥ötf
("%†by %s: $%.2f\n", 
libøry
[
ödex
].
tôÀ
,

39 
libøry
[
ödex
].
auth‹
,Üibøry[ödex].
vÆue
);

42 
	`¥ötf
("No books? Too bad.\n");

45 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/names1.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

5 
	s«me˘
 {

6 
	m‚ame
[20];

7 
	m ame
[20];

8 
	mÀâîs
;

11 
gëöfo
(
«me˘
 *);

12 
makeöfo
(
«me˘
 *);

13 
showöfo
(c⁄° 
«me˘
 *);

15 
	$maö
()

17 
«me˘
 
≥rs⁄
;

19 
	`gëöfo
(&
≥rs⁄
);

20 
	`makeöfo
(&
≥rs⁄
);

21 
	`showöfo
(&
≥rs⁄
);

23 
	}
}

25 
	$gëöfo
 (
«me˘
 * 
p°
)

27 
	`¥ötf
("PleaseÉnter your firstÇame.\n");

28 
	`gës
(
p°
->
‚ame
);

29 
	`¥ötf
("PleaseÉnter yourÜastÇame.\n");

30 
	`gës
(
p°
->
 ame
);

31 
	}
}

33 
	$makeöfo
 (
«me˘
 * 
p°
)

35 
p°
->
Àâîs
 = 
	`°æí
’°->
‚ame
) +

36 
	`°æí
(
p°
->
 ame
);

37 
	}
}

39 
	$showöfo
 (c⁄° 
«me˘
 * 
p°
)

41 
	`¥ötf
("%s %s, yourÇame contains %dÜetters.\n",

42 
p°
->
‚ame
,Ö°->
 ame
,Ö°->
Àâîs
);

43 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/names2.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

5 
	s«me˘
 {

6 
	m‚ame
[20];

7 
	m ame
[20];

8 
	mÀâîs
;

11 
«me˘
 
gëöfo
();

12 
«me˘
 
makeöfo
(namect);

13 
showöfo
(
«me˘
);

15 
	$maö
()

17 
«me˘
 
≥rs⁄
;

19 
≥rs⁄
 = 
	`gëöfo
();

20 
≥rs⁄
 = 
	`makeöfo
(person);

21 
	`showöfo
(
≥rs⁄
);

24 
	}
}

26 
«me˘
 
	$gëöfo
()

28 
«me˘
 
ãmp
;

29 
	`¥ötf
("PleaseÉnter your firstÇame.\n");

30 
	`gës
(
ãmp
.
‚ame
);

31 
	`¥ötf
("PleaseÉnter yourÜastÇame.\n");

32 
	`gës
(
ãmp
.
 ame
);

34  
ãmp
;

35 
	}
}

37 
«me˘
 
	$makeöfo
(
«me˘
 
öfo
)

39 
öfo
.
Àâîs
 = 
	`°æí
(öfo.
‚ame
Ë+ såÀn(öfo.
 ame
);

41  
öfo
;

42 
	}
}

44 
	$showöfo
(
«me˘
 
öfo
)

46 
	`¥ötf
("%s %s, yourÇame contains %dÜetters.\n",

47 
öfo
.
‚ame
, info.
 ame
, info.
Àâîs
);

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch14/names3.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

6 
	s«me˘
 {

7 * 
	m‚ame
;

8 * 
	m ame
;

9 
	mÀâîs
;

12 
gëöfo
(
«me˘
 *);

13 
makeöfo
(
«me˘
 *);

14 
showöfo
(c⁄° 
«me˘
 *);

15 
˛ónup
(
«me˘
 *);

17 
	$maö
()

19 
«me˘
 
≥rs⁄
;

21 
	`gëöfo
(&
≥rs⁄
);

22 
	`makeöfo
(&
≥rs⁄
);

23 
	`showöfo
(&
≥rs⁄
);

24 
	`˛ónup
(&
≥rs⁄
);

27 
	}
}

29 
	$gëöfo
 (
«me˘
 * 
p°
)

31 
ãmp
[
job1
];

32 
	`¥ötf
("PleaseÉnter your firstÇame.\n");

33 
	`gës
(
ãmp
);

35 
p°
->
‚ame
 = (*Ë
	`mÆloc
(
	`°æí
(
ãmp
) + 1);

37 
	`°r˝y
(
p°
->
‚ame
, 
ãmp
);

38 
	`¥ötf
("PleaseÉnter yourÜastÇame.\n");

39 
	`gës
(
ãmp
);

40 
p°
->
 ame
 = (*Ë
	`mÆloc
(
	`°æí
(
ãmp
) + 1);

41 
	`°r˝y
(
p°
->
 ame
, 
ãmp
);

42 
	}
}

44 
	$makeöfo
 (
«me˘
 * 
p°
)

46 
p°
->
Àâîs
 = 
	`°æí
’°->
‚ame
) +

47 
	`°æí
(
p°
->
 ame
);

48 
	}
}

50 
	$showöfo
 (c⁄° 
«me˘
 * 
p°
)

52 
	`¥ötf
("%s %s, yourÇame contains %dÜetters.\n",

53 
p°
->
‚ame
,Ö°->
 ame
,Ö°->
Àâîs
);

54 
	}
}

56 
	$˛ónup
(
«me˘
 * 
p°
)

58 
	`‰ì
(
p°
->
‚ame
);

59 
	`‰ì
(
p°
->
 ame
);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch15/binbit.c

2 
	~<°dio.h
>

3 * 
ôobs
(, *);

4 
show_b°r
(const *);

6 
	$maö
()

8 
bö_°r
[
job
 * () + 1];

9 
numbî
;

11 
	`puts
("Enter integersánd seeÅhem in binary.");

12 
	`puts
("Non-numeric inputÅerminatesÖrogram.");

13 
	`sˇnf
("%d", &
numbî
) == 1)

15 
	`ôobs
(
numbî
,
bö_°r
);

16 
	`¥ötf
("%d i†", 
numbî
);

17 
	`show_b°r
(
bö_°r
);

18 
	`putch¨
('\n');

20 
	`puts
("Bye!");

23 
	}
}

25 * 
	$ôobs
(
n
, * 
ps
)

27 
i
;

28 
size
 = 
job
 * ();

30 
i
 = 
size
 - 1; i >0; i--, 
n
 >>= 1)

31 
ps
[
i
] = (01 & 
n
) + '0';

32 
ps
[
size
] = '\0';

34  
ps
;

35 
	}
}

38 
	$show_b°r
(c⁄° * 
°r
)

40 
i
 = 0;

42 
°r
[
i
])

44 
	`putch¨
(
°r
[
i
]);

45 if(++
i
 % 4 =0 && 
°r
[i])

46 
	`putch¨
(' ');

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch15/dualview.c

2 
	~<°dio.h
>

5 
	#YES
 1

	)

6 
	#NO
 0

	)

8 
	#SOLID
 0

	)

9 
	#DOTTED
 1

	)

10 
	#DASHED
 2

	)

12 
	#BLUE
 4

	)

13 
	#GREEN
 2

	)

14 
	#RED
 1

	)

16 
	#BLACK
 0

	)

17 
	#YELLOW
 (
RED
 | 
GREEN
)

	)

18 
	#MAGENTA
 (
RED
 | 
BLUE
)

	)

19 
	#CYAN
 (
GREEN
 | 
BLUE
)

	)

20 
	#WHITE
 (
RED
 | 
GREEN
 | 
BLUE
)

	)

23 
	#OPAQUE
 0x1

	)

24 
	#FILL_BLUE
 0x
job


	)

25 
	#FILL_GREEN
 0x4

	)

26 
	#FILL_RED
 0x2

	)

27 
	#FILL_MASK
 0xE

	)

28 
	#BORDER
 0x100

	)

29 
	#BORDER_BLUE
 0x
job00


	)

30 
	#BORDER_GREEN
 0x400

	)

31 
	#BORDER_RED
 0x200

	)

32 
	#BORDER_MASK
 0xE00

	)

33 
	#B_SOLID
 0

	)

34 
	#B_DOTTED
 0x1000

	)

35 
	#B_DASHED
 0x2000

	)

36 
	#STYLE_MASK
 0x3000

	)

38 c⁄° * 
	gcﬁ‹s
[
job
] = {"black", "red", "green", "yellow",

40 
	sbox_¥›s
 {

42 
	m›aque
 : 1;

43 
	mfûl_cﬁ‹
 : 3;

45 
	mshow_b‹dî
 : 1;

46 
	mb‹dî_cﬁ‹
 : 3;

47 
	mb‹dî_°yÀ
 : 2;

51 
	uVõws


53 
box_¥›s
 
	m°_võw
;

54 
	mui_võw
;

57 
show_£âögs
(c⁄° 
box_¥›s
 * 
pb
);

58 
show_£âögs1
();

59 * 
ôobs
(
n
, * 
ps
);

61 
	$maö
()

64 
Võws
 
box
 = {{
YES
, 
YELLOW
 , YES, 
GREEN
, 
DASHED
}};

65 
bö_°r
[
job
 * () + 1];

67 
	`¥ötf
("Original box settings:\n");

68 
	`show_£âögs
(&
box
.
°_võw
);

69 
	`¥ötf
("\nBox settings using unsigned int view:\n");

70 
	`show_£âögs1
(
box
.
ui_võw
);

72 
	`¥ötf
("bitsáre %s\n",

73 
	`ôobs
(
box
.
ui_võw
,
bö_°r
));

74 
box
.
ui_võw
 &~
FILL_MASK
;

75 
box
.
ui_võw
 |(
FILL_BLUE
 | 
FILL_GREEN
);

76 
box
.
ui_võw
 ^
OPAQUE
;

77 
box
.
ui_võw
 |
BORDER_RED
;

78 
box
.
ui_võw
 &~
STYLE_MASK
;

79 
box
.
ui_võw
 |
B_DOTTED
;

80 
	`¥ötf
("\nModified box settings:\n");

81 
	`show_£âögs
(&
box
.
°_võw
);

82 
	`¥ötf
("\nBox settings using unsigned int view:\n");

83 
	`show_£âögs1
(
box
.
ui_võw
);

84 
	`¥ötf
("bitsáre %s\n",

85 
	`ôobs
(
box
.
ui_võw
,
bö_°r
));

88 
	}
}

90 
	$show_£âögs
(c⁄° 
box_¥›s
 * 
pb
)

92 
	`¥ötf
("Box is %s.\n",

93 
pb
->
›aque
 =
YES
? "opaque": "transparent");

94 
	`¥ötf
("Thêfû»cﬁ‹ i†%s.\n", 
cﬁ‹s
[
pb
->
fûl_cﬁ‹
]);

95 
	`¥ötf
("Border %s.\n",

96 
pb
->
show_b‹dî
 =
YES
? "shown" : "not shown");

97 
	`¥ötf
("Thêb‹dî cﬁ‹ i†%s.\n", 
cﬁ‹s
[
pb
->
b‹dî_cﬁ‹
]);

98 
	`¥ötf
 ("The border style is ");

99 
pb
->
b‹dî_°yÀ
)

101 
SOLID
 : 
	`¥ötf
("solid.\n"); ;

102 
DOTTED
 : 
	`¥ötf
("dotted.\n"); ;

103 
DASHED
 : 
	`¥ötf
("dashed.\n"); ;

104  : 
	`¥ötf
("unknownÅype.\n");

106 
	}
}

108 
	$show_£âögs1
(
us
)

110 
	`¥ötf
("box is %s.\n",

111 
us
 & 
OPAQUE
 == OPAQUE? "opaque": "transparent");

112 
	`¥ötf
("The fill color is %s.\n",

113 
cﬁ‹s
[(
us
 >> 1) & 07]);

114 
	`¥ötf
("Border %s.\n",

115 
us
 & 
BORDER
 == BORDER? "shown" : "not shown");

116 
	`¥ötf
 ("The border style is ");

117 
us
 & 
STYLE_MASK
)

119 
B_SOLID
 : 
	`¥ötf
("solid.\n"); ;

120 
B_DOTTED
 : 
	`¥ötf
("dotted.\n"); ;

121 
B_DASHED
 : 
	`¥ötf
("dashed.\n"); ;

122  : 
	`¥ötf
("unknownÅype.\n");

124 
	`¥ötf
("The border color is %s.\n",

125 
cﬁ‹s
[(
us
 >> 9) & 07]);

127 
	}
}

130 * 
	$ôobs
(
n
, * 
ps
)

132 
i
;

133 
size
 = 
job
 * ();

135 
i
 = 
size
 - 1; i >0; i--, 
n
 >>= 1)

136 
ps
[
i
] = (01 & 
n
) + '0';

137 
ps
[
size
] = '\0';

139  
ps
;

140 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch15/fields.c

2 
	~<°dio.h
>

4 
	#YES
 1

	)

5 
	#NO
 0

	)

7 
	#SOLID
 0

	)

8 
	#DOTTED
 1

	)

9 
	#DASHED
 2

	)

11 
	#BLUE
 4

	)

12 
	#GREEN
 2

	)

13 
	#RED
 1

	)

15 
	#BLACK
 0

	)

16 
	#YELLOW
 (
RED
 | 
GREEN
)

	)

17 
	#MAGENTA
 (
RED
 | 
BLUE
)

	)

18 
	#CYAN
 (
GREEN
 | 
BLUE
)

	)

19 
	#WHITE
 (
RED
 | 
GREEN
 | 
BLUE
)

	)

21 c⁄° * 
	gcﬁ‹s
[
job
] = {"black", "red", "green", "yellow",

24 
	sbox_¥›s
 {

25 
	m›aque
 : 1;

26 
	mfûl_cﬁ‹
 : 3;

28 
	mshow_b‹dî
 : 1;

29 
	mb‹dî_cﬁ‹
 : 3;

30 
	mb‹dî_°yÀ
 : 2;

34 
show_£âögs
(c⁄° 
box_¥›s
 * 
pb
);

36 
	$maö
()

39 
box_¥›s
 
box
 = {
YES
, 
YELLOW
 , YES, 
GREEN
, 
DASHED
};

41 
	`¥ötf
("Original box settings:\n");

42 
	`show_£âögs
(&
box
);

44 
box
.
›aque
 = 
NO
;

45 
box
.
fûl_cﬁ‹
 = 
WHITE
;

46 
box
.
b‹dî_cﬁ‹
 = 
MAGENTA
;

47 
box
.
b‹dî_°yÀ
 = 
SOLID
;

48 
	`¥ötf
("\nModified box settings:\n");

49 
	`show_£âögs
(&
box
);

52 
	}
}

54 
	$show_£âögs
(c⁄° 
box_¥›s
 * 
pb
)

56 
	`¥ötf
("Box is %s.\n",

57 
pb
->
›aque
 =
YES
? "opaque": "transparent");

58 
	`¥ötf
("Thêfû»cﬁ‹ i†%s.\n", 
cﬁ‹s
[
pb
->
fûl_cﬁ‹
]);

59 
	`¥ötf
("Border %s.\n",

60 
pb
->
show_b‹dî
 =
YES
? "shown" : "not shown");

61 
	`¥ötf
("Thêb‹dî cﬁ‹ i†%s.\n", 
cﬁ‹s
[
pb
->
b‹dî_cﬁ‹
]);

62 
	`¥ötf
 ("The border style is ");

63 
pb
->
b‹dî_°yÀ
)

65 
SOLID
 : 
	`¥ötf
("solid.\n"); ;

66 
DOTTED
 : 
	`¥ötf
("dotted.\n"); ;

67 
DASHED
 : 
	`¥ötf
("dashed.\n"); ;

68  : 
	`¥ötf
("unknownÅype.\n");

70 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch15/invert4.c

2 
	~<°dio.h
>

3 * 
ôobs
(, *);

4 
show_b°r
(const *);

5 
övît_íd
(
num
, 
bôs
);

7 
	$maö
()

9 
bö_°r
[
job
 * () + 1];

10 
numbî
;

12 
	`puts
("Enter integersánd seeÅhem in binary.");

13 
	`puts
("Non-numeric inputÅerminatesÖrogram.");

14 
	`sˇnf
("%d", &
numbî
) == 1)

16 
	`ôobs
(
numbî
,
bö_°r
);

17 
	`¥ötf
("%d is\n", 
numbî
);

18 
	`show_b°r
(
bö_°r
);

19 
	`putch¨
('\n');

20 
numbî
 = 
	`övît_íd
(number, 4);

21 
	`¥ötf
("InvertingÅheÜast 4 bits gives\n");

22 
	`show_b°r
(
	`ôobs
(
numbî
,
bö_°r
));

23 
	`putch¨
('\n');

25 
	`puts
("Bye!");

28 
	}
}

30 * 
	$ôobs
(
n
, * 
ps
)

32 
i
;

33 
size
 = 
job
 * ();

35 
i
 = 
size
 - 1; i >0; i--, 
n
 >>= 1)

36 
ps
[
i
] = (01 & 
n
) + '0';

37 
ps
[
size
] = '\0';

39  
ps
;

40 
	}
}

43 
	$show_b°r
(c⁄° * 
°r
)

45 
i
 = 0;

47 
°r
[
i
])

49 
	`putch¨
(
°r
[
i
]);

50 if(++
i
 % 4 =0 && 
°r
[i])

51 
	`putch¨
(' ');

53 
	}
}

55 
	$övît_íd
(
num
, 
bôs
)

57 
mask
 = 0;

58 
bôvÆ
 = 1;

60 
bôs
-- > 0)

62 
mask
 |
bôvÆ
;

63 
bôvÆ
 <<= 1;

66  
num
 ^ 
mask
;

67 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/assert.c

2 
	~<°dio.h
>

3 
	~<m©h.h
>

4 
	~<as£π.h
>

5 
	$maö
()

7 
x
, 
y
, 
z
;

9 
	`puts
("EnteráÖair ofÇumbers (0 0Åo quit): ");

10 
	`sˇnf
("%lf%lf", &
x
, &
y
) == 2

11 && (
x
 !0 || 
y
 != 0))

13 
z
 = 
x
 * x - 
y
 * y;

14 
	`as£π
(
z
 >= 0);

15 
	`¥ötf
("™swî i†%f\n", 
	`sqπ
(
z
));

16 
	`puts
("NextÖair ofÇumbers: ");

18 
	`puts
("Done");

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/byebye.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
sign_off
();

5 
too_bad
();

7 
	$maö
()

9 
n
;

11 
	`©exô
(
sign_off
);

12 
	`puts
("Enterán integer:");

13 i‡(
	`sˇnf
("%d",&
n
) != 1)

15 
	`puts
("That'sÇo integer!");

16 
	`©exô
(
too_bad
);

17 
	`exô
(
EXIT_FAILURE
);

19 
	`¥ötf
("%d i†%s.\n", 
n
, (n % 2 == 0)? "even" : "odd");

22 
	}
}

24 
	$sign_off
()

26 
	`puts
("ThusÅerminatesánother magnificentÖrogram from");

27 
	`puts
("SeeSaw Software!");

28 
	}
}

30 
	$too_bad
()

32 
	`puts
("SeeSaw SoftwareÉxtends its heartfelt condolences");

33 
	`puts
("to you uponÅhe failure of yourÖrogram.");

34 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/doubincl.c

2 
	~<°dio.h
>

3 
	~"«mes_°r.h
"

4 
	~"«mes_°r.h
"

6 
	$maö
()

8 
«mes
 
wö√r
 = {"Less", "Ismoor"};

9 
	`¥ötf
("Thêwö√∏i†%†%s.\n", 
wö√r
.
fú°
,

10 
wö√r
.
œ°
);

12 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/glue.c

2 
	~<°dio.h
>

3 
	#XNAME
(
n
Ë
x
 ## 
	)
n

4 
	#PRINT_XN
(
n
Ë
	`¥ötf
("x" #¿" = %d\n", 
x
 ##Ç);

	)

6 
	$maö
()

8 
	`XNAME
(1) = 14;

9 
	`XNAME
(2) = 20;

10 
	`PRINT_XN
(1);

11 
	`PRINT_XN
(2);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/ifdef.c

2 
	~<°dio.h
>

3 
	#JUST_CHECKING


	)

4 
	#LIMIT
 4

	)

6 
	$maö
()

8 
i
;

9 
tŸÆ
 = 0;

11 
i
 = 1; i <
LIMIT
; i++)

13 
tŸÆ
 +2*
i
*i + 1;

14 #ifde‡
JUST_CHECKING


15 
	`¥ötf
("i=%d,Ñu¬ögÅŸÆ = %d\n", 
i
, 
tŸÆ
);

18 
	`¥ötf
("GøndÅŸÆ = %d\n", 
tŸÆ
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl1.c

2 
	~<°dio.h
>

3 
ölöe
 
squ¨e
();

4 
	$squ¨e
(
x
Ë{ 
	`puts
("sq1");  x * x; 
	}
}

6 
sf
(
a
);

7 
sff
(
a
);

9 
	$maö
()

11 
q
 = 20;

12 
x
;

14 
x
 = 
	`squ¨e
(
q
);

15 
	`¥ötf
("öl1, squ¨e: %f\n", 
x
);

16 
x
 = 
	`sf
(
q
);

17 
	`¥ötf
("öl1, sf: %f\n", 
x
);

18 
x
 = 
	`sff
(
q
);

19 
	`¥ötf
("öl1, sff: %f\n", 
x
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl2.c

2 
	~<°dio.h
>

3 
squ¨e
();

4 
ölöe
 
squ¨e
();

5 
	$squ¨e
(
x
Ë{ 
	`puts
("sq1");  x * x; 
	}
}

7 
sff
(
a
);

9 
	$sff
(
a
)

12 
	`puts
("sff");

13  
	`squ¨e
(
a
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl3.c

2 
	~<°dio.h
>

3 
squ¨e
();

5 
	$squ¨e
(
x
Ë{ 
	`puts
("exsq"); 
y
; y = x*x;  y; 
	}
}

7 
sf
(
a
);

9 
	$sf
(
a
)

12 
	`puts
("sf");

13  
	`squ¨e
(
a
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/mac_arg.c

2 
	~<°dio.h
>

3 
	#SQUARE
(
X
ËX*
	)
X

4 
	#PR
(
X
Ë
	`¥ötf
("Thêªsu… i†%d.\n", X)

	)

5 
	$maö
()

7 
x
 = 4;

8 
z
;

10 
	`¥ötf
("x = %d\n", 
x
);

11 
z
 = 
	`SQUARE
(
x
);

12 
	`¥ötf
("Evaluating SQUARE(x): ");

13 
	`PR
(
z
);

14 
z
 = 
	`SQUARE
(2);

15 
	`¥ötf
("Evaluating SQUARE(2): ");

16 
	`PR
(
z
);

17 
	`¥ötf
("Evaluating SQUARE(x+2): ");

18 
	`PR
(
	`SQUARE
(
x
+2));

19 
	`¥ötf
("Evaluating 100/SQUARE(2): ");

20 
	`PR
(100/
	`SQUARE
(2));

21 
	`¥ötf
("x i†%d.\n", 
x
);

22 
	`¥ötf
("Evaluating SQUARE(++x): ");

23 
	`PR
(
	`SQUARE
(++
x
));

24 
	`¥ötf
("A·î in¸emítög, x i†%x.\n", 
x
);

27 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/mems.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	#SIZE
 10

	)

6 
show_¨øy
(c⁄° 
¨
[], 
n
);

8 
	$maö
()

10 
vÆues
[
SIZE
] = {1,2,3,4,5,6,7,
job
,9,10};

11 
èrgë
[
SIZE
];

12 
curious
[
SIZE
 / 2] = {1.0, 2.0, 3.0, 4.0, 5.0};

14 
	`puts
("memcpy() used:");

15 
	`puts
("values (original data): ");

16 
	`show_¨øy
(
vÆues
, 
SIZE
);

17 
	`mem˝y
(
èrgë
, 
vÆues
, 
SIZE
 * ());

18 
	`puts
("target (copy of values):");

19 
	`show_¨øy
(
èrgë
, 
SIZE
);

21 
	`puts
("\nUsing memmove() with overlappingÑanges:");

22 
	`memmove
(
vÆues
 + 2, values, 5 * ());

23 
	`puts
("values --Élements 0-5 copiedÅo 2-7:");

24 
	`show_¨øy
(
vÆues
, 
SIZE
);

26 
	`puts
("\nUsing memcpy()Åo copy doubleÅo int:");

27 
	`mem˝y
(
èrgë
, 
curious
, (
SIZE
 / 2) * ());

28 
	`puts
("target -- 5 doubles into 10 intÖositions:");

29 
	`show_¨øy
(
èrgë
, 
SIZE
);

32 
	}
}

34 
	$show_¨øy
(c⁄° 
¨
[], 
n
)

36 
i
;

38 
i
 = 0; i < 
n
; i++)

39 
	`¥ötf
("%d ", 
¨
[
i
]);

40 
	`putch¨
('\n');

41 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_st.c

2 
	~<°dio.h
>

3 
	~"«mes_°.h
"

6 
	$gë_«mes
(
«mes
 * 
≤
)

8 
i
;

10 
	`¥ötf
("PleaseÉnter your firstÇame: ");

11 
	`fgës
(
≤
->
fú°
, 
SLEN
, 
°dö
);

12 
i
 = 0;

13 
≤
->
fú°
[
i
] != '\n' &&Ön->first[i] != '\0')

14 
i
++;

15 i‡(
≤
->
fú°
[
i
] == '\n')

16 
≤
->
fú°
[
i
] = '\0';

18 
	`gëch¨
() != '\n')

21 
	`¥ötf
("PleaseÉnter yourÜastÇame: ");

22 
	`fgës
(
≤
->
œ°
, 
SLEN
, 
°dö
);

23 
i
 = 0;

24 
≤
->
œ°
[
i
] != '\n' &&Ön->last[i] != '\0')

25 
i
++;

26 i‡(
≤
->
œ°
[
i
] == '\n')

27 
≤
->
œ°
[
i
] = '\0';

29 
	`gëch¨
() != '\n')

31 
	}
}

33 
	$show_«mes
(c⁄° 
«mes
 * 
≤
)

35 
	`¥ötf
("%†%s", 
≤
->
fú°
,Ön->
œ°
);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_st.h

3 
	#SLEN
 32

	)

6 
	s«mes_°


8 
	mfú°
[
SLEN
];

9 
	mœ°
[
SLEN
];

13 
«mes_°
 
	t«mes
;

16 
gë_«mes
(
«mes
 *);

17 
show_«mes
(c⁄° 
«mes
 *);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_str.c

2 
	~<°dio.h
>

3 
	~"«mes_°r.h
"

6 
	$gë_«mes
(
«mes
 * 
≤
)

8 
i
;

10 
	`¥ötf
("PleaseÉnter your firstÇame: ");

11 
	`fgës
(
≤
->
fú°
, 
SLEN
, 
°dö
);

12 
i
 = 0;

13 
≤
->
fú°
[
i
] != '\n' &&Ön->first[i] != '\0')

14 
i
++;

15 i‡(
≤
->
fú°
[
i
] == '\n')

16 
≤
->
fú°
[
i
] = '\0';

18 
	`gëch¨
() != '\n')

21 
	`¥ötf
("PleaseÉnter yourÜastÇame: ");

22 
	`fgës
(
≤
->
œ°
, 
SLEN
, 
°dö
);

23 
i
 = 0;

24 
≤
->
œ°
[
i
] != '\n' &&Ön->last[i] != '\0')

25 
i
++;

26 i‡(
≤
->
œ°
[
i
] == '\n')

27 
≤
->
œ°
[
i
] = '\0';

29 
	`gëch¨
() != '\n')

31 
	}
}

33 
	$show_«mes
(c⁄° 
«mes
 * 
≤
)

35 
	`¥ötf
("%†%s", 
≤
->
fú°
,Ön->
œ°
);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_str.h

3 #i‚de‡
NAMES_H_


4 
	#NAMES_H_


	)

7 
	#SLEN
 32

	)

10 
	s«mes_°


12 
	mfú°
[
SLEN
];

13 
	mœ°
[
SLEN
];

17 
«mes_°
 
	t«mes
;

20 
gë_«mes
(
«mes
 *);

21 
show_«mes
(c⁄° 
«mes
 *);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/pe15-7.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<˘y≥.h
>

5 
	#ID_MASK
 0xFF

	)

6 
	#SIZE_MASK
 0x7F00

	)

7 
	#LEFT
 0x00000

	)

8 
	#CENTER
 0x0
job000


	)

9 
	#RIGHT
 0x10000

	)

10 
	#ALIGN_MASK
 0x1
job000


	)

11 
	#REGULAR
 0x00000

	)

12 
	#BOLD
 0x20000

	)

13 
	#ITALIC
 0x40000

	)

14 
	#UNDERLINE
 0x
job0000


	)

15 
	#STYLE_MASK
 0xE0000

	)

16 
	#SIZE_SHIFT
 
job


	)

18 
	tf⁄t
;

21 
do_míu
(
f⁄t
 * 
f
);

22 
gë_choi˚
(const *);

23 
show_míu
();

24 
show_f⁄t
(
f⁄t
 
f
);

25 
óéöe
();

26 
gë_id
(
f⁄t
 * 
f
);

27 
gë_size
(
f⁄t
 * 
f
);

28 
gë_Æign
(
f⁄t
 * 
f
);

30 
	$maö
()

32 
f⁄t
 
ßm∂e
 = 1 | (12 <<
SIZE_SHIFT
Ë| 
LEFT
 | 
ITALIC
;

34 
	`do_míu
(&
ßm∂e
) != 'q')

36 
	`puts
("Bye!");

38 
	}
}

40 
	$do_míu
(
f⁄t
 * 
f
)

42 
ª•⁄£
;

44 
	`show_f⁄t
(*
f
);

45 
	`show_míu
();

46 
ª•⁄£
 = 
	`gë_choi˚
("fsabiuq");

47 
ª•⁄£
)

49 'f' : 
	`gë_id
(
f
); ;

50 's' : 
	`gë_size
(
f
); ;

51 'a' : 
	`gë_Æign
(
f
); ;

52 'b' : *
f
 ^
BOLD
; ;

53 'i' : *
f
 ^
ITALIC
; ;

54 'u' : *
f
 ^
UNDERLINE
; ;

56  : 
	`Ârötf
(
°dîr
, "menuÖroblem\n");

59  
ª•⁄£
;

60 
	}
}

62 
	$gë_choi˚
(c⁄° * 
°r
)

64 
ch
;

66 
ch
 = 
	`gëch¨
();

67 
ch
 = 
	`tﬁowî
(ch);

68 
	`óéöe
();

69 
	`°rchr
(
°r
, 
ch
Ë=
NULL
)

71 
	`¥ötf
("PleaseÉnter one ofÅhe following: %s\n",

72 
°r
);

73 
ch
 = 
	`tﬁowî
(
	`gëch¨
());

74 
	`óéöe
();

76  
ch
;

77 
	}
}

79 
	$óéöe
()

81 
	`gëch¨
() != '\n')

83 
	}
}

86 
	$show_míu
()

88 
	`puts
("f)change font s)change sizeá)changeálignment");

89 
	`puts
("b)toggle bold i)toggle italic u)toggle underline");

90 
	`puts
("q)quit");

91 
	}
}

94 
	$show_f⁄t
(
f⁄t
 
f
)

96 
	`¥ötf
("\n%4s %4s %9s %3s %3s %3s\n",

98 
	`¥ötf
("%4d %4d", 
f
 & 
ID_MASK
, (‡& 
SIZE_MASK
Ë>> 
SIZE_SHIFT
);

99 
f
 & 
ALIGN_MASK
)

101 
LEFT
 : 
	`¥ötf
("%7s", "left"); ;

102 
RIGHT
 : 
	`¥ötf
("%7s", "right"); ;

103 
CENTER
 : 
	`¥ötf
("%7s", "center"); ;

104  : 
	`¥ötf
("%7s", "unknown"); ;

106 
	`¥ötf
("%job†%3†%3s\n\n", (
f
 & 
BOLD
) == BOLD? "on" : "off",

107 (
f
 & 
ITALIC
) == ITALIC ? "on" : "off",

108 (
f
 & 
UNDERLINE
) == UNDERLINE ? "on" : "off");

109 
	}
}

111 
	$gë_id
(
f⁄t
 * 
f
)

113 
id
;

115 
	`¥ötf
("Enter font ID (0-255): ");

116 
	`sˇnf
("%d", &
id
);

117 
id
 = id & 
ID_MASK
;

118 *
f
 |
id
;

119 
	`óéöe
();

120 
	}
}

122 
	$gë_size
(
f⁄t
 * 
f
)

124 
size
;

126 
	`¥ötf
("Enter font size (0-127): ");

127 
	`sˇnf
("%d", &
size
);

128 *
f
 |(
size
 << 
SIZE_SHIFT
Ë& 
SIZE_MASK
;

129 
	`óéöe
();

130 
	}
}

132 
	$gë_Æign
(
f⁄t
 * 
f
)

134 
	`puts
("Selectálignment:");

135 
	`puts
("l)left c)centerÑ)right");

136 
	`gë_choi˚
("lcr"))

138 'l' : *
f
 &~
ALIGN_MASK
; *‡|
LEFT
; ;

139 'c' : *
f
 &~
ALIGN_MASK
; *‡|
CENTER
; ;

140 'r' : *
f
 &~
ALIGN_MASK
; *‡|
RIGHT
; ;

141  : 
	`Ârötf
(
°dîr
, "alignmentÖroblem\n");

143 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/predef.c

2 
	~<°dio.h
>

3 
why_me
();

5 
	$maö
()

7 
	`¥ötf
("Thêfûêi†%s.\n", 
__FILE__
);

8 
	`¥ötf
("Thêd©êi†%s.\n", 
__DATE__
);

9 
	`¥ötf
("Thêtimêi†%s.\n", 
__TIME__
);

10 
	`¥ötf
("Thêvîsi⁄ i†%ld.\n", 
__STDC_VERSION__
);

11 
	`¥ötf
("Thi†i†löê%d.\n", 
__LINE__
);

12 
	`¥ötf
("Thi†fun˘i⁄ i†%s\n", 
__func__
);

13 
	`why_me
();

16 
	}
}

18 
	$why_me
()

20 
	`¥ötf
("Thi†fun˘i⁄ i†%s\n", 
__func__
);

21 
	`¥ötf
("Thi†i†löê%d.\n", 
__LINE__
);

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/preproc.c

2 
	~<°dio.h
>

3 
	#TWO
 2

	)

4 
	#OW
 "Consistency isÅheÜastÑefuge ofÅhe unimagina\

5 
tive
. - 
Osˇr
 
Wûde
" /*á backslash continuesá definition */

6 

	)

7 
	#FOUR
 
TWO
*
	)
TWO

8 
	#PX
 
	`¥ötf
("X i†%d.\n", 
x
)

	)

9 
	#FMT
 "X i†%d.\n"

	)

11 
	$maö
()

13 
x
 = 
TWO
;

15 
PX
;

16 
x
 = 
FOUR
;

17 
	`¥ötf
(
FMT
, 
x
);

18 
	`¥ötf
("%s\n", 
OW
);

19 
	`¥ötf
("TWO: OW\n");

22 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/qsorter.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	#NUM
 40

	)

6 
fûœºay
(
¨
[], 
n
);

7 
show¨øy
(c⁄° 
¨
[], 
n
);

8 
mycomp
(c⁄° * 
p1
, c⁄° * 
p2
);

10 
	$maö
()

12 
vÆs
[
NUM
];

13 
	`fûœºay
(
vÆs
, 
NUM
);

14 
	`puts
("RandomÜist:");

15 
	`show¨øy
(
vÆs
, 
NUM
);

16 
	`qs‹t
(
vÆs
, 
NUM
, (), 
mycomp
);

17 
	`puts
("\nSortedÜist:");

18 
	`show¨øy
(
vÆs
, 
NUM
);

20 
	}
}

22 
	$fûœºay
(
¨
[], 
n
)

24 
ödex
;

26  
ödex
 = 0; index < 
n
; index++)

27 
¨
[
ödex
] = ()
	`ønd
()/(()Ñand() + 0.1);

28 
	}
}

30 
	$show¨øy
(c⁄° 
¨
[], 
n
)

32 
ödex
;

34  
ödex
 = 0; index < 
n
; index++)

36 
	`¥ötf
("%9.4‡", 
¨
[
ödex
]);

37 i‡(
ödex
 % 6 == 5)

38 
	`putch¨
('\n');

40 i‡(
ödex
 % 6 != 0)

41 
	`putch¨
('\n');

42 
	}
}

45 
	$mycomp
(c⁄° * 
p1
, c⁄° * 
p2
)

48 c⁄° * 
a1
 = (c⁄° *Ë
p1
;

49 c⁄° * 
a2
 = (c⁄° *Ë
p2
;

51 i‡(*
a1
 < *
a2
)

53 i‡(*
a1
 =*
a2
)

57 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/rect_pol.c

3 
	~<°dio.h
>

4 
	~<m©h.h
>

6 
	#RAD_TO_DEG
 (1
job0
/(4 * 
	`©™
(1)))

	)

8 
	spﬁ¨_v
 {

9 
	mmagnôude
;

10 
	m™gÀ
;

11 } 
	tPOLAR_V
;

13 
	sª˘_v
 {

14 
	mx
;

15 
	my
;

16 } 
	tRECT_V
;

18 
POLAR_V
 
ª˘_to_pﬁ¨
(
RECT_V
);

20 
	$maö
()

22 
RECT_V
 
öput
;

23 
POLAR_V
 
ªsu…
;

25 
	`puts
("Enter x,y coordinates;Énter qÅo quit:");

26 
	`sˇnf
("%l‡%lf", &
öput
.
x
, &öput.
y
) == 2)

28 
ªsu…
 = 
	`ª˘_to_pﬁ¨
(
öput
);

29 
	`¥ötf
("magnitude = %0.2f,ángle = %0.2f\n",

30 
ªsu…
.
magnôude
,Ñesu….
™gÀ
);

32 
	`puts
("Bye.");

35 
	}
}

37 
POLAR_V
 
	$ª˘_to_pﬁ¨
(
RECT_V
 
rv
)

39 
POLAR_V
 
pv
;

41 
pv
.
magnôude
 = 
	`sqπ
(
rv
.
x
 *Ñv.x +Ñv.
y
 *Ñv.y);

42 i‡(
pv
.
magnôude
 == 0)

43 
pv
.
™gÀ
 = 0.0;

45 
pv
.
™gÀ
 = 
RAD_TO_DEG
 * 
	`©™2
(
rv
.
y
,Ñv.
x
);

47  
pv
;

48 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/subst.c

2 
	~<°dio.h
>

3 
	#PSQR
(
x
Ë
	`¥ötf
("Thêsqu¨êo‡" #x " i†%d.\n",((x)*(x)))

	)

5 
	$maö
()

7 
y
 = 5;

9 
	`PSQR
(
y
);

10 
	`PSQR
(2 + 4);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/useheader.c

2 
	~<°dio.h
>

3 
	~"«mes_°.h
"

6 
	$maö
()

8 
«mes
 
ˇndid©e
;

10 
	`gë_«mes
(&
ˇndid©e
);

11 
	`¥ötf
("Let's welcome ");

12 
	`show_«mes
(&
ˇndid©e
);

13 
	`¥ötf
("ÅoÅhisÖrogram!\n");

15 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/varargs.c

2 
	~<°dio.h
>

3 
	~<°d¨g.h
>

4 
sum
(, ...);

6 
	$maö
()

8 
s
,
t
;

10 
s
 = 
	`sum
(3, 1.1, 2.5, 13.3);

11 
t
 = 
	`sum
(6, 1.1, 2.1, 13.1, 4.1, 5.1, 6.1);

12 
	`¥ötf
("return value for "

13 "sum(3, 1.1, 2.5, 13.3): %g\n", 
s
);

14 
	`¥ötf
("return value for "

15 "sum(6, 1.1, 2.1, 13.1, 4.1, 5.1, 6.1): %g\n", 
t
);

18 
	}
}

20 
	$sum
(
lim
,...)

22 
va_li°
 
≠
;

23 
tŸ
 = 0;

24 
i
;

26 
	`va_°¨t
(
≠
, 
lim
);

27 
i
 = 0; i < 
lim
; i++)

28 
tŸ
 +
	`va_¨g
(
≠
, );

29 
	`va_íd
(
≠
);

31  
tŸ
;

32 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch16/variadic.c

2 
	~<°dio.h
>

3 
	~<m©h.h
>

4 
	#PR
(
X
, ...Ë
	`¥ötf
("Mesßgê" #X ": " 
__VA_ARGS__
)

	)

6 
	$maö
()

8 
x
 = 4
job
;

9 
y
;

11 
y
 = 
	`sqπ
(
x
);

12 
	`PR
(1, "x = %g\n", 
x
);

13 
	`PR
(2, "x = %.2f, y = %.4f\n", 
x
, 
y
);

16 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/films1.c

2 
	~<°dio.h
>

3 
	#TSIZE
 45

	)

4 
	#FMAX
 5

	)

6 
	sfûm
 {

7 
	mtôÀ
[
TSIZE
];

8 
	møtög
;

11 
	$maö
()

13 
fûm
 
movõs
[
FMAX
];

14 
i
 = 0;

15 
j
;

17 
	`puts
("Enter first movieÅitle:");

18 
i
 < 
FMAX
 && 
	`gës
(
movõs
[i].
tôÀ
Ë!
NULL
 &&

19 
movõs
[
i
].
tôÀ
[0] != '\0')

21 
	`puts
("Enter yourÑating <0-10>:");

22 
	`sˇnf
("%d", &
movõs
[
i
++].
øtög
);

23 
	`gëch¨
() != '\n')

25 
	`puts
("EnterÇext movieÅitle (emptyÜineÅo stop):");

27 i‡(
i
 == 0)

28 
	`¥ötf
("No dataÉntered. ");

30 
	`¥ötf
 ("Here isÅhe movieÜist:\n");

32 
j
 = 0; j < 
i
; j++)

33 
	`¥ötf
("Movõ: %† R©ög: %d\n", 
movõs
[
j
].
tôÀ
,

34 
movõs
[
j
].
øtög
);

35 
	`¥ötf
("Bye!\n");

38 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/films2.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	#TSIZE
 45

	)

7 
	sfûm
 {

8 
	mtôÀ
[
TSIZE
];

9 
	møtög
;

10 
fûm
 * 
	m√xt
;

13 
	$maö
()

15 
fûm
 * 
hód
 = 
NULL
;

16 
fûm
 * 
¥ev
, * 
cuºít
;

17 
öput
[
TSIZE
];

20 
	`puts
("Enter first movieÅitle:");

21 
	`gës
(
öput
Ë!
NULL
 && input[0] != '\0')

23 
cuºít
 = (
fûm
 *Ë
	`mÆloc
((film));

24 i‡(
hód
 =
NULL
)

25 
hód
 = 
cuºít
;

27 
¥ev
->
√xt
 = 
cuºít
;

28 
cuºít
->
√xt
 = 
NULL
;

29 
	`°r˝y
(
cuºít
->
tôÀ
, 
öput
);

30 
	`puts
("Enter yourÑating <0-10>:");

31 
	`sˇnf
("%d", &
cuºít
->
øtög
);

32 
	`gëch¨
() != '\n')

34 
	`puts
("EnterÇext movieÅitle (emptyÜineÅo stop):");

35 
¥ev
 = 
cuºít
;

39 i‡(
hód
 =
NULL
)

40 
	`¥ötf
("No dataÉntered. ");

42 
	`¥ötf
 ("Here isÅhe movieÜist:\n");

43 
cuºít
 = 
hód
;

44 
cuºít
 !
NULL
)

46 
	`¥ötf
("Movie: %s Rating: %d\n",

47 
cuºít
->
tôÀ
, cuºít->
øtög
);

48 
cuºít
 = cuºít->
√xt
;

52 
cuºít
 = 
hód
;

53 
cuºít
 !
NULL
)

55 
	`‰ì
(
cuºít
);

56 
cuºít
 = cuºít->
√xt
;

58 
	`¥ötf
("Bye!\n");

61 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/films3.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~"li°.h
"

6 
showmovõs
(
Iãm
 
ôem
);

8 
	$maö
()

10 
Li°
 
movõs
;

11 
Iãm
 
ãmp
;

15 
	`InôülizeLi°
(&
movõs
);

16 i‡(
	`Li°IsFuŒ
(&
movõs
))

18 
	`Ârötf
(
°dîr
,"No memoryávailable! Bye!\n");

19 
	`exô
(1);

23 
	`puts
("Enter first movieÅitle:");

24 
	`gës
(
ãmp
.
tôÀ
Ë!
NULL
 &&Åemp.title[0] != '\0')

26 
	`puts
("Enter yourÑating <0-10>:");

27 
	`sˇnf
("%d", &
ãmp
.
øtög
);

28 
	`gëch¨
() != '\n')

30 i‡(
	`AddIãm
(
ãmp
, &
movõs
)==
Ál£
)

32 
	`Ârötf
(
°dîr
,"Problemállocating memory\n");

35 i‡(
	`Li°IsFuŒ
(&
movõs
))

37 
	`puts
("TheÜist isÇow full.");

40 
	`puts
("EnterÇext movieÅitle (emptyÜineÅo stop):");

44 i‡(
	`Li°IsEm±y
(&
movõs
))

45 
	`¥ötf
("No dataÉntered. ");

48 
	`¥ötf
 ("Here isÅhe movieÜist:\n");

49 
	`Tøvî£
(&
movõs
, 
showmovõs
);

51 
	`¥ötf
("YouÉ¡îed %d movõs.\n", 
	`Li°IãmCou¡
(&
movõs
));

55 
	`Em±yTheLi°
(&
movõs
);

56 
	`¥ötf
("Bye!\n");

59 
	}
}

61 
	$showmovõs
(
Iãm
 
ôem
)

63 
	`¥ötf
("Movõ: %† R©ög: %d\n", 
ôem
.
tôÀ
,

64 
ôem
.
øtög
);

65 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/list.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"li°.h
"

7 
C›yToNode
(
Iãm
 
ôem
, 
Node
 * 
≤ode
);

11 
	$InôülizeLi°
(
Li°
 * 
∂i°
)

13 * 
∂i°
 = 
NULL
;

14 
	}
}

17 
boﬁ
 
	$Li°IsEm±y
(c⁄° 
Li°
 * 
∂i°
)

19 i‡(*
∂i°
 =
NULL
)

20  
åue
;

22  
Ál£
;

23 
	}
}

26 
boﬁ
 
	$Li°IsFuŒ
(c⁄° 
Li°
 * 
∂i°
)

28 
Node
 * 
±
;

29 
boﬁ
 
fuŒ
;

31 
±
 = (
Node
 *Ë
	`mÆloc
((Node));

32 i‡(
±
 =
NULL
)

33 
fuŒ
 = 
åue
;

35 
fuŒ
 = 
Ál£
;

36 
	`‰ì
(
±
);

38  
fuŒ
;

39 
	}
}

42 
	$Li°IãmCou¡
(c⁄° 
Li°
 * 
∂i°
)

44 
cou¡
 = 0;

45 
Node
 * 
≤ode
 = *
∂i°
;

47 
≤ode
 !
NULL
)

49 ++
cou¡
;

50 
≤ode
 =Önode->
√xt
;

53  
cou¡
;

54 
	}
}

58 
boﬁ
 
	$AddIãm
(
Iãm
 
ôem
, 
Li°
 * 
∂i°
)

60 
Node
 * 
≤ew
;

61 
Node
 * 
sˇn
 = *
∂i°
;

63 
≤ew
 = (
Node
 *Ë
	`mÆloc
((Node));

64 i‡(
≤ew
 =
NULL
)

65  
Ál£
;

67 
	`C›yToNode
(
ôem
, 
≤ew
);

68 
≤ew
->
√xt
 = 
NULL
;

69 i‡(
sˇn
 =
NULL
)

70 *
∂i°
 = 
≤ew
;

73 
sˇn
->
√xt
 !
NULL
)

74 
sˇn
 = sˇn->
√xt
;

75 
sˇn
->
√xt
 = 
≤ew
;

78  
åue
;

79 
	}
}

82 
Tøvî£
 (c⁄° 
Li°
 * 
∂i°
, (* 
pfun
)(
Iãm
 
ôem
) )

84 
Node
 * 
≤ode
 = *
∂i°
;

86 
≤ode
 !
NULL
)

88 (*
pfun
)(
≤ode
->
ôem
);

89 
≤ode
 =Önode->
√xt
;

91 
	}
}

95 
	$Em±yTheLi°
(
Li°
 * 
∂i°
)

97 
Node
 * 
pßve
;

99 *
∂i°
 !
NULL
)

101 
pßve
 = (*
∂i°
)->
√xt
;

102 
	`‰ì
(*
∂i°
);

103 *
∂i°
 = 
pßve
;

105 
	}
}

109 
	$C›yToNode
(
Iãm
 
ôem
, 
Node
 * 
≤ode
)

111 
≤ode
->
ôem
 = item;

112 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/list.h

2 #i‚de‡
LIST_H_


3 
	#LIST_H_


	)

4 
	~<°dboﬁ.h
>

8 
	#TSIZE
 45

	)

9 
	sfûm


11 
	mtôÀ
[
TSIZE
];

12 
	møtög
;

17 
fûm
 
	tIãm
;

19 
	snode


21 
Iãm
 
	môem
;

22 
node
 * 
	m√xt
;

23 } 
	tNode
;

25 
Node
 * 
	tLi°
;

32 
InôülizeLi°
(
Li°
 * 
∂i°
);

38 
boﬁ
 
Li°IsEm±y
(c⁄° 
Li°
 *
∂i°
);

44 
boﬁ
 
Li°IsFuŒ
(c⁄° 
Li°
 *
∂i°
);

49 
Li°IãmCou¡
(c⁄° 
Li°
 *
∂i°
);

57 
boﬁ
 
AddIãm
(
Iãm
 
ôem
, 
Li°
 * 
∂i°
);

65 
Tøvî£
 (c⁄° 
Li°
 *
∂i°
, (* 
pfun
)(
Iãm
 
ôem
) );

71 
	`Em±yTheLi°
(
Li°
 * 
∂i°
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/mall.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<time.h
>

6 
	~"queue.h
"

7 
	#MIN_PER_HR
 60.0

	)

9 
boﬁ
 
√wcu°omî
(
x
);

10 
Iãm
 
cu°omîtime
(
whí
);

12 
	$maö
()

14 
Queue
 
löe
;

15 
Iãm
 
ãmp
;

16 
hours
;

17 
≥rhour
;

18 
cy˛e
, 
cy˛ñimô
;

19 
tu∫aways
 = 0;

20 
cu°omîs
 = 0;

21 
£rved
 = 0;

22 
sum_löe
 = 0;

23 
waô_time
 = 0;

24 
mö_≥r_cu°
;

25 
löe_waô
 = 0;

27 
	`InôülizeQueue
(&
löe
);

28 
	`§™d
(
	`time
(0));

29 
	`puts
("Case Study: Sigmund Lander's Advice Booth");

30 
	`puts
("EnterÅheÇumber of simulation hours:");

31 
	`sˇnf
("%d", &
hours
);

32 
cy˛ñimô
 = 
MIN_PER_HR
 * 
hours
;

33 
	`puts
("EnterÅheáverageÇumber of customersÖer hour:");

34 
	`sˇnf
("%d", &
≥rhour
);

35 
mö_≥r_cu°
 = 
MIN_PER_HR
 / 
≥rhour
;

37 
cy˛e
 = 0; cy˛ê< 
cy˛ñimô
; cycle++)

39 i‡(
	`√wcu°omî
(
mö_≥r_cu°
))

41 i‡(
	`QueueIsFuŒ
(&
löe
))

42 
tu∫aways
++;

45 
cu°omîs
++;

46 
ãmp
 = 
	`cu°omîtime
(
cy˛e
);

47 
	`EnQueue
(
ãmp
, &
löe
);

50 i‡(
waô_time
 <0 && !
	`QueueIsEm±y
(&
löe
))

52 
	`DeQueue
 (&
ãmp
, &
löe
);

53 
waô_time
 = 
ãmp
.
¥o˚s°ime
;

54 
löe_waô
 +
cy˛e
 - 
ãmp
.
¨rive
;

55 
£rved
++;

57 i‡(
waô_time
 > 0)

58 
waô_time
--;

59 
sum_löe
 +
	`QueueIãmCou¡
(&
löe
);

62 i‡(
cu°omîs
 > 0)

64 
	`¥ötf
("cu°omî†ac˚±ed: %ld\n", 
cu°omîs
);

65 
	`¥ötf
(" cu°omî†£rved: %ld\n", 
£rved
);

66 
	`¥ötf
("Åu∫aways: %ld\n", 
tu∫aways
);

67 
	`¥ötf
("average queue size: %.2f\n",

68 (Ë
sum_löe
 / 
cy˛ñimô
);

69 
	`¥ötf
("áverage waitÅime: %.2f minutes\n",

70 (Ë
löe_waô
 / 
£rved
);

73 
	`puts
("No customers!");

74 
	`Em±yTheQueue
(&
löe
);

75 
	`puts
("Bye!");

78 
	}
}

82 
boﬁ
 
	$√wcu°omî
(
x
)

84 i‡(
	`ønd
(Ë* 
x
 / 
RAND_MAX
 < 1)

85  
åue
;

87  
Ál£
;

88 
	}
}

94 
Iãm
 
	$cu°omîtime
(
whí
)

96 
Iãm
 
cu°
;

98 
cu°
.
¥o˚s°ime
 = 
	`ønd
() % 3 + 1;

99 
cu°
.
¨rive
 = 
whí
;

101  
cu°
;

102 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/petclub.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<˘y≥.h
>

5 
	~"åì.h
"

7 
míu
();

8 
add≥t
(
Tªe
 * 
±
);

9 
dr›≥t
(
Tªe
 * 
±
);

10 
show≥ts
(c⁄° 
Tªe
 * 
±
);

11 
föd≥t
(c⁄° 
Tªe
 * 
±
);

12 
¥ötôem
(
Iãm
 
ôem
);

13 
uµîˇ£
(* 
°r
);

15 
	$maö
()

17 
Tªe
 
≥ts
;

18 
choi˚
;

20 
	`InôülizeTªe
(&
≥ts
);

21 (
choi˚
 = 
	`míu
()) != 'q')

23 
choi˚
)

25 'a' : 
	`add≥t
(&
≥ts
);

27 'l' : 
	`show≥ts
(&
≥ts
);

29 'f' : 
	`föd≥t
(&
≥ts
);

31 'n' : 
	`¥ötf
("%dÖets in club\n",

32 
	`TªeIãmCou¡
(&
≥ts
));

34 'd' : 
	`dr›≥t
(&
≥ts
);

36  : 
	`puts
("SwitchingÉrror");

39 
	`DñëeAŒ
(&
≥ts
);

40 
	`puts
("Bye.");

43 
	}
}

45 
	$míu
()

47 
ch
;

49 
	`puts
("Nerfville Pet Club Membership Program");

50 
	`puts
("EnterÅheÜetter correspondingÅo your choice:");

51 
	`puts
("a)áddáÖetÜ) showÜist ofÖets");

52 
	`puts
("n)Çumber ofÖets f) findÖets");

53 
	`puts
("d) deleteáÖet q) quit");

54 (
ch
 = 
	`gëch¨
()Ë!
EOF
)

56 
	`gëch¨
() != '\n')

58 
ch
 = 
	`tﬁowî
(ch);

59 i‡(
	`°rchr
("Ær‚dq",
ch
Ë=
NULL
)

60 
	`puts
("PleaseÉnteráná,Ü, f,Ç, d, or q:");

64 i‡(
ch
 =
EOF
)

65 
ch
 = 'q';

67  
ch
;

68 
	}
}

70 
	$add≥t
(
Tªe
 * 
±
)

72 
Iãm
 
ãmp
;

74 i‡(
	`TªeIsFuŒ
(
±
))

75 
	`puts
("NoÑoom inÅhe club!");

78 
	`puts
("PleaseÉnterÇame ofÖet:");

79 
	`gës
(
ãmp
.
≥äame
);

80 
	`puts
("PleaseÉnterÖet kind:");

81 
	`gës
(
ãmp
.
≥tköd
);

82 
	`uµîˇ£
(
ãmp
.
≥äame
);

83 
	`uµîˇ£
(
ãmp
.
≥tköd
);

84 
	`AddIãm
(&
ãmp
, 
±
);

86 
	}
}

88 
	$show≥ts
(c⁄° 
Tªe
 * 
±
)

90 i‡(
	`TªeIsEm±y
(
±
))

91 
	`puts
("NoÉntries!");

93 
	`Tøvî£
(
±
, 
¥ötôem
);

94 
	}
}

96 
	$¥ötôem
(
Iãm
 
ôem
)

98 
	`¥ötf
("Pë: %-19† Köd: %-19s\n", 
ôem
.
≥äame
,

99 
ôem
.
≥tköd
);

100 
	}
}

102 
	$föd≥t
(c⁄° 
Tªe
 * 
±
)

104 
Iãm
 
ãmp
;

106 i‡(
	`TªeIsEm±y
(
±
))

108 
	`puts
("NoÉntries!");

112 
	`puts
("PleaseÉnterÇame ofÖet you wishÅo find:");

113 
	`gës
(
ãmp
.
≥äame
);

114 
	`puts
("PleaseÉnterÖet kind:");

115 
	`gës
(
ãmp
.
≥tköd
);

116 
	`uµîˇ£
(
ãmp
.
≥äame
);

117 
	`uµîˇ£
(
ãmp
.
≥tköd
);

118 
	`¥ötf
("%†thê%†", 
ãmp
.
≥äame
,Åemp.
≥tköd
);

119 i‡(
	`InTªe
(&
ãmp
, 
±
))

120 
	`¥ötf
("isá member.\n");

122 
	`¥ötf
("isÇotá member.\n");

123 
	}
}

125 
	$dr›≥t
(
Tªe
 * 
±
)

127 
Iãm
 
ãmp
;

129 i‡(
	`TªeIsEm±y
(
±
))

131 
	`puts
("NoÉntries!");

135 
	`puts
("PleaseÉnterÇame ofÖet you wishÅo delete:");

136 
	`gës
(
ãmp
.
≥äame
);

137 
	`puts
("PleaseÉnterÖet kind:");

138 
	`gës
(
ãmp
.
≥tköd
);

139 
	`uµîˇ£
(
ãmp
.
≥äame
);

140 
	`uµîˇ£
(
ãmp
.
≥tköd
);

141 
	`¥ötf
("%†thê%†", 
ãmp
.
≥äame
,Åemp.
≥tköd
);

142 i‡(
	`DñëeIãm
(&
ãmp
, 
±
))

143 
	`¥ötf
("is dropped fromÅhe club.\n");

145 
	`¥ötf
("isÇotá member.\n");

146 
	}
}

148 
	$uµîˇ£
(* 
°r
)

150 *
°r
)

152 *
°r
 = 
	`touµî
(*str);

153 
°r
++;

155 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/queue.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"queue.h
"

7 
C›yToNode
(
Iãm
 
ôem
, 
Node
 * 
≤
);

8 
C›yToIãm
(
Node
 * 
≤
, 
Iãm
 * 
pi
);

10 
	$InôülizeQueue
(
Queue
 * 
pq
)

12 
pq
->
‰⁄t
 =Öq->
ª¨
 = 
NULL
;

13 
pq
->
ôems
 = 0;

14 
	}
}

16 
boﬁ
 
	$QueueIsFuŒ
(c⁄° 
Queue
 * 
pq
)

18  
pq
->
ôems
 =
MAXQUEUE
;

19 
	}
}

21 
boﬁ
 
	$QueueIsEm±y
(c⁄° 
Queue
 * 
pq
)

23  
pq
->
ôems
 == 0;

24 
	}
}

26 
	$QueueIãmCou¡
(c⁄° 
Queue
 * 
pq
)

28  
pq
->
ôems
;

29 
	}
}

31 
boﬁ
 
	$EnQueue
(
Iãm
 
ôem
, 
Queue
 * 
pq
)

33 
Node
 * 
≤ew
;

35 i‡(
	`QueueIsFuŒ
(
pq
))

36  
Ál£
;

37 
≤ew
 = (
Node
 *Ë
	`mÆloc
( (Node));

38 i‡(
≤ew
 =
NULL
)

40 
	`Ârötf
(
°dîr
,"UnableÅoállocate memory!\n");

41 
	`exô
(1);

43 
	`C›yToNode
(
ôem
, 
≤ew
);

44 
≤ew
->
√xt
 = 
NULL
;

45 i‡(
	`QueueIsEm±y
(
pq
))

46 
pq
->
‰⁄t
 = 
≤ew
;

48 
pq
->
ª¨
->
√xt
 = 
≤ew
;

49 
pq
->
ª¨
 = 
≤ew
;

50 
pq
->
ôems
++;

52  
åue
;

53 
	}
}

55 
boﬁ
 
	$DeQueue
(
Iãm
 * 
pôem
, 
Queue
 * 
pq
)

57 
Node
 * 
±
;

59 i‡(
	`QueueIsEm±y
(
pq
))

60  
Ál£
;

61 
	`C›yToIãm
(
pq
->
‰⁄t
, 
pôem
);

62 
±
 = 
pq
->
‰⁄t
;

63 
pq
->
‰⁄t
 =Öq->‰⁄t->
√xt
;

64 
	`‰ì
(
±
);

65 
pq
->
ôems
--;

66 i‡(
pq
->
ôems
 == 0)

67 
pq
->
ª¨
 = 
NULL
;

69  
åue
;

70 
	}
}

73 
	$Em±yTheQueue
(
Queue
 * 
pq
)

75 
Iãm
 
dummy
;

76 !
	`QueueIsEm±y
(
pq
))

77 
	`DeQueue
(&
dummy
, 
pq
);

78 
	}
}

82 
	$C›yToNode
(
Iãm
 
ôem
, 
Node
 * 
≤
)

84 
≤
->
ôem
 = item;

85 
	}
}

87 
	$C›yToIãm
(
Node
 * 
≤
, 
Iãm
 * 
pi
)

89 *
pi
 = 
≤
->
ôem
;

90 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/queue.h

2 #i‚de‡
_QUEUE_H_


3 
	#_QUEUE_H_


	)

4 
	~<°dboﬁ.h
>

12 
	sôem


14 
	m¨rive
;

15 
	m¥o˚s°ime
;

16 } 
	tIãm
;

18 
	#MAXQUEUE
 10

	)

20 
	snode


22 
Iãm
 
	môem
;

23 
node
 * 
	m√xt
;

24 } 
	tNode
;

26 
	squeue


28 
Node
 * 
	m‰⁄t
;

29 
Node
 * 
	mª¨
;

30 
	môems
;

31 } 
	tQueue
;

36 
InôülizeQueue
(
Queue
 * 
pq
);

41 
boﬁ
 
QueueIsFuŒ
(c⁄° 
Queue
 * 
pq
);

46 
boﬁ
 
QueueIsEm±y
(c⁄° 
Queue
 *
pq
);

51 
QueueIãmCou¡
(c⁄° 
Queue
 * 
pq
);

60 
boﬁ
 
EnQueue
(
Iãm
 
ôem
, 
Queue
 * 
pq
);

71 
boﬁ
 
DeQueue
(
Iãm
 *
pôem
, 
Queue
 * 
pq
);

76 
Em±yTheQueue
(
Queue
 * 
pq
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/tree.c

2 
	~<°rög.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~"åì.h
"

8 
	s∑ú
 {

9 
Node
 * 
	m∑ª¡
;

10 
Node
 * 
	mchûd
;

11 } 
	tPaú
;

14 
Node
 * 
MakeNode
(c⁄° 
Iãm
 * 
pi
);

15 
boﬁ
 
ToLe·
(c⁄° 
Iãm
 * 
i1
, c⁄° Iãm * 
i2
);

16 
boﬁ
 
ToRight
(c⁄° 
Iãm
 * 
i1
, c⁄° Iãm * 
i2
);

17 
AddNode
 (
Node
 * 
√w_node
, Nodê* 
roŸ
);

18 
InOrdî
(c⁄° 
Node
 * 
roŸ
, (* 
pfun
)(
Iãm
 
ôem
));

19 
Paú
 
	`SìkIãm
(c⁄° 
Iãm
 * 
pi
, c⁄° 
Tªe
 * 
±ªe
);

20 
	`DñëeNode
(
Node
 **
±r
);

21 
	`DñëeAŒNodes
(
Node
 * 
±r
);

24 
	$InôülizeTªe
(
Tªe
 * 
±ªe
)

26 
±ªe
->
roŸ
 = 
NULL
;

27 
±ªe
->
size
 = 0;

28 
	}
}

30 
boﬁ
 
	$TªeIsEm±y
(c⁄° 
Tªe
 * 
±ªe
)

32 i‡(
±ªe
->
roŸ
 =
NULL
)

33  
åue
;

35  
Ál£
;

36 
	}
}

38 
boﬁ
 
	$TªeIsFuŒ
(c⁄° 
Tªe
 * 
±ªe
)

40 i‡(
±ªe
->
size
 =
MAXITEMS
)

41  
åue
;

43  
Ál£
;

44 
	}
}

46 
	$TªeIãmCou¡
(c⁄° 
Tªe
 * 
±ªe
)

48  
±ªe
->
size
;

49 
	}
}

51 
boﬁ
 
	$AddIãm
(c⁄° 
Iãm
 * 
pi
, 
Tªe
 * 
±ªe
)

53 
Node
 * 
√w_node
;

55 i‡(
	`TªeIsFuŒ
(
±ªe
))

57 
	`Ârötf
(
°dîr
,"Tree is full\n");

58  
Ál£
;

60 i‡(
	`SìkIãm
(
pi
, 
±ªe
).
chûd
 !
NULL
)

62 
	`Ârötf
(
°dîr
, "AttemptedÅoádd duplicate item\n");

63  
Ál£
;

65 
√w_node
 = 
	`MakeNode
(
pi
);

66 i‡(
√w_node
 =
NULL
)

68 
	`Ârötf
(
°dîr
, "Couldn't createÇode\n");

69  
Ál£
;

72 
±ªe
->
size
++;

74 i‡(
±ªe
->
roŸ
 =
NULL
)

75 
±ªe
->
roŸ
 = 
√w_node
;

77 
	`AddNode
(
√w_node
,
±ªe
->
roŸ
);

79  
åue
;

80 
	}
}

82 
boﬁ
 
	$InTªe
(c⁄° 
Iãm
 * 
pi
, c⁄° 
Tªe
 * 
±ªe
)

84  (
	`SìkIãm
(
pi
, 
±ªe
).
chûd
 =
NULL
Ë? 
Ál£
 : 
åue
;

85 
	}
}

87 
boﬁ
 
	$DñëeIãm
(c⁄° 
Iãm
 * 
pi
, 
Tªe
 * 
±ªe
)

89 
Paú
 
look
;

91 
look
 = 
	`SìkIãm
(
pi
, 
±ªe
);

92 i‡(
look
.
chûd
 =
NULL
)

93  
Ál£
;

95 i‡(
look
.
∑ª¡
 =
NULL
)

96 
	`DñëeNode
(&
±ªe
->
roŸ
);

97 i‡(
look
.
∑ª¡
->
À·
 =look.
chûd
)

98 
	`DñëeNode
(&
look
.
∑ª¡
->
À·
);

100 
	`DñëeNode
(&
look
.
∑ª¡
->
right
);

101 
±ªe
->
size
--;

103  
åue
;

104 
	}
}

106 
Tøvî£
 (c⁄° 
Tªe
 * 
±ªe
, (* 
pfun
)(
Iãm
 
ôem
))

109 i‡(
±ªe
 !
NULL
)

110 
	`InOrdî
(
±ªe
->
roŸ
, 
pfun
);

111 
	}
}

113 
	$DñëeAŒ
(
Tªe
 * 
±ªe
)

115 i‡(
±ªe
 !
NULL
)

116 
	`DñëeAŒNodes
(
±ªe
->
roŸ
);

117 
±ªe
->
roŸ
 = 
NULL
;

118 
±ªe
->
size
 = 0;

119 
	}
}

123 
InOrdî
(c⁄° 
Node
 * 
roŸ
, (* 
pfun
)(
Iãm
 
ôem
))

125 i‡(
roŸ
 !
NULL
)

127 
	`InOrdî
(
roŸ
->
À·
, 
pfun
);

128 (*
pfun
)(
roŸ
->
ôem
);

129 
	`InOrdî
(
roŸ
->
right
, 
pfun
);

131 
	}
}

133 
	$DñëeAŒNodes
(
Node
 * 
roŸ
)

135 
Node
 * 
¥ight
;

137 i‡(
roŸ
 !
NULL
)

139 
¥ight
 = 
roŸ
->
right
;

140 
	`DñëeAŒNodes
(
roŸ
->
À·
);

141 
	`‰ì
(
roŸ
);

142 
	`DñëeAŒNodes
(
¥ight
);

144 
	}
}

146 
	$AddNode
 (
Node
 * 
√w_node
, Nodê* 
roŸ
)

148 i‡(
	`ToLe·
(&
√w_node
->
ôem
, &
roŸ
->item))

150 i‡(
roŸ
->
À·
 =
NULL
)

151 
roŸ
->
À·
 = 
√w_node
;

153 
	`AddNode
(
√w_node
, 
roŸ
->
À·
);

155 i‡(
	`ToRight
(&
√w_node
->
ôem
, &
roŸ
->item))

157 i‡(
roŸ
->
right
 =
NULL
)

158 
roŸ
->
right
 = 
√w_node
;

160 
	`AddNode
(
√w_node
, 
roŸ
->
right
);

164 
	`Ârötf
(
°dîr
,"locationÉrror in AddNode()\n");

165 
	`exô
(1);

167 
	}
}

169 
boﬁ
 
	$ToLe·
(c⁄° 
Iãm
 * 
i1
, c⁄° Iãm * 
i2
)

171 
comp1
;

173 i‡((
comp1
 = 
	`°rcmp
(
i1
->
≥äame
, 
i2
->petname)) < 0)

174  
åue
;

175 i‡(
comp1
 == 0 &&

176 
	`°rcmp
(
i1
->
≥tköd
, 
i2
->petkind) < 0 )

177  
åue
;

179  
Ál£
;

180 
	}
}

182 
boﬁ
 
	$ToRight
(c⁄° 
Iãm
 * 
i1
, c⁄° Iãm * 
i2
)

184 
comp1
;

186 i‡((
comp1
 = 
	`°rcmp
(
i1
->
≥äame
, 
i2
->petname)) > 0)

187  
åue
;

188 i‡(
comp1
 == 0 &&

189 
	`°rcmp
(
i1
->
≥tköd
, 
i2
->petkind) > 0 )

190  
åue
;

192  
Ál£
;

193 
	}
}

195 
Node
 * 
	$MakeNode
(c⁄° 
Iãm
 * 
pi
)

197 
Node
 * 
√w_node
;

199 
√w_node
 = (
Node
 *Ë
	`mÆloc
((Node));

200 i‡(
√w_node
 !
NULL
)

202 
√w_node
->
ôem
 = *
pi
;

203 
√w_node
->
À·
 = 
NULL
;

204 
√w_node
->
right
 = 
NULL
;

207  
√w_node
;

208 
	}
}

210 
Paú
 
	$SìkIãm
(c⁄° 
Iãm
 * 
pi
, c⁄° 
Tªe
 * 
±ªe
)

212 
Paú
 
look
;

213 
look
.
∑ª¡
 = 
NULL
;

214 
look
.
chûd
 = 
±ªe
->
roŸ
;

216 i‡(
look
.
chûd
 =
NULL
)

217  
look
;

219 
look
.
chûd
 !
NULL
)

221 i‡(
	`ToLe·
(
pi
, &(
look
.
chûd
->
ôem
)))

223 
look
.
∑ª¡
 =Üook.
chûd
;

224 
look
.
chûd
 =Üook.chûd->
À·
;

226 i‡(
	`ToRight
(
pi
, &(
look
.
chûd
->
ôem
)))

228 
look
.
∑ª¡
 =Üook.
chûd
;

229 
look
.
chûd
 =Üook.chûd->
right
;

235  
look
;

236 
	}
}

238 
	$DñëeNode
(
Node
 **
±r
)

241 
Node
 * 
ãmp
;

243 
	`puts
((*
±r
)->
ôem
.
≥äame
);

244 i‡–(*
±r
)->
À·
 =
NULL
)

246 
ãmp
 = *
±r
;

247 *
±r
 = (*±r)->
right
;

248 
	`‰ì
(
ãmp
);

250 i‡–(*
±r
)->
right
 =
NULL
)

252 
ãmp
 = *
±r
;

253 *
±r
 = (*±r)->
À·
;

254 
	`‰ì
(
ãmp
);

259 
ãmp
 = (*
±r
)->
À·
;Åemp->
right
 !
NULL
;

260 
ãmp
 =Åemp->
right
)

262 
ãmp
->
right
 = (*
±r
)->right;

263 
ãmp
 = *
±r
;

264 *
±r
 =(*±r)->
À·
;

265 
	`‰ì
(
ãmp
);

267 
	}
}

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/tree.h

3 #i‚de‡
_TREE_H_


4 
	#_TREE_H_


	)

5 
	~<°dboﬁ.h
>

8 
	sôem


10 
	m≥äame
[20];

11 
	m≥tköd
[20];

12 } 
	tIãm
;

14 
	#MAXITEMS
 10

	)

16 
	snode


18 
Iãm
 
	môem
;

19 
node
 * 
	mÀ·
;

20 
node
 * 
	mright
;

21 } 
	tNode
;

23 
	såì


25 
Node
 * 
	mroŸ
;

26 
	msize
;

27 } 
	tTªe
;

34 
InôülizeTªe
(
Tªe
 * 
±ªe
);

40 
boﬁ
 
TªeIsEm±y
(c⁄° 
Tªe
 * 
±ªe
);

46 
boﬁ
 
TªeIsFuŒ
(c⁄° 
Tªe
 * 
±ªe
);

52 
TªeIãmCou¡
(c⁄° 
Tªe
 * 
±ªe
);

60 
boﬁ
 
AddIãm
(c⁄° 
Iãm
 * 
pi
, 
Tªe
 * 
±ªe
);

67 
boﬁ
 
InTªe
(c⁄° 
Iãm
 * 
pi
, c⁄° 
Tªe
 * 
±ªe
);

75 
boﬁ
 
DñëeIãm
(c⁄° 
Iãm
 * 
pi
, 
Tªe
 * 
±ªe
);

85 
Tøvî£
 (c⁄° 
Tªe
 * 
±ªe
, (* 
pfun
)(
Iãm
 
ôem
));

90 
	`DñëeAŒ
(
Tªe
 * 
±ªe
);

	@/root/grocery-shop/language/gcc/src/cPrimer/ch17/use_q.c

3 
	~<°dio.h
>

4 
	~"queue.h
"

6 
	$maö
()

8 
Queue
 
löe
;

9 
Iãm
 
ãmp
;

10 
ch
;

12 
	`InôülizeQueue
(&
löe
);

13 
	`puts
("TestingÅhe Queue interface. TypeáÅoáddá value,");

14 
	`puts
("type dÅo deleteá value,ándÅype qÅo quit.");

15 (
ch
 = 
	`gëch¨
()) != 'q')

17 i‡(
ch
 != 'a' && ch != 'd')

19 i‡–
ch
 == 'a')

21 
	`¥ötf
("IntegerÅoádd: ");

22 
	`sˇnf
("%d", &
ãmp
);

23 i‡(!
	`QueueIsFuŒ
(&
löe
))

25 
	`¥ötf
("Puâög %d i¡ÿqueue\n", 
ãmp
);

26 
	`EnQueue
(
ãmp
,&
löe
);

29 
	`puts
("Queue is full!");

33 i‡(
	`QueueIsEm±y
(&
löe
))

34 
	`puts
("NothingÅo delete!");

37 
	`DeQueue
(&
ãmp
,&
löe
);

38 
	`¥ötf
("Removög %d from queue\n", 
ãmp
);

41 
	`¥ötf
("%d iãm†ö queue\n", 
	`QueueIãmCou¡
(&
löe
));

42 
	`puts
("TypeáÅoádd, dÅo delete, qÅo quit:");

44 
	`Em±yTheQueue
(&
löe
);

45 
	`puts
("Bye!");

48 
	}
}

	@/root/grocery-shop/language/gcc/src/coreDump/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<glob.h
>

6 
	$di•œy
(*
ã°
)

8 
c‹edump
 = 
ã°
[0];

10 
	`¥ötf
("%c\n", 
c‹edump
);

11 
	}
}

13 
	$maö
(
¨gc
, **
¨gv
)

15 *
abc
 = "abc";

16 *
ã°
 = 
NULL
;

18 
	`¥ötf
("This isáÅest!\n");

19 
	`¥ötf
("%s\n", 
abc
);

21 
	`di•œy
(
ã°
);

24 
	}
}

	@/root/grocery-shop/language/gcc/src/daemon/daemonTest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<sched.h
>

5 
	~<gë›t.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/waô.h
>

9 
	~<uni°d.h
>

10 
	~<sys/sysˇŒ.h
>

11 
	~<uni°d.h
>

12 
	~<asm/uni°d.h
>

13 
	~<uni°d.h
>

14 
	~<löux/uni°d.h
>

15 
	~<sys/klog.h
>

16 
	~<sy¶og.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/¥˘l.h
>

20 
	~<f˙é.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

24 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

25 
	#True
 1

	)

26 
	#FÆ£
 0

	)

29 
	$sig_d´m_u§_h™dÀ
(
sig«l
)

31 
	`¥ötf
("Receiveá signal from otherÖrocess!\n");

32 
	}
}

35 
	$sig_d´m_°›_h™dÀ
(
sig«l
)

37 
	`¥ötf
("PreparingÅoÉxitÅheÖrocess.\n");

38 
	`exô
(0);

39 
	}
}

41 
	$maö
(
¨gc
, *
¨gv
[])

43 
lock_fd
 = -1;

44 
Êock
 
lock
;

45 
°r
[64];

46 
pid_t
 
pid
;

47 
mode
 = 1;

50 
lock_fd
 = 
	`›í
(
DAEMON_PID_FILE
, 
O_CREAT
 | 
O_RDWR
, 0666);

51 i‡(
lock_fd
 == -1) {

52 
	`¥ötf
("C™'à›íÜock fûê'%s' ,Éº‹ : '%s'\n", 
DAEMON_PID_FILE
, 
	`°ªº‹
(
î∫o
));

62 
lock
.
l_whí˚
 = 
SEEK_SET
;

63 
lock
.
l_ty≥
 = 
F_WRLCK
;

64 
lock
.
l_°¨t
 = 0;

65 
lock
.
l_Àn
 = 0;

66 
lock
.
l_pid
 = 0;

68 i‡(
¨gc
 =1 || (¨g¯=2 && (
	`°rcmp
(
¨gv
[1], "start") == 0))) {

69 
	`¥ötf
("\n(~_~)Readying start wafalarmd......\n");

70 
mode
 = 1;

71 } i‡(
¨gc
 =2 && (
	`°rcmp
(
¨gv
[1], "stop") == 0)) {

72 
mode
 = 2;

73 
	`¥ötf
("\n(>_<)Readying stop wafalarmd......\n");

75 
	`¥ötf
("\n(v_v)unknown option, usage: wafalarmd [start|stop|reload]\n");

76 
	`˛o£
(
lock_fd
);

80 i‡(
mode
 == 1) {

81 i‡(
	`f˙é
(
lock_fd
, 
F_SETLK
, &
lock
) < 0 ) {

82 
	`¥ötf
("\n(v_v)Other wafalarmdÖrocess isÑunning!\n");

83 
	`˛o£
(
lock_fd
);

88 i‡(
mode
 == 2) {

89 i‡(
	`ªad
(
lock_fd
, 
°r
, 64) < 0) {

90 
	`˛o£
(
lock_fd
);

94 
pid
 = 
	`©ﬁ
(
°r
);

95 
	`kûl
(
pid
, 
SIGTERM
);

100 
	`¢¥ötf
(
°r
, 63, "%lu", ()
	`gëpid
());

101 
°r
[63] = '\0';

102 
	`¥ötf
("Cuºíàpid i†:%s\n", 
°r
);

103 
	`·runˇã
(
lock_fd
, 0);

104 i‡(
	`wrôe
(
lock_fd
, 
°r
, 
	`°æí
(str)) != strlen(str)) {

105 
	`¥ötf
("C™'àwrôêlock fûe,Éº‹ : '%s'\n", 
	`°ªº‹
(
î∫o
));

109 
	`sig«l
(
SIGUSR1
, 
sig_d´m_u§_h™dÀ
);

110 
	`sig«l
(
SIGTERM
, 
sig_d´m_°›_h™dÀ
);

112 
True
) {

113 
	`¶ìp
(10);

117 
	}
}

	@/root/grocery-shop/language/gcc/src/daemon/object.c

5 
	$squ¨e
(
x
)

7  
x
*x;

8 
	}
}

	@/root/grocery-shop/language/gcc/src/daemon/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<f˙é.h
>

5 
	~<˘y≥.h
>

6 
	~<sig«l.h
>

7 
	~<uni°d.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<sys/¥˘l.h
>

11 
	~<sys/waô.h
>

13 
	#True
 1

	)

14 
	#FÆ£
 0

	)

16 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

18 
pid_t


19 
	$gë_pid_‰om_fûe
(*
fûíame
)

21 
FILE
 *
Â
 = 
NULL
;

22 
°r
[12
job
] = {0};

24 
Â
 = 
	`f›í
(
fûíame
, "r+");

25 i‡(
	`fgës
(
°r
, 12
job
, 
Â
Ë!
NULL
) {

26  
	`©oi
(
°r
);

30 
	}
}

32 
	$maö
(
¨gc
, *
¨gv
[])

34 
pid_t
 
pid
 = 0;

57 
	`¥ötf
("Âπ≥ÊñπÂÄº=%lf\n", 
	`squ¨e
(2.0));

58 
	`¥ötf
("Á≥ªÁªüÂ∫ìÁöÑÂπ≥ÊñπÂáΩÊï∞:%g\n", 
	`sqπ
(2));

61 
	}
}

	@/root/grocery-shop/language/gcc/src/execl/execTest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
	gbuf
[4096] = {1,2,3};

7 
	gãmp
[204
job
];

18 
	$maö
(
¨gc
, **
¨gv
)

20 
pid_t
 
pid
;

22 
ªt
 = -1;

26 i‡((
pid
=
	`f‹k
()) == 0) {

27 
	`¥ötf
("Â≠êËøõÁ®ãÂêØÂä®:\n");

31 i‡((
ªt
 = 
	`exe˛p
("ps", "ps" " -ef", 
NULL
)) < 0) {

32 
	`¥ötf
("Ë∞ÉÁî®execlÂáΩÊï∞Â§±Ë¥•ÔºÅ\n");

33 
	`exô
(-1);

35 
	`¥ötf
("Ë∞ÉÁî®execlÂáΩÊï∞ÁªìÊùü!\n");

42 
	}
}

	@/root/grocery-shop/language/gcc/src/execl/killTest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<sched.h
>

5 
	~<gë›t.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/waô.h
>

9 
	~<uni°d.h
>

10 
	~<sys/sysˇŒ.h
>

11 
	~<uni°d.h
>

12 
	~<asm/uni°d.h
>

13 
	~<uni°d.h
>

14 
	~<löux/uni°d.h
>

15 
	~<sys/klog.h
>

16 
	~<sy¶og.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/¥˘l.h
>

20 
	~<f˙é.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

24 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

25 
	#True
 1

	)

26 
	#FÆ£
 0

	)

28 
	gpidAºay
[3] = {0};

31 
	$sig_d´m_u§_h™dÀ
(
sig«l
)

33 
	`¥ötf
("Receiveá signal from otherÖrocess!\n");

34 
	}
}

37 
	$sig_d´m_°›_h™dÀ
(
sig«l
)

39 
i
 = -1;

40 
ªt
 = -1;

42 
	`¥ötf
("PreparingÅoÉxitÅheÖrocess.\n");

43 
i
=0; i<3; i++) {

44 
ªt
 = 
	`kûl
(
pidAºay
[
i
], 
SIGTERM
);

45 
	`¥ötf
("ªà%d -=0=0=0=0=0=0\n", 
ªt
);

47 
	`exô
(0);

48 
	}
}

51 
	$sig_fú°_°›_h™dÀ
(
sig«l
)

53 
	`¶ìp
(15);

54 
	`¥ötf
("%s\n", 
__func__
);

55 
	}
}

58 
	$sig_£c⁄d_°›_h™dÀ
(
sig«l
)

60 
	`¶ìp
(15);

61 
	`¥ötf
("secondÖrocess quit!\n");

62 
	}
}

65 
	$sig_thúd_°›_h™dÀ
(
sig«l
)

67 
	`¶ìp
(15);

68 
	`¥ötf
("thirdÖrocess quit!\n");

69 
	}
}

72 
	$fú°Pro˚ss
()

75 
	`sig«l
(
SIGTERM
, 
sig_fú°_°›_h™dÀ
);

77 
True
) {

78 
	`¶ìp
(10);

79 
	`¥ötf
("firstÖrocessÑunning!\n");

83 
	}
}

86 
	$£c⁄dPro˚ss
()

89 
	`sig«l
(
SIGTERM
, 
sig_£c⁄d_°›_h™dÀ
);

91 
True
) {

92 
	`¶ìp
(15);

93 
	`¥ötf
("secondÖrocessÑunning!\n");

97 
	}
}

100 
	$thúdPro˚ss
()

103 
	`sig«l
(
SIGTERM
, 
sig_thúd_°›_h™dÀ
);

105 
True
) {

106 
	`¶ìp
(5);

107 
	`¥ötf
("thirdÖrocessÑunning!\n");

111 
	}
}

115 
	$kûl_f‹k_chûd
(
num
)

117 
pid_t
 
pid
 = 0;

118 
ªt
 = -1;

119 
i
 = 0;

121 
i
=0; i<
num
; i++) {

122 i‡((
pid
=
	`f‹k
()) < 0) {

124 } i‡(
pid
 == 0) {

125 i‡(
i
 == 0) {

126 
ªt
 = 
	`fú°Pro˚ss
();

127 } i‡(
i
 == 0) {

128 
ªt
 = 
	`£c⁄dPro˚ss
();

130 
ªt
 = 
	`thúdPro˚ss
();

132 
	`exô
(0);

134 
pidAºay
[
i
] = 
pid
;

135 
	`¥ötf
("ËøõÁ®ã%dÂàõÂª∫ÊàêÂäüÔºÅ\n", 
pid
);

138 
	}
}

141 
	$maö
(
¨gc
, *
¨gv
[])

143 
lock_fd
 = -1;

144 
Êock
 
lock
;

145 
°r
[64];

146 
pid_t
 
pid
;

147 
mode
 = 1;

150 
lock_fd
 = 
	`›í
(
DAEMON_PID_FILE
, 
O_CREAT
 | 
O_RDWR
, 0666);

151 i‡(
lock_fd
 == -1) {

152 
	`¥ötf
("C™'à›íÜock fûê'%s' ,Éº‹ : '%s'\n", 
DAEMON_PID_FILE
, 
	`°ªº‹
(
î∫o
));

162 
lock
.
l_whí˚
 = 
SEEK_SET
;

163 
lock
.
l_ty≥
 = 
F_WRLCK
;

164 
lock
.
l_°¨t
 = 0;

165 
lock
.
l_Àn
 = 0;

166 
lock
.
l_pid
 = 0;

168 i‡(
¨gc
 =1 || (¨g¯=2 && (
	`°rcmp
(
¨gv
[1], "start") == 0))) {

169 
	`¥ötf
("\n(~_~)Readying start wafalarmd......\n");

170 
mode
 = 1;

171 } i‡(
¨gc
 =2 && (
	`°rcmp
(
¨gv
[1], "stop") == 0)) {

172 
mode
 = 2;

173 
	`¥ötf
("\n(>_<)Readying stop wafalarmd......\n");

175 
	`¥ötf
("\n(v_v)unknown option, usage: wafalarmd [start|stop|reload]\n");

176 
	`˛o£
(
lock_fd
);

180 i‡(
mode
 == 1) {

181 i‡(
	`f˙é
(
lock_fd
, 
F_SETLK
, &
lock
) < 0 ) {

182 
	`¥ötf
("\n(v_v)Other wafalarmdÖrocess isÑunning!\n");

183 
	`˛o£
(
lock_fd
);

188 i‡(
mode
 == 2) {

189 i‡(
	`ªad
(
lock_fd
, 
°r
, 64) < 0) {

190 
	`˛o£
(
lock_fd
);

194 
pid
 = 
	`©ﬁ
(
°r
);

195 
	`kûl
(
pid
, 
SIGTERM
);

200 
	`¢¥ötf
(
°r
, 63, "%lu", ()
	`gëpid
());

201 
°r
[63] = '\0';

202 
	`¥ötf
("Cuºíàpid i†:%s\n", 
°r
);

203 
	`·runˇã
(
lock_fd
, 0);

204 i‡(
	`wrôe
(
lock_fd
, 
°r
, 
	`°æí
(str)) != strlen(str)) {

205 
	`¥ötf
("C™'àwrôêlock fûe,Éº‹ : '%s'\n", 
	`°ªº‹
(
î∫o
));

209 
	`sig«l
(
SIGUSR1
, 
sig_d´m_u§_h™dÀ
);

210 
	`sig«l
(
SIGTERM
, 
sig_d´m_°›_h™dÀ
);

212 
	`kûl_f‹k_chûd
(3);

214 
True
) {

215 
	`¶ìp
(10);

219 
	}
}

	@/root/grocery-shop/language/gcc/src/execl/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<f˙é.h
>

5 
	~<˘y≥.h
>

6 
	~<sig«l.h
>

7 
	~<uni°d.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<sys/¥˘l.h
>

11 
	~<sys/waô.h
>

13 
	#True
 1

	)

14 
	#FÆ£
 0

	)

16 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

18 
pid_t


19 
	$gë_pid_‰om_fûe
(*
fûíame
)

21 
FILE
 *
Â
 = 
NULL
;

22 
°r
[12
job
] = {0};

24 
Â
 = 
	`f›í
(
fûíame
, "r+");

25 i‡(
	`fgës
(
°r
, 12
job
, 
Â
Ë!
NULL
) {

26  
	`©oi
(
°r
);

30 
	}
}

33 
	$maö
(
¨gc
, *
¨gv
[])

35 
pid_t
 
pid
 = 0;

36 
i
=0;

38 
i
=0; i<
¨gc
; i++) {

39 
	`¥ötf
("¨gumít=%s\t", 
¨gv
[
i
]);

41 
	`¥ötf
("\n");

43 
	`¥ötf
("Test'sÖrocess is startÑunning!\n");

44 
pid
 = 
	`gë_pid_‰om_fûe
(
DAEMON_PID_FILE
);

45 i‡(
pid
 < 0) {

46 
	`¥ötf
("getÖid occurÉrror!\n");

47 
	`exô
(0);

50 
	`¥ötf
("pid i†%d\n", 
pid
);

51 
True
) {

52 i‡(
	`kûl
(
pid
, 
SIGUSR1
) < 0) {

53 
	`¥ötf
("kû»%d faûuª!\n", 
pid
);

54 
pid
 = 
	`gë_pid_‰om_fûe
(
DAEMON_PID_FILE
);

56 
	`¶ìp
(3);

60 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileChange.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
buf
[12
job
];

9 
fd
;

10 
FILE
 *
Â
 = 
NULL
;

12 
fd
 = 
	`›í
("/tmp/ã°Fûe", 
O_WRONLY
|
O_CREAT
);

13 i‡(
fd
 == -1) {

14 
	`¥ötf
("Create file failed.\n");

17 
	`wrôe
(
fd
, "XXXXXXXXXXXXXXXXXXXXXXXX", 32);

18 
	`˛o£
(
fd
);

20 
fd
 = 
	`›í
("/tmp/ã°Fûe", 
O_RONLY
);

21 i‡(
fd
 == -1) {

22 
	`¥ötf
("Open file failed.\n");

26 
Â
 = 
	`fd›í
(
fd
, "r");

27 i‡(
NULL
 =
Â
) {

28 
	`¥ötf
("Change file descriptor failed.\n");

31 
	`fgës
(
Â
,

33 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileConfig.c

1 
	~"fûeC⁄fig.h
"

6 
	$fûe_˛ór
(c⁄° *
fûíame
)

8 
ªt
 = -1;

10 i‡(!
fûíame
) {

14 i‡((
ªt
=
	`åunˇã
(
fûíame
, 0)) < 0) {

15 
	`¥ötf
("%s\n", 
	`°ªº‹
(
î∫o
));

20 
	}
}

26 
	$fûe_di•œy
(c⁄° *
fûíame
)

28 
buf
[1024];

29 
FILE
 *
Â
 = 
NULL
;

31 i‡(
fûíame
 =
NULL
) {

35 
Â
 = 
	`f›í
(
fûíame
, "r");

36 i‡(
Â
 =
NULL
) {

40 
	`¥ötf
("OUTPUT:Êñá‰ª∂%sÂÜÖÂÆπ‰∏∫:\n", 
fûíame
);

41 
	`fgës
(
buf
, 1024, 
Â
Ë!
NULL
) {

42 
	`¥ötf
("%s", 
buf
);

44 
	`¥ötf
("\n");

47 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileConfig.h

1 #i‚de‡
_FILECONFIG_H_


2 
	#_FILECONFIG_H_


	)

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/°©.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<sys/waô.h
>

11 
	~<î∫o.h
>

12 
	~<uni°d.h
>

13 
	~<libgí.h
>

14 
	~<dúít.h
>

15 
	~<f˙é.h
>

17 
	#FILENAME_RW
 "./fûedú/fûeTe°Rw"

	)

18 
	#FILENAME_BINARY_RW
 "./fûedú/fûeTe°Bö¨y"

	)

19 
	#FILENAME_UNCACHE
 "./fûedú/fûeTe°Unˇche"

	)

20 
	#FILENAME_UNCACHE_LINK
 "./fûedú/fûeTe°Unˇche.lök"

	)

21 
	#FILENAME_UNCACHE_PROC
 "./fûedú/fûeTe°Unˇche.¥oc"

	)

22 
	#FILENAME_FCNTL
 "./fûedú/unˇcheTe°.f˙é"

	)

23 
	#FILENAME_FCNTL2
 "./fûedú/unˇcheTe°.f˙é2"

	)

25 
fûeObje˘Unô
 
	tfûeObje˘Unô
;

29 
	sfûeObje˘Unô
{

30 
	mid
;

31 
	mdesc
[12
job
];

34 
fûe_˛ór
(c⁄° *
fûíame
);

36 
fûe_di•œy
(c⁄° *
fûíame
);

	@/root/grocery-shop/language/gcc/src/fileOperator/fileCreate.c

1 
	~"fûeC⁄fig.h
"

3 
	#FILE_FIRST
 "./fûedú/ã°dú/subdú/wahha"

	)

4 
	#FILE_SECOND
 "./fûedú/ã°dú/subdú2/"

	)

7 
	$Æ¨md_¸óãdú
(c⁄° *
dúe˘‹y
)

9 
i
 = 0;

10 
iRë
 = -1;

11 
iLí
 = 0;

12 
dúBuf
[512] = {0};

14 if(
NULL
 =
dúe˘‹y
){

19 
iLí
 = 
	`°æí
(
dúe˘‹y
);

20 
	`mem˝y
(
dúBuf
, 
dúe˘‹y
, 
iLí
);

22 
i
=0; i<=
iLí
; i++) {

23 i‡(
dúBuf
[
i
] == '\\' || dirBuf[i] == '/') {

24 
dúBuf
[
i
] = '\0';

27 i‡(
	`°æí
(
dúBuf
) == 0) {

28 
dúBuf
[
i
] = '/';

32 i‡((
iRë
 = 
	`ac˚ss
(
dúBuf
, 
F_OK
)) == -1) {

33 i‡((
iRë
 = 
	`mkdú
(
dúBuf
, 0777)) == -1) {

34 
	`¥ötf
("Check-Dú:¸óã dúe˘‹y %†Áûed.\n", 
dúBuf
);

35  
iRë
;

39 
dúBuf
[
i
] = '/';

43 i‡(
	`ac˚ss
(
dúBuf
, 
F_OK
) == -1) {

44 i‡(
	`mkdú
(
dúBuf
, 0777) < 0) {

45 
	`¥ötf
("Check-Dú:¸óã dúe˘‹y %†Áûed.\n", 
dúBuf
);

51 
	}
}

54 
	$maö
(
¨gc
, **
¨gv
)

56 i‡(
	`Æ¨md_¸óãdú
(
FILE_FIRST
) < 0) {

60 i‡(
	`Æ¨md_¸óãdú
(
FILE_SECOND
) < 0) {

65 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileJudge.c

1 
	~"fûeC⁄fig.h
"

3 
	$°©Desc
(
vÆue
)

5 
vÆue
) {

6 
EINVAL
:

7 
	`¥ötf
("Ê®°ÂºèÂÄºÊó†Êïà\n");

9 
EACCES
:

10 
	`¥ötf
("Êñá‰ª∂ÊàñË∑ØÂæÑÂêç‰∏≠ÂåÖÂê´ÁöÑÁõÆÂΩï‰∏çÂèØËÆøÈóÆ\n");

12 
ELOOP
:

13 
	`¥ötf
("Ëß£ÈáäË∑ØÂæÑÂêçËøáÁ®ã‰∏≠Â≠òÂú®Â§™Â§öÁöÑÁ¨¶Âè∑ËøûÊé•\n");

15 
ENAMETOOLONG
:

16 
	`¥ötf
("Ë∑ØÂæÑÂêçÂ§™Èïø\n");

18 
ENOENT
:

19 
	`¥ötf
("Ë∑ØÂæÑÂêç‰∏≠ÁöÑÁõÆÂΩï‰∏çÂ≠òÂú®ÊàñÊòØÊó†ÊïàÁöÑÁ¨¶Âè∑ËøûÊé•\n");

21 
ENOTDIR
:

22 
	`¥ötf
("Ë∑ØÂæÑÂêç‰∏≠ÂΩì‰ΩúÁõÆÂΩïÁöÑÁªÑ‰ª∂Âπ∂ÈùûÁõÆÂΩï\n");

24 
EROFS
:

25 
	`¥ötf
("Êñá‰ª∂Á≥ªÁªüÂè™ËØª\n");

27 
EFAULT
:

28 
	`¥ötf
("Ë∑ØÂæÑÂêçÊåáÂêëÂèØËÆøÈóÆÁöÑÁ©∫Èó¥Â§ñ\n");

30 
EIO
:

31 
	`¥ötf
("IOÈîôËØØ\n");

33 
ENOMEM
:

34 
	`¥ötf
("‰∏çËÉΩËé∑ÂèñË∂≥Â§üÁöÑÂÜÖÂ≠ò\n");

36 
ETXTBSY
:

37 
	`¥ötf
("Á®ãÂ∫èÂÜôÂÖ•ÈîôËØØ\n");

40 
	`¥ötf
("Other\n");

42 
	}
}

44 
	$fûeInf‹m©i⁄
(
°©
 *
buf
)

46 
mode_t
 
ﬁd
;

48 
	`¥ötf
("Êñá‰ª∂ÁöÑËÆæÂ§áÁºñÂè∑ :%u\n", ()
buf
->
°_dev
);

49 
	`¥ötf
("Êñá‰ª∂ÁöÑÁ°¨ÈìæÊé•Êï∞ÁõÆ:%u\n", 
buf
->
°_∆ök
);

50 
	`¥ötf
("Áî®Êà∑ID :%u\n", 
buf
->
°_uid
);

51 
	`¥ötf
("Êñá‰ª∂Â§ßÂ∞è :%u\n", ()
buf
->
°_size
);

52 
	`¥ötf
("Êñá‰ª∂Â±ûÊÄß :\n");

53 i‡(
	`S_ISLNK
(
buf
->
°_mode
)) {

54 
	`¥ötf
("%40s\n", "Á¨¶Âè∑ÈìæÊé•Êñá‰ª∂");

56 i‡(
	`S_ISREG
(
buf
->
°_mode
)) {

57 
	`¥ötf
("%40s\n", "ÊôÆÈÄöÊñá‰ª∂");

59 i‡(
	`S_ISDIR
(
buf
->
°_mode
)) {

60 
	`¥ötf
("%40s\n", "ÁõÆÂΩïÊñá‰ª∂");

62 i‡(
	`S_ISCHR
(
buf
->
°_mode
)) {

63 
	`¥ötf
("%40s\n", "Â≠óÁ¨¶ËÆæÂ§áÊñá‰ª∂");

65 i‡(
	`S_ISBLK
(
buf
->
°_mode
)) {

66 
	`¥ötf
("%40s\n", "ÂùóÊñá‰ª∂");

68 i‡(
	`S_ISSOCK
(
buf
->
°_mode
)) {

69 
	`¥ötf
("%40s\n", "SOCKETÊñá‰ª∂");

73 i‡(!
	`S_ISDIR
(
buf
->
°_mode
)) {

74 
	`¥ötf
("Êñá‰ª∂ÁöÑËÆøÈóÆÊùÉÈôê :\n");

75 i‡(
S_ISUID
&
buf
->
°_mode
) {

76 
	`¥ötf
("%40s\n", "ËÆæÁΩÆÁî®Êà∑ID‰ΩçÊúâÊïà");

78 i‡(
S_ISGID
&
buf
->
°_mode
) {

79 
	`¥ötf
("%40s\n", "ËÆæÁΩÆÁî®Êà∑ÁªÑID‰ΩçÊúâÊïà");

82 
	`¥ötf
("ÂΩìÂâçÁöÑÊùÉÈôê‰∏∫maskÂÄº‰∏∫:\n");

83 
ﬁd
 = 
	`umask
(
S_IRUSR
|
S_IWGRP
|
S_IROTH
);

84 
	`¥ötf
("%40s%o\n", " ", 
ﬁd
);

85 
	}
}

91 
	$fûeH™dÀ
(*
«me
)

93 
ªt
 = -1;

94 
°©
 
buf
;

96 
ªt
 = 
	`ac˚ss
(
«me
, 
F_OK
);

97 i‡(
ªt
 < 0) {

98 
	`°©Desc
(
î∫o
);

99 
íd
;

102 
ªt
 = 
	`l°©
(
«me
, &
buf
);

103 i‡(
ªt
 < 0) {

104 
	`°©Desc
(
î∫o
);

105 
íd
;

108 
	`¥ötf
("FileExist:Êñá‰ª∂Êú¨Ë∫´ÂÖ∑ÊúâÁöÑÂ±ûÊÄßÂ¶Ç‰∏ã:\n");

109 
	`fûeInf‹m©i⁄
(&
buf
);

112 i‡(
	`S_ISDIR
(
buf
.
°_mode
)) {

113 
ªt
 = 1;

116 
íd
:

117  
ªt
;

118 
	}
}

124 
	$fûe_dúe˘‹y_sˇn
(c⁄° *
fûï©h
, 
dïth
)

126 
DIR
 *
dp
;

127 
dúít
 *
íåy
;

128 
°©
 
°©buf
;

130 i‡(!
fûï©h
) {

134 i‡((
dp
 = 
	`›ídú
(
fûï©h
)Ë=
NULL
) {

135 
	`¥ötf
("DirectoryScan:ÊâìÂºÄÁõÆÂΩïÂ§±Ë¥•!\n");

136 
íd
;

139 
	`chdú
(
fûï©h
);

141 (
íåy
=
	`ªaddú
(
dp
)Ë!
NULL
) {

142 
	`l°©
(
íåy
->
d_«me
, &
°©buf
);

143 i‡(
	`S_ISDIR
(
°©buf
.
°_mode
)) {

144 i‡(
	`°rcmp
(".", 
íåy
->
d_«me
) == 0 ||

145 
	`°rcmp
("..", 
íåy
->
d_«me
) == 0) {

148 
	`¥ötf
("%*s%s%*cÁõÆÂΩï\n",

149 
dïth
, " ", 
íåy
->
d_«me
,

150 
job
, '\t');

151 i‡(
dïth
 == 1) {

154 
	`fûe_dúe˘‹y_sˇn
(
íåy
->
d_«me
, 
dïth
-1);

156 
	`¥ötf
("%*s%s%*cÂÖ∂‰ªñ\n",

157 
dïth
, " ", 
íåy
->
d_«me
,

158 
job
, '\t');

162 
	`chdú
("..");

163 
	`˛o£dú
(
dp
);

165 
íd
:

167 
	}
}

169 
	$˛ór_°dbuf
()

171 
c
;

172 (
c
=
	`gëch¨
()) != '\n');

173 
	}
}

175 
	$maö
(
¨gc
, **
¨gv
)

177 
«me
[256] = {0};

178 
ªt
 = -1;

179 
c
 = 0;

182 
	`¥ötf
("=======================================\n");

183 
	`¥ötf
("ËæìÂÖ•Ë∑ØÂæÑÂêçÁß∞:");

184 
	`sˇnf
("%s", 
«me
);

185 i‡(
	`°rcmp
(
«me
, "quit") == 0) {

188 
	`˛ór_°dbuf
();

189 
ªt
 = 
	`fûeH™dÀ
(
«me
);

190 i‡(
ªt
 > 0) {

191 
	`¥ötf
("ÊòØÂê¶Ë¶ÅÈÅçÂéÜÁõÆÂΩïÂπ∂ÊâìÂç∞:(y/n):");

192 
	`sˇnf
("%c", (*)&
c
);

193 
	`˛ór_°dbuf
();

194 i‡(
c
 == 'y') {

195 
	`fûe_dúe˘‹y_sˇn
(
«me
, 1);

201 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/filePath.c

1 
	~"fûeC⁄fig.h
"

11 
	$fûe_absﬁuã_∑th
()

13 
absP©h
[256];

14 
exeP©h
[12
job
];

15 
i
, 
r¶t
;

18 i‡(
NULL
 =
	`ªÆ∑th
("./", 
absP©h
)) {

19 
	`¥ötf
("GetábsoluteÖath failure when callÑealpath!\n");

20 
íd
;

22 
	`°rˇt
(
absP©h
, "/");

23 
	`¥ötf
("Realpath:\n"

24 "\tÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÁªùÂØπË∑ØÂæÑ--%s\n", 
absP©h
);

26 i‡(
NULL
 =
	`gëcwd
(
absP©h
, 256)) {

27 
	`¥ötf
("GetábsoluteÖath failure when call getcwd!\n");

28 
íd
;

30 
	`°rˇt
(
absP©h
, "/");

31 
	`¥ötf
("Getcwd:\n"

32 "\tÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÁªùÂØπË∑ØÂæÑ--%s\n", 
absP©h
);

34 
r¶t
 = 
	`ªadlök
("/¥oc/£lf/exe", 
absP©h
, 256);

35 i‡(
r¶t
 < 0 ||Ñslt >= 256) {

36 
	`¥ötf
("GetábsoluteÖath failure when callÑeadlink!\n");

37 
íd
;

39 
absP©h
[
r¶t
] = '\0';

40 
exeP©h
[0] = '\0';

41 
i
=
r¶t
; i>=0; i--) {

42 i‡(
absP©h
[
i
] == '/') {

43 
	`°∫˝y
(
exeP©h
, &
absP©h
[
i
+1], 
r¶t
-i);

44 
exeP©h
[
r¶t
-
i
+1] = '\0';

45 
absP©h
[
i
+1] = '\0';

49 
	`¥ötf
("Reallink:\n"

52 
absP©h
, 
exeP©h
);

54 
íd
:

56 
	}
}

63 
	$fûe_∑th_pha£
(*
fûï©h
)

65 *
ãmp
 = 
NULL
;

67 i‡(!
fûï©h
) {

71 
ãmp
 = 
	`°rdup
(
fûï©h
);

72 
	`¥ötf
("PathPhase:\n"

76 
fûï©h
, 
	`dú«me
(
ãmp
), 
	`ba£«me
(temp));

79 
	}
}

82 
	$maö
(
¨gc
, **
¨gv
)

84 
	`¥ötf
("===========================absolute-path=============\n");

85 
	`fûe_absﬁuã_∑th
();

86 
	`¥ötf
("\n");

88 
	`¥ötf
("===========================path-phase=============\n");

89 
	`fûe_∑th_pha£
("/home/grocery-shop/language/"

92 
	`¥ötf
("\n");

94 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileRW.c

1 
	~"fûeC⁄fig.h
"

7 
	$fûe_rw
()

9 
FILE
 *
Â
 = 
NULL
;

10 
buf
[1024];

12 c⁄° *
desc
 = "I'má superman";

13 
pos
 = 0;

15 
Â
 = 
	`f›í
(
FILENAME_RW
, "a+");

16 i‡(!
Â
) {

17 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂Â§±Ë¥•\n");

21 i‡(
	`fûe_˛ór
(
FILENAME_RW
) < 0) {

22 
íd
;

25 
buf
[0] = '\0';

26 
	`¥ötf
("RW:ÂÜôÂÖ•Â≠óÁ¨¶‰∏≤:%s\n", 
desc
);

27 i‡(
	`Âuts
(
desc
, 
Â
) < 0) {

28 
	`¥ötf
("Êñá‰ª∂ÂÜôÂÖ•Â§±Ë¥•!\n");

29 
íd
;

31 i‡(
	`Âuts
(
desc
, 
Â
) < 0) {

32 
	`¥ötf
("Êñá‰ª∂ÂÜôÂÖ•Â§±Ë¥•!\n");

33 
íd
;

35 i‡(
	`fgës
(
buf
, 1024, 
Â
) < 0) {

36 
	`¥ötf
("ËØªÂèñÊñá‰ª∂‰ø°ÊÅØÂ§±Ë¥•ÔºÅ\n");

37 
íd
;

39 i‡(
	`°æí
(
buf
) == 0) {

40 
	`¥ötf
("RWÔºöÊñá‰ª∂Â∑≤ÁªèÂà∞Êú´Â∞æÔºåÂΩìÂâçÊñá‰ª∂ÂÅèÁßªÈáè-%ld\n", (
pos
=
	`·ñl
(
Â
)));

41 
	`¥ötf
(" Â∞ùËØïË∑≥ËΩ¨ÂÅèÁßªÈáèÂà∞Êñá‰ª∂Â§¥ÈÉ®Âπ∂Âà∑Êñ∞ÁºìÂ≠òÔºåÊ≠§Êó∂ËØªÂèñÂ≠óÁ¨¶‰∏≤:\n");

42 
	`f£ek
(
Â
, 0L, 
SEEK_SET
);

43 
	`fÊush
(
Â
);

44 i‡(
	`fgës
(
buf
, 1024, 
Â
) < 0) {

45 
	`¥ötf
(" ËØªÂèñÊñá‰ª∂‰ø°ÊÅØÂ§±Ë¥•ÔºÅ\n");

47 
	`¥ötf
(" ËØªÂèñÊñá‰ª∂Ôºö%s\n", 
buf
);

49 
	`¥ötf
("RW:ËØªÂèñÊñá‰ª∂Ôºö%s\n", 
buf
);

51 
	`¥ötf
("\n");

53 
íd
:

54 i‡(
Â
) {

55 
	`f˛o£
(
Â
);

58 
	}
}

63 
	$fûe_bö¨y_rw
()

65 
FILE
 *
Â
 = 
NULL
;

66 
pos
 = 0;

67 
i
, 
ªt
, 
j
;

68 
fûeObje˘Unô
 
obje˘Aºay
[12
job
], *
tmpUnô
, 
unô
;

70 
Â
 = 
	`f›í
(
FILENAME_BINARY_RW
, "a+");

71 i‡(!
Â
) {

72 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂Â§±Ë¥•\n");

76 i‡(
	`fûe_˛ór
(
FILENAME_BINARY_RW
) < 0) {

77 
íd
;

80 
	`¥ötf
("ÁõÆÊ†áÊñá‰ª∂Ôºö%s\n", 
FILENAME_BINARY_RW
);

81 
	`¥ötf
("BinaryRwÔºöÊûÑÂª∫ÁªìÊûÑ‰ΩìÂçïÂÖÉÊï∞ÊçÆ, ÂÜôÂÖ•12jobÂçïÂÖÉÊï∞ÊçÆ\n");

82 
i
=0; i<12
job
; i++) {

83 
tmpUnô
 = &
obje˘Aºay
[
i
];

84 
tmpUnô
->
id
 = 
i
;

85 
	`•rötf
(
tmpUnô
->
desc
, "ÂçïÂÖÉ-%d", 
i
);

87 
ªt
 = 
	`fwrôe
((*)&
obje˘Aºay
[0], (
fûeObje˘Unô
), 12
job
, 
Â
);

88 i‡(
ªt
 !12
job
) {

89 
	`¥ötf
("W¨¬ög:ËØªÂÖ•ÁöÑÂçïÂÖÉÊï∞‰∏∫:%d\n", 
ªt
);

92 
	`¥ötf
("BinaryRwÔºöÂà∑Êñ∞ÁºìÂ≠òÂπ∂ÂºÄÂßãËØªÂèñ(6-10)ÂçïÂÖÉÊï∞ÊçÆ\n");

93 
	`fÊush
(
Â
);

94 
	`f£ek
(
Â
, 0L, 
SEEK_SET
);

95 
	`mem£t
(&
obje˘Aºay
[0], 0, (objectArray));

96 
pos
 = (
fûeObje˘Unô
) * 5;

97 
	`f£ek
(
Â
, 
pos
, 
SEEK_SET
);

98 
ªt
 = 
	`‰ód
((*)&
obje˘Aºay
[5], (
fûeObje˘Unô
), 5, 
Â
);

99 i‡(
ªt
 != 5) {

100 
	`¥ötf
("W¨¬ög:ËØªÂèñÁöÑÂçïÂÖÉÊï∞‰∏∫:%d\n", 
ªt
);

102 
j
=5; j<10; j++) {

103 
	`¥ötf
("ID=%d ÊèèËø∞:%s\n", 
obje˘Aºay
[
j
].
id
, obje˘Aºay[j].
desc
);

105 
	`¥ötf
("BinaryRwÔºöËØªÂèñ126Âè∑ÂçïÂÖÉÊï∞ÊçÆ:\n");

106 
	`mem£t
(&
unô
, 0, (
fûeObje˘Unô
));

107 
	`f£ek
(
Â
, ()(
fûeObje˘Unô
)*125, 
SEEK_SET
);

108 i‡((
ªt
 = 
	`‰ód
(&
unô
, (
fûeObje˘Unô
), 1, 
Â
)) < 0) {

109 
	`¥ötf
("Warnning:ËØªÂèñ‰ø°ÊÅØÂ§±Ë¥•\n");

111 
	`¥ötf
("ID=%d ÊèèËø∞:%s\n", 
unô
.
id
, unô.
desc
);

112 
	`¥ötf
("\n");

114 
íd
:

115 i‡(
Â
) {

116 
	`f˛o£
(
Â
);

119 
	}
}

121 
	#FILE_BUFSIZE
 50

	)

122 
	goutbuf
[
FILE_BUFSIZE
];

128 
	$fûe_£tbuf
()

130 
	`£tbuf
(
°dout
, 
outbuf
);

131 
	`mem£t
(
outbuf
, 0, 
FILE_BUFSIZE
);

133 i‡(
	`puts
("This output will go into outbuf, so what?") < 0) {

134 
	`¥ötf
("-----------1\n");

137 
	`mem£t
(
outbuf
, 0, 
FILE_BUFSIZE
);

140 i‡(
	`puts
("This isáÅest of buffered output._") < 0) {

141 
	`¥ötf
("-----------1\n");

144 
	`mem£t
(
outbuf
, 0, 
FILE_BUFSIZE
);

148 i‡(
	`puts
("and won'táppear untilÅhe buffer") < 0) {

149 
	`¥ötf
("-----------1\n");

152 
	`mem£t
(
outbuf
, 0, 
FILE_BUFSIZE
);

156 i‡(
	`puts
("fills up or we flushÅhe stream.") < 0) {

157 
	`¥ötf
("-----------1\n");

160 
	`mem£t
(
outbuf
, 0, 
FILE_BUFSIZE
);

163 
	}
}

169 
	#BUF_SIZE
 4

	)

171 
	$fûe_buf_vîify
()

173 
buf
[
BUF_SIZE
];

175 
	`£tbuf
(
°dout
, 
NULL
);

176 
	`fgës
(
buf
, 
BUF_SIZE
, 
°dö
Ë!
NULL
) {

177 i‡(
	`Âuts
(
buf
, 
°dout
Ë=
EOF
) {

178 
	`¥ötf
("outputÉrror!\n");

180 
	`¥ötf
("\t\t-=\n");

184 
	}
}

186 
	$maö
(
¨gc
, **
¨gv
)

188 
	`¥ötf
("===================RW===================\n");

189 
	`fûe_rw
();

191 
	`¥ötf
("===================BinaryRW===================\n");

192 
	`fûe_bö¨y_rw
();

194 
	`¥ötf
("===================Setbuf=====================\n");

195 
	`fûe_£tbuf
();

197 
	`¥ötf
("===================buf verify=====================\n");

198 
	`fûe_buf_vîify
();

200 
	`¥ötf
("\n");

202 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileRwUncache.c

4 
	~"fûeC⁄fig.h
"

10 
	$fûe_unˇche_›í_mu…i
(c⁄° *
fûíame
)

12 
fd1
,
fd2
;

13 
buf
[12
job
];

14 
ªt
, 
i
;

16 
fd1
 = 
	`›í
(
fûíame
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
);

17 i‡(
fd1
 < 0) {

18 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂Â§±Ë¥•ÔºÅ\n");

21 i‡((
ªt
=
	`ªad
(
fd1
, 
buf
, 12
job
)) < 0) {

22 
	`¥ötf
("ËØªÂèñÂ§±Ë¥•!\n");

24 
buf
[
ªt
] = '\0';

25 
	`¥ötf
("ËØªÂèñÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫:%s\n", 
buf
);

27 
fd2
 = 
	`›í
(
fûíame
, 
O_WRONLY
);

28 i‡(
fd2
 < 0) {

29 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂Â§±Ë¥•ÔºÅ\n");

32 
i
=0; i<120; i++) {

33 
buf
[
i
] = 'a';

35 
buf
[
i
] = '\0';

36 i‡((
ªt
 = 
	`wrôe
(
fd2
, 
buf
, 100)) < 0) {

37 
	`¥ötf
("ÂÜôÂÖ•Êñá‰ª∂Â§±Ë¥•ÔºÅ\n");

41 
	`¥ötf
("ÈÄöËøáfdÂÜçÊ¨°ËØªÂèñÂ≠óÁ¨¶ÔºåÂ¶ÇÊûúËØªÂèñÂà∞Â≠óÁ¨¶ÔºåË°®Á§∫Âêå‰∏Ä‰∏™ËøõÁ®ãÂè™Êúâ"

43 i‡((
ªt
 = 
	`ªad
(
fd1
, 
buf
, 20)) < 0) {

44 
	`¥ötf
("ËØªÂèñÂ§±Ë¥•!\n");

47 
buf
[
ªt
] = '\0';

48 
	`¥ötf
("Áé∞Âú®ËØªÂèñÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫:%s\n", 
buf
);

50 
	`˛o£
(
fd1
);

52 
	}
}

61 
	$fûe_unˇche_ªad
(c⁄° *
fûíame
)

63 
fd
;

64 
buf
[32];

65 
i
;

68 
i
=0; i<32; i++) {

69 
buf
[
i
] = ()('a' + i);

72 i‡(
	`ac˚ss
(
fûíame
, 
F_OK
) == -1) {

73 
	`¥ötf
("Êñá‰ª∂‰∏çÂ≠òÂú®!\n");

77 
	`¥ötf
("‰ªéÊñá‰ª∂%s‰∏≠ËØªÂèñjob‰∏™Â≠óËäÇÂà∞ÁºìÂ≠ò‰∏≠ÔºåÊòØÂê¶Ëá™Âä®Âä†‰∏≤Â∞æÔºü\n", 
fûíame
);

78 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

79 i‡(
fd
 < 0) {

80 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂Â§±Ë¥•ÔºÅ\n");

84 i‡(
	`ªad
(
fd
, 
buf
, 
job
) != job) {

85 
	`¥ötf
("ËØªÂèñjob‰∏™Â≠óËäÇÂ§±Ë¥•ÔºÅ\n");

89 
	`¥ötf
("Âà§Êñ≠ËØªÂèñÊï∞ÊçÆÂêéÁöÑÁºìÂ≠òÁöÑÊúÄÂêé‰∏Ä‰∏™Â≠óËäÇÂÜÖÂÆπÔºåÊ≠£Á°ÆÂ∞±ËæìÂá∫:\n");

90 i‡(
buf
[
job
] == '\0') {

91 
	`¥ötf
("‰∏çÊ≠£Á°Æ----‰∏çÂ∫îËØ•Êúâ‰∏≤ÁªìÊùüÁ¨¶ÁöÑÔºÅÔºÅ\n"

92 "ËØªÂèñÁöÑÂÄº‰∏∫:%s, ÈïøÂ∫¶‰∏∫:%d\n", 
buf
, 
	`°æí
(buf));

94 
buf
[
job
] = '\0';

95 
	`¥ötf
("Ê≠£Á°ÆÁöÑÁªìÊûú----Áé∞Âú®ÂºÄÂßãÊ∑ªÂä†‰∏≤ÁªìÊùüÁ¨¶ÔºåÁªìÊûú‰∏∫:%s", 
buf
);

99 
	}
}

106 
	$fûe_unˇche_wrôe
(c⁄° *
fûíame
)

108 
fd
;

109 
buf
[10] = "1234567job9\n";

111 i‡(
	`ac˚ss
(
fûíame
, 
F_OK
) == -1) {

112 
fd
 = 
	`›í
(
fûíame
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
, 0666);

114 
fd
 = 
	`›í
(
fûíame
, 
O_WRONLY
);

116 i‡(
fd
 < 0) {

117 
	`¥ötf
("Êñá‰ª∂ÂàõÂª∫ÊàñËÄÖÊâìÂºÄÂ§±Ë¥•ÔºÅ\n");

122 i‡(
	`·runˇã
(
fd
, 0) == -1) {

123 
	`¥ötf
("Ê∏ÖÁ©∫Êñá‰ª∂Â§±Ë¥•!\n");

125 
	`l£ek
(
fd
, 0, 
SEEK_SET
);

128 i‡(
	`wrôe
(
fd
, 
buf
, 10) != 10) {

129 
	`¥ötf
("ÂÜôÂÖ•Êñá‰ª∂Â§±Ë¥•!\n");

131 
	`¥ötf
("ÂÜôÂÖ•Êñá‰ª∂ÊàêÂäüÔºÅ\n");

133 
	`˛o£
(
fd
);

135 
	}
}

145 
	$fûe_unˇche_dup
(c⁄° *
fûíame
)

150 
	}
}

156 
	$fûe_unˇche_sync
()

158 
c
;

161 
	`¥ötf
("ËØªÂèñÂ≠óÁ¨¶ÔºåËØ∑ËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤:");

162 
	`sˇnf
("%c", &
c
);

163 i‡(
c
 == 'q') {

166 
	`¥ötf
("ËØªÂèñÁöÑÂ≠óÁ¨¶‰∏∫:%c\n", 
c
);

167 
	`¥ötf
("‰ΩøÁî®fsyncÂÆûÁé∞ËÉΩÂê¶Ê∏ÖÈô§ËæìÂÖ•ÁºìÂÜ≤Âå∫!\n");

168 
	`fÊush
(
°dö
);

169 
	`fsync
(0);

173 
	}
}

179 
	$fûe_unˇche_f˙é_fd
(c⁄° *
fú°«me
, c⁄° *
£c⁄d«me
)

181 
fd1
, 
fd2
;

182 
Êags
;

183 
fd°r
[10];

184 c⁄° * 
buf
 = "--Áà∂ËøõÁ®ãÂÜôÂÖ•ÁöÑ‰ø°ÊÅØ--\n";

185 
pid_t
 
pid
;

187 
fd1
 = 
	`›í
(
fú°«me
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
);

188 i‡(
fd1
 < 0) {

189 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂%sÂ§±Ë¥•„ÄÇ\n", 
fú°«me
);

192 
fd2
 = 
	`›í
(
£c⁄d«me
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
);

193 i‡(
fd2
 < 0) {

194 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂%sÂ§±Ë¥•„ÄÇ\n", 
£c⁄d«me
);

197 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂:\n"

199 "\t%s\n", 
fú°«me
, 
£c⁄d«me
);

200 
	`¥ötf
("\tËÆæÁΩÆ%sÊèèËø∞Á¨¶˛o£_⁄_execÊ†áÂøó‰Ωç‰∏∫1„ÄÇ\n", 
fú°«me
);

202 
Êags
 = 
	`f˙é
(
fd1
, 
F_GETFD
);

203 
Êags
 |
FD_CLOEXEC
;

204 
	`f˙é
(
fd1
, 
F_SETFD
, 
Êags
);

206 i‡((
pid
 = 
	`f‹k
()) == 0) {

207 
	`•rötf
(
fd°r
, "%d", 
fd1
);

208 
	`exe˛
("./ã°f˙é", "ã°f˙é", 
fd°r
, 
NULL
);

209 
	`˛o£
(
fd1
);

210 
	`exô
(0);

212 
	`waô
(
NULL
);

213 
	`¥ötf
("Áà∂ËøõÁ®ãÔºöpid=%d-ÂÜôÂÖ•Êñá‰ª∂%s\n", 
pid
, 
buf
);

214 
	`wrôe
(
fd1
, 
buf
, 
	`°æí
(buf));

217 i‡((
pid
 = 
	`f‹k
()) == 0) {

218 
	`•rötf
(
fd°r
, "%d", 
fd2
);

219 
	`exe˛
("./ã°f˙é", "ã°f˙é", 
fd°r
, 
NULL
);

220 
	`˛o£
(
fd2
);

221 
	`exô
(0);

223 
	`waô
(
NULL
);

224 
	`¥ötf
("Áà∂ËøõÁ®ãÔºöpid=%d-ÂÜôÂÖ•Êñá‰ª∂%s\n", 
pid
, 
buf
);

225 
	`wrôe
(
fd2
, 
buf
, 
	`°æí
(buf));

228 
	`˛o£
(
fd1
);

229 
	`˛o£
(
fd2
);

231 
	}
}

238 
	$fûe_unˇche_f˙é_Ê_di•œy
(
fd
)

240 
vÆ
;

242 i‡((
vÆ
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0) {

243 
	`¥ötf
("Ëé∑ÂèñÊñá‰ª∂Áä∂ÊÄÅÊ†áÂøóÂ§±Ë¥•ÔºÅ\n");

248 
vÆ
 & 
O_ACCMODE
) {

249 
O_RDONLY
:

250 
	`¥ötf
("\t+++[Êñá‰ª∂Âè™ËØª]\n");

252 
O_WRONLY
:

253 
	`¥ötf
("\t+++[Êñá‰ª∂Âè™ÂÜô]\n");

255 
O_RDWR
:

256 
	`¥ötf
("\t+++[Êñá‰ª∂ÂèØËØªÂèØÂÜô]\n");

259 
	`¥ötf
("ÈîôËØØÁöÑÊñá‰ª∂ËÆøÈóÆÊ†áÂøó‰ΩçÔºåËøîÂõûÔºÅ\n");

263 i‡(
vÆ
 & 
O_APPEND
) {

264 
	`¥ötf
("\t+++[Êñá‰ª∂ÂèØËøΩÂä†]\n");

266 i‡(
vÆ
 & 
O_NONBLOCK
) {

267 
	`¥ötf
("\t+++[Êñá‰ª∂ÈùûÈòªÂ°û]\n");

269 #i‡
	`deföed
(
O_SYNC
)

270 i‡(
vÆ
 & 
O_SYNC
) {

271 
	`¥ötf
("\t+++[Êñá‰ª∂ÂêåÊ≠•ÂÜô]\n");

275 
	`¥ötf
("\n");

277 
	}
}

285 
	$fûe_unˇche_f˙é_Ê
(c⁄° *
fûíame
)

287 
fd
;

288 
ªt
;

290 
	`¥ötf
("Ê†áÂáÜËæìÂÖ•ÁöÑÊñá‰ª∂Ê†áÂøóÔºö\n");

291 
ªt
 = 
	`fûe_unˇche_f˙é_Ê_di•œy
(0);

292 i‡(
ªt
 < 0) {

293  
ªt
;

295 
	`¥ötf
("Ê†áÂáÜËæìÂá∫ÁöÑÊñá‰ª∂Ê†áÂøóÔºö\n");

296 
ªt
 = 
	`fûe_unˇche_f˙é_Ê_di•œy
(1);

297 i‡(
ªt
 < 0) {

298  
ªt
;

300 
	`¥ötf
("Ê†áÂáÜÈîôËØØÁöÑÊñá‰ª∂Ê†áÂøóÔºö\n");

301 
ªt
 = 
	`fûe_unˇche_f˙é_Ê_di•œy
(2);

302 i‡(
ªt
 < 0) {

303  
ªt
;

306 
fd
 = 
	`›í
(
fûíame
, 
O_RDWR
|
O_APPEND
|
O_SYNC
);

307 i‡(
fd
 < 0) {

308 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂%sÂ§±Ë¥•!\n", 
fûíame
);

312 
	`¥ötf
("1--Ëé∑ÂèñÂπ∂ÊâìÂç∞ÂΩìÂâçÊâìÂºÄÊñá‰ª∂ÁöÑÊñá‰ª∂Ê†áÂøó:\n");

313 
ªt
 = 
	`fûe_unˇche_f˙é_Ê_di•œy
(
fd
);

314 i‡(
ªt
 < 0) {

315 
íd
;

318 
	`¥ötf
("2--Ê∏ÖÈô§Êñá‰ª∂‰∏≠ÁöÑ„ÄäËøΩÂä†„ÄãÊ†áÂøó‰ΩçÂπ∂ÊâìÂç∞Êñá‰ª∂Ê†áÂøó:\n");

319 i‡((
ªt
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0) {

320 
	`¥ötf
("Ëé∑ÂèñÊñá‰ª∂Ê†áÂøóÂ§±Ë¥•ÔºÅ\n");

321 
íd
;

323 
ªt
 &~
O_APPEND
;

324 i‡((
ªt
 = 
	`f˙é
(
fd
, 
F_SETFL
,Ñet)) < 0) {

325 
	`¥ötf
("ËÆæÁΩÆÊñá‰ª∂Ê†áÂøóÂ§±Ë¥•ÔºÅ\n");

326 
íd
;

328 
ªt
 = 
	`fûe_unˇche_f˙é_Ê_di•œy
(
fd
);

329 i‡(
ªt
 < 0) {

330 
íd
;

333 
íd
:

334 
	`˛o£
(
fd
);

335  
ªt
;

336 
	}
}

345 
	$fûe_unˇche_f˙é
(c⁄° *
fûíame
)

347 
ªt
;

350 
	`¥ötf
("\t\t+++++++++++fcntl-fd+++++++++++++\n");

351 
ªt
 = 
	`fûe_unˇche_f˙é_fd
(
FILENAME_FCNTL
, 
FILENAME_FCNTL2
);

352 i‡(
ªt
 < 0) {

353  
ªt
;

355 
	`fûe_di•œy
(
FILENAME_FCNTL
);

356 
	`fûe_di•œy
(
FILENAME_FCNTL2
);

359 
	`¥ötf
("\t\t+++++++++++fcntl-fl+++++++++++++\n");

360 
ªt
 = 
	`fûe_unˇche_f˙é_Ê
(
FILENAME_FCNTL
);

361 i‡(
ªt
 < 0) {

362  
ªt
;

366 
	}
}

375 
	$fûe_unˇche_lök
(c⁄° *
fûíame
)

377 
ªt
;

378 
°©
 
buf
;

379 
°©
 
ﬁdbuf
;

381 
	`¥ötf
("\t\t\tÁ°¨ÈìæÊé•ÊµãËØï***\n");

382 (
ªt
 = 
	`lök
(
fûíame
, 
FILENAME_UNCACHE_LINK
) < 0)) {

383 i‡(
	`ac˚ss
(
FILENAME_UNCACHE_LINK
, 
F_OK
) == -1) {

384 
	`¥ötf
("ÂàõÂª∫Êñá‰ª∂ÈìæÊé•Â§±Ë¥•ÔºÅ\n");

385  
ªt
;

388 i‡(
	`ªmove
(
FILENAME_UNCACHE_LINK
) == -1) {

389 
	`¥ötf
("Âà†Èô§Êñá‰ª∂%sÂ§±Ë¥•ÔºÅ\n", 
FILENAME_UNCACHE_LINK
);

392 
	`¥ötf
("Êñá‰ª∂Â∑≤ÁªèÂ≠òÂú®ÔºåÂà†Èô§ÊóßÊúâÁöÑÊñá‰ª∂ÔºÅ\n");

395 i‡((
ªt
 = 
	`l°©
(
FILENAME_UNCACHE_LINK
, &
buf
)) < 0) {

396 
	`¥ötf
("Ëé∑ÂèñÊñá‰ª∂%sÁä∂ÊÄÅ‰ø°ÊÅØÂ§±Ë¥•!\n", 
FILENAME_UNCACHE_LINK
);

397  
ªt
;

399 i‡((
ªt
 = 
	`l°©
(
FILENAME_UNCACHE_LINK
, &
ﬁdbuf
)) < 0) {

400 
	`¥ötf
("Ëé∑ÂèñÊñá‰ª∂%sÁä∂ÊÄÅ‰ø°ÊÅØÂ§±Ë¥•!\n", 
FILENAME_UNCACHE
);

401  
ªt
;

404 
	`¥ötf
("ÊóßÊúâÁöÑÊñá‰ª∂‰ø°ÊÅØÂ¶Ç‰∏ã:\n"

410 
ﬁdbuf
.
°_öo
, oldbuf.
°_uid
,

411 
ﬁdbuf
.
°_gid
, oldbuf.
°_∆ök
, oldbuf.
°_size
);

412 
	`¥ötf
("Êñ∞ÁöÑÈìæÊé•Êñá‰ª∂‰ø°ÊÅØÂ¶Ç‰∏ã:\n"

418 
buf
.
°_öo
, buf.
°_uid
,

419 
buf
.
°_gid
, buf.
°_∆ök
, buf.
°_size
);

421 
	`¥ötf
("Âà†Èô§Á°¨ÈìæÊé•-unlinkÔºö\n");

422 i‡(
	`u∆ök
(
FILENAME_UNCACHE_LINK
) == -1) {

423 
	`¥ötf
("Ëß£Èô§Á°¨ÈìæÊé•Â§±Ë¥•!\n");

426 
	`¥ötf
("ÊóßÊúâÔºàÂà†Èô§Á°¨ÈìæÊé•‰πãÂêéÔºâÁöÑÊñá‰ª∂‰ø°ÊÅØÂ¶Ç‰∏ã:\n"

432 
ﬁdbuf
.
°_öo
, oldbuf.
°_uid
,

433 
ﬁdbuf
.
°_gid
, oldbuf.
°_∆ök
, oldbuf.
°_size
);

435 
	`¥ötf
("\n\t\t\tËΩØÈìæÊé•ÊµãËØï***\n");

436 i‡((
ªt
 = 
	`symlök
(
fûíame
, 
FILENAME_UNCACHE_LINK
)) == -1) {

437 
	`¥ötf
("ÂàõÂª∫ËΩØËøûÊé•%sÂ§±Ë¥•!\n", 
FILENAME_UNCACHE_LINK
);

438  
ªt
;

440 
	`mem£t
(&
buf
, 0, (
°©
));

441 i‡(
	`l°©
(
FILENAME_UNCACHE
, &
buf
) < 0) {

442 
	`¥ötf
("Ëé∑ÂèñËΩØËøûÊé•Êñá‰ª∂%sÁä∂ÊÄÅ‰ø°ÊÅØÂ§±Ë¥•!\n", 
FILENAME_UNCACHE
);

445 
	`¥ötf
("Êñ∞ÁöÑËΩØÈìæÊé•Êñá‰ª∂‰ø°ÊÅØÂ¶Ç‰∏ã:\n"

451 
buf
.
°_öo
, buf.
°_uid
,

452 
buf
.
°_gid
, buf.
°_∆ök
, buf.
°_size
);

453 
	`¥ötf
("ÊóßÊúâÁöÑÊñá‰ª∂‰ø°ÊÅØÂ¶Ç‰∏ã:\n"

459 
ﬁdbuf
.
°_öo
, oldbuf.
°_uid
,

460 
ﬁdbuf
.
°_gid
, oldbuf.
°_∆ök
, oldbuf.
°_size
);

461 i‡(
	`u∆ök
(
FILENAME_UNCACHE_LINK
) == -1) {

462 
	`¥ötf
("Âà†Èô§ÈìæÊé•%sÂ§±Ë¥•ÔºÅ\n", 
FILENAME_UNCACHE_LINK
);

467 
	}
}

470 
	$maö
(
¨gc
, **
¨gv
)

472 
ªt
 = -1;

474 
	`¥ötf
("======================Judge=======================\n");

475 
ªt
 = 
	`fûe_unˇche_›í_mu…i
(
FILENAME_UNCACHE_PROC
);

476 
	`¥ötf
("======================WRITE=======================\n");

477 
ªt
 = 
	`fûe_unˇche_wrôe
(
FILENAME_UNCACHE
);

478 
	`¥ötf
("\n======================READ=======================\n");

479 
ªt
 = 
	`fûe_unˇche_ªad
(
FILENAME_UNCACHE
);

480 
	`¥ötf
("\n======================sync=======================\n");

481 
ªt
 = 
	`fûe_unˇche_sync
();

482 
	`¥ötf
("\n======================fcntl=======================\n");

483 
ªt
 = 
	`fûe_unˇche_f˙é
(
FILENAME_UNCACHE
);

484 
	`¥ötf
("\n======================link/unlink=================\n");

485 
ªt
 = 
	`fûe_unˇche_lök
(
FILENAME_UNCACHE
);

487 
	`¥ötf
("\n");

488  
ªt
;

489 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileSort.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<glob.h
>

5 
	~<sys/°©.h
>

6 
	~<sys/ty≥s.h
>

8 
	$maö
(
¨gc
, **
¨gv
)

23 
	`mkdú
("/tmp/ageg/", 0777);

25 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/fileTmp.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

13 
	$tm≤am_ã°
()

15 
«me
[
L_tm≤am
];

16 
FILE
 *
Â
 = 
NULL
;

17 *
ãmp
 = 
NULL
;

18 
ãmpName
[
L_tm≤am
];

20 
	`¥ötf
("Tmpname:‰ΩøÁî®tmpnamÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂Êñá‰ª∂:%s\n",

21 (
ãmp
=
	`tm≤am
(
NULL
)));

22 
	`¥ötf
("Tmpname:Êã∑Ë¥ùÊñá‰ª∂Âπ∂ÈáçÊñ∞Ë∞ÉÁî®tmpnamÂáΩÊï∞:\n");

23 
	`°r˝y
(
ãmpName
, 
ãmp
);

24 
	`¥ötf
(" Êñ∞Êñá‰ª∂Âêç:%s\n"

27 
	`tm≤am
(
NULL
), 
ãmp
, 
ãmpName
);

29 ()
Â
;

30 ()
«me
;

49 
	}
}

51 
	$tmpfûe_ã°
()

53 
FILE
 *
Â
;

54 
löe
[12
job
];

56 
Â
 = 
	`tmpfûe
();

57 i‡(!
Â
) {

58 
	`¥ötf
("Tmpfile create failure!\n");

62 
	`Âuts
("Whahahahhhaháhah (~!_!~)\n", 
Â
);

63 
	`ªwöd
(
Â
);

64 i‡(
	`fgës
(
löe
, 12
job
, 
Â
Ë=
NULL
) {

65 
	`¥ötf
("Read information failure!\n");

69 
	`¥ötf
("Löe: %s\n", 
löe
);

72 
	}
}

75 
	$maö
(
¨gc
, **
¨gv
)

77 
	`¥ötf
("=====================tmpfile=================\n");

78 
	`tmpfûe_ã°
();

79 
	`¥ötf
("\n=====================tmpfile=================\n");

80 
	`tm≤am_ã°
();

82 
	`¥ötf
("\n");

84 
	}
}

	@/root/grocery-shop/language/gcc/src/fileOperator/testfcntl.c

1 
	~"fûeC⁄fig.h
"

3 
	$maö
(
¨gc
, **
¨gv
)

5 
fd
;

6 c⁄° *
buf
 = "--testfcntlÂÜôÂÖ•ÁöÑÊï∞ÊçÆ--\n";

8 
fd
 = 
	`©oi
(
¨gv
[1]);

9 
	`¥ötf
("\t\t\t*******************\n");

10 
	`¥ötf
("Â≠êËøõÁ®ãÔºöpid=%d, fd=%d, Ë∞ÉÁî®ã°f˙éÊâßË°åÊñá‰ª∂:\n", 
	`gëpid
(), 
fd
);

11 
	`wrôe
(
fd
, (*)
buf
, 
	`°æí
(buf));

12 
	`˛o£
(
fd
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/hash/md5.c

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<›ís¶/md5.h
>

4 
	~<°rög.h
>

6 
	$maö
–
¨gc
, **
¨gv
 )

8 
MD5_CTX
 
˘x
;

9 c⁄° *
d©a
="123";

10 
md
[
MD5_DIGEST_LENGTH
];

11 
buf
[17];

12 
ho°«me
[32];

13 
i
;

15 if–
	`gëho°«me
(
ho°«me
,(hostname)) ) {

16 
	`≥º‹
("gethostname");

19 
	`¥ötf
("Ho°«me:%s\n", 
ho°«me
);

21 
	`MD5_Inô
(&
˘x
);

22 
	`MD5_Upd©e
(&
˘x
, 
ho°«me
, 
	`°æí
(hostname));

23 
	`MD5_FöÆ
(
md
,&
˘x
);

25  
i
=0; i<
job
; i++ ){

26 
	`•rötf
(&
buf
[
i
*2],"%02X", ()
md
[i]);

28 
	`¥ötf
("%s\n",
buf
);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/httpParse/contrib/parsertrace.c

27 
	~"hâp_∑r£r.h
"

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

32 
	$⁄_mesßge_begö
(
hâp_∑r£r
* 
_
) {

33 ()
_
;

34 
	`¥ötf
("\n***MESSAGE BEGIN***\n\n");

36 
	}
}

38 
	$⁄_hódîs_com∂ëe
(
hâp_∑r£r
* 
_
) {

39 ()
_
;

40 
	`¥ötf
("\n***HEADERS COMPLETE***\n\n");

42 
	}
}

44 
	$⁄_mesßge_com∂ëe
(
hâp_∑r£r
* 
_
) {

45 ()
_
;

46 
	`¥ötf
("\n***MESSAGE COMPLETE***\n\n");

48 
	}
}

50 
	$⁄_uæ
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

51 ()
_
;

52 
	`¥ötf
("Uæ: %.*s\n", ()
Àngth
, 
©
);

54 
	}
}

56 
	$⁄_hódî_fõld
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

57 ()
_
;

58 
	`¥ötf
("Hódî fõld: %.*s\n", ()
Àngth
, 
©
);

60 
	}
}

62 
	$⁄_hódî_vÆue
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

63 ()
_
;

64 
	`¥ötf
("Hódî vÆue: %.*s\n", ()
Àngth
, 
©
);

66 
	}
}

68 
	$⁄_body
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

69 ()
_
;

70 
	`¥ötf
("Body: %.*s\n", ()
Àngth
, 
©
);

72 
	}
}

74 
	$ußge
(c⁄° * 
«me
) {

75 
	`Ârötf
(
°dîr
,

79 
«me
);

80 
	`exô
(
EXIT_FAILURE
);

81 
	}
}

83 
	$maö
(
¨gc
, * 
¨gv
[]) {

84 
hâp_∑r£r_ty≥
 
fûe_ty≥
;

86 i‡(
¨gc
 != 3) {

87 
	`ußge
(
¨gv
[0]);

90 * 
ty≥
 = 
¨gv
[1];

91 i‡(
ty≥
[0] != '-') {

92 
	`ußge
(
¨gv
[0]);

95 
ty≥
[1]) {

98 
fûe_ty≥
 = 
HTTP_RESPONSE
;

101 
fûe_ty≥
 = 
HTTP_REQUEST
;

104 
fûe_ty≥
 = 
HTTP_BOTH
;

107 
	`ußge
(
¨gv
[0]);

110 * 
fûíame
 = 
¨gv
[2];

111 
FILE
* 
fûe
 = 
	`f›í
(
fûíame
, "r");

112 i‡(
fûe
 =
NULL
) {

113 
	`≥º‹
("fopen");

114 
Áû
;

117 
	`f£ek
(
fûe
, 0, 
SEEK_END
);

118 
fûe_Àngth
 = 
	`·ñl
(
fûe
);

119 i‡(
fûe_Àngth
 == -1) {

120 
	`≥º‹
("ftell");

121 
Áû
;

123 
	`f£ek
(
fûe
, 0, 
SEEK_SET
);

125 * 
d©a
 = 
	`mÆloc
(
fûe_Àngth
);

126 i‡(
	`‰ód
(
d©a
, 1, 
fûe_Àngth
, 
fûe
Ë!(
size_t
)file_length) {

127 
	`Ârötf
(
°dîr
, "couldn'tÑeadÉntire file\n");

128 
	`‰ì
(
d©a
);

129 
Áû
;

132 
hâp_∑r£r_£âögs
 
£âögs
;

133 
	`mem£t
(&
£âögs
, 0, (settings));

134 
£âögs
.
⁄_mesßge_begö
 = on_message_begin;

135 
£âögs
.
⁄_uæ
 = on_url;

136 
£âögs
.
⁄_hódî_fõld
 = on_header_field;

137 
£âögs
.
⁄_hódî_vÆue
 = on_header_value;

138 
£âögs
.
⁄_hódîs_com∂ëe
 = on_headers_complete;

139 
£âögs
.
⁄_body
 = on_body;

140 
£âögs
.
⁄_mesßge_com∂ëe
 = on_message_complete;

142 
hâp_∑r£r
 
∑r£r
;

143 
	`hâp_∑r£r_öô
(&
∑r£r
, 
fûe_ty≥
);

144 
size_t
 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs
, 
d©a
, 
fûe_Àngth
);

145 
	`‰ì
(
d©a
);

147 i‡(
≈¨£d
 !(
size_t
)
fûe_Àngth
) {

148 
	`Ârötf
(
°dîr
,

150 
	`hâp_î∫o_des¸ùti⁄
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
)),

151 
	`hâp_î∫o_«me
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
)));

152 
Áû
;

155  
EXIT_SUCCESS
;

157 
Áû
:

158 
	`f˛o£
(
fûe
);

159  
EXIT_FAILURE
;

160 
	}
}

	@/root/grocery-shop/language/gcc/src/httpParse/contrib/url_parser.c

1 
	~"hâp_∑r£r.h
"

2 
	~<°dio.h
>

3 
	~<°rög.h
>

6 
	$dump_uæ
 (c⁄° *
uæ
, c⁄° 
hâp_∑r£r_uæ
 *
u
)

8 
i
;

10 
	`¥ötf
("\tfõld_£t: 0x%x,Ö‹t: %u\n", 
u
->
fõld_£t
, u->
p‹t
);

11 
i
 = 0; i < 
UF_MAX
; i++) {

12 i‡((
u
->
fõld_£t
 & (1 << 
i
)) == 0) {

13 
	`¥ötf
("\tfõld_d©a[%u]: un£t\n", 
i
);

17 
	`¥ötf
("\tfield_data[%u]: off: %uÜen: %uÖart: \"%.*s\n",

18 
i
,

19 
u
->
fõld_d©a
[
i
].
off
,

20 
u
->
fõld_d©a
[
i
].
Àn
,

21 
u
->
fõld_d©a
[
i
].
Àn
,

22 
uæ
 + 
u
->
fõld_d©a
[
i
].
off
);

24 
	}
}

26 
	$maö
(
¨gc
, ** 
¨gv
) {

27 i‡(
¨gc
 != 3) {

28 
	`¥ötf
("Sy¡ax : %†c⁄√˘|gë uæ\n", 
¨gv
[0]);

31 
hâp_∑r£r_uæ
 
u
;

32 
Àn
 = 
	`°æí
(
¨gv
[2]);

33 
c⁄√˘
 = 
	`°rcmp
("c⁄√˘", 
¨gv
[1]) == 0 ? 1 : 0;

34 
	`¥ötf
("P¨sög %s, c⁄√˘ %d\n", 
¨gv
[2], 
c⁄√˘
);

36 
ªsu…
 = 
	`hâp_∑r£r_∑r£_uæ
(
¨gv
[2], 
Àn
, 
c⁄√˘
, &
u
);

37 i‡(
ªsu…
 != 0) {

38 
	`¥ötf
("P¨£Éº‹ : %d\n", 
ªsu…
);

39  
ªsu…
;

41 
	`¥ötf
("Parse ok,Ñesult : \n");

42 
	`dump_uæ
(
¨gv
[2], &
u
);

44 
	}
}

	@/root/grocery-shop/language/gcc/src/httpParse/http_parser.c

24 
	~"hâp_∑r£r.h
"

25 
	~<as£π.h
>

26 
	~<°ddef.h
>

27 
	~<˘y≥.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<limôs.h
>

32 #i‚de‡
ULLONG_MAX


33 
	#ULLONG_MAX
 ((
uöt64_t
Ë-1Ë

	)

36 #i‚de‡
MIN


37 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

40 #i‚de‡
ARRAY_SIZE


41 
	#ARRAY_SIZE
(
a
Ë(◊Ë/ (◊)[0]))

	)

44 #i‚de‡
BIT_AT


45 
	#BIT_AT
(
a
, 
i
) \

46 (!!((Ë(
a
)[(Ë(
i
) >> 3] & \

47 (1 << ((Ë(
i
Ë& 7))))

	)

50 #i‚de‡
ELEM_AT


51 
	#ELEM_AT
(
a
, 
i
, 
v
Ë((Ë(iË< 
	`ARRAY_SIZE
◊Ë? (a)[(i)] : (v))

	)

54 
	#SET_ERRNO
(
e
) \

56 
∑r£r
->
hâp_î∫o
 = (
e
); \

57 } 0)

	)

61 
	#CALLBACK_NOTIFY_
(
FOR
, 
ER
) \

63 
	`as£π
(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
); \

65 i‡(
£âögs
->
⁄_
##
FOR
) { \

66 i‡(0 !
£âögs
->
⁄_
##
	`FOR
(
∑r£r
)) { \

67 
	`SET_ERRNO
(
HPE_CB_
##
FOR
); \

71 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) { \

72  (
ER
); \

75 } 0)

	)

78 
	#CALLBACK_NOTIFY
(
FOR
Ë
	`CALLBACK_NOTIFY_
(FOR, 
p
 - 
d©a
 + 1)

	)

81 
	#CALLBACK_NOTIFY_NOADVANCE
(
FOR
Ë
	`CALLBACK_NOTIFY_
(FOR, 
p
 - 
d©a
)

	)

84 
	#CALLBACK_DATA_
(
FOR
, 
LEN
, 
ER
) \

86 
	`as£π
(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
); \

88 i‡(
FOR
##
_m¨k
) { \

89 i‡(
£âögs
->
⁄_
##
FOR
) { \

90 i‡(0 !
£âögs
->
⁄_
##
	`FOR
(
∑r£r
, 
FOR
##
_m¨k
, (
LEN
))) { \

91 
	`SET_ERRNO
(
HPE_CB_
##
FOR
); \

95 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) { \

96  (
ER
); \

99 
FOR
##
_m¨k
 = 
NULL
; \

101 } 0)

	)

104 
	#CALLBACK_DATA
(
FOR
) \

105 
	`CALLBACK_DATA_
(
FOR
, 
p
 - FOR##
_m¨k
,Ö - 
d©a
 + 1)

	)

108 
	#CALLBACK_DATA_NOADVANCE
(
FOR
) \

109 
	`CALLBACK_DATA_
(
FOR
, 
p
 - FOR##
_m¨k
,Ö - 
d©a
)

	)

112 
	#MARK
(
FOR
) \

114 i‡(!
FOR
##
_m¨k
) { \

115 
FOR
##
_m¨k
 = 
p
; \

117 } 0)

	)

120 
	#PROXY_CONNECTION
 "¥oxy-c⁄√˘i⁄"

	)

121 
	#CONNECTION
 "c⁄√˘i⁄"

	)

122 
	#CONTENT_LENGTH
 "c⁄ã¡-Àngth"

	)

123 
	#TRANSFER_ENCODING
 "å™s„r-ícodög"

	)

124 
	#UPGRADE
 "upgøde"

	)

125 
	#CHUNKED
 "chunked"

	)

126 
	#KEEP_ALIVE
 "kìp-Æive"

	)

127 
	#CLOSE
 "˛o£"

	)

130 c⁄° *
	gmëhod_°rögs
[] =

132 
	#XX
(
num
, 
«me
, 
°rög
Ë#°rög,

	)

133 
HTTP_METHOD_MAP
(
XX
)

134 #unde‡
XX


145 c⁄° 
	gtokís
[256] = {

180 c⁄° 
ötjob_t
 
	gunhex
[256] =

184 , 0, 1, 2, 3, 4, 5, 6, 7, 
job
, 9,-1,-1,-1,-1,-1,-1

192 #i‡
HTTP_PARSER_STRICT


193 
	#T
(
v
Ë0

	)

195 
	#T
(
v
Ë
	)
v

199 c⁄° 
uötjob_t
 
	gn‹mÆ_uæ_ch¨
[32] = {

203 0 | 
T
(2) | 0 | 0 | T(16) | 0 | 0 | 0,

209 0 | 2 | 4 | 0 | 16 | 32 | 64 | 12
job
,

211 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

213 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

215 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 0,

217 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

219 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

221 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

223 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

225 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

227 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

229 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 12job,

231 1 | 2 | 4 | 
job
 | 16 | 32 | 64 | 0, };

233 #unde‡
T


235 
	e°©e


236 { 
	ms_dód
 = 1

238 , 
	ms_°¨t_ªq_‹_ªs


239 , 
	ms_ªs_‹_ª•_H


240 , 
	ms_°¨t_ªs


241 , 
	ms_ªs_H


242 , 
	ms_ªs_HT


243 , 
	ms_ªs_HTT


244 , 
	ms_ªs_HTTP


245 , 
	ms_ªs_fú°_hâp_maj‹


246 , 
	ms_ªs_hâp_maj‹


247 , 
	ms_ªs_fú°_hâp_mö‹


248 , 
	ms_ªs_hâp_mö‹


249 , 
	ms_ªs_fú°_°©us_code


250 , 
	ms_ªs_°©us_code


251 , 
	ms_ªs_°©us_°¨t


252 , 
	ms_ªs_°©us


253 , 
	ms_ªs_löe_Æmo°_d⁄e


255 , 
	ms_°¨t_ªq


257 , 
	ms_ªq_mëhod


258 , 
	ms_ªq_•a˚s_bef‹e_uæ


259 , 
	ms_ªq_schema


260 , 
	ms_ªq_schema_¶ash


261 , 
	ms_ªq_schema_¶ash_¶ash


262 , 
	ms_ªq_£rvî_°¨t


263 , 
	ms_ªq_£rvî


264 , 
	ms_ªq_£rvî_wôh_©


265 , 
	ms_ªq_∑th


266 , 
	ms_ªq_quîy_°rög_°¨t


267 , 
	ms_ªq_quîy_°rög


268 , 
	ms_ªq_‰agmít_°¨t


269 , 
	ms_ªq_‰agmít


270 , 
	ms_ªq_hâp_°¨t


271 , 
	ms_ªq_hâp_H


272 , 
	ms_ªq_hâp_HT


273 , 
	ms_ªq_hâp_HTT


274 , 
	ms_ªq_hâp_HTTP


275 , 
	ms_ªq_fú°_hâp_maj‹


276 , 
	ms_ªq_hâp_maj‹


277 , 
	ms_ªq_fú°_hâp_mö‹


278 , 
	ms_ªq_hâp_mö‹


279 , 
	ms_ªq_löe_Æmo°_d⁄e


281 , 
	ms_hódî_fõld_°¨t


282 , 
	ms_hódî_fõld


283 , 
	ms_hódî_vÆue_disˇrd_ws


284 , 
	ms_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e


285 , 
	ms_hódî_vÆue_disˇrd_lws


286 , 
	ms_hódî_vÆue_°¨t


287 , 
	ms_hódî_vÆue


288 , 
	ms_hódî_vÆue_lws


290 , 
	ms_hódî_Æmo°_d⁄e


292 , 
	ms_chunk_size_°¨t


293 , 
	ms_chunk_size


294 , 
	ms_chunk_∑ømëîs


295 , 
	ms_chunk_size_Æmo°_d⁄e


297 , 
	ms_hódîs_Æmo°_d⁄e


298 , 
	ms_hódîs_d⁄e


305 , 
	ms_chunk_d©a


306 , 
	ms_chunk_d©a_Æmo°_d⁄e


307 , 
	ms_chunk_d©a_d⁄e


309 , 
	ms_body_idítôy


310 , 
	ms_body_idítôy_eof


312 , 
	ms_mesßge_d⁄e


316 
	#PARSING_HEADER
(
°©e
Ë(°©ê<
s_hódîs_d⁄e
)

	)

319 
	ehódî_°©es


320 { 
	mh_gíîÆ
 = 0

321 , 
	mh_C


322 , 
	mh_CO


323 , 
	mh_CON


325 , 
	mh_m©chög_c⁄√˘i⁄


326 , 
	mh_m©chög_¥oxy_c⁄√˘i⁄


327 , 
	mh_m©chög_c⁄ã¡_Àngth


328 , 
	mh_m©chög_å™s„r_ícodög


329 , 
	mh_m©chög_upgøde


331 , 
	mh_c⁄√˘i⁄


332 , 
	mh_c⁄ã¡_Àngth


333 , 
	mh_å™s„r_ícodög


334 , 
	mh_upgøde


336 , 
	mh_m©chög_å™s„r_ícodög_chunked


337 , 
	mh_m©chög_c⁄√˘i⁄_kìp_Æive


338 , 
	mh_m©chög_c⁄√˘i⁄_˛o£


340 , 
	mh_å™s„r_ícodög_chunked


341 , 
	mh_c⁄√˘i⁄_kìp_Æive


342 , 
	mh_c⁄√˘i⁄_˛o£


345 
	ehâp_ho°_°©e


347 
	ms_hâp_ho°_dód
 = 1

348 , 
	ms_hâp_u£röfo_°¨t


349 , 
	ms_hâp_u£röfo


350 , 
	ms_hâp_ho°_°¨t


351 , 
	ms_hâp_ho°_v6_°¨t


352 , 
	ms_hâp_ho°


353 , 
	ms_hâp_ho°_v6


354 , 
	ms_hâp_ho°_v6_íd


355 , 
	ms_hâp_ho°_p‹t_°¨t


356 , 
	ms_hâp_ho°_p‹t


360 
	#CR
 '\r'

	)

361 
	#LF
 '\n'

	)

362 
	#LOWER
(
c
Ë()(¯| 0x20)

	)

363 
	#IS_ALPHA
(
c
Ë(
	`LOWER
(cË>'a' && LOWER(cË<'z')

	)

364 
	#IS_NUM
(
c
Ë((cË>'0' && (cË<'9')

	)

365 
	#IS_ALPHANUM
(
c
Ë(
	`IS_ALPHA
(cË|| 
	`IS_NUM
(c))

	)

366 
	#IS_HEX
(
c
Ë(
	`IS_NUM
(cË|| (
	`LOWER
(cË>'a' && LOWER(cË<'f'))

	)

367 
	#IS_MARK
(
c
) ((c) == '-' || (c) == '_' || (c) == '.' || \

368 (
c
) == '!' || (c) == '~' || (c) == '*' || (c) == '\'' || (c) == '(' || \

369 (
c
Ë=')')

	)

370 
	#IS_USERINFO_CHAR
(
c
Ë(
	`IS_ALPHANUM
(cË|| 
	`IS_MARK
(c) || (c) == '%' || \

371 (
c
) == ';' || (c) == ':' || (c) == '&' || (c) == '=' || (c) == '+' || \

372 (
c
Ë='$' || (cË=',')

	)

374 #i‡
HTTP_PARSER_STRICT


375 
	#TOKEN
(
c
Ë(
tokís
[()c])

	)

376 
	#IS_URL_CHAR
(
c
Ë(
	`BIT_AT
(
n‹mÆ_uæ_ch¨
, ()c))

	)

377 
	#IS_HOST_CHAR
(
c
Ë(
	`IS_ALPHANUM
(cË|| (cË='.' || (cË='-')

	)

379 
	#TOKEN
(
c
Ë((¯=' 'Ë? ' ' : 
tokís
[()c])

	)

380 
	#IS_URL_CHAR
(
c
) \

381 (
	`BIT_AT
(
n‹mÆ_uæ_ch¨
, ()
c
Ë|| ((cË& 0x
job0
))

	)

382 
	#IS_HOST_CHAR
(
c
) \

383 (
	`IS_ALPHANUM
(
c
Ë|| (cË='.' || (cË='-' || (cË='_')

	)

387 
	#°¨t_°©e
 (
∑r£r
->
ty≥
 =
HTTP_REQUEST
 ? 
s_°¨t_ªq
 : 
s_°¨t_ªs
)

	)

390 #i‡
HTTP_PARSER_STRICT


391 
	#STRICT_CHECK
(
c⁄d
) \

393 i‡(
c⁄d
) { \

394 
	`SET_ERRNO
(
HPE_STRICT
); \

395 
îr‹
; \

397 } 0)

	)

398 
	#NEW_MESSAGE
(Ë(
	`hâp_should_kìp_Æive
(
∑r£r
Ë? 
°¨t_°©e
 : 
s_dód
)

	)

400 
	#STRICT_CHECK
(
c⁄d
)

	)

401 
	#NEW_MESSAGE
(Ë
°¨t_°©e


	)

406 
	#HTTP_STRERROR_GEN
(
n
, 
s
Ë{ "HPE_" #n, s },

	)

408 c⁄° *
	m«me
;

409 c⁄° *
	mdes¸ùti⁄
;

410 } 
	ghâp_°ªº‹_èb
[] = {

411 
HTTP_ERRNO_MAP
(
HTTP_STRERROR_GEN
)

413 #unde‡
HTTP_STRERROR_GEN


415 
hâp_mesßge_√eds_eof
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

428 
°©e


429 
	$∑r£_uæ_ch¨
(
°©e
 
s
, c⁄° 
ch
)

431 i‡(
ch
 == ' ' || ch == '\r' || ch == '\n') {

432  
s_dód
;

435 #i‡
HTTP_PARSER_STRICT


436 i‡(
ch
 == '\t' || ch == '\f') {

437  
s_dód
;

441 
s
) {

442 
s_ªq_•a˚s_bef‹e_uæ
:

447 i‡(
ch
 == '/' || ch == '*') {

448  
s_ªq_∑th
;

451 i‡(
	`IS_ALPHA
(
ch
)) {

452  
s_ªq_schema
;

457 
s_ªq_schema
:

458 i‡(
	`IS_ALPHA
(
ch
)) {

459  
s
;

462 i‡(
ch
 == ':') {

463  
s_ªq_schema_¶ash
;

468 
s_ªq_schema_¶ash
:

469 i‡(
ch
 == '/') {

470  
s_ªq_schema_¶ash_¶ash
;

475 
s_ªq_schema_¶ash_¶ash
:

476 i‡(
ch
 == '/') {

477  
s_ªq_£rvî_°¨t
;

482 
s_ªq_£rvî_wôh_©
:

483 i‡(
ch
 == '@') {

484  
s_dód
;

488 
s_ªq_£rvî_°¨t
:

489 
s_ªq_£rvî
:

490 i‡(
ch
 == '/') {

491  
s_ªq_∑th
;

494 i‡(
ch
 == '?') {

495  
s_ªq_quîy_°rög_°¨t
;

498 i‡(
ch
 == '@') {

499  
s_ªq_£rvî_wôh_©
;

502 i‡(
	`IS_USERINFO_CHAR
(
ch
) || ch == '[' || ch == ']') {

503  
s_ªq_£rvî
;

508 
s_ªq_∑th
:

509 i‡(
	`IS_URL_CHAR
(
ch
)) {

510  
s
;

513 
ch
) {

515  
s_ªq_quîy_°rög_°¨t
;

518  
s_ªq_‰agmít_°¨t
;

523 
s_ªq_quîy_°rög_°¨t
:

524 
s_ªq_quîy_°rög
:

525 i‡(
	`IS_URL_CHAR
(
ch
)) {

526  
s_ªq_quîy_°rög
;

529 
ch
) {

532  
s_ªq_quîy_°rög
;

535  
s_ªq_‰agmít_°¨t
;

540 
s_ªq_‰agmít_°¨t
:

541 i‡(
	`IS_URL_CHAR
(
ch
)) {

542  
s_ªq_‰agmít
;

545 
ch
) {

547  
s_ªq_‰agmít
;

550  
s
;

555 
s_ªq_‰agmít
:

556 i‡(
	`IS_URL_CHAR
(
ch
)) {

557  
s
;

560 
ch
) {

563  
s
;

573  
s_dód
;

574 
	}
}

576 
size_t
 
	$hâp_∑r£r_execuã
 (
hâp_∑r£r
 *
∑r£r
,

577 c⁄° 
hâp_∑r£r_£âögs
 *
£âögs
,

578 c⁄° *
d©a
,

579 
size_t
 
Àn
)

581 
c
, 
ch
;

582 
ötjob_t
 
unhex_vÆ
;

583 c⁄° *
p
 = 
d©a
;

584 c⁄° *
hódî_fõld_m¨k
 = 0;

585 c⁄° *
hódî_vÆue_m¨k
 = 0;

586 c⁄° *
uæ_m¨k
 = 0;

587 c⁄° *
body_m¨k
 = 0;

588 c⁄° *
°©us_m¨k
 = 0;

591 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) {

595 i‡(
Àn
 == 0) {

596 
∑r£r
->
°©e
) {

597 
s_body_idítôy_eof
:

601 
	`CALLBACK_NOTIFY_NOADVANCE
(
mesßge_com∂ëe
);

604 
s_dód
:

605 
s_°¨t_ªq_‹_ªs
:

606 
s_°¨t_ªs
:

607 
s_°¨t_ªq
:

611 
	`SET_ERRNO
(
HPE_INVALID_EOF_STATE
);

617 i‡(
∑r£r
->
°©e
 =
s_hódî_fõld
)

618 
hódî_fõld_m¨k
 = 
d©a
;

619 i‡(
∑r£r
->
°©e
 =
s_hódî_vÆue
)

620 
hódî_vÆue_m¨k
 = 
d©a
;

621 
∑r£r
->
°©e
) {

622 
s_ªq_∑th
:

623 
s_ªq_schema
:

624 
s_ªq_schema_¶ash
:

625 
s_ªq_schema_¶ash_¶ash
:

626 
s_ªq_£rvî_°¨t
:

627 
s_ªq_£rvî
:

628 
s_ªq_£rvî_wôh_©
:

629 
s_ªq_quîy_°rög_°¨t
:

630 
s_ªq_quîy_°rög
:

631 
s_ªq_‰agmít_°¨t
:

632 
s_ªq_‰agmít
:

633 
uæ_m¨k
 = 
d©a
;

635 
s_ªs_°©us
:

636 
°©us_m¨k
 = 
d©a
;

640 
p
=
d©a
;Ö !d©®+ 
Àn
;Ö++) {

641 
ch
 = *
p
;

643 i‡(
	`PARSING_HEADER
(
∑r£r
->
°©e
)) {

644 ++
∑r£r
->
ƒód
;

656 i‡(
∑r£r
->
ƒód
 > (
HTTP_MAX_HEADER_SIZE
)) {

657 
	`SET_ERRNO
(
HPE_HEADER_OVERFLOW
);

658 
îr‹
;

662 
ªexecuã_byã
:

663 
∑r£r
->
°©e
) {

665 
s_dód
:

669 i‡(
ch
 =
CR
 || ch =
LF
)

672 
	`SET_ERRNO
(
HPE_CLOSED_CONNECTION
);

673 
îr‹
;

675 
s_°¨t_ªq_‹_ªs
:

677 i‡(
ch
 =
CR
 || ch =
LF
)

679 
∑r£r
->
Êags
 = 0;

680 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

682 i‡(
ch
 == 'H') {

683 
∑r£r
->
°©e
 = 
s_ªs_‹_ª•_H
;

685 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

687 
∑r£r
->
ty≥
 = 
HTTP_REQUEST
;

688 
∑r£r
->
°©e
 = 
s_°¨t_ªq
;

689 
ªexecuã_byã
;

695 
s_ªs_‹_ª•_H
:

696 i‡(
ch
 == 'T') {

697 
∑r£r
->
ty≥
 = 
HTTP_RESPONSE
;

698 
∑r£r
->
°©e
 = 
s_ªs_HT
;

700 i‡(
ch
 != 'E') {

701 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

702 
îr‹
;

705 
∑r£r
->
ty≥
 = 
HTTP_REQUEST
;

706 
∑r£r
->
mëhod
 = 
HTTP_HEAD
;

707 
∑r£r
->
ödex
 = 2;

708 
∑r£r
->
°©e
 = 
s_ªq_mëhod
;

712 
s_°¨t_ªs
:

714 
∑r£r
->
Êags
 = 0;

715 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

717 
ch
) {

719 
∑r£r
->
°©e
 = 
s_ªs_H
;

722 
CR
:

723 
LF
:

727 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

728 
îr‹
;

731 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

735 
s_ªs_H
:

736 
	`STRICT_CHECK
(
ch
 != 'T');

737 
∑r£r
->
°©e
 = 
s_ªs_HT
;

740 
s_ªs_HT
:

741 
	`STRICT_CHECK
(
ch
 != 'T');

742 
∑r£r
->
°©e
 = 
s_ªs_HTT
;

745 
s_ªs_HTT
:

746 
	`STRICT_CHECK
(
ch
 != 'P');

747 
∑r£r
->
°©e
 = 
s_ªs_HTTP
;

750 
s_ªs_HTTP
:

751 
	`STRICT_CHECK
(
ch
 != '/');

752 
∑r£r
->
°©e
 = 
s_ªs_fú°_hâp_maj‹
;

755 
s_ªs_fú°_hâp_maj‹
:

756 i‡(
ch
 < '0' || ch > '9') {

757 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

758 
îr‹
;

761 
∑r£r
->
hâp_maj‹
 = 
ch
 - '0';

762 
∑r£r
->
°©e
 = 
s_ªs_hâp_maj‹
;

766 
s_ªs_hâp_maj‹
:

768 i‡(
ch
 == '.') {

769 
∑r£r
->
°©e
 = 
s_ªs_fú°_hâp_mö‹
;

773 i‡(!
	`IS_NUM
(
ch
)) {

774 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

775 
îr‹
;

778 
∑r£r
->
hâp_maj‹
 *= 10;

779 
∑r£r
->
hâp_maj‹
 +
ch
 - '0';

781 i‡(
∑r£r
->
hâp_maj‹
 > 999) {

782 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

783 
îr‹
;

790 
s_ªs_fú°_hâp_mö‹
:

791 i‡(!
	`IS_NUM
(
ch
)) {

792 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

793 
îr‹
;

796 
∑r£r
->
hâp_mö‹
 = 
ch
 - '0';

797 
∑r£r
->
°©e
 = 
s_ªs_hâp_mö‹
;

801 
s_ªs_hâp_mö‹
:

803 i‡(
ch
 == ' ') {

804 
∑r£r
->
°©e
 = 
s_ªs_fú°_°©us_code
;

808 i‡(!
	`IS_NUM
(
ch
)) {

809 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

810 
îr‹
;

813 
∑r£r
->
hâp_mö‹
 *= 10;

814 
∑r£r
->
hâp_mö‹
 +
ch
 - '0';

816 i‡(
∑r£r
->
hâp_mö‹
 > 999) {

817 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

818 
îr‹
;

824 
s_ªs_fú°_°©us_code
:

826 i‡(!
	`IS_NUM
(
ch
)) {

827 i‡(
ch
 == ' ') {

831 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

832 
îr‹
;

834 
∑r£r
->
°©us_code
 = 
ch
 - '0';

835 
∑r£r
->
°©e
 = 
s_ªs_°©us_code
;

839 
s_ªs_°©us_code
:

841 i‡(!
	`IS_NUM
(
ch
)) {

842 
ch
) {

844 
∑r£r
->
°©e
 = 
s_ªs_°©us_°¨t
;

846 
CR
:

847 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

849 
LF
:

850 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

853 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

854 
îr‹
;

859 
∑r£r
->
°©us_code
 *= 10;

860 
∑r£r
->
°©us_code
 +
ch
 - '0';

862 i‡(
∑r£r
->
°©us_code
 > 999) {

863 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

864 
îr‹
;

870 
s_ªs_°©us_°¨t
:

872 i‡(
ch
 =
CR
) {

873 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

877 i‡(
ch
 =
LF
) {

878 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

882 
	`MARK
(
°©us
);

883 
∑r£r
->
°©e
 = 
s_ªs_°©us
;

884 
∑r£r
->
ödex
 = 0;

888 
s_ªs_°©us
:

889 i‡(
ch
 =
CR
) {

890 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

891 
	`CALLBACK_DATA
(
°©us
);

895 i‡(
ch
 =
LF
) {

896 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

897 
	`CALLBACK_DATA
(
°©us
);

903 
s_ªs_löe_Æmo°_d⁄e
:

904 
	`STRICT_CHECK
(
ch
 !
LF
);

905 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

908 
s_°¨t_ªq
:

910 i‡(
ch
 =
CR
 || ch =
LF
)

912 
∑r£r
->
Êags
 = 0;

913 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

915 i‡(!
	`IS_ALPHA
(
ch
)) {

916 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

917 
îr‹
;

920 
∑r£r
->
mëhod
 = (
hâp_mëhod
) 0;

921 
∑r£r
->
ödex
 = 1;

922 
ch
) {

923 'C': 
∑r£r
->
mëhod
 = 
HTTP_CONNECT
; ;

924 'D': 
∑r£r
->
mëhod
 = 
HTTP_DELETE
; ;

925 'G': 
∑r£r
->
mëhod
 = 
HTTP_GET
; ;

926 'H': 
∑r£r
->
mëhod
 = 
HTTP_HEAD
; ;

927 'L': 
∑r£r
->
mëhod
 = 
HTTP_LOCK
; ;

928 'M': 
∑r£r
->
mëhod
 = 
HTTP_MKCOL
; ;

929 'N': 
∑r£r
->
mëhod
 = 
HTTP_NOTIFY
; ;

930 'O': 
∑r£r
->
mëhod
 = 
HTTP_OPTIONS
; ;

931 'P': 
∑r£r
->
mëhod
 = 
HTTP_POST
;

934 'R': 
∑r£r
->
mëhod
 = 
HTTP_REPORT
; ;

935 'S': 
∑r£r
->
mëhod
 = 
HTTP_SUBSCRIBE
; ;

936 'T': 
∑r£r
->
mëhod
 = 
HTTP_TRACE
; ;

937 'U': 
∑r£r
->
mëhod
 = 
HTTP_UNLOCK
; ;

939 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

940 
îr‹
;

942 
∑r£r
->
°©e
 = 
s_ªq_mëhod
;

944 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

949 
s_ªq_mëhod
:

951 c⁄° *
m©chî
;

952 i‡(
ch
 == '\0') {

953 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

954 
îr‹
;

957 
m©chî
 = 
mëhod_°rögs
[
∑r£r
->
mëhod
];

958 i‡(
ch
 =' ' && 
m©chî
[
∑r£r
->
ödex
] == '\0') {

959 
∑r£r
->
°©e
 = 
s_ªq_•a˚s_bef‹e_uæ
;

960 } i‡(
ch
 =
m©chî
[
∑r£r
->
ödex
]) {

962 } i‡(
∑r£r
->
mëhod
 =
HTTP_CONNECT
) {

963 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'H') {

964 
∑r£r
->
mëhod
 = 
HTTP_CHECKOUT
;

965 } i‡(
∑r£r
->
ödex
 =2 && 
ch
 == 'P') {

966 
∑r£r
->
mëhod
 = 
HTTP_COPY
;

968 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

969 
îr‹
;

971 } i‡(
∑r£r
->
mëhod
 =
HTTP_MKCOL
) {

972 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'O') {

973 
∑r£r
->
mëhod
 = 
HTTP_MOVE
;

974 } i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'E') {

975 
∑r£r
->
mëhod
 = 
HTTP_MERGE
;

976 } i‡(
∑r£r
->
ödex
 =1 && 
ch
 == '-') {

977 
∑r£r
->
mëhod
 = 
HTTP_MSEARCH
;

978 } i‡(
∑r£r
->
ödex
 =2 && 
ch
 == 'A') {

979 
∑r£r
->
mëhod
 = 
HTTP_MKACTIVITY
;

980 } i‡(
∑r£r
->
ödex
 =3 && 
ch
 == 'A') {

981 
∑r£r
->
mëhod
 = 
HTTP_MKCALENDAR
;

983 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

984 
îr‹
;

986 } i‡(
∑r£r
->
mëhod
 =
HTTP_SUBSCRIBE
) {

987 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'E') {

988 
∑r£r
->
mëhod
 = 
HTTP_SEARCH
;

990 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

991 
îr‹
;

993 } i‡(
∑r£r
->
ödex
 =1 &&Ö¨£r->
mëhod
 =
HTTP_POST
) {

994 i‡(
ch
 == 'R') {

995 
∑r£r
->
mëhod
 = 
HTTP_PROPFIND
;

996 } i‡(
ch
 == 'U') {

997 
∑r£r
->
mëhod
 = 
HTTP_PUT
;

998 } i‡(
ch
 == 'A') {

999 
∑r£r
->
mëhod
 = 
HTTP_PATCH
;

1001 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1002 
îr‹
;

1004 } i‡(
∑r£r
->
ödex
 == 2) {

1005 i‡(
∑r£r
->
mëhod
 =
HTTP_PUT
) {

1006 i‡(
ch
 == 'R') {

1007 
∑r£r
->
mëhod
 = 
HTTP_PURGE
;

1009 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1010 
îr‹
;

1012 } i‡(
∑r£r
->
mëhod
 =
HTTP_UNLOCK
) {

1013 i‡(
ch
 == 'S') {

1014 
∑r£r
->
mëhod
 = 
HTTP_UNSUBSCRIBE
;

1016 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1017 
îr‹
;

1020 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1021 
îr‹
;

1023 } i‡(
∑r£r
->
ödex
 =4 &&Ö¨£r->
mëhod
 =
HTTP_PROPFIND
 && 
ch
 == 'P') {

1024 
∑r£r
->
mëhod
 = 
HTTP_PROPPATCH
;

1026 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1027 
îr‹
;

1030 ++
∑r£r
->
ödex
;

1034 
s_ªq_•a˚s_bef‹e_uæ
:

1036 i‡(
ch
 == ' ') ;

1038 
	`MARK
(
uæ
);

1039 i‡(
∑r£r
->
mëhod
 =
HTTP_CONNECT
) {

1040 
∑r£r
->
°©e
 = 
s_ªq_£rvî_°¨t
;

1043 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1044 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1045 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1046 
îr‹
;

1052 
s_ªq_schema
:

1053 
s_ªq_schema_¶ash
:

1054 
s_ªq_schema_¶ash_¶ash
:

1055 
s_ªq_£rvî_°¨t
:

1057 
ch
) {

1060 
CR
:

1061 
LF
:

1062 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1063 
îr‹
;

1065 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1066 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1067 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1068 
îr‹
;

1075 
s_ªq_£rvî
:

1076 
s_ªq_£rvî_wôh_©
:

1077 
s_ªq_∑th
:

1078 
s_ªq_quîy_°rög_°¨t
:

1079 
s_ªq_quîy_°rög
:

1080 
s_ªq_‰agmít_°¨t
:

1081 
s_ªq_‰agmít
:

1083 
ch
) {

1085 
∑r£r
->
°©e
 = 
s_ªq_hâp_°¨t
;

1086 
	`CALLBACK_DATA
(
uæ
);

1088 
CR
:

1089 
LF
:

1090 
∑r£r
->
hâp_maj‹
 = 0;

1091 
∑r£r
->
hâp_mö‹
 = 9;

1092 
∑r£r
->
°©e
 = (
ch
 =
CR
) ?

1093 
s_ªq_löe_Æmo°_d⁄e
 :

1094 
s_hódî_fõld_°¨t
;

1095 
	`CALLBACK_DATA
(
uæ
);

1098 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1099 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1100 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1101 
îr‹
;

1107 
s_ªq_hâp_°¨t
:

1108 
ch
) {

1110 
∑r£r
->
°©e
 = 
s_ªq_hâp_H
;

1115 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

1116 
îr‹
;

1120 
s_ªq_hâp_H
:

1121 
	`STRICT_CHECK
(
ch
 != 'T');

1122 
∑r£r
->
°©e
 = 
s_ªq_hâp_HT
;

1125 
s_ªq_hâp_HT
:

1126 
	`STRICT_CHECK
(
ch
 != 'T');

1127 
∑r£r
->
°©e
 = 
s_ªq_hâp_HTT
;

1130 
s_ªq_hâp_HTT
:

1131 
	`STRICT_CHECK
(
ch
 != 'P');

1132 
∑r£r
->
°©e
 = 
s_ªq_hâp_HTTP
;

1135 
s_ªq_hâp_HTTP
:

1136 
	`STRICT_CHECK
(
ch
 != '/');

1137 
∑r£r
->
°©e
 = 
s_ªq_fú°_hâp_maj‹
;

1141 
s_ªq_fú°_hâp_maj‹
:

1142 i‡(
ch
 < '1' || ch > '9') {

1143 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1144 
îr‹
;

1147 
∑r£r
->
hâp_maj‹
 = 
ch
 - '0';

1148 
∑r£r
->
°©e
 = 
s_ªq_hâp_maj‹
;

1152 
s_ªq_hâp_maj‹
:

1154 i‡(
ch
 == '.') {

1155 
∑r£r
->
°©e
 = 
s_ªq_fú°_hâp_mö‹
;

1159 i‡(!
	`IS_NUM
(
ch
)) {

1160 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1161 
îr‹
;

1164 
∑r£r
->
hâp_maj‹
 *= 10;

1165 
∑r£r
->
hâp_maj‹
 +
ch
 - '0';

1167 i‡(
∑r£r
->
hâp_maj‹
 > 999) {

1168 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1169 
îr‹
;

1176 
s_ªq_fú°_hâp_mö‹
:

1177 i‡(!
	`IS_NUM
(
ch
)) {

1178 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1179 
îr‹
;

1182 
∑r£r
->
hâp_mö‹
 = 
ch
 - '0';

1183 
∑r£r
->
°©e
 = 
s_ªq_hâp_mö‹
;

1187 
s_ªq_hâp_mö‹
:

1189 i‡(
ch
 =
CR
) {

1190 
∑r£r
->
°©e
 = 
s_ªq_löe_Æmo°_d⁄e
;

1194 i‡(
ch
 =
LF
) {

1195 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1201 i‡(!
	`IS_NUM
(
ch
)) {

1202 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1203 
îr‹
;

1206 
∑r£r
->
hâp_mö‹
 *= 10;

1207 
∑r£r
->
hâp_mö‹
 +
ch
 - '0';

1209 i‡(
∑r£r
->
hâp_mö‹
 > 999) {

1210 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1211 
îr‹
;

1218 
s_ªq_löe_Æmo°_d⁄e
:

1220 i‡(
ch
 !
LF
) {

1221 
	`SET_ERRNO
(
HPE_LF_EXPECTED
);

1222 
îr‹
;

1225 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1229 
s_hódî_fõld_°¨t
:

1231 i‡(
ch
 =
CR
) {

1232 
∑r£r
->
°©e
 = 
s_hódîs_Æmo°_d⁄e
;

1236 i‡(
ch
 =
LF
) {

1239 
∑r£r
->
°©e
 = 
s_hódîs_Æmo°_d⁄e
;

1240 
ªexecuã_byã
;

1243 
c
 = 
	`TOKEN
(
ch
);

1245 i‡(!
c
) {

1246 
	`SET_ERRNO
(
HPE_INVALID_HEADER_TOKEN
);

1247 
îr‹
;

1250 
	`MARK
(
hódî_fõld
);

1252 
∑r£r
->
ödex
 = 0;

1253 
∑r£r
->
°©e
 = 
s_hódî_fõld
;

1255 
c
) {

1257 
∑r£r
->
hódî_°©e
 = 
h_C
;

1261 
∑r£r
->
hódî_°©e
 = 
h_m©chög_¥oxy_c⁄√˘i⁄
;

1265 
∑r£r
->
hódî_°©e
 = 
h_m©chög_å™s„r_ícodög
;

1269 
∑r£r
->
hódî_°©e
 = 
h_m©chög_upgøde
;

1273 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1279 
s_hódî_fõld
:

1281 
c
 = 
	`TOKEN
(
ch
);

1283 i‡(
c
) {

1284 
∑r£r
->
hódî_°©e
) {

1285 
h_gíîÆ
:

1288 
h_C
:

1289 
∑r£r
->
ödex
++;

1290 
∑r£r
->
hódî_°©e
 = (
c
 ='o' ? 
h_CO
 : 
h_gíîÆ
);

1293 
h_CO
:

1294 
∑r£r
->
ödex
++;

1295 
∑r£r
->
hódî_°©e
 = (
c
 ='n' ? 
h_CON
 : 
h_gíîÆ
);

1298 
h_CON
:

1299 
∑r£r
->
ödex
++;

1300 
c
) {

1302 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄
;

1305 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄ã¡_Àngth
;

1308 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1315 
h_m©chög_c⁄√˘i⁄
:

1316 
∑r£r
->
ödex
++;

1317 i‡(
∑r£r
->
ödex
 > (
CONNECTION
)-1

1318 || 
c
 !
CONNECTION
[
∑r£r
->
ödex
]) {

1319 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1320 } i‡(
∑r£r
->
ödex
 =(
CONNECTION
)-2) {

1321 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄
;

1327 
h_m©chög_¥oxy_c⁄√˘i⁄
:

1328 
∑r£r
->
ödex
++;

1329 i‡(
∑r£r
->
ödex
 > (
PROXY_CONNECTION
)-1

1330 || 
c
 !
PROXY_CONNECTION
[
∑r£r
->
ödex
]) {

1331 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1332 } i‡(
∑r£r
->
ödex
 =(
PROXY_CONNECTION
)-2) {

1333 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄
;

1339 
h_m©chög_c⁄ã¡_Àngth
:

1340 
∑r£r
->
ödex
++;

1341 i‡(
∑r£r
->
ödex
 > (
CONTENT_LENGTH
)-1

1342 || 
c
 !
CONTENT_LENGTH
[
∑r£r
->
ödex
]) {

1343 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1344 } i‡(
∑r£r
->
ödex
 =(
CONTENT_LENGTH
)-2) {

1345 
∑r£r
->
hódî_°©e
 = 
h_c⁄ã¡_Àngth
;

1351 
h_m©chög_å™s„r_ícodög
:

1352 
∑r£r
->
ödex
++;

1353 i‡(
∑r£r
->
ödex
 > (
TRANSFER_ENCODING
)-1

1354 || 
c
 !
TRANSFER_ENCODING
[
∑r£r
->
ödex
]) {

1355 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1356 } i‡(
∑r£r
->
ödex
 =(
TRANSFER_ENCODING
)-2) {

1357 
∑r£r
->
hódî_°©e
 = 
h_å™s„r_ícodög
;

1363 
h_m©chög_upgøde
:

1364 
∑r£r
->
ödex
++;

1365 i‡(
∑r£r
->
ödex
 > (
UPGRADE
)-1

1366 || 
c
 !
UPGRADE
[
∑r£r
->
ödex
]) {

1367 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1368 } i‡(
∑r£r
->
ödex
 =(
UPGRADE
)-2) {

1369 
∑r£r
->
hódî_°©e
 = 
h_upgøde
;

1373 
h_c⁄√˘i⁄
:

1374 
h_c⁄ã¡_Àngth
:

1375 
h_å™s„r_ícodög
:

1376 
h_upgøde
:

1377 i‡(
ch
 !' 'Ë
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1381 
	`as£π
(0 && "Unknown header_state");

1387 i‡(
ch
 == ':') {

1388 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws
;

1389 
	`CALLBACK_DATA
(
hódî_fõld
);

1393 
	`SET_ERRNO
(
HPE_INVALID_HEADER_TOKEN
);

1394 
îr‹
;

1397 
s_hódî_vÆue_disˇrd_ws
:

1398 i‡(
ch
 == ' ' || ch == '\t') ;

1400 i‡(
ch
 =
CR
) {

1401 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e
;

1405 i‡(
ch
 =
LF
) {

1406 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_lws
;

1412 
s_hódî_vÆue_°¨t
:

1414 
	`MARK
(
hódî_vÆue
);

1416 
∑r£r
->
°©e
 = 
s_hódî_vÆue
;

1417 
∑r£r
->
ödex
 = 0;

1419 
c
 = 
	`LOWER
(
ch
);

1421 
∑r£r
->
hódî_°©e
) {

1422 
h_upgøde
:

1423 
∑r£r
->
Êags
 |
F_UPGRADE
;

1424 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1427 
h_å™s„r_ícodög
:

1429 i‡('c' =
c
) {

1430 
∑r£r
->
hódî_°©e
 = 
h_m©chög_å™s„r_ícodög_chunked
;

1432 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1436 
h_c⁄ã¡_Àngth
:

1437 i‡(!
	`IS_NUM
(
ch
)) {

1438 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1439 
îr‹
;

1442 
∑r£r
->
c⁄ã¡_Àngth
 = 
ch
 - '0';

1445 
h_c⁄√˘i⁄
:

1447 i‡(
c
 == 'k') {

1448 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄_kìp_Æive
;

1450 } i‡(
c
 == 'c') {

1451 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄_˛o£
;

1453 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1458 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1464 
s_hódî_vÆue
:

1467 i‡(
ch
 =
CR
) {

1468 
∑r£r
->
°©e
 = 
s_hódî_Æmo°_d⁄e
;

1469 
	`CALLBACK_DATA
(
hódî_vÆue
);

1473 i‡(
ch
 =
LF
) {

1474 
∑r£r
->
°©e
 = 
s_hódî_Æmo°_d⁄e
;

1475 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1476 
ªexecuã_byã
;

1479 
c
 = 
	`LOWER
(
ch
);

1481 
∑r£r
->
hódî_°©e
) {

1482 
h_gíîÆ
:

1485 
h_c⁄√˘i⁄
:

1486 
h_å™s„r_ícodög
:

1487 
	`as£π
(0 && "Shouldn't get here.");

1490 
h_c⁄ã¡_Àngth
:

1492 
uöt64_t
 
t
;

1494 i‡(
ch
 == ' ') ;

1496 i‡(!
	`IS_NUM
(
ch
)) {

1497 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1498 
îr‹
;

1501 
t
 = 
∑r£r
->
c⁄ã¡_Àngth
;

1502 
t
 *= 10;

1503 
t
 +
ch
 - '0';

1506 i‡((
ULLONG_MAX
 - 10Ë/ 10 < 
∑r£r
->
c⁄ã¡_Àngth
) {

1507 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1508 
îr‹
;

1511 
∑r£r
->
c⁄ã¡_Àngth
 = 
t
;

1516 
h_m©chög_å™s„r_ícodög_chunked
:

1517 
∑r£r
->
ödex
++;

1518 i‡(
∑r£r
->
ödex
 > (
CHUNKED
)-1

1519 || 
c
 !
CHUNKED
[
∑r£r
->
ödex
]) {

1520 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1521 } i‡(
∑r£r
->
ödex
 =(
CHUNKED
)-2) {

1522 
∑r£r
->
hódî_°©e
 = 
h_å™s„r_ícodög_chunked
;

1527 
h_m©chög_c⁄√˘i⁄_kìp_Æive
:

1528 
∑r£r
->
ödex
++;

1529 i‡(
∑r£r
->
ödex
 > (
KEEP_ALIVE
)-1

1530 || 
c
 !
KEEP_ALIVE
[
∑r£r
->
ödex
]) {

1531 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1532 } i‡(
∑r£r
->
ödex
 =(
KEEP_ALIVE
)-2) {

1533 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄_kìp_Æive
;

1538 
h_m©chög_c⁄√˘i⁄_˛o£
:

1539 
∑r£r
->
ödex
++;

1540 i‡(
∑r£r
->
ödex
 > (
CLOSE
)-1 || 
c
 != CLOSE[parser->index]) {

1541 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1542 } i‡(
∑r£r
->
ödex
 =(
CLOSE
)-2) {

1543 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄_˛o£
;

1547 
h_å™s„r_ícodög_chunked
:

1548 
h_c⁄√˘i⁄_kìp_Æive
:

1549 
h_c⁄√˘i⁄_˛o£
:

1550 i‡(
ch
 !' 'Ë
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1554 
∑r£r
->
°©e
 = 
s_hódî_vÆue
;

1555 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1561 
s_hódî_Æmo°_d⁄e
:

1563 
	`STRICT_CHECK
(
ch
 !
LF
);

1565 
∑r£r
->
°©e
 = 
s_hódî_vÆue_lws
;

1569 
s_hódî_vÆue_lws
:

1571 i‡(
ch
 == ' ' || ch == '\t') {

1572 
∑r£r
->
°©e
 = 
s_hódî_vÆue_°¨t
;

1573 
ªexecuã_byã
;

1577 
∑r£r
->
hódî_°©e
) {

1578 
h_c⁄√˘i⁄_kìp_Æive
:

1579 
∑r£r
->
Êags
 |
F_CONNECTION_KEEP_ALIVE
;

1581 
h_c⁄√˘i⁄_˛o£
:

1582 
∑r£r
->
Êags
 |
F_CONNECTION_CLOSE
;

1584 
h_å™s„r_ícodög_chunked
:

1585 
∑r£r
->
Êags
 |
F_CHUNKED
;

1591 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1592 
ªexecuã_byã
;

1595 
s_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e
:

1597 
	`STRICT_CHECK
(
ch
 !
LF
);

1598 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_lws
;

1602 
s_hódî_vÆue_disˇrd_lws
:

1604 i‡(
ch
 == ' ' || ch == '\t') {

1605 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws
;

1609 
	`MARK
(
hódî_vÆue
);

1610 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1611 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1612 
ªexecuã_byã
;

1616 
s_hódîs_Æmo°_d⁄e
:

1618 
	`STRICT_CHECK
(
ch
 !
LF
);

1620 i‡(
∑r£r
->
Êags
 & 
F_TRAILING
) {

1622 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1623 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1627 
∑r£r
->
°©e
 = 
s_hódîs_d⁄e
;

1630 
∑r£r
->
upgøde
 =

1631 (
∑r£r
->
Êags
 & 
F_UPGRADE
 ||Ö¨£r->
mëhod
 =
HTTP_CONNECT
);

1642 i‡(
£âögs
->
⁄_hódîs_com∂ëe
) {

1643 
£âögs
->
	`⁄_hódîs_com∂ëe
(
∑r£r
)) {

1648 
∑r£r
->
Êags
 |
F_SKIPBODY
;

1652 
	`SET_ERRNO
(
HPE_CB_hódîs_com∂ëe
);

1653  
p
 - 
d©a
;

1657 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) {

1658  
p
 - 
d©a
;

1661 
ªexecuã_byã
;

1664 
s_hódîs_d⁄e
:

1666 
	`STRICT_CHECK
(
ch
 !
LF
);

1668 
∑r£r
->
ƒód
 = 0;

1671 i‡(
∑r£r
->
upgøde
) {

1672 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1673 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1674  (
p
 - 
d©a
) + 1;

1677 i‡(
∑r£r
->
Êags
 & 
F_SKIPBODY
) {

1678 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1679 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1680 } i‡(
∑r£r
->
Êags
 & 
F_CHUNKED
) {

1682 
∑r£r
->
°©e
 = 
s_chunk_size_°¨t
;

1684 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1686 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1687 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1688 } i‡(
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
) {

1690 
∑r£r
->
°©e
 = 
s_body_idítôy
;

1692 i‡(
∑r£r
->
ty≥
 =
HTTP_REQUEST
 ||

1693 !
	`hâp_mesßge_√eds_eof
(
∑r£r
)) {

1695 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1696 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1699 
∑r£r
->
°©e
 = 
s_body_idítôy_eof
;

1707 
s_body_idítôy
:

1709 
uöt64_t
 
to_ªad
 = 
	`MIN
(
∑r£r
->
c⁄ã¡_Àngth
,

1710 (
uöt64_t
Ë((
d©a
 + 
Àn
Ë- 
p
));

1712 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 != 0

1713 && 
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
);

1720 
	`MARK
(
body
);

1721 
∑r£r
->
c⁄ã¡_Àngth
 -
to_ªad
;

1722 
p
 +
to_ªad
 - 1;

1724 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1725 
∑r£r
->
°©e
 = 
s_mesßge_d⁄e
;

1736 
	`CALLBACK_DATA_
(
body
, 
p
 - 
body_m¨k
 + 1,Ö - 
d©a
);

1737 
ªexecuã_byã
;

1744 
s_body_idítôy_eof
:

1745 
	`MARK
(
body
);

1746 
p
 = 
d©a
 + 
Àn
 - 1;

1750 
s_mesßge_d⁄e
:

1751 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1752 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1755 
s_chunk_size_°¨t
:

1757 
	`as£π
(
∑r£r
->
ƒód
 == 1);

1758 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1760 
unhex_vÆ
 = 
unhex
[()
ch
];

1761 i‡(
unhex_vÆ
 == -1) {

1762 
	`SET_ERRNO
(
HPE_INVALID_CHUNK_SIZE
);

1763 
îr‹
;

1766 
∑r£r
->
c⁄ã¡_Àngth
 = 
unhex_vÆ
;

1767 
∑r£r
->
°©e
 = 
s_chunk_size
;

1771 
s_chunk_size
:

1773 
uöt64_t
 
t
;

1775 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1777 i‡(
ch
 =
CR
) {

1778 
∑r£r
->
°©e
 = 
s_chunk_size_Æmo°_d⁄e
;

1782 
unhex_vÆ
 = 
unhex
[()
ch
];

1784 i‡(
unhex_vÆ
 == -1) {

1785 i‡(
ch
 == ';' || ch == ' ') {

1786 
∑r£r
->
°©e
 = 
s_chunk_∑ømëîs
;

1790 
	`SET_ERRNO
(
HPE_INVALID_CHUNK_SIZE
);

1791 
îr‹
;

1794 
t
 = 
∑r£r
->
c⁄ã¡_Àngth
;

1795 
t
 *= 16;

1796 
t
 +
unhex_vÆ
;

1799 i‡((
ULLONG_MAX
 - 16Ë/ 16 < 
∑r£r
->
c⁄ã¡_Àngth
) {

1800 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1801 
îr‹
;

1804 
∑r£r
->
c⁄ã¡_Àngth
 = 
t
;

1808 
s_chunk_∑ømëîs
:

1810 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1812 i‡(
ch
 =
CR
) {

1813 
∑r£r
->
°©e
 = 
s_chunk_size_Æmo°_d⁄e
;

1819 
s_chunk_size_Æmo°_d⁄e
:

1821 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1822 
	`STRICT_CHECK
(
ch
 !
LF
);

1824 
∑r£r
->
ƒód
 = 0;

1826 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1827 
∑r£r
->
Êags
 |
F_TRAILING
;

1828 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1830 
∑r£r
->
°©e
 = 
s_chunk_d©a
;

1835 
s_chunk_d©a
:

1837 
uöt64_t
 
to_ªad
 = 
	`MIN
(
∑r£r
->
c⁄ã¡_Àngth
,

1838 (
uöt64_t
Ë((
d©a
 + 
Àn
Ë- 
p
));

1840 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1841 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 != 0

1842 && 
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
);

1847 
	`MARK
(
body
);

1848 
∑r£r
->
c⁄ã¡_Àngth
 -
to_ªad
;

1849 
p
 +
to_ªad
 - 1;

1851 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1852 
∑r£r
->
°©e
 = 
s_chunk_d©a_Æmo°_d⁄e
;

1858 
s_chunk_d©a_Æmo°_d⁄e
:

1859 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1860 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 == 0);

1861 
	`STRICT_CHECK
(
ch
 !
CR
);

1862 
∑r£r
->
°©e
 = 
s_chunk_d©a_d⁄e
;

1863 
	`CALLBACK_DATA
(
body
);

1866 
s_chunk_d©a_d⁄e
:

1867 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1868 
	`STRICT_CHECK
(
ch
 !
LF
);

1869 
∑r£r
->
ƒód
 = 0;

1870 
∑r£r
->
°©e
 = 
s_chunk_size_°¨t
;

1874 
	`as£π
(0 && "unhandled state");

1875 
	`SET_ERRNO
(
HPE_INVALID_INTERNAL_STATE
);

1876 
îr‹
;

1890 
	`as£π
(((
hódî_fõld_m¨k
 ? 1 : 0) +

1891 (
hódî_vÆue_m¨k
 ? 1 : 0) +

1892 (
uæ_m¨k
 ? 1 : 0) +

1893 (
body_m¨k
 ? 1 : 0) +

1894 (
°©us_m¨k
 ? 1 : 0)) <= 1);

1896 
	`CALLBACK_DATA_NOADVANCE
(
hódî_fõld
);

1897 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1898 
	`CALLBACK_DATA_NOADVANCE
(
uæ
);

1899 
	`CALLBACK_DATA_NOADVANCE
(
body
);

1900 
	`CALLBACK_DATA_NOADVANCE
(
°©us
);

1902  
Àn
;

1904 
îr‹
:

1905 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
) {

1906 
	`SET_ERRNO
(
HPE_UNKNOWN
);

1909  (
p
 - 
d©a
);

1910 
	}
}

1915 
	$hâp_mesßge_√eds_eof
 (c⁄° 
hâp_∑r£r
 *
∑r£r
)

1917 i‡(
∑r£r
->
ty≥
 =
HTTP_REQUEST
) {

1922 i‡(
∑r£r
->
°©us_code
 / 100 == 1 ||

1923 
∑r£r
->
°©us_code
 == 204 ||

1924 
∑r£r
->
°©us_code
 == 304 ||

1925 
∑r£r
->
Êags
 & 
F_SKIPBODY
) {

1929 i‡((
∑r£r
->
Êags
 & 
F_CHUNKED
Ë||Ö¨£r->
c⁄ã¡_Àngth
 !
ULLONG_MAX
) {

1934 
	}
}

1938 
	$hâp_should_kìp_Æive
 (c⁄° 
hâp_∑r£r
 *
∑r£r
)

1940 i‡(
∑r£r
->
hâp_maj‹
 > 0 &&Ö¨£r->
hâp_mö‹
 > 0) {

1942 i‡(
∑r£r
->
Êags
 & 
F_CONNECTION_CLOSE
) {

1947 i‡(!(
∑r£r
->
Êags
 & 
F_CONNECTION_KEEP_ALIVE
)) {

1952  !
	`hâp_mesßge_√eds_eof
(
∑r£r
);

1953 
	}
}

1957 
	$hâp_mëhod_°r
 (
hâp_mëhod
 
m
)

1959  
	`ELEM_AT
(
mëhod_°rögs
, 
m
, "<unknown>");

1960 
	}
}

1964 
	$hâp_∑r£r_öô
 (
hâp_∑r£r
 *
∑r£r
, 
hâp_∑r£r_ty≥
 
t
)

1966 *
d©a
 = 
∑r£r
->data;

1967 
	`mem£t
(
∑r£r
, 0, (*parser));

1968 
∑r£r
->
d©a
 = data;

1969 
∑r£r
->
ty≥
 = 
t
;

1970 
∑r£r
->
°©e
 = (
t
 =
HTTP_REQUEST
 ? 
s_°¨t_ªq
 : (à=
HTTP_RESPONSE
 ? 
s_°¨t_ªs
 : 
s_°¨t_ªq_‹_ªs
));

1971 
∑r£r
->
hâp_î∫o
 = 
HPE_OK
;

1972 
	}
}

1975 
	$hâp_î∫o_«me
(
hâp_î∫o
 
îr
) {

1976 
	`as£π
(
îr
 < ((
hâp_°ªº‹_èb
)/(http_strerror_tab[0])));

1977  
hâp_°ªº‹_èb
[
îr
].
«me
;

1978 
	}
}

1981 
	$hâp_î∫o_des¸ùti⁄
(
hâp_î∫o
 
îr
) {

1982 
	`as£π
(
îr
 < ((
hâp_°ªº‹_èb
)/(http_strerror_tab[0])));

1983  
hâp_°ªº‹_èb
[
îr
].
des¸ùti⁄
;

1984 
	}
}

1986 
hâp_ho°_°©e


1987 
	$hâp_∑r£_ho°_ch¨
(
hâp_ho°_°©e
 
s
, c⁄° 
ch
) {

1988 
s
) {

1989 
s_hâp_u£röfo
:

1990 
s_hâp_u£röfo_°¨t
:

1991 i‡(
ch
 == '@') {

1992  
s_hâp_ho°_°¨t
;

1995 i‡(
	`IS_USERINFO_CHAR
(
ch
)) {

1996  
s_hâp_u£röfo
;

2000 
s_hâp_ho°_°¨t
:

2001 i‡(
ch
 == '[') {

2002  
s_hâp_ho°_v6_°¨t
;

2005 i‡(
	`IS_HOST_CHAR
(
ch
)) {

2006  
s_hâp_ho°
;

2011 
s_hâp_ho°
:

2012 i‡(
	`IS_HOST_CHAR
(
ch
)) {

2013  
s_hâp_ho°
;

2017 
s_hâp_ho°_v6_íd
:

2018 i‡(
ch
 == ':') {

2019  
s_hâp_ho°_p‹t_°¨t
;

2024 
s_hâp_ho°_v6
:

2025 i‡(
ch
 == ']') {

2026  
s_hâp_ho°_v6_íd
;

2030 
s_hâp_ho°_v6_°¨t
:

2031 i‡(
	`IS_HEX
(
ch
) || ch == ':' || ch == '.') {

2032  
s_hâp_ho°_v6
;

2037 
s_hâp_ho°_p‹t
:

2038 
s_hâp_ho°_p‹t_°¨t
:

2039 i‡(
	`IS_NUM
(
ch
)) {

2040  
s_hâp_ho°_p‹t
;

2048  
s_hâp_ho°_dód
;

2049 
	}
}

2052 
	$hâp_∑r£_ho°
(c⁄° * 
buf
, 
hâp_∑r£r_uæ
 *
u
, 
found_©
) {

2053 
hâp_ho°_°©e
 
s
;

2055 c⁄° *
p
;

2056 
size_t
 
buÊí
 = 
u
->
fõld_d©a
[
UF_HOST
].
off
 + u->fõld_d©a[UF_HOST].
Àn
;

2058 
u
->
fõld_d©a
[
UF_HOST
].
Àn
 = 0;

2060 
s
 = 
found_©
 ? 
s_hâp_u£röfo_°¨t
 : 
s_hâp_ho°_°¨t
;

2062 
p
 = 
buf
 + 
u
->
fõld_d©a
[
UF_HOST
].
off
;Ö < bu‡+ 
buÊí
;Ö++) {

2063 
hâp_ho°_°©e
 
√w_s
 = 
	`hâp_∑r£_ho°_ch¨
(
s
, *
p
);

2065 i‡(
√w_s
 =
s_hâp_ho°_dód
) {

2069 
√w_s
) {

2070 
s_hâp_ho°
:

2071 i‡(
s
 !
s_hâp_ho°
) {

2072 
u
->
fõld_d©a
[
UF_HOST
].
off
 = 
p
 - 
buf
;

2074 
u
->
fõld_d©a
[
UF_HOST
].
Àn
++;

2077 
s_hâp_ho°_v6
:

2078 i‡(
s
 !
s_hâp_ho°_v6
) {

2079 
u
->
fõld_d©a
[
UF_HOST
].
off
 = 
p
 - 
buf
;

2081 
u
->
fõld_d©a
[
UF_HOST
].
Àn
++;

2084 
s_hâp_ho°_p‹t
:

2085 i‡(
s
 !
s_hâp_ho°_p‹t
) {

2086 
u
->
fõld_d©a
[
UF_PORT
].
off
 = 
p
 - 
buf
;

2087 
u
->
fõld_d©a
[
UF_PORT
].
Àn
 = 0;

2088 
u
->
fõld_£t
 |(1 << 
UF_PORT
);

2090 
u
->
fõld_d©a
[
UF_PORT
].
Àn
++;

2093 
s_hâp_u£röfo
:

2094 i‡(
s
 !
s_hâp_u£röfo
) {

2095 
u
->
fõld_d©a
[
UF_USERINFO
].
off
 = 
p
 - 
buf
 ;

2096 
u
->
fõld_d©a
[
UF_USERINFO
].
Àn
 = 0;

2097 
u
->
fõld_£t
 |(1 << 
UF_USERINFO
);

2099 
u
->
fõld_d©a
[
UF_USERINFO
].
Àn
++;

2105 
s
 = 
√w_s
;

2109 
s
) {

2110 
s_hâp_ho°_°¨t
:

2111 
s_hâp_ho°_v6_°¨t
:

2112 
s_hâp_ho°_v6
:

2113 
s_hâp_ho°_p‹t_°¨t
:

2114 
s_hâp_u£röfo
:

2115 
s_hâp_u£röfo_°¨t
:

2122 
	}
}

2125 
	$hâp_∑r£r_∑r£_uæ
(c⁄° *
buf
, 
size_t
 
buÊí
, 
is_c⁄√˘
,

2126 
hâp_∑r£r_uæ
 *
u
)

2128 
°©e
 
s
;

2129 c⁄° *
p
;

2130 
hâp_∑r£r_uæ_fõlds
 
uf
, 
ﬁd_uf
;

2131 
found_©
 = 0;

2133 
u
->
p‹t
 = u->
fõld_£t
 = 0;

2134 
s
 = 
is_c⁄√˘
 ? 
s_ªq_£rvî_°¨t
 : 
s_ªq_•a˚s_bef‹e_uæ
;

2135 
ﬁd_uf
 = 
UF_MAX
;

2137 
p
 = 
buf
;Ö < bu‡+ 
buÊí
;Ö++) {

2138 
s
 = 
	`∑r£_uæ_ch¨
(s, *
p
);

2141 
s
) {

2142 
s_dód
:

2146 
s_ªq_schema_¶ash
:

2147 
s_ªq_schema_¶ash_¶ash
:

2148 
s_ªq_£rvî_°¨t
:

2149 
s_ªq_quîy_°rög_°¨t
:

2150 
s_ªq_‰agmít_°¨t
:

2153 
s_ªq_schema
:

2154 
uf
 = 
UF_SCHEMA
;

2157 
s_ªq_£rvî_wôh_©
:

2158 
found_©
 = 1;

2161 
s_ªq_£rvî
:

2162 
uf
 = 
UF_HOST
;

2165 
s_ªq_∑th
:

2166 
uf
 = 
UF_PATH
;

2169 
s_ªq_quîy_°rög
:

2170 
uf
 = 
UF_QUERY
;

2173 
s_ªq_‰agmít
:

2174 
uf
 = 
UF_FRAGMENT
;

2178 
	`as£π
(!"Unexpected state");

2183 i‡(
uf
 =
ﬁd_uf
) {

2184 
u
->
fõld_d©a
[
uf
].
Àn
++;

2188 
u
->
fõld_d©a
[
uf
].
off
 = 
p
 - 
buf
;

2189 
u
->
fõld_d©a
[
uf
].
Àn
 = 1;

2191 
u
->
fõld_£t
 |(1 << 
uf
);

2192 
ﬁd_uf
 = 
uf
;

2197 i‡((
u
->
fõld_£t
 & ((1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
))) != 0) {

2198 i‡(
	`hâp_∑r£_ho°
(
buf
, 
u
, 
found_©
) != 0) {

2204 i‡(
is_c⁄√˘
 && 
u
->
fõld_£t
 !((1 << 
UF_HOST
)|(1 << 
UF_PORT
))) {

2208 i‡(
u
->
fõld_£t
 & (1 << 
UF_PORT
)) {

2210 
v
 = 
	`°πoul
(
buf
 + 
u
->
fõld_d©a
[
UF_PORT
].
off
, 
NULL
, 10);

2213 i‡(
v
 > 0xffff) {

2217 
u
->
p‹t
 = (
uöt16_t
Ë
v
;

2221 
	}
}

2224 
	$hâp_∑r£r_∑u£
(
hâp_∑r£r
 *
∑r£r
, 
∑u£d
) {

2229 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
 ||

2230 
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_PAUSED
) {

2231 
	`SET_ERRNO
((
∑u£d
Ë? 
HPE_PAUSED
 : 
HPE_OK
);

2233 
	`as£π
(0 && "AttemptingÅoÖauseÖarser inÉrror state");

2235 
	}
}

2238 
	$hâp_body_is_föÆ
(c⁄° 
hâp_∑r£r
 *
∑r£r
) {

2239  
∑r£r
->
°©e
 =
s_mesßge_d⁄e
;

2240 
	}
}

2243 
	$hâp_∑r£r_vîsi⁄
() {

2244  
HTTP_PARSER_VERSION_MAJOR
 * 0x10000 |

2245 
HTTP_PARSER_VERSION_MINOR
 * 0x00100 |

2246 
HTTP_PARSER_VERSION_PATCH
 * 0x00001;

2247 
	}
}

	@/root/grocery-shop/language/gcc/src/httpParse/http_parser.h

21 #i‚de‡
hâp_∑r£r_h


22 
	#hâp_∑r£r_h


	)

23 #ifde‡
__˝lu•lus


28 
	#HTTP_PARSER_VERSION_MAJOR
 2

	)

29 
	#HTTP_PARSER_VERSION_MINOR
 3

	)

30 
	#HTTP_PARSER_VERSION_PATCH
 0

	)

32 
	~<sys/ty≥s.h
>

33 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
Ë&& (!deföed(
_MSC_VER
) || _MSC_VER<1600)

34 
	~<Ba£Tsd.h
>

35 
	~<°ddef.h
>

36 
__ötjob
 
	tötjob_t
;

37 
	t__ötjob
 
	tuötjob_t
;

38 
__öt16
 
	töt16_t
;

39 
	t__öt16
 
	tuöt16_t
;

40 
__öt32
 
	töt32_t
;

41 
	t__öt32
 
	tuöt32_t
;

42 
__öt64
 
	töt64_t
;

43 
	t__öt64
 
	tuöt64_t
;

45 
	~<°döt.h
>

51 #i‚de‡
HTTP_PARSER_STRICT


52 
	#HTTP_PARSER_STRICT
 1

	)

62 #i‚de‡
HTTP_MAX_HEADER_SIZE


63 
	#HTTP_MAX_HEADER_SIZE
 (
job0
*1024)

	)

66 
hâp_∑r£r
 
	thâp_∑r£r
;

67 
hâp_∑r£r_£âögs
 
	thâp_∑r£r_£âögs
;

83 (*
hâp_d©a_cb
Ë(
	thâp_∑r£r
*, c⁄° *
	t©
, 
	tsize_t
 
	tÀngth
);

84 (*
hâp_cb
Ë(
	thâp_∑r£r
*);

88 
	#HTTP_METHOD_MAP
(
XX
) \

89 
	`XX
(0, 
DELETE
, DELETE) \

90 
	`XX
(1, 
GET
, GET) \

91 
	`XX
(2, 
HEAD
, HEAD) \

92 
	`XX
(3, 
POST
, POST) \

93 
	`XX
(4, 
PUT
, PUT) \

95 
	`XX
(5, 
CONNECT
, CONNECT) \

96 
	`XX
(6, 
OPTIONS
, OPTIONS) \

97 
	`XX
(7, 
TRACE
, TRACE) \

99 
	`XX
(
job
, 
COPY
, COPY) \

100 
	`XX
(9, 
LOCK
, LOCK) \

101 
	`XX
(10, 
MKCOL
, MKCOL) \

102 
	`XX
(11, 
MOVE
, MOVE) \

103 
	`XX
(12, 
PROPFIND
, PROPFIND) \

104 
	`XX
(13, 
PROPPATCH
, PROPPATCH) \

105 
	`XX
(14, 
SEARCH
, SEARCH) \

106 
	`XX
(15, 
UNLOCK
, UNLOCK) \

108 
	`XX
(16, 
REPORT
, REPORT) \

109 
	`XX
(17, 
MKACTIVITY
, MKACTIVITY) \

110 
	`XX
(1
job
, 
CHECKOUT
, CHECKOUT) \

111 
	`XX
(19, 
MERGE
, MERGE) \

113 
	`XX
(20, 
MSEARCH
, 
M
-
SEARCH
) \

114 
	`XX
(21, 
NOTIFY
, NOTIFY) \

115 
	`XX
(22, 
SUBSCRIBE
, SUBSCRIBE) \

116 
	`XX
(23, 
UNSUBSCRIBE
, UNSUBSCRIBE) \

118 
	`XX
(24, 
PATCH
, PATCH) \

119 
	`XX
(25, 
PURGE
, PURGE) \

121 
	`XX
(26, 
MKCALENDAR
, MKCALENDAR) \

122 

	)

123 
	ehâp_mëhod


125 
	#XX
(
num
, 
«me
, 
°rög
Ë
HTTP_
##«mênum,

	)

126 
HTTP_METHOD_MAP
(
XX
)

127 #unde‡
XX


131 
	ehâp_∑r£r_ty≥
 { 
HTTP_REQUEST
, 
HTTP_RESPONSE
, 
HTTP_BOTH
 };

135 
	eÊags


136 { 
F_CHUNKED
 = 1 << 0

137 , 
F_CONNECTION_KEEP_ALIVE
 = 1 << 1

138 , 
F_CONNECTION_CLOSE
 = 1 << 2

139 , 
F_TRAILING
 = 1 << 3

140 , 
F_UPGRADE
 = 1 << 4

141 , 
F_SKIPBODY
 = 1 << 5

149 
	#HTTP_ERRNO_MAP
(
XX
) \

151 
	`XX
(
OK
, "success") \

154 
	`XX
(
CB_mesßge_begö
, "the on_message_begin callback failed") \

155 
	`XX
(
CB_uæ
, "the on_url callback failed") \

156 
	`XX
(
CB_hódî_fõld
, "the on_header_field callback failed") \

157 
	`XX
(
CB_hódî_vÆue
, "the on_header_value callback failed") \

158 
	`XX
(
CB_hódîs_com∂ëe
, "the on_headers_complete callback failed") \

159 
	`XX
(
CB_body
, "the on_body callback failed") \

160 
	`XX
(
CB_mesßge_com∂ëe
, "the on_message_complete callback failed") \

161 
	`XX
(
CB_°©us
, "the on_status callback failed") \

164 
	`XX
(
INVALID_EOF_STATE
, "streamÉndedátán unexpectedÅime") \

165 
	`XX
(
HEADER_OVERFLOW
, \

167 
	`XX
(
CLOSED_CONNECTION
, \

169 
	`XX
(
INVALID_VERSION
, "invalid HTTP version") \

170 
	`XX
(
INVALID_STATUS
, "invalid HTTP status code") \

171 
	`XX
(
INVALID_METHOD
, "invalid HTTP method") \

172 
	`XX
(
INVALID_URL
, "invalid URL") \

173 
	`XX
(
INVALID_HOST
, "invalid host") \

174 
	`XX
(
INVALID_PORT
, "invalidÖort") \

175 
	`XX
(
INVALID_PATH
, "invalidÖath") \

176 
	`XX
(
INVALID_QUERY_STRING
, "invalid query string") \

177 
	`XX
(
INVALID_FRAGMENT
, "invalid fragment") \

178 
	`XX
(
LF_EXPECTED
, "LF characterÉxpected") \

179 
	`XX
(
INVALID_HEADER_TOKEN
, "invalid character in header") \

180 
	`XX
(
INVALID_CONTENT_LENGTH
, \

182 
	`XX
(
INVALID_CHUNK_SIZE
, \

184 
	`XX
(
INVALID_CONSTANT
, "invalid constant string") \

185 
	`XX
(
INVALID_INTERNAL_STATE
, "encountered unexpected internal state")\

186 
	`XX
(
STRICT
, "strict modeássertion failed") \

187 
	`XX
(
PAUSED
, "parser isÖaused") \

188 
	`XX
(
UNKNOWN
, "™ unknow¿îr‹ occuºed")

	)

192 
	#HTTP_ERRNO_GEN
(
n
, 
s
Ë
HPE_
##n,

	)

193 
	ehâp_î∫o
 {

194 
HTTP_ERRNO_MAP
(
HTTP_ERRNO_GEN
)

196 #unde‡
HTTP_ERRNO_GEN


200 
	#HTTP_PARSER_ERRNO
(
p
Ë((
hâp_î∫o
Ë’)->hâp_î∫o)

	)

203 
	shâp_∑r£r
 {

205 
ty≥
 : 2;

206 
Êags
 : 6;

207 
°©e
 : 
job
;

208 
hódî_°©e
 : 
job
;

209 
ödex
 : 
job
;

211 
uöt32_t
 
ƒód
;

212 
uöt64_t
 
c⁄ã¡_Àngth
;

215 
hâp_maj‹
;

216 
hâp_mö‹
;

217 
°©us_code
 : 16;

218 
mëhod
 : 
job
;

219 
hâp_î∫o
 : 7;

226 
upgøde
 : 1;

229 *
d©a
;

233 
	shâp_∑r£r_£âögs
 {

234 
hâp_cb
 
⁄_mesßge_begö
;

235 
hâp_d©a_cb
 
⁄_uæ
;

236 
hâp_d©a_cb
 
⁄_°©us
;

237 
hâp_d©a_cb
 
⁄_hódî_fõld
;

238 
hâp_d©a_cb
 
⁄_hódî_vÆue
;

239 
hâp_cb
 
⁄_hódîs_com∂ëe
;

240 
hâp_d©a_cb
 
⁄_body
;

241 
hâp_cb
 
⁄_mesßge_com∂ëe
;

245 
	ehâp_∑r£r_uæ_fõlds


246 { 
UF_SCHEMA
 = 0

247 , 
UF_HOST
 = 1

248 , 
UF_PORT
 = 2

249 , 
UF_PATH
 = 3

250 , 
UF_QUERY
 = 4

251 , 
UF_FRAGMENT
 = 5

252 , 
UF_USERINFO
 = 6

253 , 
UF_MAX
 = 7

264 
	shâp_∑r£r_uæ
 {

265 
uöt16_t
 
fõld_£t
;

266 
uöt16_t
 
p‹t
;

269 
uöt16_t
 
off
;

270 
uöt16_t
 
Àn
;

271 } 
fõld_d©a
[
UF_MAX
];

285 
hâp_∑r£r_vîsi⁄
();

287 
hâp_∑r£r_öô
(
hâp_∑r£r
 *
∑r£r
, 
hâp_∑r£r_ty≥
 
ty≥
);

292 
size_t
 
hâp_∑r£r_execuã
(
hâp_∑r£r
 *
∑r£r
,

293 c⁄° 
hâp_∑r£r_£âögs
 *
£âögs
,

294 c⁄° *
d©a
,

295 
size_t
 
Àn
);

304 
hâp_should_kìp_Æive
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

307 c⁄° *
hâp_mëhod_°r
(
hâp_mëhod
 
m
);

310 c⁄° *
hâp_î∫o_«me
(
hâp_î∫o
 
îr
);

313 c⁄° *
hâp_î∫o_des¸ùti⁄
(
hâp_î∫o
 
îr
);

316 
hâp_∑r£r_∑r£_uæ
(c⁄° *
buf
, 
size_t
 
buÊí
,

317 
is_c⁄√˘
,

318 
hâp_∑r£r_uæ
 *
u
);

321 
hâp_∑r£r_∑u£
(
hâp_∑r£r
 *
∑r£r
, 
∑u£d
);

324 
hâp_body_is_föÆ
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

326 #ifde‡
__˝lu•lus


	@/root/grocery-shop/language/gcc/src/httpParse/http_uuid.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<time.h
>

12 
	$gë_cur_d©ëime
(*
buf
)

14 
tm
 *
tmTime
 = 
NULL
;

15 
time_t
 
timeT
;

16 c⁄° *
timeModuÀ
 ="%Y%m%d%H%M%S-";

18 i‡(
NULL
 =
buf
) {

22 i‡(
	`time
(&
timeT
) < 0) {

25 
tmTime
 = 
	`loˇ…ime
(&
timeT
);

26 
	`°r·ime
(
buf
, 16, 
timeModuÀ
, 
tmTime
);

29 
	}
}

36 *
	$øndom_uuid
–
buf
[4
job
] )

38 c⁄° *
c
 = "job9ab";

39 *
pos
 = 
NULL
;

40 
n
, 
b
 = 0;

43 
	`mem£t
(
buf
, 0, 4
job
);

46 i‡(
	`gë_cur_d©ëime
(
buf
) < 0) {

47  
NULL
;

49 
pos
 = 
buf
 + 
	`°æí
(buf);

52  
n
 = 0;Ç < 16; ++n ) {

53 
b
 = 
	`ønd
()%255;

54 
n
) {

56 
	`•rötf
(
pos
, "4%x", 
b
%15 );

58 
job
:

59 
	`•rötf
(
pos
, "%c%x", 
c
[
	`ønd
()%
	`°æí
(c)], 
b
%15 );

62 
	`•rötf
(
pos
, "%02x", 
b
);

65 
pos
 += 2;

67 *
pos
 = '\0';

68  
buf
;

69 
	}
}

71 
	$maö
()

73 
guid
[4
job
];

74 
	`øndom_uuid
(
guid
);

75 
	`¥ötf
("guid = %s\n", 
guid
);

76 
	`øndom_uuid
(
guid
);

77 
	`¥ötf
("guid = %s\n", 
guid
);

78 
	`øndom_uuid
(
guid
);

79 
	`¥ötf
("guid = %s\n", 
guid
);

80 
	`øndom_uuid
(
guid
);

81 
	`¥ötf
("guid = %s\n", 
guid
);

82 
	}
}

	@/root/grocery-shop/language/gcc/src/httpParse/test.c

21 
	~"hâp_∑r£r.h
"

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<°d¨g.h
>

28 
	~<uni°d.h
>

30 #i‡
deföed
(
__APPLE__
)

31 #unde‡
°æˇt


32 #unde‡
°æn˝y


33 #unde‡
°æ˝y


36 #unde‡
TRUE


37 
	#TRUE
 1

	)

38 #unde‡
FALSE


39 
	#FALSE
 0

	)

41 
	#MAX_HEADERS
 13

	)

42 
	#MAX_ELEMENT_SIZE
 204
job


	)

44 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

46 
hâp_∑r£r
 *
	g∑r£r
;

48 
	smesßge
 {

49 c⁄° *
	m«me
;

50 c⁄° *
	møw
;

51 
hâp_∑r£r_ty≥
 
	mty≥
;

52 
hâp_mëhod
 
	mmëhod
;

53 
	m°©us_code
;

54 
	mª•⁄£_°©us
[
MAX_ELEMENT_SIZE
];

55 
	mªque°_∑th
[
MAX_ELEMENT_SIZE
];

56 
	mªque°_uæ
[
MAX_ELEMENT_SIZE
];

57 
	m‰agmít
[
MAX_ELEMENT_SIZE
];

58 
	mquîy_°rög
[
MAX_ELEMENT_SIZE
];

59 
	mbody
[
MAX_ELEMENT_SIZE
];

60 
size_t
 
	mbody_size
;

61 c⁄° *
	mho°
;

62 c⁄° *
	mu£röfo
;

63 
uöt16_t
 
	mp‹t
;

64 
	mnum_hódîs
;

65 íum { 
	mNONE
=0, 
	mFIELD
, 
	mVALUE
 } 
	mœ°_hódî_ñemít
;

66 
	mhódîs
 [
MAX_HEADERS
][2][
MAX_ELEMENT_SIZE
];

67 
	mshould_kìp_Æive
;

69 c⁄° *
	mupgøde
;

71 
	mhâp_maj‹
;

72 
	mhâp_mö‹
;

74 
	mmesßge_begö_cb_ˇŒed
;

75 
	mhódîs_com∂ëe_cb_ˇŒed
;

76 
	mmesßge_com∂ëe_cb_ˇŒed
;

77 
	mmesßge_com∂ëe_⁄_eof
;

78 
	mbody_is_föÆ
;

81 
	gcuºíéy_∑rsög_eof
;

83 
mesßge
 
	gmesßges
[5];

84 
	gnum_mesßges
;

85 
hâp_∑r£r_£âögs
 *
	gcuºít_∑u£_∑r£r
;

88 c⁄° 
mesßge
 
	gªque°s
[] =

89 
	#CURL_GET
 0

	)

90 { {.
«me
= "curl get"

91 ,.
	gty≥

HTTP_REQUEST


92 ,.
	gøw
= "GET /test HTTP/1.1\r\n"

97 ,.
	gshould_kìp_Æive

TRUE


98 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


99 ,.
	ghâp_maj‹
= 1

100 ,.
	ghâp_mö‹
= 1

101 ,.
	gmëhod

HTTP_GET


102 ,.
	gquîy_°rög
= ""

103 ,.
	g‰agmít
= ""

104 ,.
	gªque°_∑th
= "/test"

105 ,.
	gªque°_uæ
= "/test"

106 ,.
	gnum_hódîs
= 3

107 ,.
	ghódîs
=

112 ,.
	gbody
= ""

115 
	#FIREFOX_GET
 1

	)

116 , {.
	g«me
= "firefox get"

117 ,.
	gty≥

HTTP_REQUEST


118 ,.
	gøw
= "GET /favicon.ico HTTP/1.1\r\n"

128 ,.
	gshould_kìp_Æive

TRUE


129 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


130 ,.
	ghâp_maj‹
= 1

131 ,.
	ghâp_mö‹
= 1

132 ,.
	gmëhod

HTTP_GET


133 ,.
	gquîy_°rög
= ""

134 ,.
	g‰agmít
= ""

135 ,.
	gªque°_∑th
= "/favicon.ico"

136 ,.
	gªque°_uæ
= "/favicon.ico"

137 ,.
	gnum_hódîs

job


138 ,.
	ghódîs
=

148 ,.
	gbody
= ""

151 
	#DUMBFUCK
 2

	)

152 , {.
	g«me
= "dumbfuck"

153 ,.
	gty≥

HTTP_REQUEST


154 ,.
	gøw
= "GET /dumbfuck HTTP/1.1\r\n"

157 ,.
	gshould_kìp_Æive

TRUE


158 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


159 ,.
	ghâp_maj‹
= 1

160 ,.
	ghâp_mö‹
= 1

161 ,.
	gmëhod

HTTP_GET


162 ,.
	gquîy_°rög
= ""

163 ,.
	g‰agmít
= ""

164 ,.
	gªque°_∑th
= "/dumbfuck"

165 ,.
	gªque°_uæ
= "/dumbfuck"

166 ,.
	gnum_hódîs
= 1

167 ,.
	ghódîs
=

170 ,.
	gbody
= ""

173 
	#FRAGMENT_IN_URI
 3

	)

174 , {.
	g«me
= "fragment in url"

175 ,.
	gty≥

HTTP_REQUEST


176 ,.
	gøw
= "GET /forums/1/topics/2375?page=1#posts-1740job HTTP/1.1\r\n"

178 ,.
	gshould_kìp_Æive

TRUE


179 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


180 ,.
	ghâp_maj‹
= 1

181 ,.
	ghâp_mö‹
= 1

182 ,.
	gmëhod

HTTP_GET


183 ,.
	gquîy_°rög
= "page=1"

184 ,.
	g‰agmít
= "posts-1740job"

185 ,.
	gªque°_∑th
= "/forums/1/topics/2375"

187 ,.
	gªque°_uæ
= "/forums/1/topics/2375?page=1#posts-1740job"

188 ,.
	gnum_hódîs
= 0

189 ,.
	gbody
= ""

192 
	#GET_NO_HEADERS_NO_BODY
 4

	)

193 , {.
	g«me
= "getÇo headersÇo body"

194 ,.
	gty≥

HTTP_REQUEST


195 ,.
	gøw
= "GET /get_no_headers_no_body/world HTTP/1.1\r\n"

197 ,.
	gshould_kìp_Æive

TRUE


198 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


199 ,.
	ghâp_maj‹
= 1

200 ,.
	ghâp_mö‹
= 1

201 ,.
	gmëhod

HTTP_GET


202 ,.
	gquîy_°rög
= ""

203 ,.
	g‰agmít
= ""

204 ,.
	gªque°_∑th
= "/get_no_headers_no_body/world"

205 ,.
	gªque°_uæ
= "/get_no_headers_no_body/world"

206 ,.
	gnum_hódîs
= 0

207 ,.
	gbody
= ""

210 
	#GET_ONE_HEADER_NO_BODY
 5

	)

211 , {.
	g«me
= "get one headerÇo body"

212 ,.
	gty≥

HTTP_REQUEST


213 ,.
	gøw
= "GET /get_one_header_no_body HTTP/1.1\r\n"

216 ,.
	gshould_kìp_Æive

TRUE


217 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


218 ,.
	ghâp_maj‹
= 1

219 ,.
	ghâp_mö‹
= 1

220 ,.
	gmëhod

HTTP_GET


221 ,.
	gquîy_°rög
= ""

222 ,.
	g‰agmít
= ""

223 ,.
	gªque°_∑th
= "/get_one_header_no_body"

224 ,.
	gªque°_uæ
= "/get_one_header_no_body"

225 ,.
	gnum_hódîs
= 1

226 ,.
	ghódîs
=

229 ,.
	gbody
= ""

232 
	#GET_FUNKY_CONTENT_LENGTH
 6

	)

233 , {.
	g«me
= "get funky contentÜength body hello"

234 ,.
	gty≥

HTTP_REQUEST


235 ,.
	gøw
= "GET /get_funky_content_length_body_hello HTTP/1.0\r\n"

239 ,.
	gshould_kìp_Æive

FALSE


240 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


241 ,.
	ghâp_maj‹
= 1

242 ,.
	ghâp_mö‹
= 0

243 ,.
	gmëhod

HTTP_GET


244 ,.
	gquîy_°rög
= ""

245 ,.
	g‰agmít
= ""

246 ,.
	gªque°_∑th
= "/get_funky_content_length_body_hello"

247 ,.
	gªque°_uæ
= "/get_funky_content_length_body_hello"

248 ,.
	gnum_hódîs
= 1

249 ,.
	ghódîs
=

252 ,.
	gbody
= "HELLO"

255 
	#POST_IDENTITY_BODY_WORLD
 7

	)

256 , {.
	g«me
= "post identity body world"

257 ,.
	gty≥

HTTP_REQUEST


258 ,.
	gøw
= "POST /post_identity_body_world?q=search#hey HTTP/1.1\r\n"

264 ,.
	gshould_kìp_Æive

TRUE


265 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


266 ,.
	ghâp_maj‹
= 1

267 ,.
	ghâp_mö‹
= 1

268 ,.
	gmëhod

HTTP_POST


269 ,.
	gquîy_°rög
= "q=search"

270 ,.
	g‰agmít
= "hey"

271 ,.
	gªque°_∑th
= "/post_identity_body_world"

272 ,.
	gªque°_uæ
= "/post_identity_body_world?q=search#hey"

273 ,.
	gnum_hódîs
= 3

274 ,.
	ghódîs
=

279 ,.
	gbody
= "World"

282 
	#POST_CHUNKED_ALL_YOUR_BASE
 
job


	)

283 , {.
	g«me
= "post - chunked body:áll your baseáre belongÅo us"

284 ,.
	gty≥

HTTP_REQUEST


285 ,.
	gøw
= "POST /post_chunked_all_your_base HTTP/1.1\r\n"

291 ,.
	gshould_kìp_Æive

TRUE


292 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


293 ,.
	ghâp_maj‹
= 1

294 ,.
	ghâp_mö‹
= 1

295 ,.
	gmëhod

HTTP_POST


296 ,.
	gquîy_°rög
= ""

297 ,.
	g‰agmít
= ""

298 ,.
	gªque°_∑th
= "/post_chunked_all_your_base"

299 ,.
	gªque°_uæ
= "/post_chunked_all_your_base"

300 ,.
	gnum_hódîs
= 1

301 ,.
	ghódîs
=

304 ,.
	gbody
= "all your baseáre belongÅo us"

307 
	#TWO_CHUNKS_MULT_ZERO_END
 9

	)

308 , {.
	g«me
= "two chunks ;Åriple zeroÉnding"

309 ,.
	gty≥

HTTP_REQUEST


310 ,.
	gøw
= "POST /two_chunks_mult_zero_end HTTP/1.1\r\n"

317 ,.
	gshould_kìp_Æive

TRUE


318 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


319 ,.
	ghâp_maj‹
= 1

320 ,.
	ghâp_mö‹
= 1

321 ,.
	gmëhod

HTTP_POST


322 ,.
	gquîy_°rög
= ""

323 ,.
	g‰agmít
= ""

324 ,.
	gªque°_∑th
= "/two_chunks_mult_zero_end"

325 ,.
	gªque°_uæ
= "/two_chunks_mult_zero_end"

326 ,.
	gnum_hódîs
= 1

327 ,.
	ghódîs
=

330 ,.
	gbody
= "hello world"

333 
	#CHUNKED_W_TRAILING_HEADERS
 10

	)

334 , {.
	g«me
= "chunked withÅrailing headers. blech."

335 ,.
	gty≥

HTTP_REQUEST


336 ,.
	gøw
= "POST /chunked_w_trailing_headers HTTP/1.1\r\n"

345 ,.
	gshould_kìp_Æive

TRUE


346 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


347 ,.
	ghâp_maj‹
= 1

348 ,.
	ghâp_mö‹
= 1

349 ,.
	gmëhod

HTTP_POST


350 ,.
	gquîy_°rög
= ""

351 ,.
	g‰agmít
= ""

352 ,.
	gªque°_∑th
= "/chunked_w_trailing_headers"

353 ,.
	gªque°_uæ
= "/chunked_w_trailing_headers"

354 ,.
	gnum_hódîs
= 3

355 ,.
	ghódîs
=

360 ,.
	gbody
= "hello world"

363 
	#CHUNKED_W_BULLSHIT_AFTER_LENGTH
 11

	)

364 , {.
	g«me
= "with bullshitáfterÅheÜength"

365 ,.
	gty≥

HTTP_REQUEST


366 ,.
	gøw
= "POST /chunked_w_bullshit_after_length HTTP/1.1\r\n"

373 ,.
	gshould_kìp_Æive

TRUE


374 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


375 ,.
	ghâp_maj‹
= 1

376 ,.
	ghâp_mö‹
= 1

377 ,.
	gmëhod

HTTP_POST


378 ,.
	gquîy_°rög
= ""

379 ,.
	g‰agmít
= ""

380 ,.
	gªque°_∑th
= "/chunked_w_bullshit_after_length"

381 ,.
	gªque°_uæ
= "/chunked_w_bullshit_after_length"

382 ,.
	gnum_hódîs
= 1

383 ,.
	ghódîs
=

386 ,.
	gbody
= "hello world"

389 
	#WITH_QUOTES
 12

	)

390 , {.
	g«me
= "with quotes"

391 ,.
	gty≥

HTTP_REQUEST


392 ,.
	gøw
= "GET /with_\"stupid\"_quotes?foo=\"bar\" HTTP/1.1\r\n\r\n"

393 ,.
	gshould_kìp_Æive

TRUE


394 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


395 ,.
	ghâp_maj‹
= 1

396 ,.
	ghâp_mö‹
= 1

397 ,.
	gmëhod

HTTP_GET


398 ,.
	gquîy_°rög
= "foo=\"bar\""

399 ,.
	g‰agmít
= ""

400 ,.
	gªque°_∑th
= "/with_\"stupid\"_quotes"

401 ,.
	gªque°_uæ
= "/with_\"stupid\"_quotes?foo=\"bar\""

402 ,.
	gnum_hódîs
= 0

403 ,.
	ghódîs
= { }

404 ,.
	gbody
= ""

407 
	#APACHEBENCH_GET
 13

	)

413 , {.
	g«me
 = "apachebench get"

414 ,.
	gty≥

HTTP_REQUEST


415 ,.
	gøw
= "GET /test HTTP/1.0\r\n"

419 ,.
	gshould_kìp_Æive

FALSE


420 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


421 ,.
	ghâp_maj‹
= 1

422 ,.
	ghâp_mö‹
= 0

423 ,.
	gmëhod

HTTP_GET


424 ,.
	gquîy_°rög
= ""

425 ,.
	g‰agmít
= ""

426 ,.
	gªque°_∑th
= "/test"

427 ,.
	gªque°_uæ
= "/test"

428 ,.
	gnum_hódîs
= 3

429 ,.
	ghódîs
= { { "Host", "0.0.0.0:5000" }

433 ,.
	gbody
= ""

436 
	#QUERY_URL_WITH_QUESTION_MARK_GET
 14

	)

439 , {.
	g«me
 = "query url with question mark"

440 ,.
	gty≥

HTTP_REQUEST


441 ,.
	gøw
= "GET /test.cgi?foo=bar?baz HTTP/1.1\r\n\r\n"

442 ,.
	gshould_kìp_Æive

TRUE


443 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


444 ,.
	ghâp_maj‹
= 1

445 ,.
	ghâp_mö‹
= 1

446 ,.
	gmëhod

HTTP_GET


447 ,.
	gquîy_°rög
= "foo=bar?baz"

448 ,.
	g‰agmít
= ""

449 ,.
	gªque°_∑th
= "/test.cgi"

450 ,.
	gªque°_uæ
= "/test.cgi?foo=bar?baz"

451 ,.
	gnum_hódîs
= 0

452 ,.
	ghódîs
= {}

453 ,.
	gbody
= ""

456 
	#PREFIX_NEWLINE_GET
 15

	)

460 , {.
	g«me
 = "newlineÖrefix get"

461 ,.
	gty≥

HTTP_REQUEST


462 ,.
	gøw
= "\r\nGET /test HTTP/1.1\r\n\r\n"

463 ,.
	gshould_kìp_Æive

TRUE


464 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


465 ,.
	ghâp_maj‹
= 1

466 ,.
	ghâp_mö‹
= 1

467 ,.
	gmëhod

HTTP_GET


468 ,.
	gquîy_°rög
= ""

469 ,.
	g‰agmít
= ""

470 ,.
	gªque°_∑th
= "/test"

471 ,.
	gªque°_uæ
= "/test"

472 ,.
	gnum_hódîs
= 0

473 ,.
	ghódîs
= { }

474 ,.
	gbody
= ""

477 
	#UPGRADE_REQUEST
 16

	)

478 , {.
	g«me
 = "upgradeÑequest"

479 ,.
	gty≥

HTTP_REQUEST


480 ,.
	gøw
= "GET /demo HTTP/1.1\r\n"

490 ,.
	gshould_kìp_Æive

TRUE


491 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


492 ,.
	ghâp_maj‹
= 1

493 ,.
	ghâp_mö‹
= 1

494 ,.
	gmëhod

HTTP_GET


495 ,.
	gquîy_°rög
= ""

496 ,.
	g‰agmít
= ""

497 ,.
	gªque°_∑th
= "/demo"

498 ,.
	gªque°_uæ
= "/demo"

499 ,.
	gnum_hódîs
= 7

500 ,.
	gupgøde
="Hot diggity dogg"

501 ,.
	ghódîs
= { { "Host", "example.com" }

509 ,.
	gbody
= ""

512 
	#CONNECT_REQUEST
 17

	)

513 , {.
	g«me
 = "connectÑequest"

514 ,.
	gty≥

HTTP_REQUEST


515 ,.
	gøw
= "CONNECT 0-home0.netscape.com:443 HTTP/1.0\r\n"

521 ,.
	gshould_kìp_Æive

FALSE


522 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


523 ,.
	ghâp_maj‹
= 1

524 ,.
	ghâp_mö‹
= 0

525 ,.
	gmëhod

HTTP_CONNECT


526 ,.
	gquîy_°rög
= ""

527 ,.
	g‰agmít
= ""

528 ,.
	gªque°_∑th
= ""

529 ,.
	gªque°_uæ
= "0-home0.netscape.com:443"

530 ,.
	gnum_hódîs
= 2

531 ,.
	gupgøde
="some data\r\nand yetÉven more data"

532 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

535 ,.
	gbody
= ""

538 
	#REPORT_REQ
 1
job


	)

539 , {.
	g«me
= "reportÑequest"

540 ,.
	gty≥

HTTP_REQUEST


541 ,.
	gøw
= "REPORT /test HTTP/1.1\r\n"

543 ,.
	gshould_kìp_Æive

TRUE


544 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


545 ,.
	ghâp_maj‹
= 1

546 ,.
	ghâp_mö‹
= 1

547 ,.
	gmëhod

HTTP_REPORT


548 ,.
	gquîy_°rög
= ""

549 ,.
	g‰agmít
= ""

550 ,.
	gªque°_∑th
= "/test"

551 ,.
	gªque°_uæ
= "/test"

552 ,.
	gnum_hódîs
= 0

553 ,.
	ghódîs
= {}

554 ,.
	gbody
= ""

557 
	#NO_HTTP_VERSION
 19

	)

558 , {.
	g«me
= "request withÇo http version"

559 ,.
	gty≥

HTTP_REQUEST


560 ,.
	gøw
= "GET /\r\n"

562 ,.
	gshould_kìp_Æive

FALSE


563 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


564 ,.
	ghâp_maj‹
= 0

565 ,.
	ghâp_mö‹
= 9

566 ,.
	gmëhod

HTTP_GET


567 ,.
	gquîy_°rög
= ""

568 ,.
	g‰agmít
= ""

569 ,.
	gªque°_∑th
= "/"

570 ,.
	gªque°_uæ
= "/"

571 ,.
	gnum_hódîs
= 0

572 ,.
	ghódîs
= {}

573 ,.
	gbody
= ""

576 
	#MSEARCH_REQ
 20

	)

577 , {.
	g«me
= "m-searchÑequest"

578 ,.
	gty≥

HTTP_REQUEST


579 ,.
	gøw
= "M-SEARCH * HTTP/1.1\r\n"

584 ,.
	gshould_kìp_Æive

TRUE


585 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


586 ,.
	ghâp_maj‹
= 1

587 ,.
	ghâp_mö‹
= 1

588 ,.
	gmëhod

HTTP_MSEARCH


589 ,.
	gquîy_°rög
= ""

590 ,.
	g‰agmít
= ""

591 ,.
	gªque°_∑th
= "*"

592 ,.
	gªque°_uæ
= "*"

593 ,.
	gnum_hódîs
= 3

594 ,.
	ghódîs
= { { "HOST", "239.255.255.250:1900" }

598 ,.
	gbody
= ""

601 
	#LINE_FOLDING_IN_HEADER
 21

	)

602 , {.
	g«me
= "line folding in header value"

603 ,.
	gty≥

HTTP_REQUEST


604 ,.
	gøw
= "GET / HTTP/1.1\r\n"

619 ,.
	gshould_kìp_Æive

FALSE


620 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


621 ,.
	ghâp_maj‹
= 1

622 ,.
	ghâp_mö‹
= 1

623 ,.
	gmëhod

HTTP_GET


624 ,.
	gquîy_°rög
= ""

625 ,.
	g‰agmít
= ""

626 ,.
	gªque°_∑th
= "/"

627 ,.
	gªque°_uæ
= "/"

628 ,.
	gnum_hódîs
= 5

629 ,.
	ghódîs
= { { "Line1", "abc\tdef ghi\t\tjkl mno \t \tqrs" }

635 ,.
	gbody
= ""

639 
	#QUERY_TERMINATED_HOST
 22

	)

640 , {.
	g«me
= "hostÅerminated byá query string"

641 ,.
	gty≥

HTTP_REQUEST


642 ,.
	gøw
= "GET http://hypnotoad.org?hail=all HTTP/1.1\r\n"

644 ,.
	gshould_kìp_Æive

TRUE


645 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


646 ,.
	ghâp_maj‹
= 1

647 ,.
	ghâp_mö‹
= 1

648 ,.
	gmëhod

HTTP_GET


649 ,.
	gquîy_°rög
= "hail=all"

650 ,.
	g‰agmít
= ""

651 ,.
	gªque°_∑th
= ""

652 ,.
	gªque°_uæ
= "http://hypnotoad.org?hail=all"

653 ,.
	gho°
= "hypnotoad.org"

654 ,.
	gnum_hódîs
= 0

655 ,.
	ghódîs
= { }

656 ,.
	gbody
= ""

659 
	#QUERY_TERMINATED_HOSTPORT
 23

	)

660 , {.
	g«me
= "host:portÅerminated byá query string"

661 ,.
	gty≥

HTTP_REQUEST


662 ,.
	gøw
= "GET http://hypnotoad.org:1234?hail=all HTTP/1.1\r\n"

664 ,.
	gshould_kìp_Æive

TRUE


665 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


666 ,.
	ghâp_maj‹
= 1

667 ,.
	ghâp_mö‹
= 1

668 ,.
	gmëhod

HTTP_GET


669 ,.
	gquîy_°rög
= "hail=all"

670 ,.
	g‰agmít
= ""

671 ,.
	gªque°_∑th
= ""

672 ,.
	gªque°_uæ
= "http://hypnotoad.org:1234?hail=all"

673 ,.
	gho°
= "hypnotoad.org"

674 ,.
	gp‹t
= 1234

675 ,.
	gnum_hódîs
= 0

676 ,.
	ghódîs
= { }

677 ,.
	gbody
= ""

680 
	#SPACE_TERMINATED_HOSTPORT
 24

	)

681 , {.
	g«me
= "host:portÅerminated byá space"

682 ,.
	gty≥

HTTP_REQUEST


683 ,.
	gøw
= "GET http://hypnotoad.org:1234 HTTP/1.1\r\n"

685 ,.
	gshould_kìp_Æive

TRUE


686 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


687 ,.
	ghâp_maj‹
= 1

688 ,.
	ghâp_mö‹
= 1

689 ,.
	gmëhod

HTTP_GET


690 ,.
	gquîy_°rög
= ""

691 ,.
	g‰agmít
= ""

692 ,.
	gªque°_∑th
= ""

693 ,.
	gªque°_uæ
= "http://hypnotoad.org:1234"

694 ,.
	gho°
= "hypnotoad.org"

695 ,.
	gp‹t
= 1234

696 ,.
	gnum_hódîs
= 0

697 ,.
	ghódîs
= { }

698 ,.
	gbody
= ""

701 
	#PATCH_REQ
 25

	)

702 , {.
	g«me
 = "PATCHÑequest"

703 ,.
	gty≥

HTTP_REQUEST


704 ,.
	gøw
= "PATCH /file.txt HTTP/1.1\r\n"

711 ,.
	gshould_kìp_Æive

TRUE


712 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


713 ,.
	ghâp_maj‹
= 1

714 ,.
	ghâp_mö‹
= 1

715 ,.
	gmëhod

HTTP_PATCH


716 ,.
	gquîy_°rög
= ""

717 ,.
	g‰agmít
= ""

718 ,.
	gªque°_∑th
= "/file.txt"

719 ,.
	gªque°_uæ
= "/file.txt"

720 ,.
	gnum_hódîs
= 4

721 ,.
	ghódîs
= { { "Host", "www.example.com" }

726 ,.
	gbody
= "cccccccccc"

729 
	#CONNECT_CAPS_REQUEST
 26

	)

730 , {.
	g«me
 = "connect capsÑequest"

731 ,.
	gty≥

HTTP_REQUEST


732 ,.
	gøw
= "CONNECT HOME0.NETSCAPE.COM:443 HTTP/1.0\r\n"

736 ,.
	gshould_kìp_Æive

FALSE


737 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


738 ,.
	ghâp_maj‹
= 1

739 ,.
	ghâp_mö‹
= 0

740 ,.
	gmëhod

HTTP_CONNECT


741 ,.
	gquîy_°rög
= ""

742 ,.
	g‰agmít
= ""

743 ,.
	gªque°_∑th
= ""

744 ,.
	gªque°_uæ
= "HOME0.NETSCAPE.COM:443"

745 ,.
	gnum_hódîs
= 2

746 ,.
	gupgøde
=""

747 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

750 ,.
	gbody
= ""

753 #i‡!
HTTP_PARSER_STRICT


754 
	#UTFjob_PATH_REQ
 27

	)

755 , {.
	g«me
= "utf-jobÖathÑequest"

756 ,.
	gty≥

HTTP_REQUEST


757 ,.
	gøw
= "GET /Œ¥¬∂/Œ¥t/pope?q=1#narf HTTP/1.1\r\n"

760 ,.
	gshould_kìp_Æive

TRUE


761 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


762 ,.
	ghâp_maj‹
= 1

763 ,.
	ghâp_mö‹
= 1

764 ,.
	gmëhod

HTTP_GET


765 ,.
	gquîy_°rög
= "q=1"

766 ,.
	g‰agmít
= "narf"

767 ,.
	gªque°_∑th
= "/Œ¥¬∂/Œ¥t/pope"

768 ,.
	gªque°_uæ
= "/Œ¥¬∂/Œ¥t/pope?q=1#narf"

769 ,.
	gnum_hódîs
= 1

770 ,.
	ghódîs
= { {"Host", "github.com" }

772 ,.
	gbody
= ""

775 
	#HOSTNAME_UNDERSCORE
 2
job


	)

776 , {.
	g«me
 = "hostname underscore"

777 ,.
	gty≥

HTTP_REQUEST


778 ,.
	gøw
= "CONNECT home_0.netscape.com:443 HTTP/1.0\r\n"

782 ,.
	gshould_kìp_Æive

FALSE


783 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


784 ,.
	ghâp_maj‹
= 1

785 ,.
	ghâp_mö‹
= 0

786 ,.
	gmëhod

HTTP_CONNECT


787 ,.
	gquîy_°rög
= ""

788 ,.
	g‰agmít
= ""

789 ,.
	gªque°_∑th
= ""

790 ,.
	gªque°_uæ
= "home_0.netscape.com:443"

791 ,.
	gnum_hódîs
= 2

792 ,.
	gupgøde
=""

793 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

796 ,.
	gbody
= ""

801 
	#EAT_TRAILING_CRLF_NO_CONNECTION_CLOSE
 29

	)

802 , {.
	g«me
 = "eat CRLF betweenÑequests,Ço \"Connection: close\" header"

803 ,.
	gøw
= "POST / HTTP/1.1\r\n"

809 ,.
	gshould_kìp_Æive

TRUE


810 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


811 ,.
	ghâp_maj‹
= 1

812 ,.
	ghâp_mö‹
= 1

813 ,.
	gmëhod

HTTP_POST


814 ,.
	gquîy_°rög
= ""

815 ,.
	g‰agmít
= ""

816 ,.
	gªque°_∑th
= "/"

817 ,.
	gªque°_uæ
= "/"

818 ,.
	gnum_hódîs
= 3

819 ,.
	gupgøde
= 0

820 ,.
	ghódîs
= { { "Host", "www.example.com" }

824 ,.
	gbody
= "q=42"

828 
	#EAT_TRAILING_CRLF_WITH_CONNECTION_CLOSE
 30

	)

829 , {.
	g«me
 = "eat CRLF betweenÑequestsÉven if \"Connection: close\" is set"

830 ,.
	gøw
= "POST / HTTP/1.1\r\n"

837 ,.
	gshould_kìp_Æive

FALSE


838 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


839 ,.
	ghâp_maj‹
= 1

840 ,.
	ghâp_mö‹
= 1

841 ,.
	gmëhod

HTTP_POST


842 ,.
	gquîy_°rög
= ""

843 ,.
	g‰agmít
= ""

844 ,.
	gªque°_∑th
= "/"

845 ,.
	gªque°_uæ
= "/"

846 ,.
	gnum_hódîs
= 4

847 ,.
	gupgøde
= 0

848 ,.
	ghódîs
= { { "Host", "www.example.com" }

853 ,.
	gbody
= "q=42"

856 
	#PURGE_REQ
 31

	)

857 , {.
	g«me
 = "PURGEÑequest"

858 ,.
	gty≥

HTTP_REQUEST


859 ,.
	gøw
= "PURGE /file.txt HTTP/1.1\r\n"

862 ,.
	gshould_kìp_Æive

TRUE


863 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


864 ,.
	ghâp_maj‹
= 1

865 ,.
	ghâp_mö‹
= 1

866 ,.
	gmëhod

HTTP_PURGE


867 ,.
	gquîy_°rög
= ""

868 ,.
	g‰agmít
= ""

869 ,.
	gªque°_∑th
= "/file.txt"

870 ,.
	gªque°_uæ
= "/file.txt"

871 ,.
	gnum_hódîs
= 1

872 ,.
	ghódîs
= { { "Host", "www.example.com" } }

873 ,.
	gbody
= ""

876 
	#SEARCH_REQ
 32

	)

877 , {.
	g«me
 = "SEARCHÑequest"

878 ,.
	gty≥

HTTP_REQUEST


879 ,.
	gøw
= "SEARCH / HTTP/1.1\r\n"

882 ,.
	gshould_kìp_Æive

TRUE


883 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


884 ,.
	ghâp_maj‹
= 1

885 ,.
	ghâp_mö‹
= 1

886 ,.
	gmëhod

HTTP_SEARCH


887 ,.
	gquîy_°rög
= ""

888 ,.
	g‰agmít
= ""

889 ,.
	gªque°_∑th
= "/"

890 ,.
	gªque°_uæ
= "/"

891 ,.
	gnum_hódîs
= 1

892 ,.
	ghódîs
= { { "Host", "www.example.com" } }

893 ,.
	gbody
= ""

896 
	#PROXY_WITH_BASIC_AUTH
 33

	)

897 , {.
	g«me
= "host:portánd basic_auth"

898 ,.
	gty≥

HTTP_REQUEST


899 ,.
	gøw
= "GET http://a%12:b!&*$@hypnotoad.org:1234/toto HTTP/1.1\r\n"

901 ,.
	gshould_kìp_Æive

TRUE


902 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


903 ,.
	ghâp_maj‹
= 1

904 ,.
	ghâp_mö‹
= 1

905 ,.
	gmëhod

HTTP_GET


906 ,.
	g‰agmít
= ""

907 ,.
	gªque°_∑th
= "/toto"

908 ,.
	gªque°_uæ
= "http://a%12:b!&*$@hypnotoad.org:1234/toto"

909 ,.
	gho°
= "hypnotoad.org"

910 ,.
	gu£röfo
= "a%12:b!&*$"

911 ,.
	gp‹t
= 1234

912 ,.
	gnum_hódîs
= 0

913 ,.
	ghódîs
= { }

914 ,.
	gbody
= ""

917 
	#LINE_FOLDING_IN_HEADER_WITH_LF
 34

	)

918 , {.
	g«me
= "line folding in header value"

919 ,.
	gty≥

HTTP_REQUEST


920 ,.
	gøw
= "GET / HTTP/1.1\n"

935 ,.
	gshould_kìp_Æive

FALSE


936 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


937 ,.
	ghâp_maj‹
= 1

938 ,.
	ghâp_mö‹
= 1

939 ,.
	gmëhod

HTTP_GET


940 ,.
	gquîy_°rög
= ""

941 ,.
	g‰agmít
= ""

942 ,.
	gªque°_∑th
= "/"

943 ,.
	gªque°_uæ
= "/"

944 ,.
	gnum_hódîs
= 5

945 ,.
	ghódîs
= { { "Line1", "abc\tdef ghi\t\tjkl mno \t \tqrs" }

951 ,.
	gbody
= ""

955 , {.
	g«me

NULL
 }

959 c⁄° 
mesßge
 
	gª•⁄£s
[] =

960 
	#GOOGLE_301
 0

	)

961 { {.
«me
= "google 301"

962 ,.
	gty≥

HTTP_RESPONSE


963 ,.
	gøw
= "HTTP/1.1 301 Moved Permanently\r\n"

979 ,.
	gshould_kìp_Æive

TRUE


980 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


981 ,.
	ghâp_maj‹
= 1

982 ,.
	ghâp_mö‹
= 1

983 ,.
	g°©us_code
= 301

984 ,.
	gª•⁄£_°©us
= "Moved Permanently"

985 ,.
	gnum_hódîs

job


986 ,.
	ghódîs
=

996 ,.
	gbody
= "<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-job\">\n"

1004 
	#NO_CONTENT_LENGTH_RESPONSE
 1

	)

1010 , {.
	g«me
= "no content-lengthÑesponse"

1011 ,.
	gty≥

HTTP_RESPONSE


1012 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1028 ,.
	gshould_kìp_Æive

FALSE


1029 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1030 ,.
	ghâp_maj‹
= 1

1031 ,.
	ghâp_mö‹
= 1

1032 ,.
	g°©us_code
= 200

1033 ,.
	gª•⁄£_°©us
= "OK"

1034 ,.
	gnum_hódîs
= 5

1035 ,.
	ghódîs
=

1042 ,.
	gbody
= "<?xml version=\"1.0\"Éncoding=\"UTF-job\"?>\n"

1053 
	#NO_HEADERS_NO_BODY_404
 2

	)

1054 , {.
	g«me
= "404Ço headersÇo body"

1055 ,.
	gty≥

HTTP_RESPONSE


1056 ,.
	gøw
= "HTTP/1.1 404 Not Found\r\n\r\n"

1057 ,.
	gshould_kìp_Æive

FALSE


1058 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1059 ,.
	ghâp_maj‹
= 1

1060 ,.
	ghâp_mö‹
= 1

1061 ,.
	g°©us_code
= 404

1062 ,.
	gª•⁄£_°©us
= "Not Found"

1063 ,.
	gnum_hódîs
= 0

1064 ,.
	ghódîs
= {}

1065 ,.
	gbody_size
= 0

1066 ,.
	gbody
= ""

1069 
	#NO_REASON_PHRASE
 3

	)

1070 , {.
	g«me
= "301ÇoÑesponseÖhrase"

1071 ,.
	gty≥

HTTP_RESPONSE


1072 ,.
	gøw
= "HTTP/1.1 301\r\n\r\n"

1073 ,.
	gshould_kìp_Æive
 = 
FALSE


1074 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1075 ,.
	ghâp_maj‹
= 1

1076 ,.
	ghâp_mö‹
= 1

1077 ,.
	g°©us_code
= 301

1078 ,.
	gª•⁄£_°©us
= ""

1079 ,.
	gnum_hódîs
= 0

1080 ,.
	ghódîs
= {}

1081 ,.
	gbody
= ""

1084 
	#TRAILING_SPACE_ON_CHUNKED_BODY
 4

	)

1085 , {.
	g«me
="200Årailing space on chunked body"

1086 ,.
	gty≥

HTTP_RESPONSE


1087 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1099 ,.
	gshould_kìp_Æive

TRUE


1100 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1101 ,.
	ghâp_maj‹
= 1

1102 ,.
	ghâp_mö‹
= 1

1103 ,.
	g°©us_code
= 200

1104 ,.
	gª•⁄£_°©us
= "OK"

1105 ,.
	gnum_hódîs
= 2

1106 ,.
	ghódîs
=

1110 ,.
	gbody_size
 = 37+2
job


1111 ,.
	gbody
 =

1117 
	#NO_CARRIAGE_RET
 5

	)

1118 , {.
	g«me
="no carriageÑet"

1119 ,.
	gty≥

HTTP_RESPONSE


1120 ,.
	gøw
= "HTTP/1.1 200 OK\n"

1125 ,.
	gshould_kìp_Æive

FALSE


1126 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1127 ,.
	ghâp_maj‹
= 1

1128 ,.
	ghâp_mö‹
= 1

1129 ,.
	g°©us_code
= 200

1130 ,.
	gª•⁄£_°©us
= "OK"

1131 ,.
	gnum_hódîs
= 2

1132 ,.
	ghódîs
=

1136 ,.
	gbody
= "these headersáre from http://news.ycombinator.com/"

1139 
	#PROXY_CONNECTION
 6

	)

1140 , {.
	g«me
="proxy connection"

1141 ,.
	gty≥

HTTP_RESPONSE


1142 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1149 ,.
	gshould_kìp_Æive

FALSE


1150 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1151 ,.
	ghâp_maj‹
= 1

1152 ,.
	ghâp_mö‹
= 1

1153 ,.
	g°©us_code
= 200

1154 ,.
	gª•⁄£_°©us
= "OK"

1155 ,.
	gnum_hódîs
= 4

1156 ,.
	ghódîs
=

1162 ,.
	gbody
= "hello world"

1165 
	#UNDERSTORE_HEADER_KEY
 7

	)

1168 , {.
	g«me
="underscore header key"

1169 ,.
	gty≥

HTTP_RESPONSE


1170 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1175 ,.
	gshould_kìp_Æive

TRUE


1176 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1177 ,.
	ghâp_maj‹
= 1

1178 ,.
	ghâp_mö‹
= 1

1179 ,.
	g°©us_code
= 200

1180 ,.
	gª•⁄£_°©us
= "OK"

1181 ,.
	gnum_hódîs
= 4

1182 ,.
	ghódîs
=

1188 ,.
	gbody
= ""

1191 
	#BONJOUR_MADAME_FR
 
job


	)

1195 , {.
	g«me
= "bonjourmadame.fr"

1196 ,.
	gty≥

HTTP_RESPONSE


1197 ,.
	gøw
= "HTTP/1.0 301 Moved Permanently\r\n"

1208 ,.
	gshould_kìp_Æive

TRUE


1209 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1210 ,.
	ghâp_maj‹
= 1

1211 ,.
	ghâp_mö‹
= 0

1212 ,.
	g°©us_code
= 301

1213 ,.
	gª•⁄£_°©us
= "Moved Permanently"

1214 ,.
	gnum_hódîs
= 9

1215 ,.
	ghódîs
=

1226 ,.
	gbody
= ""

1229 
	#RES_FIELD_UNDERSCORE
 9

	)

1231 , {.
	g«me
= "field underscore"

1232 ,.
	gty≥

HTTP_RESPONSE


1233 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1247 ,.
	gshould_kìp_Æive

FALSE


1248 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1249 ,.
	ghâp_maj‹
= 1

1250 ,.
	ghâp_mö‹
= 1

1251 ,.
	g°©us_code
= 200

1252 ,.
	gª•⁄£_°©us
= "OK"

1253 ,.
	gnum_hódîs
= 11

1254 ,.
	ghódîs
=

1267 ,.
	gbody
= ""

1270 
	#NON_ASCII_IN_STATUS_LINE
 10

	)

1272 , {.
	g«me
= "non-ASCII in statusÜine"

1273 ,.
	gty≥

HTTP_RESPONSE


1274 ,.
	gøw
= "HTTP/1.1 500 Ori√´ntatieprobleem\r\n"

1279 ,.
	gshould_kìp_Æive

FALSE


1280 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1281 ,.
	ghâp_maj‹
= 1

1282 ,.
	ghâp_mö‹
= 1

1283 ,.
	g°©us_code
= 500

1284 ,.
	gª•⁄£_°©us
= "Ori√´ntatieprobleem"

1285 ,.
	gnum_hódîs
= 3

1286 ,.
	ghódîs
=

1291 ,.
	gbody
= ""

1294 
	#HTTP_VERSION_0_9
 11

	)

1296 , {.
	g«me
= "http version 0.9"

1297 ,.
	gty≥

HTTP_RESPONSE


1298 ,.
	gøw
= "HTTP/0.9 200 OK\r\n"

1300 ,.
	gshould_kìp_Æive

FALSE


1301 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1302 ,.
	ghâp_maj‹
= 0

1303 ,.
	ghâp_mö‹
= 9

1304 ,.
	g°©us_code
= 200

1305 ,.
	gª•⁄£_°©us
= "OK"

1306 ,.
	gnum_hódîs
= 0

1307 ,.
	ghódîs
=

1309 ,.
	gbody
= ""

1312 
	#NO_CONTENT_LENGTH_NO_TRANSFER_ENCODING_RESPONSE
 12

	)

1317 , {.
	g«me
= "neither content-lengthÇorÅransfer-encodingÑesponse"

1318 ,.
	gty≥

HTTP_RESPONSE


1319 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1323 ,.
	gshould_kìp_Æive

FALSE


1324 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1325 ,.
	ghâp_maj‹
= 1

1326 ,.
	ghâp_mö‹
= 1

1327 ,.
	g°©us_code
= 200

1328 ,.
	gª•⁄£_°©us
= "OK"

1329 ,.
	gnum_hódîs
= 1

1330 ,.
	ghódîs
=

1333 ,.
	gbody
= "hello world"

1336 
	#NO_BODY_HTTP10_KA_200
 13

	)

1337 , {.
	g«me
= "HTTP/1.0 with keep-aliveánd EOF-terminated 200 status"

1338 ,.
	gty≥

HTTP_RESPONSE


1339 ,.
	gøw
= "HTTP/1.0 200 OK\r\n"

1342 ,.
	gshould_kìp_Æive

FALSE


1343 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1344 ,.
	ghâp_maj‹
= 1

1345 ,.
	ghâp_mö‹
= 0

1346 ,.
	g°©us_code
= 200

1347 ,.
	gª•⁄£_°©us
= "OK"

1348 ,.
	gnum_hódîs
= 1

1349 ,.
	ghódîs
=

1352 ,.
	gbody_size
= 0

1353 ,.
	gbody
= ""

1356 
	#NO_BODY_HTTP10_KA_204
 14

	)

1357 , {.
	g«me
= "HTTP/1.0 with keep-aliveándá 204 status"

1358 ,.
	gty≥

HTTP_RESPONSE


1359 ,.
	gøw
= "HTTP/1.0 204 No content\r\n"

1362 ,.
	gshould_kìp_Æive

TRUE


1363 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1364 ,.
	ghâp_maj‹
= 1

1365 ,.
	ghâp_mö‹
= 0

1366 ,.
	g°©us_code
= 204

1367 ,.
	gª•⁄£_°©us
= "No content"

1368 ,.
	gnum_hódîs
= 1

1369 ,.
	ghódîs
=

1372 ,.
	gbody_size
= 0

1373 ,.
	gbody
= ""

1376 
	#NO_BODY_HTTP11_KA_200
 15

	)

1377 , {.
	g«me
= "HTTP/1.1 withán EOF-terminated 200 status"

1378 ,.
	gty≥

HTTP_RESPONSE


1379 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1381 ,.
	gshould_kìp_Æive

FALSE


1382 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1383 ,.
	ghâp_maj‹
= 1

1384 ,.
	ghâp_mö‹
= 1

1385 ,.
	g°©us_code
= 200

1386 ,.
	gª•⁄£_°©us
= "OK"

1387 ,.
	gnum_hódîs
= 0

1388 ,.
	ghódîs
={}

1389 ,.
	gbody_size
= 0

1390 ,.
	gbody
= ""

1393 
	#NO_BODY_HTTP11_KA_204
 16

	)

1394 , {.
	g«me
= "HTTP/1.1 withá 204 status"

1395 ,.
	gty≥

HTTP_RESPONSE


1396 ,.
	gøw
= "HTTP/1.1 204 No content\r\n"

1398 ,.
	gshould_kìp_Æive

TRUE


1399 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1400 ,.
	ghâp_maj‹
= 1

1401 ,.
	ghâp_mö‹
= 1

1402 ,.
	g°©us_code
= 204

1403 ,.
	gª•⁄£_°©us
= "No content"

1404 ,.
	gnum_hódîs
= 0

1405 ,.
	ghódîs
={}

1406 ,.
	gbody_size
= 0

1407 ,.
	gbody
= ""

1410 
	#NO_BODY_HTTP11_NOKA_204
 17

	)

1411 , {.
	g«me
= "HTTP/1.1 withá 204 statusánd keep-alive disabled"

1412 ,.
	gty≥

HTTP_RESPONSE


1413 ,.
	gøw
= "HTTP/1.1 204 No content\r\n"

1416 ,.
	gshould_kìp_Æive

FALSE


1417 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1418 ,.
	ghâp_maj‹
= 1

1419 ,.
	ghâp_mö‹
= 1

1420 ,.
	g°©us_code
= 204

1421 ,.
	gª•⁄£_°©us
= "No content"

1422 ,.
	gnum_hódîs
= 1

1423 ,.
	ghódîs
=

1426 ,.
	gbody_size
= 0

1427 ,.
	gbody
= ""

1430 
	#NO_BODY_HTTP11_KA_CHUNKED_200
 1
job


	)

1431 , {.
	g«me
= "HTTP/1.1 with chunkedÉndocingándá 200Ñesponse"

1432 ,.
	gty≥

HTTP_RESPONSE


1433 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1438 ,.
	gshould_kìp_Æive

TRUE


1439 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1440 ,.
	ghâp_maj‹
= 1

1441 ,.
	ghâp_mö‹
= 1

1442 ,.
	g°©us_code
= 200

1443 ,.
	gª•⁄£_°©us
= "OK"

1444 ,.
	gnum_hódîs
= 1

1445 ,.
	ghódîs
=

1448 ,.
	gbody_size
= 0

1449 ,.
	gbody
= ""

1452 #i‡!
HTTP_PARSER_STRICT


1453 
	#SPACE_IN_FIELD_RES
 19

	)

1455 , {.
	g«me
= "field space"

1456 ,.
	gty≥

HTTP_RESPONSE


1457 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1467 ,.
	gshould_kìp_Æive

TRUE


1468 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1469 ,.
	ghâp_maj‹
= 1

1470 ,.
	ghâp_mö‹
= 1

1471 ,.
	g°©us_code
= 200

1472 ,.
	gª•⁄£_°©us
= "OK"

1473 ,.
	gnum_hódîs
= 7

1474 ,.
	ghódîs
=

1483 ,.
	gbody
= "<xml>hello</xml>"

1487 
	#AMAZON_COM
 20

	)

1488 , {.
	g«me
= "amazon.com"

1489 ,.
	gty≥

HTTP_RESPONSE


1490 ,.
	gøw
= "HTTP/1.1 301 MovedPermanently\r\n"

1505 ,.
	gshould_kìp_Æive

TRUE


1506 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1507 ,.
	ghâp_maj‹
= 1

1508 ,.
	ghâp_mö‹
= 1

1509 ,.
	g°©us_code
= 301

1510 ,.
	gª•⁄£_°©us
= "MovedPermanently"

1511 ,.
	gnum_hódîs
= 9

1512 ,.
	ghódîs
= { { "Date", "Wed, 15 May 2013 17:06:33 GMT" }

1522 ,.
	gbody
= "\n"

1525 
	#EMPTY_REASON_PHRASE_AFTER_SPACE
 20

	)

1526 , {.
	g«me
= "emptyÑeasonÖhraseáfter space"

1527 ,.
	gty≥

HTTP_RESPONSE


1528 ,.
	gøw
= "HTTP/1.1 200 \r\n"

1530 ,.
	gshould_kìp_Æive

FALSE


1531 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1532 ,.
	ghâp_maj‹
= 1

1533 ,.
	ghâp_mö‹
= 1

1534 ,.
	g°©us_code
= 200

1535 ,.
	gª•⁄£_°©us
= ""

1536 ,.
	gnum_hódîs
= 0

1537 ,.
	ghódîs
= {}

1538 ,.
	gbody
= ""

1541 , {.
	g«me

NULL
 }

1547 
size_t


1548 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
maxÀn
)

1550 c⁄° *
p
;

1552 
p
 = 
	`memchr
(
s
, '\0', 
maxÀn
);

1553 i‡(
p
 =
NULL
)

1554  
maxÀn
;

1556  
p
 - 
s
;

1557 
	}
}

1559 
size_t


1560 
	$°ænˇt
(*
d°
, 
size_t
 
Àn
, c⁄° *
§c
, size_à
n
)

1562 
size_t
 
¶í
;

1563 
size_t
 
dÀn
;

1564 
size_t
 
æí
;

1565 
size_t
 
n˝y
;

1567 
¶í
 = 
	`°∫Àn
(
§c
, 
n
);

1568 
dÀn
 = 
	`°∫Àn
(
d°
, 
Àn
);

1570 i‡(
dÀn
 < 
Àn
) {

1571 
æí
 = 
Àn
 - 
dÀn
;

1572 
n˝y
 = 
¶í
 < 
æí
 ? slen : (rlen - 1);

1573 
	`mem˝y
(
d°
 + 
dÀn
, 
§c
, 
n˝y
);

1574 
d°
[
dÀn
 + 
n˝y
] = '\0';

1577 
	`as£π
(
Àn
 > 
¶í
 + 
dÀn
);

1578  
¶í
 + 
dÀn
;

1579 
	}
}

1581 
size_t


1582 
	$°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
)

1584  
	`°ænˇt
(
d°
, 
Àn
, 
§c
, (
size_t
) -1);

1585 
	}
}

1587 
size_t


1588 
	$°æn˝y
(*
d°
, 
size_t
 
Àn
, c⁄° *
§c
, size_à
n
)

1590 
size_t
 
¶í
;

1591 
size_t
 
n˝y
;

1593 
¶í
 = 
	`°∫Àn
(
§c
, 
n
);

1595 i‡(
Àn
 > 0) {

1596 
n˝y
 = 
¶í
 < 
Àn
 ? slen : (len - 1);

1597 
	`mem˝y
(
d°
, 
§c
, 
n˝y
);

1598 
d°
[
n˝y
] = '\0';

1601 
	`as£π
(
Àn
 > 
¶í
);

1602  
¶í
;

1603 
	}
}

1605 
size_t


1606 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
)

1608  
	`°æn˝y
(
d°
, 
Àn
, 
§c
, (
size_t
) -1);

1609 
	}
}

1612 
	$ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1614 
	`as£π
(
p
 =
∑r£r
);

1615 
	`°ænˇt
(
mesßges
[
num_mesßges
].
ªque°_uæ
,

1616 (
mesßges
[
num_mesßges
].
ªque°_uæ
),

1617 
buf
,

1618 
Àn
);

1620 
	}
}

1623 
	$hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1625 
	`as£π
(
p
 =
∑r£r
);

1626 
mesßge
 *
m
 = &
mesßges
[
num_mesßges
];

1628 i‡(
m
->
œ°_hódî_ñemít
 !
FIELD
)

1629 
m
->
num_hódîs
++;

1631 
	`°ænˇt
(
m
->
hódîs
[m->
num_hódîs
-1][0],

1632 (
m
->
hódîs
[m->
num_hódîs
-1][0]),

1633 
buf
,

1634 
Àn
);

1636 
m
->
œ°_hódî_ñemít
 = 
FIELD
;

1639 
	}
}

1642 
	$hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1644 
	`as£π
(
p
 =
∑r£r
);

1645 
mesßge
 *
m
 = &
mesßges
[
num_mesßges
];

1647 
	`°ænˇt
(
m
->
hódîs
[m->
num_hódîs
-1][1],

1648 (
m
->
hódîs
[m->
num_hódîs
-1][1]),

1649 
buf
,

1650 
Àn
);

1652 
m
->
œ°_hódî_ñemít
 = 
VALUE
;

1655 
	}
}

1658 
	$check_body_is_föÆ
 (c⁄° 
hâp_∑r£r
 *
p
)

1660 i‡(
mesßges
[
num_mesßges
].
body_is_föÆ
) {

1661 
	`Ârötf
(
°dîr
, "\n\n *** Error http_body_is_final() shouldÑeturn 1 "

1664 
	`as£π
(0);

1665 
	`ab‹t
();

1667 
mesßges
[
num_mesßges
].
body_is_föÆ
 = 
	`hâp_body_is_föÆ
(
p
);

1668 
	}
}

1671 
	$body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1673 
	`as£π
(
p
 =
∑r£r
);

1674 
	`°ænˇt
(
mesßges
[
num_mesßges
].
body
,

1675 (
mesßges
[
num_mesßges
].
body
),

1676 
buf
,

1677 
Àn
);

1678 
mesßges
[
num_mesßges
].
body_size
 +
Àn
;

1679 
	`check_body_is_föÆ
(
p
);

1682 
	}
}

1685 
	$cou¡_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1687 
	`as£π
(
p
 =
∑r£r
);

1688 
	`as£π
(
buf
);

1689 
mesßges
[
num_mesßges
].
body_size
 +
Àn
;

1690 
	`check_body_is_föÆ
(
p
);

1692 
	}
}

1695 
	$mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1697 
	`as£π
(
p
 =
∑r£r
);

1698 
mesßges
[
num_mesßges
].
mesßge_begö_cb_ˇŒed
 = 
TRUE
;

1700 
	}
}

1703 
	$hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1705 
	`as£π
(
p
 =
∑r£r
);

1706 
mesßges
[
num_mesßges
].
mëhod
 = 
∑r£r
->method;

1707 
mesßges
[
num_mesßges
].
°©us_code
 = 
∑r£r
->status_code;

1708 
mesßges
[
num_mesßges
].
hâp_maj‹
 = 
∑r£r
->http_major;

1709 
mesßges
[
num_mesßges
].
hâp_mö‹
 = 
∑r£r
->http_minor;

1710 
mesßges
[
num_mesßges
].
hódîs_com∂ëe_cb_ˇŒed
 = 
TRUE
;

1711 
mesßges
[
num_mesßges
].
should_kìp_Æive
 = 
	`hâp_should_kìp_Æive
(
∑r£r
);

1713 
	}
}

1716 
	$mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1718 
	`as£π
(
p
 =
∑r£r
);

1719 i‡(
mesßges
[
num_mesßges
].
should_kìp_Æive
 !
	`hâp_should_kìp_Æive
(
∑r£r
))

1721 
	`Ârötf
(
°dîr
, "\n\n *** Error http_should_keep_alive() should have same "

1724 
	`as£π
(0);

1725 
	`ab‹t
();

1728 i‡(
mesßges
[
num_mesßges
].
body_size
 &&

1729 
	`hâp_body_is_föÆ
(
p
) &&

1730 !
mesßges
[
num_mesßges
].
body_is_föÆ
)

1732 
	`Ârötf
(
°dîr
, "\n\n *** Error http_body_is_final() shouldÑeturn 1 "

1735 
	`as£π
(0);

1736 
	`ab‹t
();

1739 
mesßges
[
num_mesßges
].
mesßge_com∂ëe_cb_ˇŒed
 = 
TRUE
;

1741 
mesßges
[
num_mesßges
].
mesßge_com∂ëe_⁄_eof
 = 
cuºíéy_∑rsög_eof
;

1743 
num_mesßges
++;

1745 
	}
}

1748 
	$ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1750 
	`as£π
(
p
 =
∑r£r
);

1751 
	`°ænˇt
(
mesßges
[
num_mesßges
].
ª•⁄£_°©us
,

1752 (
mesßges
[
num_mesßges
].
ª•⁄£_°©us
),

1753 
buf
,

1754 
Àn
);

1756 
	}
}

1761 
	$d⁄tˇŒ_mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1763 i‡(
p
) { }

1764 
	`Ârötf
(
°dîr
, "\n\n*** on_message_begin() called onÖausedÖarser ***\n\n");

1765 
	`ab‹t
();

1766 
	}
}

1769 
	$d⁄tˇŒ_hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1771 i‡(
p
 || 
buf
 || 
Àn
) { }

1772 
	`Ârötf
(
°dîr
, "\n\n*** on_header_field() called onÖausedÖarser ***\n\n");

1773 
	`ab‹t
();

1774 
	}
}

1777 
	$d⁄tˇŒ_hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1779 i‡(
p
 || 
buf
 || 
Àn
) { }

1780 
	`Ârötf
(
°dîr
, "\n\n*** on_header_value() called onÖausedÖarser ***\n\n");

1781 
	`ab‹t
();

1782 
	}
}

1785 
	$d⁄tˇŒ_ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1787 i‡(
p
 || 
buf
 || 
Àn
) { }

1788 
	`Ârötf
(
°dîr
, "\n\n*** on_request_url() called onÖausedÖarser ***\n\n");

1789 
	`ab‹t
();

1790 
	}
}

1793 
	$d⁄tˇŒ_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1795 i‡(
p
 || 
buf
 || 
Àn
) { }

1796 
	`Ârötf
(
°dîr
, "\n\n*** on_body_cb() called onÖausedÖarser ***\n\n");

1797 
	`ab‹t
();

1798 
	}
}

1801 
	$d⁄tˇŒ_hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1803 i‡(
p
) { }

1804 
	`Ârötf
(
°dîr
, "\n\n*** on_headers_complete() called onÖaused "

1806 
	`ab‹t
();

1807 
	}
}

1810 
	$d⁄tˇŒ_mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1812 i‡(
p
) { }

1813 
	`Ârötf
(
°dîr
, "\n\n*** on_message_complete() called onÖaused "

1815 
	`ab‹t
();

1816 
	}
}

1819 
	$d⁄tˇŒ_ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1821 i‡(
p
 || 
buf
 || 
Àn
) { }

1822 
	`Ârötf
(
°dîr
, "\n\n*** on_status() called onÖausedÖarser ***\n\n");

1823 
	`ab‹t
();

1824 
	}
}

1826 
hâp_∑r£r_£âögs
 
	g£âögs_d⁄tˇŒ
 =

1827 {.
⁄_mesßge_begö
 = 
d⁄tˇŒ_mesßge_begö_cb


1828 ,.
	g⁄_hódî_fõld
 = 
d⁄tˇŒ_hódî_fõld_cb


1829 ,.
	g⁄_hódî_vÆue
 = 
d⁄tˇŒ_hódî_vÆue_cb


1830 ,.
	g⁄_uæ
 = 
d⁄tˇŒ_ªque°_uæ_cb


1831 ,.
	g⁄_°©us
 = 
d⁄tˇŒ_ª•⁄£_°©us_cb


1832 ,.
	g⁄_body
 = 
d⁄tˇŒ_body_cb


1833 ,.
	g⁄_hódîs_com∂ëe
 = 
d⁄tˇŒ_hódîs_com∂ëe_cb


1834 ,.
	g⁄_mesßge_com∂ëe
 = 
d⁄tˇŒ_mesßge_com∂ëe_cb


1842 
	$∑u£_mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1844 
	`hâp_∑r£r_∑u£
(
p
, 1);

1845 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1846  
	`mesßge_begö_cb
(
p
);

1847 
	}
}

1850 
	$∑u£_hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1852 
	`hâp_∑r£r_∑u£
(
p
, 1);

1853 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1854  
	`hódî_fõld_cb
(
p
, 
buf
, 
Àn
);

1855 
	}
}

1858 
	$∑u£_hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1860 
	`hâp_∑r£r_∑u£
(
p
, 1);

1861 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1862  
	`hódî_vÆue_cb
(
p
, 
buf
, 
Àn
);

1863 
	}
}

1866 
	$∑u£_ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1868 
	`hâp_∑r£r_∑u£
(
p
, 1);

1869 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1870  
	`ªque°_uæ_cb
(
p
, 
buf
, 
Àn
);

1871 
	}
}

1874 
	$∑u£_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1876 
	`hâp_∑r£r_∑u£
(
p
, 1);

1877 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1878  
	`body_cb
(
p
, 
buf
, 
Àn
);

1879 
	}
}

1882 
	$∑u£_hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1884 
	`hâp_∑r£r_∑u£
(
p
, 1);

1885 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1886  
	`hódîs_com∂ëe_cb
(
p
);

1887 
	}
}

1890 
	$∑u£_mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1892 
	`hâp_∑r£r_∑u£
(
p
, 1);

1893 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1894  
	`mesßge_com∂ëe_cb
(
p
);

1895 
	}
}

1898 
	$∑u£_ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1900 
	`hâp_∑r£r_∑u£
(
p
, 1);

1901 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1902  
	`ª•⁄£_°©us_cb
(
p
, 
buf
, 
Àn
);

1903 
	}
}

1905 
hâp_∑r£r_£âögs
 
	g£âögs_∑u£
 =

1906 {.
⁄_mesßge_begö
 = 
∑u£_mesßge_begö_cb


1907 ,.
	g⁄_hódî_fõld
 = 
∑u£_hódî_fõld_cb


1908 ,.
	g⁄_hódî_vÆue
 = 
∑u£_hódî_vÆue_cb


1909 ,.
	g⁄_uæ
 = 
∑u£_ªque°_uæ_cb


1910 ,.
	g⁄_°©us
 = 
∑u£_ª•⁄£_°©us_cb


1911 ,.
	g⁄_body
 = 
∑u£_body_cb


1912 ,.
	g⁄_hódîs_com∂ëe
 = 
∑u£_hódîs_com∂ëe_cb


1913 ,.
	g⁄_mesßge_com∂ëe
 = 
∑u£_mesßge_com∂ëe_cb


1916 
hâp_∑r£r_£âögs
 
	g£âögs
 =

1917 {.
⁄_mesßge_begö
 = 
mesßge_begö_cb


1918 ,.
	g⁄_hódî_fõld
 = 
hódî_fõld_cb


1919 ,.
	g⁄_hódî_vÆue
 = 
hódî_vÆue_cb


1920 ,.
	g⁄_uæ
 = 
ªque°_uæ_cb


1921 ,.
	g⁄_°©us
 = 
ª•⁄£_°©us_cb


1922 ,.
	g⁄_body
 = 
body_cb


1923 ,.
	g⁄_hódîs_com∂ëe
 = 
hódîs_com∂ëe_cb


1924 ,.
	g⁄_mesßge_com∂ëe
 = 
mesßge_com∂ëe_cb


1927 
hâp_∑r£r_£âögs
 
	g£âögs_cou¡_body
 =

1928 {.
⁄_mesßge_begö
 = 
mesßge_begö_cb


1929 ,.
	g⁄_hódî_fõld
 = 
hódî_fõld_cb


1930 ,.
	g⁄_hódî_vÆue
 = 
hódî_vÆue_cb


1931 ,.
	g⁄_uæ
 = 
ªque°_uæ_cb


1932 ,.
	g⁄_°©us
 = 
ª•⁄£_°©us_cb


1933 ,.
	g⁄_body
 = 
cou¡_body_cb


1934 ,.
	g⁄_hódîs_com∂ëe
 = 
hódîs_com∂ëe_cb


1935 ,.
	g⁄_mesßge_com∂ëe
 = 
mesßge_com∂ëe_cb


1938 
hâp_∑r£r_£âögs
 
	g£âögs_nuŒ
 =

1939 {.
⁄_mesßge_begö
 = 0

1940 ,.
	g⁄_hódî_fõld
 = 0

1941 ,.
	g⁄_hódî_vÆue
 = 0

1942 ,.
	g⁄_uæ
 = 0

1943 ,.
	g⁄_°©us
 = 0

1944 ,.
	g⁄_body
 = 0

1945 ,.
	g⁄_hódîs_com∂ëe
 = 0

1946 ,.
	g⁄_mesßge_com∂ëe
 = 0

1950 
	$∑r£r_öô
 (
hâp_∑r£r_ty≥
 
ty≥
)

1952 
num_mesßges
 = 0;

1954 
	`as£π
(
∑r£r
 =
NULL
);

1956 
∑r£r
 = 
	`mÆloc
((
hâp_∑r£r
));

1958 
	`hâp_∑r£r_öô
(
∑r£r
, 
ty≥
);

1960 
	`mem£t
(&
mesßges
, 0,  messages);

1962 
	}
}

1965 
	$∑r£r_‰ì
 ()

1967 
	`as£π
(
∑r£r
);

1968 
	`‰ì
(
∑r£r
);

1969 
∑r£r
 = 
NULL
;

1970 
	}
}

1972 
size_t
 
	$∑r£
 (c⁄° *
buf
, 
size_t
 
Àn
)

1974 
size_t
 
≈¨£d
;

1975 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1976 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, &
£âögs
, 
buf
, 
Àn
);

1977  
≈¨£d
;

1978 
	}
}

1980 
size_t
 
	$∑r£_cou¡_body
 (c⁄° *
buf
, 
size_t
 
Àn
)

1982 
size_t
 
≈¨£d
;

1983 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1984 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, &
£âögs_cou¡_body
, 
buf
, 
Àn
);

1985  
≈¨£d
;

1986 
	}
}

1988 
size_t
 
	$∑r£_∑u£
 (c⁄° *
buf
, 
size_t
 
Àn
)

1990 
size_t
 
≈¨£d
;

1991 
hâp_∑r£r_£âögs
 
s
 = 
£âögs_∑u£
;

1993 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1994 
cuºít_∑u£_∑r£r
 = &
s
;

1995 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, 
cuºít_∑u£_∑r£r
, 
buf
, 
Àn
);

1996  
≈¨£d
;

1997 
	}
}

1999 
ölöe
 

2000 
	$check_°r_eq
 (c⁄° 
mesßge
 *
m
,

2001 c⁄° *
¥›
,

2002 c⁄° *
ex≥˘ed
,

2003 c⁄° *
found
) {

2004 i‡((
ex≥˘ed
 =
NULL
Ë!(
found
 == NULL)) {

2005 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2006 
	`¥ötf
("ex≥˘ed %s\n", (
ex≥˘ed
 =
NULL
) ? "NULL" :Éxpected);

2007 
	`¥ötf
(" found %s\n", (
found
 =
NULL
) ? "NULL" : found);

2010 i‡(
ex≥˘ed
 !
NULL
 && 0 !
	`°rcmp
”x≥˘ed, 
found
)) {

2011 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2012 
	`¥ötf
("ex≥˘ed '%s'\n", 
ex≥˘ed
);

2013 
	`¥ötf
(" found '%s'\n", 
found
);

2017 
	}
}

2019 
ölöe
 

2020 
	$check_num_eq
 (c⁄° 
mesßge
 *
m
,

2021 c⁄° *
¥›
,

2022 
ex≥˘ed
,

2023 
found
) {

2024 i‡(
ex≥˘ed
 !
found
) {

2025 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2026 
	`¥ötf
("ex≥˘ed %d\n", 
ex≥˘ed
);

2027 
	`¥ötf
(" found %d\n", 
found
);

2031 
	}
}

2033 
	#MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
found
, 
¥›
) \

2034 i‡(!
	`check_°r_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
found
->¥›)Ë 0

	)

2036 
	#MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
found
, 
¥›
) \

2037 i‡(!
	`check_num_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
found
->¥›)Ë 0

	)

2039 
	#MESSAGE_CHECK_URL_EQ
(
u
, 
ex≥˘ed
, 
found
, 
¥›
, 
‚
) \

2041 
ubuf
[256]; \

2043 i‡((
u
)->
fõld_£t
 & (1 << (
‚
))) { \

2044 
	`mem˝y
(
ubuf
, (
found
)->
ªque°_uæ
 + (
u
)->
fõld_d©a
[(
‚
)].
off
, \

2045 (
u
)->
fõld_d©a
[(
‚
)].
Àn
); \

2046 
ubuf
[(
u
)->
fõld_d©a
[(
‚
)].
Àn
] = '\0'; \

2048 
ubuf
[0] = '\0'; \

2051 
	`check_°r_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
ubuf
); \

2052 } 0)

	)

2055 
	$mesßge_eq
 (
ödex
, c⁄° 
mesßge
 *
ex≥˘ed
)

2057 
i
;

2058 
mesßge
 *
m
 = &
mesßges
[
ödex
];

2060 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
hâp_maj‹
);

2061 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
hâp_mö‹
);

2063 i‡(
ex≥˘ed
->
ty≥
 =
HTTP_REQUEST
) {

2064 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
mëhod
);

2066 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
°©us_code
);

2067 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
ª•⁄£_°©us
);

2070 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
should_kìp_Æive
);

2071 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
mesßge_com∂ëe_⁄_eof
);

2073 
	`as£π
(
m
->
mesßge_begö_cb_ˇŒed
);

2074 
	`as£π
(
m
->
hódîs_com∂ëe_cb_ˇŒed
);

2075 
	`as£π
(
m
->
mesßge_com∂ëe_cb_ˇŒed
);

2078 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
ªque°_uæ
);

2083 i‡(*
m
->
ªque°_uæ
 && m->
mëhod
 !
HTTP_CONNECT
) {

2084 
hâp_∑r£r_uæ
 
u
;

2086 i‡(
	`hâp_∑r£r_∑r£_uæ
(
m
->
ªque°_uæ
, 
	`°æí
(m->ªque°_uæ), 0, &
u
)) {

2087 
	`Ârötf
(
°dîr
, "\n\n*** failedÅoÖarse URL %s ***\n\n",

2088 
m
->
ªque°_uæ
);

2089 
	`ab‹t
();

2092 i‡(
ex≥˘ed
->
ho°
) {

2093 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
ho°
, 
UF_HOST
);

2096 i‡(
ex≥˘ed
->
u£röfo
) {

2097 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
u£röfo
, 
UF_USERINFO
);

2100 
m
->
p‹t
 = (
u
.
fõld_£t
 & (1 << 
UF_PORT
)) ?

2101 
u
.
p‹t
 : 0;

2103 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
quîy_°rög
, 
UF_QUERY
);

2104 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
‰agmít
, 
UF_FRAGMENT
);

2105 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
ªque°_∑th
, 
UF_PATH
);

2106 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
p‹t
);

2109 i‡(
ex≥˘ed
->
body_size
) {

2110 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
body_size
);

2112 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
body
);

2115 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
num_hódîs
);

2117 
r
;

2118 
i
 = 0; i < 
m
->
num_hódîs
; i++) {

2119 
r
 = 
	`check_°r_eq
(
ex≥˘ed
, "hódî fõld",Éx≥˘ed->
hódîs
[
i
][0], 
m
->headers[i][0]);

2120 i‡(!
r
)  0;

2121 
r
 = 
	`check_°r_eq
(
ex≥˘ed
, "hódî vÆue",Éx≥˘ed->
hódîs
[
i
][1], 
m
->headers[i][1]);

2122 i‡(!
r
)  0;

2125 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
upgøde
);

2128 
	}
}

2134 
size_t


2135 
	$cou¡_∑r£d_mesßges
(c⁄° 
size_t
 
nmsgs
, ...) {

2136 
size_t
 
i
;

2137 
va_li°
 
≠
;

2139 
	`va_°¨t
(
≠
, 
nmsgs
);

2141 
i
 = 0; i < 
nmsgs
; i++) {

2142 
mesßge
 *
m
 = 
	`va_¨g
(
≠
, message *);

2144 i‡(
m
->
upgøde
) {

2145 
	`va_íd
(
≠
);

2146  
i
 + 1;

2150 
	`va_íd
(
≠
);

2151  
nmsgs
;

2152 
	}
}

2158 
	$upgøde_mesßge_fix
(*
body
, c⁄° 
size_t
 
ƒód
, c⁄° size_à
nmsgs
, ...) {

2159 
va_li°
 
≠
;

2160 
size_t
 
i
;

2161 
size_t
 
off
 = 0;

2163 
	`va_°¨t
(
≠
, 
nmsgs
);

2165 
i
 = 0; i < 
nmsgs
; i++) {

2166 
mesßge
 *
m
 = 
	`va_¨g
(
≠
, message *);

2168 
off
 +
	`°æí
(
m
->
øw
);

2170 i‡(
m
->
upgøde
) {

2171 
off
 -
	`°æí
(
m
->
upgøde
);

2174 i‡(!
	`check_°r_eq
(
m
, "upgøde", 
body
 + 
off
, body + 
ƒód
)) {

2175 
	`ab‹t
();

2180 *(
body
 + 
ƒód
 + 
	`°æí
(
m
->
upgøde
)) = '\0';

2181 
mesßges
[
num_mesßges
 -1 ].
upgøde
 = 
body
 + 
ƒód
;

2183 
	`va_íd
(
≠
);

2188 
	`va_íd
(
≠
);

2189 
	`¥ötf
("\n\n*** Error:Éxpectedá message with upgrade ***\n");

2191 
	`ab‹t
();

2192 
	}
}

2195 
	$¥öt_îr‹
 (c⁄° *
øw
, 
size_t
 
îr‹_loˇti⁄
)

2197 
	`Ârötf
(
°dîr
, "\n*** %s ***\n\n",

2198 
	`hâp_î∫o_des¸ùti⁄
(
	`HTTP_PARSER_ERRNO
(
∑r£r
)));

2200 
this_löe
 = 0, 
ch¨_Àn
 = 0;

2201 
size_t
 
i
, 
j
, 
Àn
 = 
	`°æí
(
øw
), 
îr‹_loˇti⁄_löe
 = 0;

2202 
i
 = 0; i < 
Àn
; i++) {

2203 i‡(
i
 =
îr‹_loˇti⁄
Ë
this_löe
 = 1;

2204 
øw
[
i
]) {

2206 
ch¨_Àn
 = 2;

2207 
	`Ârötf
(
°dîr
, "\\r");

2211 
	`Ârötf
(
°dîr
, "\\n\n");

2213 i‡(
this_löe
Ë
¥öt
;

2215 
îr‹_loˇti⁄_löe
 = 0;

2219 
ch¨_Àn
 = 1;

2220 
	`Âutc
(
øw
[
i
], 
°dîr
);

2223 i‡(!
this_löe
Ë
îr‹_loˇti⁄_löe
 +
ch¨_Àn
;

2226 
	`Ârötf
(
°dîr
, "[eof]\n");

2228 
¥öt
:

2229 
j
 = 0; j < 
îr‹_loˇti⁄_löe
; j++) {

2230 
	`Âutc
(' ', 
°dîr
);

2232 
	`Ârötf
(
°dîr
, "^\n\√º‹Üoˇti⁄: %u\n", ()
îr‹_loˇti⁄
);

2233 
	}
}

2236 
	$ã°_¥e£rve_d©a
 ()

2238 
my_d©a
[] = "application-specific data";

2239 
hâp_∑r£r
 
∑r£r
;

2240 
∑r£r
.
d©a
 = 
my_d©a
;

2241 
	`hâp_∑r£r_öô
(&
∑r£r
, 
HTTP_REQUEST
);

2242 i‡(
∑r£r
.
d©a
 !
my_d©a
) {

2243 
	`¥ötf
("\n***Öarser.dataÇotÖreservedáccrshit http_parser_init ***\n\n");

2244 
	`ab‹t
();

2246 
	}
}

2248 
	suæ_ã°
 {

2249 c⁄° *
	m«me
;

2250 c⁄° *
	muæ
;

2251 
	mis_c⁄√˘
;

2252 
hâp_∑r£r_uæ
 
	mu
;

2253 
	mrv
;

2256 c⁄° 
uæ_ã°
 
	guæ_ã°s
[] =

2257 { {.
«me
="proxyÑequest"

2258 ,.
	guæ
="http://hostname/"

2259 ,.
	gis_c⁄√˘
=0

2260 ,.
	gu
=

2261 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2262 ,.
	gp‹t
=0

2263 ,.
	gfõld_d©a
=

2265 ,{ 7, 
job
 }

2273 ,.
	grv
=0

2276 , {.
	g«me
="proxyÑequest withÖort"

2277 ,.
	guæ
="http://hostname:444/"

2278 ,.
	gis_c⁄√˘
=0

2279 ,.
	gu
=

2280 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PORT
Ë| (1 << 
UF_PATH
)

2281 ,.
	gp‹t
=444

2282 ,.
	gfõld_d©a
=

2284 ,{ 7, 
job
 }

2292 ,.
	grv
=0

2295 , {.
	g«me
="CONNECTÑequest"

2296 ,.
	guæ
="hostname:443"

2297 ,.
	gis_c⁄√˘
=1

2298 ,.
	gu
=

2299 {.
fõld_£t
=(1 << 
UF_HOST
Ë| (1 << 
UF_PORT
)

2300 ,.
	gp‹t
=443

2301 ,.
	gfõld_d©a
=

2303 ,{ 0, 
job
 }

2311 ,.
	grv
=0

2314 , {.
	g«me
="CONNECTÑequest butÇot connect"

2315 ,.
	guæ
="hostname:443"

2316 ,.
	gis_c⁄√˘
=0

2317 ,.
	grv
=1

2320 , {.
	g«me
="proxy ipv6Ñequest"

2321 ,.
	guæ
="http://[1:2::3:4]/"

2322 ,.
	gis_c⁄√˘
=0

2323 ,.
	gu
=

2324 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2325 ,.
	gp‹t
=0

2326 ,.
	gfõld_d©a
=

2328 ,{ 
job
, job }

2336 ,.
	grv
=0

2339 , {.
	g«me
="proxy ipv6Ñequest withÖort"

2340 ,.
	guæ
="http://[1:2::3:4]:67/"

2341 ,.
	gis_c⁄√˘
=0

2342 ,.
	gu
=

2343 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PORT
Ë| (1 << 
UF_PATH
)

2344 ,.
	gp‹t
=67

2345 ,.
	gfõld_d©a
=

2347 ,{ 
job
, job }

2348 ,{ 1
job
, 2 }

2355 ,.
	grv
=0

2358 , {.
	g«me
="CONNECT ipv6áddress"

2359 ,.
	guæ
="[1:2::3:4]:443"

2360 ,.
	gis_c⁄√˘
=1

2361 ,.
	gu
=

2362 {.
fõld_£t
=(1 << 
UF_HOST
Ë| (1 << 
UF_PORT
)

2363 ,.
	gp‹t
=443

2364 ,.
	gfõld_d©a
=

2366 ,{ 1, 
job
 }

2374 ,.
	grv
=0

2377 , {.
	g«me
="ipv4 in ipv6áddress"

2378 ,.
	guæ
="http://[2001:0000:0000:0000:0000:0000:1.9.1.1]/"

2379 ,.
	gis_c⁄√˘
=0

2380 ,.
	gu
=

2381 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2382 ,.
	gp‹t
=0

2383 ,.
	gfõld_d©a
=

2385 ,{ 
job
, 37 }

2393 ,.
	grv
=0

2396 , {.
	g«me
="extra ? in query string"

2397 ,.
	guæ
="http://a.tbcdn.cn/p/fp/2010c/??fp-header-min.css,fp-base-min.css,"

2400 ,.
	gis_c⁄√˘
=0

2401 ,.
	gu
=

2402 {.
fõld_£t
=(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_QUERY
)

2403 ,.
	gp‹t
=0

2404 ,.
	gfõld_d©a
=

2409 ,{ 30,1
job7
 }

2414 ,.
	grv
=0

2417 , {.
	g«me
="space URLÉncoded"

2418 ,.
	guæ
="/toto.html?toto=a%20b"

2419 ,.
	gis_c⁄√˘
=0

2420 ,.
	gu
=

2421 {.
fõld_£t
(1<<
UF_PATH
Ë| (1<<
UF_QUERY
)

2422 ,.
	gp‹t
=0

2423 ,.
	gfõld_d©a
=

2433 ,.
	grv
=0

2437 , {.
	g«me
="URL fragment"

2438 ,.
	guæ
="/toto.html#titi"

2439 ,.
	gis_c⁄√˘
=0

2440 ,.
	gu
=

2441 {.
fõld_£t
(1<<
UF_PATH
Ë| (1<<
UF_FRAGMENT
)

2442 ,.
	gp‹t
=0

2443 ,.
	gfõld_d©a
=

2453 ,.
	grv
=0

2456 , {.
	g«me
="complex URL fragment"

2457 ,.
	guæ
="http://www.webmasterworld.com/r.cgi?f=21&d=job405&url="

2459 ,.
	gis_c⁄√˘
=0

2460 ,.
	gu
=

2461 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_QUERY
) |\

2462 (1<<
UF_FRAGMENT
)

2463 ,.
	gp‹t
=0

2464 ,.
	gfõld_d©a
=

2474 ,.
	grv
=0

2477 , {.
	g«me
="complex URL fromÇode js urlÖarser doc"

2478 ,.
	guæ
="http://host.com:job0job0/p/a/t/h?query=string#hash"

2479 ,.
	gis_c⁄√˘
=0

2480 ,.
	gu
=

2481 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PORT
Ë| (1<<
UF_PATH
) |\

2482 (1<<
UF_QUERY
Ë| (1<<
UF_FRAGMENT
)

2483 ,.
	gp‹t
=
job0job0


2484 ,.
	gfõld_d©a
=

2486 ,{ 7, 
job
 }

2488 ,{ 20, 
job
 }

2494 ,.
	grv
=0

2497 , {.
	g«me
="complex URL with basicáuth fromÇode js urlÖarser doc"

2498 ,.
	guæ
="http://a:b@host.com:job0job0/p/a/t/h?query=string#hash"

2499 ,.
	gis_c⁄√˘
=0

2500 ,.
	gu
=

2501 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PORT
Ë| (1<<
UF_PATH
) |\

2502 (1<<
UF_QUERY
Ë| (1<<
UF_FRAGMENT
Ë| (1<<
UF_USERINFO
)

2503 ,.
	gp‹t
=
job0job0


2504 ,.
	gfõld_d©a
=

2506 ,{ 11, 
job
 }

2508 ,{ 24, 
job
 }

2514 ,.
	grv
=0

2517 , {.
	g«me
="double @"

2518 ,.
	guæ
="http://a:b@@hostname:443/"

2519 ,.
	gis_c⁄√˘
=0

2520 ,.
	grv
=1

2523 , {.
	g«me
="proxyÉmpty host"

2524 ,.
	guæ
="http://:443/"

2525 ,.
	gis_c⁄√˘
=0

2526 ,.
	grv
=1

2529 , {.
	g«me
="proxyÉmptyÖort"

2530 ,.
	guæ
="http://hostname:/"

2531 ,.
	gis_c⁄√˘
=0

2532 ,.
	grv
=1

2535 , {.
	g«me
="CONNECT with basicáuth"

2536 ,.
	guæ
="a:b@hostname:443"

2537 ,.
	gis_c⁄√˘
=1

2538 ,.
	grv
=1

2541 , {.
	g«me
="CONNECTÉmpty host"

2542 ,.
	guæ
=":443"

2543 ,.
	gis_c⁄√˘
=1

2544 ,.
	grv
=1

2547 , {.
	g«me
="CONNECTÉmptyÖort"

2548 ,.
	guæ
="hostname:"

2549 ,.
	gis_c⁄√˘
=1

2550 ,.
	grv
=1

2553 , {.
	g«me
="CONNECT withÉxtra bits"

2554 ,.
	guæ
="hostname:443/"

2555 ,.
	gis_c⁄√˘
=1

2556 ,.
	grv
=1

2559 , {.
	g«me
="space in URL"

2560 ,.
	guæ
="/foo bar/"

2561 ,.
	grv
=1

2564 , {.
	g«me
="proxy basicáuth with space urlÉncoded"

2565 ,.
	guæ
="http://a%20:b@host.com/"

2566 ,.
	gis_c⁄√˘
=0

2567 ,.
	gu
=

2568 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2569 ,.
	gp‹t
=0

2570 ,.
	gfõld_d©a
=

2572 ,{ 14, 
job
 }

2580 ,.
	grv
=0

2583 , {.
	g«me
="carriageÑeturn in URL"

2584 ,.
	guæ
="/foo\rbar/"

2585 ,.
	grv
=1

2588 , {.
	g«me
="proxy double : in URL"

2589 ,.
	guæ
="http://hostname::443/"

2590 ,.
	grv
=1

2593 , {.
	g«me
="proxy basicáuth with double :"

2594 ,.
	guæ
="http://a::b@host.com/"

2595 ,.
	gis_c⁄√˘
=0

2596 ,.
	gu
=

2597 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2598 ,.
	gp‹t
=0

2599 ,.
	gfõld_d©a
=

2601 ,{ 12, 
job
 }

2609 ,.
	grv
=0

2612 , {.
	g«me
="line feed in URL"

2613 ,.
	guæ
="/foo\nbar/"

2614 ,.
	grv
=1

2617 , {.
	g«me
="proxyÉmpty basicáuth"

2618 ,.
	guæ
="http://@hostname/fo"

2619 ,.
	gu
=

2620 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
)

2621 ,.
	gp‹t
=0

2622 ,.
	gfõld_d©a
=

2624 ,{ 
job
, job }

2632 ,.
	grv
=0

2634 , {.
	g«me
="proxyÜine feed in hostname"

2635 ,.
	guæ
="http://host\name/fo"

2636 ,.
	grv
=1

2639 , {.
	g«me
="proxy % in hostname"

2640 ,.
	guæ
="http://host%name/fo"

2641 ,.
	grv
=1

2644 , {.
	g«me
="proxy ; in hostname"

2645 ,.
	guæ
="http://host;ame/fo"

2646 ,.
	grv
=1

2649 , {.
	g«me
="proxy basicáuth with unreservedchars"

2650 ,.
	guæ
="http://a!;-_!=+$@host.com/"

2651 ,.
	gis_c⁄√˘
=0

2652 ,.
	gu
=

2653 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2654 ,.
	gp‹t
=0

2655 ,.
	gfõld_d©a
=

2657 ,{ 17, 
job
 }

2665 ,.
	grv
=0

2668 , {.
	g«me
="proxy onlyÉmpty basicáuth"

2669 ,.
	guæ
="http://@/fo"

2670 ,.
	grv
=1

2673 , {.
	g«me
="proxy only basicáuth"

2674 ,.
	guæ
="http://toto@/fo"

2675 ,.
	grv
=1

2678 , {.
	g«me
="proxyÉmtpy hostname"

2679 ,.
	guæ
="http:///fo"

2680 ,.
	grv
=1

2683 , {.
	g«me
="proxy = in URL"

2684 ,.
	guæ
="http://host=ame/fo"

2685 ,.
	grv
=1

2688 #i‡
HTTP_PARSER_STRICT


2690 , {.
	g«me
="tab in URL"

2691 ,.
	guæ
="/foo\tbar/"

2692 ,.
	grv
=1

2695 , {.
	g«me
="form feed in URL"

2696 ,.
	guæ
="/foo\fbar/"

2697 ,.
	grv
=1

2702 , {.
	g«me
="tab in URL"

2703 ,.
	guæ
="/foo\tbar/"

2704 ,.
	gu
=

2705 {.
fõld_£t
=(1 << 
UF_PATH
)

2706 ,.
	gfõld_d©a
=

2716 ,.
	grv
=0

2719 , {.
	g«me
="form feed in URL"

2720 ,.
	guæ
="/foo\fbar/"

2721 ,.
	gu
=

2722 {.
fõld_£t
=(1 << 
UF_PATH
)

2723 ,.
	gfõld_d©a
=

2733 ,.
	grv
=0

2739 
	$dump_uæ
 (c⁄° *
uæ
, c⁄° 
hâp_∑r£r_uæ
 *
u
)

2741 
i
;

2743 
	`¥ötf
("\tfõld_£t: 0x%x,Ö‹t: %u\n", 
u
->
fõld_£t
, u->
p‹t
);

2744 
i
 = 0; i < 
UF_MAX
; i++) {

2745 i‡((
u
->
fõld_£t
 & (1 << 
i
)) == 0) {

2746 
	`¥ötf
("\tfõld_d©a[%u]: un£t\n", 
i
);

2750 
	`¥ötf
("\tfield_data[%u]: off: %uÜen: %uÖart: \"%.*s\n\"",

2751 
i
,

2752 
u
->
fõld_d©a
[
i
].
off
,

2753 
u
->
fõld_d©a
[
i
].
Àn
,

2754 
u
->
fõld_d©a
[
i
].
Àn
,

2755 
uæ
 + 
u
->
fõld_d©a
[
i
].
off
);

2757 
	}
}

2760 
	$ã°_∑r£_uæ
 ()

2762 
hâp_∑r£r_uæ
 
u
;

2763 c⁄° 
uæ_ã°
 *
ã°
;

2764 
i
;

2765 
rv
;

2767 
i
 = 0; i < ((
uæ_ã°s
) / (url_tests[0])); i++) {

2768 
ã°
 = &
uæ_ã°s
[
i
];

2769 
	`mem£t
(&
u
, 0, (u));

2771 
rv
 = 
	`hâp_∑r£r_∑r£_uæ
(
ã°
->
uæ
,

2772 
	`°æí
(
ã°
->
uæ
),

2773 
ã°
->
is_c⁄√˘
,

2774 &
u
);

2776 i‡(
ã°
->
rv
 == 0) {

2777 i‡(
rv
 != 0) {

2778 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\"Åest failed, "

2779 "u√x≥˘edÑv %d ***\n\n", 
ã°
->
uæ
,Åe°->
«me
, 
rv
);

2780 
	`ab‹t
();

2783 i‡(
	`memcmp
(&
u
, &
ã°
->u, (u)) != 0) {

2784 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\" failed ***\n",

2785 
ã°
->
uæ
,Åe°->
«me
);

2787 
	`¥ötf
("target http_parser_url:\n");

2788 
	`dump_uæ
(
ã°
->
uæ
, &ã°->
u
);

2789 
	`¥ötf
("result http_parser_url:\n");

2790 
	`dump_uæ
(
ã°
->
uæ
, &
u
);

2792 
	`ab‹t
();

2796 i‡(
rv
 == 0) {

2797 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\"Åest failed, "

2798 "u√x≥˘edÑv %d ***\n\n", 
ã°
->
uæ
,Åe°->
«me
, 
rv
);

2799 
	`ab‹t
();

2803 
	}
}

2806 
	$ã°_mëhod_°r
 ()

2808 
	`as£π
(0 =
	`°rcmp
("GET", 
	`hâp_mëhod_°r
(
HTTP_GET
)));

2809 
	`as£π
(0 =
	`°rcmp
("<unknown>", 
	`hâp_mëhod_°r
(1337)));

2810 
	}
}

2813 
	$ã°_mesßge
 (c⁄° 
mesßge
 *message)

2815 
size_t
 
øw_Àn
 = 
	`°æí
(
mesßge
->
øw
);

2816 
size_t
 
msg1Àn
;

2817 
msg1Àn
 = 0; msg1À¿< 
øw_Àn
; msg1len++) {

2818 
	`∑r£r_öô
(
mesßge
->
ty≥
);

2820 
size_t
 
ªad
;

2821 c⁄° *
msg1
 = 
mesßge
->
øw
;

2822 c⁄° *
msg2
 = 
msg1
 + 
msg1Àn
;

2823 
size_t
 
msg2Àn
 = 
øw_Àn
 - 
msg1Àn
;

2825 i‡(
msg1Àn
) {

2826 
ªad
 = 
	`∑r£
(
msg1
, 
msg1Àn
);

2828 i‡(
mesßge
->
upgøde
 && 
∑r£r
->upgrade) {

2829 
mesßges
[
num_mesßges
 - 1].
upgøde
 = 
msg1
 + 
ªad
;

2830 
ã°
;

2833 i‡(
ªad
 !
msg1Àn
) {

2834 
	`¥öt_îr‹
(
msg1
, 
ªad
);

2835 
	`ab‹t
();

2840 
ªad
 = 
	`∑r£
(
msg2
, 
msg2Àn
);

2842 i‡(
mesßge
->
upgøde
 && 
∑r£r
->upgrade) {

2843 
mesßges
[
num_mesßges
 - 1].
upgøde
 = 
msg2
 + 
ªad
;

2844 
ã°
;

2847 i‡(
ªad
 !
msg2Àn
) {

2848 
	`¥öt_îr‹
(
msg2
, 
ªad
);

2849 
	`ab‹t
();

2852 
ªad
 = 
	`∑r£
(
NULL
, 0);

2854 i‡(
ªad
 != 0) {

2855 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2856 
	`ab‹t
();

2859 
ã°
:

2861 i‡(
num_mesßges
 != 1) {

2862 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
mesßge
->
«me
);

2863 
	`ab‹t
();

2866 if(!
	`mesßge_eq
(0, 
mesßge
)Ë
	`ab‹t
();

2868 
	`∑r£r_‰ì
();

2870 
	}
}

2873 
	$ã°_mesßge_cou¡_body
 (c⁄° 
mesßge
 *message)

2875 
	`∑r£r_öô
(
mesßge
->
ty≥
);

2877 
size_t
 
ªad
;

2878 
size_t
 
l
 = 
	`°æí
(
mesßge
->
øw
);

2879 
size_t
 
i
, 
t‹ód
;

2880 
size_t
 
chunk
 = 4024;

2882 
i
 = 0; i < 
l
; i+
chunk
) {

2883 
t‹ód
 = 
	`MIN
(
l
-
i
, 
chunk
);

2884 
ªad
 = 
	`∑r£_cou¡_body
(
mesßge
->
øw
 + 
i
, 
t‹ód
);

2885 i‡(
ªad
 !
t‹ód
) {

2886 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2887 
	`ab‹t
();

2892 
ªad
 = 
	`∑r£_cou¡_body
(
NULL
, 0);

2893 i‡(
ªad
 != 0) {

2894 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2895 
	`ab‹t
();

2898 i‡(
num_mesßges
 != 1) {

2899 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
mesßge
->
«me
);

2900 
	`ab‹t
();

2903 if(!
	`mesßge_eq
(0, 
mesßge
)Ë
	`ab‹t
();

2905 
	`∑r£r_‰ì
();

2906 
	}
}

2909 
	$ã°_sim∂e
 (c⁄° *
buf
, 
hâp_î∫o
 
îr_ex≥˘ed
)

2911 
	`∑r£r_öô
(
HTTP_REQUEST
);

2913 
hâp_î∫o
 
îr
;

2915 
	`∑r£
(
buf
, 
	`°æí
(buf));

2916 
îr
 = 
	`HTTP_PARSER_ERRNO
(
∑r£r
);

2917 
	`∑r£
(
NULL
, 0);

2919 
	`∑r£r_‰ì
();

2924 #i‡
HTTP_PARSER_STRICT


2925 i‡(
îr_ex≥˘ed
 !
îr
 &&Éº_ex≥˘ed !
HPE_OK
 &&Éº !
HPE_STRICT
) {

2927 i‡(
îr_ex≥˘ed
 !
îr
) {

2929 
	`Ârötf
(
°dîr
, "\n***Åest_simpleÉxpected %s, but saw %s ***\n\n%s\n",

2930 
	`hâp_î∫o_«me
(
îr_ex≥˘ed
), hâp_î∫o_«me(
îr
), 
buf
);

2931 
	`ab‹t
();

2933 
	}
}

2936 
	$ã°_hódî_ovîÊow_îr‹
 (
ªq
)

2938 
hâp_∑r£r
 
∑r£r
;

2939 
	`hâp_∑r£r_öô
(&
∑r£r
, 
ªq
 ? 
HTTP_REQUEST
 : 
HTTP_RESPONSE
);

2940 
size_t
 
∑r£d
;

2941 c⁄° *
buf
;

2942 
buf
 = 
ªq
 ? "GET / HTTP/1.1\r\n" : "HTTP/1.0 200 OK\r\n";

2943 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
	`°æí
(buf));

2944 
	`as£π
(
∑r£d
 =
	`°æí
(
buf
));

2946 
buf
 = "header-key: header-value\r\n";

2947 
size_t
 
buÊí
 = 
	`°æí
(
buf
);

2949 
i
;

2950 
i
 = 0; i < 10000; i++) {

2951 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
buÊí
);

2952 i‡(
∑r£d
 !
buÊí
) {

2954 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_HEADER_OVERFLOW
);

2959 
	`Ârötf
(
°dîr
, "\n*** ErrorÉxpected butÇone in header overflowÅest ***\n");

2960 
	`ab‹t
();

2961 
	}
}

2964 
	$ã°_c⁄ã¡_Àngth_ovîÊow
 (c⁄° *
buf
, 
size_t
 
buÊí
, 
ex≥˘_ok
)

2966 
hâp_∑r£r
 
∑r£r
;

2967 
	`hâp_∑r£r_öô
(&
∑r£r
, 
HTTP_RESPONSE
);

2968 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
buÊí
);

2970 i‡(
ex≥˘_ok
)

2971 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_OK
);

2973 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_INVALID_CONTENT_LENGTH
);

2974 
	}
}

2977 
	$ã°_hódî_c⁄ã¡_Àngth_ovîÊow_îr‹
 ()

2979 
	#X
(
size
) \

2982 "\r\n"

	)

2983 c⁄° 
a
[] = 
	`X
(1
job44674407370955160
);

2984 c⁄° 
b
[] = 
	`X
(1
job446744073709551615
);

2985 c⁄° 
c
[] = 
	`X
(1
job446744073709551616
);

2986 #unde‡
X


2987 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
a
, (a) - 1, 1);

2988 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
b
, (b) - 1, 0);

2989 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
c
, (c) - 1, 0);

2990 
	}
}

2993 
	$ã°_chunk_c⁄ã¡_Àngth_ovîÊow_îr‹
 ()

2995 
	#X
(
size
) \

3000 "..."

	)

3001 c⁄° 
a
[] = 
	`X
(
FFFFFFFFFFFFFFE
);

3002 c⁄° 
b
[] = 
	`X
(
FFFFFFFFFFFFFFFF
);

3003 c⁄° 
c
[] = 
	`X
(10000000000000000);

3004 #unde‡
X


3005 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
a
, (a) - 1, 1);

3006 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
b
, (b) - 1, 0);

3007 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
c
, (c) - 1, 0);

3008 
	}
}

3011 
	$ã°_no_ovîÊow_l⁄g_body
 (
ªq
, 
size_t
 
Àngth
)

3013 
hâp_∑r£r
 
∑r£r
;

3014 
	`hâp_∑r£r_öô
(&
∑r£r
, 
ªq
 ? 
HTTP_REQUEST
 : 
HTTP_RESPONSE
);

3015 
size_t
 
∑r£d
;

3016 
size_t
 
i
;

3017 
buf1
[3000];

3018 
size_t
 
buf1Àn
 = 
	`•rötf
(
buf1
, "%s\r\nConnection: Keep-Alive\r\nContent-Length: %lu\r\n\r\n",

3019 
ªq
 ? "POST / HTTP/1.0" : "HTTP/1.0 200 OK", ()
Àngth
);

3020 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf1
, 
buf1Àn
);

3021 i‡(
∑r£d
 !
buf1Àn
)

3022 
îr
;

3024 
i
 = 0; i < 
Àngth
; i++) {

3025 
foo
 = 'a';

3026 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, &
foo
, 1);

3027 i‡(
∑r£d
 != 1)

3028 
îr
;

3031 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf1
, 
buf1Àn
);

3032 i‡(
∑r£d
 !
buf1Àn
Ë
îr
;

3035 
îr
:

3036 
	`Ârötf
(
°dîr
,

3038 
ªq
 ? "REQUEST" : "RESPONSE",

3039 ()
Àngth
);

3040 
	`ab‹t
();

3041 
	}
}

3044 
	$ã°_mu…ùÀ3
 (c⁄° 
mesßge
 *
r1
, c⁄° mesßgê*
r2
, c⁄° mesßgê*
r3
)

3046 
mesßge_cou¡
 = 
	`cou¡_∑r£d_mesßges
(3, 
r1
, 
r2
, 
r3
);

3048 
tŸÆ
[ 
	`°æí
(
r1
->
øw
)

3049 + 
	`°æí
(
r2
->
øw
)

3050 + 
	`°æí
(
r3
->
øw
)

3053 
tŸÆ
[0] = '\0';

3055 
	`°rˇt
(
tŸÆ
, 
r1
->
øw
);

3056 
	`°rˇt
(
tŸÆ
, 
r2
->
øw
);

3057 
	`°rˇt
(
tŸÆ
, 
r3
->
øw
);

3059 
	`∑r£r_öô
(
r1
->
ty≥
);

3061 
size_t
 
ªad
;

3063 
ªad
 = 
	`∑r£
(
tŸÆ
, 
	`°æí
(total));

3065 i‡(
∑r£r
->
upgøde
) {

3066 
	`upgøde_mesßge_fix
(
tŸÆ
, 
ªad
, 3, 
r1
, 
r2
, 
r3
);

3067 
ã°
;

3070 i‡(
ªad
 !
	`°æí
(
tŸÆ
)) {

3071 
	`¥öt_îr‹
(
tŸÆ
, 
ªad
);

3072 
	`ab‹t
();

3075 
ªad
 = 
	`∑r£
(
NULL
, 0);

3077 i‡(
ªad
 != 0) {

3078 
	`¥öt_îr‹
(
tŸÆ
, 
ªad
);

3079 
	`ab‹t
();

3082 
ã°
:

3084 i‡(
mesßge_cou¡
 !
num_mesßges
) {

3085 
	`Ârötf
(
°dîr
, "\n\n*** P¨£∏didn'à£ê3 mesßge†⁄ly %d *** \n", 
num_mesßges
);

3086 
	`ab‹t
();

3089 i‡(!
	`mesßge_eq
(0, 
r1
)Ë
	`ab‹t
();

3090 i‡(
mesßge_cou¡
 > 1 && !
	`mesßge_eq
(1, 
r2
)Ë
	`ab‹t
();

3091 i‡(
mesßge_cou¡
 > 2 && !
	`mesßge_eq
(2, 
r3
)Ë
	`ab‹t
();

3093 
	`∑r£r_‰ì
();

3094 
	}
}

3101 
	$ã°_sˇn
 (c⁄° 
mesßge
 *
r1
, c⁄° mesßgê*
r2
, c⁄° mesßgê*
r3
)

3103 
tŸÆ
[
job0
*1024] = "\0";

3104 
buf1
[
job0
*1024] = "\0";

3105 
buf2
[
job0
*1024] = "\0";

3106 
buf3
[
job0
*1024] = "\0";

3108 
	`°rˇt
(
tŸÆ
, 
r1
->
øw
);

3109 
	`°rˇt
(
tŸÆ
, 
r2
->
øw
);

3110 
	`°rˇt
(
tŸÆ
, 
r3
->
øw
);

3112 
size_t
 
ªad
;

3114 
tŸÆ_Àn
 = 
	`°æí
(
tŸÆ
);

3116 
tŸÆ_›s
 = 2 * (
tŸÆ_Àn
 - 1) * (total_len - 2) / 2;

3117 
›s
 = 0 ;

3119 
size_t
 
buf1_Àn
, 
buf2_Àn
, 
buf3_Àn
;

3120 
mesßge_cou¡
 = 
	`cou¡_∑r£d_mesßges
(3, 
r1
, 
r2
, 
r3
);

3122 
i
,
j
,
ty≥_bŸh
;

3123 
ty≥_bŸh
 = 0;Åype_both < 2;Åype_both ++ ) {

3124 
j
 = 2; j < 
tŸÆ_Àn
; j ++ ) {

3125 
i
 = 1; i < 
j
; i ++ ) {

3127 i‡(
›s
 % 1000 == 0) {

3128 
	`¥ötf
("\b\b\b\b%3.0f%%", 100 * ()
›s
 /()
tŸÆ_›s
);

3129 
	`fÊush
(
°dout
);

3131 
›s
 += 1;

3133 
	`∑r£r_öô
(
ty≥_bŸh
 ? 
HTTP_BOTH
 : 
r1
->
ty≥
);

3135 
buf1_Àn
 = 
i
;

3136 
	`°æn˝y
(
buf1
, (buf1), 
tŸÆ
, 
buf1_Àn
);

3137 
buf1
[
buf1_Àn
] = 0;

3139 
buf2_Àn
 = 
j
 - 
i
;

3140 
	`°æn˝y
(
buf2
, (
buf1
), 
tŸÆ
+
i
, 
buf2_Àn
);

3141 
buf2
[
buf2_Àn
] = 0;

3143 
buf3_Àn
 = 
tŸÆ_Àn
 - 
j
;

3144 
	`°æn˝y
(
buf3
, (
buf1
), 
tŸÆ
+
j
, 
buf3_Àn
);

3145 
buf3
[
buf3_Àn
] = 0;

3147 
ªad
 = 
	`∑r£
(
buf1
, 
buf1_Àn
);

3149 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3151 i‡(
ªad
 !
buf1_Àn
) {

3152 
	`¥öt_îr‹
(
buf1
, 
ªad
);

3153 
îr‹
;

3156 
ªad
 +
	`∑r£
(
buf2
, 
buf2_Àn
);

3158 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3160 i‡(
ªad
 !
buf1_Àn
 + 
buf2_Àn
) {

3161 
	`¥öt_îr‹
(
buf2
, 
ªad
);

3162 
îr‹
;

3165 
ªad
 +
	`∑r£
(
buf3
, 
buf3_Àn
);

3167 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3169 i‡(
ªad
 !
buf1_Àn
 + 
buf2_Àn
 + 
buf3_Àn
) {

3170 
	`¥öt_îr‹
(
buf3
, 
ªad
);

3171 
îr‹
;

3174 
	`∑r£
(
NULL
, 0);

3176 
ã°
:

3177 i‡(
∑r£r
->
upgøde
) {

3178 
	`upgøde_mesßge_fix
(
tŸÆ
, 
ªad
, 3, 
r1
, 
r2
, 
r3
);

3181 i‡(
mesßge_cou¡
 !
num_mesßges
) {

3182 
	`Ârötf
(
°dîr
, "\n\nParser didn't see %d messages only %d\n",

3183 
mesßge_cou¡
, 
num_mesßges
);

3184 
îr‹
;

3187 i‡(!
	`mesßge_eq
(0, 
r1
)) {

3188 
	`Ârötf
(
°dîr
, "\n\nError matching messages[0] inÅest_scan.\n");

3189 
îr‹
;

3192 i‡(
mesßge_cou¡
 > 1 && !
	`mesßge_eq
(1, 
r2
)) {

3193 
	`Ârötf
(
°dîr
, "\n\nError matching messages[1] inÅest_scan.\n");

3194 
îr‹
;

3197 i‡(
mesßge_cou¡
 > 2 && !
	`mesßge_eq
(2, 
r3
)) {

3198 
	`Ârötf
(
°dîr
, "\n\nError matching messages[2] inÅest_scan.\n");

3199 
îr‹
;

3202 
	`∑r£r_‰ì
();

3206 
	`puts
("\b\b\b\b100%");

3209 
îr‹
:

3210 
	`Ârötf
(
°dîr
, "i=%d j=%d\n", 
i
, 
j
);

3211 
	`Ârötf
(
°dîr
, "buf1 (%uË%s\n\n", ()
buf1_Àn
, 
buf1
);

3212 
	`Ârötf
(
°dîr
, "buf2 (%uË%s\n\n", ()
buf2_Àn
 , 
buf2
);

3213 
	`Ârötf
(
°dîr
, "buf3 (%uË%s\n", ()
buf3_Àn
, 
buf3
);

3214 
	`ab‹t
();

3215 
	}
}

3220 
	$¸óã_œrge_chunked_mesßge
 (
body_size_ö_kb
, c⁄° * 
hódîs
)

3222 
i
;

3223 
size_t
 
wrŸe
 = 0;

3224 
size_t
 
hódîs_Àn
 = 
	`°æí
(
hódîs
);

3225 
size_t
 
bufsize
 = 
hódîs_Àn
 + (5+1024+2)*
body_size_ö_kb
 + 6;

3226 * 
buf
 = 
	`mÆloc
(
bufsize
);

3228 
	`mem˝y
(
buf
, 
hódîs
, 
hódîs_Àn
);

3229 
wrŸe
 +
hódîs_Àn
;

3231 
i
 = 0; i < 
body_size_ö_kb
; i++) {

3233 
	`mem˝y
(
buf
 + 
wrŸe
, "400\r\n", 5);

3234 
wrŸe
 += 5;

3235 
	`mem£t
(
buf
 + 
wrŸe
, 'C', 1024);

3236 
wrŸe
 += 1024;

3237 
	`°r˝y
(
buf
 + 
wrŸe
, "\r\n");

3238 
wrŸe
 += 2;

3241 
	`mem˝y
(
buf
 + 
wrŸe
, "0\r\n\r\n", 6);

3242 
wrŸe
 += 6;

3243 
	`as£π
(
wrŸe
 =
bufsize
);

3245  
buf
;

3246 
	}
}

3251 
	$ã°_mesßge_∑u£
 (c⁄° 
mesßge
 *
msg
)

3253 *
buf
 = (*Ë
msg
->
øw
;

3254 
size_t
 
buÊí
 = 
	`°æí
(
msg
->
øw
);

3255 
size_t
 
ƒód
;

3257 
	`∑r£r_öô
(
msg
->
ty≥
);

3260 
ƒód
 = 
	`∑r£_∑u£
(
buf
, 
buÊí
);

3264 i‡(
mesßges
[0].
mesßge_com∂ëe_cb_ˇŒed
 &&

3265 
msg
->
upgøde
 &&

3266 
∑r£r
->
upgøde
) {

3267 
mesßges
[0].
upgøde
 = 
buf
 + 
ƒód
;

3268 
ã°
;

3271 i‡(
ƒód
 < 
buÊí
) {

3274 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_STRICT
) {

3275 
	`∑r£r_‰ì
();

3279 
	`as£π
 (
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_PAUSED
);

3282 
buf
 +
ƒód
;

3283 
buÊí
 -
ƒód
;

3284 
	`hâp_∑r£r_∑u£
(
∑r£r
, 0);

3285 } 
buÊí
 > 0);

3287 
ƒód
 = 
	`∑r£_∑u£
(
NULL
, 0);

3288 
	`as£π
 (
ƒód
 == 0);

3290 
ã°
:

3291 i‡(
num_mesßges
 != 1) {

3292 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
msg
->
«me
);

3293 
	`ab‹t
();

3296 if(!
	`mesßge_eq
(0, 
msg
)Ë
	`ab‹t
();

3298 
	`∑r£r_‰ì
();

3299 
	}
}

3302 
	$maö
 ()

3304 
∑r£r
 = 
NULL
;

3305 
i
, 
j
, 
k
;

3306 
ªque°_cou¡
;

3307 
ª•⁄£_cou¡
;

3308 
vîsi⁄
;

3309 
maj‹
;

3310 
mö‹
;

3311 
∑tch
;

3314 
abc
 = 1;

3315 
abc
) {

3316 
	`¶ìp
(1);

3319 
vîsi⁄
 = 
	`hâp_∑r£r_vîsi⁄
();

3320 
maj‹
 = (
vîsi⁄
 >> 16) & 255;

3321 
mö‹
 = (
vîsi⁄
 >> 
job
) & 255;

3322 
∑tch
 = 
vîsi⁄
 & 255;

3323 
	`¥ötf
("hâp_∑r£∏v%u.%u.%u (0x%06lx)\n", 
maj‹
, 
mö‹
, 
∑tch
, 
vîsi⁄
);

3325 
	`¥ötf
("sizeof(hâp_∑r£rË%u\n", ()(
hâp_∑r£r
));

3327 
ªque°_cou¡
 = 0; 
ªque°s
[ªque°_cou¡].
«me
;Ñequest_count++);

3328 
ª•⁄£_cou¡
 = 0; 
ª•⁄£s
[ª•⁄£_cou¡].
«me
;Ñesponse_count++);

3331 
	`ã°_¥e£rve_d©a
();

3332 
	`ã°_∑r£_uæ
();

3333 
	`ã°_mëhod_°r
();

3337 
	`ã°_hódî_ovîÊow_îr‹
(
HTTP_REQUEST
);

3338 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_REQUEST
, 1000);

3339 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_REQUEST
, 100000);

3341 
	`ã°_hódî_ovîÊow_îr‹
(
HTTP_RESPONSE
);

3342 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_RESPONSE
, 1000);

3343 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_RESPONSE
, 100000);

3345 
	`ã°_hódî_c⁄ã¡_Àngth_ovîÊow_îr‹
();

3346 
	`ã°_chunk_c⁄ã¡_Àngth_ovîÊow_îr‹
();

3350 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3351 
	`ã°_mesßge
(&
ª•⁄£s
[
i
]);

3354 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3355 
	`ã°_mesßge_∑u£
(&
ª•⁄£s
[
i
]);

3358 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3359 i‡(!
ª•⁄£s
[
i
].
should_kìp_Æive
) ;

3360 
j
 = 0; j < 
ª•⁄£_cou¡
; j++) {

3361 i‡(!
ª•⁄£s
[
j
].
should_kìp_Æive
) ;

3362 
k
 = 0; k < 
ª•⁄£_cou¡
; k++) {

3363 
	`ã°_mu…ùÀ3
(&
ª•⁄£s
[
i
], &ª•⁄£s[
j
], &ª•⁄£s[
k
]);

3368 
	`ã°_mesßge_cou¡_body
(&
ª•⁄£s
[
NO_HEADERS_NO_BODY_404
]);

3369 
	`ã°_mesßge_cou¡_body
(&
ª•⁄£s
[
TRAILING_SPACE_ON_CHUNKED_BODY
]);

3373 * 
msg
 = 
	`¸óã_œrge_chunked_mesßge
(31337,

3378 
mesßge
 
œrge_chunked
 =

3379 {.
«me
= "large chunked"

3380 ,.
ty≥

HTTP_RESPONSE


3381 ,.
øw

msg


3382 ,.
should_kìp_Æive

FALSE


3383 ,.
mesßge_com∂ëe_⁄_eof

FALSE


3384 ,.
hâp_maj‹
= 1

3385 ,.
hâp_mö‹
= 0

3386 ,.
°©us_code
= 200

3387 ,.
ª•⁄£_°©us
= "OK"

3388 ,.
num_hódîs
= 2

3389 ,.
hódîs
=

3393 ,.
body_size
= 31337*1024

3395 
	`ã°_mesßge_cou¡_body
(&
œrge_chunked
);

3396 
	`‰ì
(
msg
);

3401 
	`¥ötf
("response scan 1/2 ");

3402 
	`ã°_sˇn
–&
ª•⁄£s
[
TRAILING_SPACE_ON_CHUNKED_BODY
]

3403 , &
ª•⁄£s
[
NO_BODY_HTTP10_KA_204
]

3404 , &
ª•⁄£s
[
NO_REASON_PHRASE
]

3407 
	`¥ötf
("response scan 2/2 ");

3408 
	`ã°_sˇn
–&
ª•⁄£s
[
BONJOUR_MADAME_FR
]

3409 , &
ª•⁄£s
[
UNDERSTORE_HEADER_KEY
]

3410 , &
ª•⁄£s
[
NO_CARRIAGE_RET
]

3413 
	`puts
("responses okay");

3418 
	`ã°_sim∂e
("GET / HTP/1.1\r\n\r\n", 
HPE_INVALID_VERSION
);

3421 
	`ã°_sim∂e
("GET / HTTP/1.1\r\n"

3426 
HPE_OK
);

3428 c⁄° *
Æl_mëhods
[] = {

3454 c⁄° **
this_mëhod
;

3455 
this_mëhod
 = 
Æl_mëhods
; *this_method;Åhis_method++) {

3456 
buf
[200];

3457 
	`•rötf
(
buf
, "%†/ HTTP/1.1\r\n\r\n", *
this_mëhod
);

3458 
	`ã°_sim∂e
(
buf
, 
HPE_OK
);

3461 c⁄° *
bad_mëhods
[] = {

3475 
this_mëhod
 = 
bad_mëhods
; *this_method;Åhis_method++) {

3476 
buf
[200];

3477 
	`•rötf
(
buf
, "%†/ HTTP/1.1\r\n\r\n", *
this_mëhod
);

3478 
	`ã°_sim∂e
(
buf
, 
HPE_INVALID_METHOD
);

3482 
	`ã°_sim∂e
("GET / HTTP/1.1\r\n"

3486 
HPE_INVALID_HEADER_TOKEN
);

3488 c⁄° *
dumbfuck2
 =

3523 
	`ã°_sim∂e
(
dumbfuck2
, 
HPE_OK
);

3531 c⁄° *
bad_gë_no_hódîs_no_body
 = "GET /bad_get_no_headers_no_body/world HTTP/1.1\r\n"

3535 
	`ã°_sim∂e
(
bad_gë_no_hódîs_no_body
, 0);

3541 
i
 = 0; 
ªque°s
[i].
«me
; i++) {

3542 
	`ã°_mesßge
(&
ªque°s
[
i
]);

3545 
i
 = 0; i < 
ªque°_cou¡
; i++) {

3546 
	`ã°_mesßge_∑u£
(&
ªque°s
[
i
]);

3549 
i
 = 0; i < 
ªque°_cou¡
; i++) {

3550 i‡(!
ªque°s
[
i
].
should_kìp_Æive
) ;

3551 
j
 = 0; j < 
ªque°_cou¡
; j++) {

3552 i‡(!
ªque°s
[
j
].
should_kìp_Æive
) ;

3553 
k
 = 0; k < 
ªque°_cou¡
; k++) {

3554 
	`ã°_mu…ùÀ3
(&
ªque°s
[
i
], &ªque°s[
j
], &ªque°s[
k
]);

3559 
	`¥ötf
("request scan 1/4 ");

3560 
	`ã°_sˇn
–&
ªque°s
[
GET_NO_HEADERS_NO_BODY
]

3561 , &
ªque°s
[
GET_ONE_HEADER_NO_BODY
]

3562 , &
ªque°s
[
GET_NO_HEADERS_NO_BODY
]

3565 
	`¥ötf
("request scan 2/4 ");

3566 
	`ã°_sˇn
–&
ªque°s
[
POST_CHUNKED_ALL_YOUR_BASE
]

3567 , &
ªque°s
[
POST_IDENTITY_BODY_WORLD
]

3568 , &
ªque°s
[
GET_FUNKY_CONTENT_LENGTH
]

3571 
	`¥ötf
("request scan 3/4 ");

3572 
	`ã°_sˇn
–&
ªque°s
[
TWO_CHUNKS_MULT_ZERO_END
]

3573 , &
ªque°s
[
CHUNKED_W_TRAILING_HEADERS
]

3574 , &
ªque°s
[
CHUNKED_W_BULLSHIT_AFTER_LENGTH
]

3577 
	`¥ötf
("request scan 4/4 ");

3578 
	`ã°_sˇn
–&
ªque°s
[
QUERY_URL_WITH_QUESTION_MARK_GET
]

3579 , &
ªque°s
[
PREFIX_NEWLINE_GET
 ]

3580 , &
ªque°s
[
CONNECT_REQUEST
]

3583 
	`puts
("requests okay");

3586 
	}
}

	@/root/grocery-shop/language/gcc/src/ioOperator/configIO.c

1 
	~"c⁄figIO.h
"

6 
	$˛ór_°dbuf
()

8 
c
;

9 (
c
=
	`gëch¨
()) != '\n');

10 
	}
}

16 
	$gë_•ecifõd_§ög
(c⁄° *
§c
, *
d°
, c⁄° *
moduÀ
)

18 c⁄° *
ãmp
 = 
§c
;

20 *
ãmp
 != '\0') {

21 i‡(
	`°rchr
(
moduÀ
, *
ãmp
Ë!
NULL
) {

24 
ãmp
++;

26 
	`°∫˝y
(
d°
, 
§c
, 
ãmp
-src);

27 
d°
[
ãmp
-
§c
] = '\0';

30 
	}
}

35 *
	$ª∂a˚_⁄e
(*
°
, *
‹ig
, *
ª∂
)

37 
buf„r
[4096];

38 *
ch
;

40 i‡(!
°
 || !
‹ig
 || !
ª∂
) {

41  
NULL
;

44 i‡(!(
ch
 = 
	`°r°r
(
°
, 
‹ig
))) {

45  
°
;

48 
	`°∫˝y
(
buf„r
, 
°
, 
ch
-st);

49 
buf„r
[
ch
-
°
] = 0;

50 
	`•rötf
(
buf„r
+(
ch
-
°
), "%s%s", 
ª∂
, ch+
	`°æí
(
‹ig
));

52  
buf„r
;

53 
	}
}

58 *
	$ª∂a˚_°r2
(c⁄° *
°r
, c⁄° *
ﬁd
, c⁄° *
√w
)

60 *
ªt
, *
r
;

61 c⁄° *
p
, *
q
;

62 
size_t
 
ﬁdÀn
;

63 
size_t
 
cou¡
, 
ªéí
, 
√wÀn
;

64 
ßmesize
;

65 
l
;

67 
ﬁdÀn
 = 
	`°æí
(
ﬁd
);

68 
√wÀn
 = 
	`°æí
(
√w
);

69 
ßmesize
 = (
ﬁdÀn
 =
√wÀn
);

71 i‡(!
ßmesize
) {

72 
cou¡
 = 0, 
p
 = 
°r
; (
q
 = 
	`°r°r
’, 
ﬁd
)Ë!
NULL
;Ö = q + 
ﬁdÀn
) {

73 
cou¡
++;

76 
ªéí
 = 
p
 - 
°r
 + 
	`°æí
’Ë+ 
cou¡
 * (
√wÀn
 - 
ﬁdÀn
);

78 
ªéí
 = 
	`°æí
(
°r
);

82 i‡(!(
ªt
 = 
	`mÆloc
(
ªéí
 + 1))) {

83  
NULL
;

86 
r
 = 
ªt
, 
p
 = 
°r
;

95 i‡(!
ßmesize
 && !
cou¡
--)

104 i‡((
q
 = 
	`°r°r
(
p
, 
ﬁd
)Ë=
NULL
)

107 
l
 = 
q
 - 
p
;

108 
	`mem˝y
(
r
, 
p
, 
l
);

109 
r
 +
l
;

110 
	`mem˝y
(
r
, 
√w
, 
√wÀn
);

111 
r
 +
√wÀn
;

112 
p
 = 
q
 + 
ﬁdÀn
;

114 
	`°r˝y
(
r
, 
p
);

116  
ªt
;

117 
	}
}

	@/root/grocery-shop/language/gcc/src/ioOperator/configIO.h

1 #i‚de‡ 
_CONFIGIO_H_


2 
	#_CONFIGIO_H_


	)

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	#MYLOVE
 "AGE"

	)

8 
	#FILENAME
 "./fûedú/unˇcheTe°.b"

	)

13 
˛ór_°dbuf
();

15 
gë_•ecifõd_§ög
(c⁄° *
§c
, *
d°
, c⁄° *
moduÀ
);

20 *
ª∂a˚_⁄e
(*
°
, *
‹ig
, *
ª∂
);

25 *
ª∂a˚_°r2
(c⁄° *
°r
, c⁄° *
ﬁd
, c⁄° *
√w
);

	@/root/grocery-shop/language/gcc/src/ioOperator/printfIO.c

1 
	~"c⁄figIO.h
"

3 
	#ALARM_EMAIL_SERVER_POLICY
 \

4 " <å> \¿\
<td bgcﬁ‹=\"#ffffff\" styÀ=\"∑ddög: 20px 30px 20px 30px;\">\¿\
<èbÀ b‹dî=\"0\" cñÕaddög=\"0\" cñl•acög=\"0\" width=\"100%%\">\¿\
<å> \¿\
<td styÀ=\"∑ddög: 0;\">\¿\
<èbÀ b‹dî=\"1\" cñÕaddög=\"0\" cñl•acög=\"0\" width=\"100%%\">\¿\
<å>\¿\
<td></td>\¿\
<td styÀ=\"cﬁ‹: #153643; f⁄t-Ámûy: Arül, s™s-£rif; f⁄t-size: 15px;\">\¿\
<b>ÊúçÂä°Âô®Á≠ñÁï•</b>\¿\
</td>\¿\
<td styÀ=\"cﬁ‹: #153643; f⁄t-Ámûy: Arül, s™s-£rif; f⁄t-size: 15px;\">\¿\
<b>ÂëäË≠¶Á≠ñÁï•</b>\¿\
</td>\¿\
</å>\¿\
<å>\¿\
<td></td>\¿\
<td>%s</td>\¿\
<td>%s</td>\¿\
</å> \¿\
<å>\¿\
<td styÀ=\"cﬁ‹: #153643; f⁄t-Ámûy: Arül, s™s-£rif; f⁄t-size: 15px;\">\¿\
<b>ÊîªÂáªÁ±ªÂûã</b>\¿\
</td>\¿\
<td styÀ=\"cﬁ‹: #153643; f⁄t-Ámûy: Arül, s™s-£rif; f⁄t-size: 15px;\">\¿\
<b>ÂëäË≠¶Á≠âÁ∫ß</b>\¿\
</td>\¿\
<td styÀ=\"cﬁ‹: #153643; f⁄t-Ámûy: Arül, s™s-£rif; f⁄t-size: 15px;\">\¿\
<b>ÊîªÂáªÊ¨°Êï∞</b>\¿\
</td>\¿\
</å>\¿"

	)

36 
	#DEST_FILE
 "de°.fûe"

	)

42 
	$ã°_Ârötf_func
()

44 
desc
[4096];

45 
FILE
 *
Â
 = 
NULL
;

46 
FILE
 *
dÂ
 = 
NULL
;

48 
Â
 =
	`tmpfûe
();

49 i‡(!
Â
) {

53 
dÂ
 =
	`f›í
(
DEST_FILE
, "w");

54 i‡(!
Â
) {

58 
	`¥ötf
("‰ø°ÊÅØÂÜôÂÖ•‰∏¥Êó∂Êñá‰ª∂‰∏≠.\n");

59 
	`•rötf
(
desc
, 
ALARM_EMAIL_SERVER_POLICY
, "http", "alarmT");

60 
	`Ârötf
(
Â
, "%s", 
desc
);

61 
	`f˛o£
(
Â
);

63 
	`¥ötf
("‰ø°ÊÅØÂÜôÂÖ•Êñá‰ª∂-%s‰∏≠.\n", 
DEST_FILE
);

64 
desc
[0] = '\0';

65 
	`•rötf
(
desc
, 
ALARM_EMAIL_SERVER_POLICY
, "http", "alarmT");

66 
	`Ârötf
(
dÂ
, "%s", 
desc
);

67 
	`f˛o£
(
dÂ
);

70 
	}
}

76 
	$ã°_unicode_di•œy
()

78 
buf
[12
job
];

79 *
ãmp
;

80 
c
;

85 
	`¥ötf
("ËØ∑ËæìÂÖ•‰∏≠ÊñáÂ≠óÁ¨¶‰∏≤ËøõË°åÊµãËØï: ");

86 
	`sˇnf
("%s", 
buf
);

88 
	`¥ötf
("‰Ω†ËæìÂÖ•ÁöÑ‰∏≤‰∏∫: %s\n", 
buf
);

89 
	`¥ötf
("ÂÖ∂Â≠óËäÇÊòæÁ§∫‰∏∫: ");

90 
ãmp
 = &
buf
[0];

91 (
c
=*
ãmp
++) != '\0') {

92 
	`¥ötf
("%x ", 
c
);

94 
	`¥ötf
("\n");

97 
	}
}

101 
	$maö
(
¨gc
, **
¨gv
)

103 
ªt
 = -1;

105 
	`¥ötf
("===============fprintf==============\n");

108 
	`¥ötf
("===============‰∏≠ÊñáÊµãËØï==============\n");

111 
buf
[12
job
];

112 
	`•rötf
(
buf
, "%04d", 3);

113 
	`¥ötf
("Buf=%s\n", 
buf
);

115  
ªt
;

116 
	}
}

	@/root/grocery-shop/language/gcc/src/ioOperator/scanfIO.c

4 
	~"c⁄figIO.h
"

10 
	$sim∂e_ã°
()

12 
buf
[12
job
];

13 
ôem
;

14 
digô
;

16 
	`¥ötf
("ÊµãËØï%%c %%s %%dËΩ¨Êç¢ËØ¥ÊòéÁ¨¶:\n");

17 
	`sˇnf
("%¯%†%d", &
ôem
, 
buf
, &
digô
);

18 
	`¥ötf
("‰Ω†ËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏∫:%c\n"

21 
ôem
, 
buf
, 
digô
);

22 
	}
}

29 
	$sim∂e_bœnk•a˚
()

31 
i
;

32 
	`¥ötf
("Êç¢Ë°å-Âà∂Ë°®-Á©∫Ê†ºÈÉΩÂ±û‰∫é„ÄäÁ©∫Ê†º„Äã\n");

33 
	`¥ötf
("ËØ∑ËæìÂÖ•‰∏Ä‰∏™Êï∞Â≠ó:\n");

34 
	`sˇnf
("%d\n", &
i
);

35 
	`¥ötf
("i=%d\n", 
i
);

36 
	`¥ötf
("=============================\n");

37 
	}
}

45 
	$bªakpoöt_ã°
()

47 *
°r
, *
°rO
;

48 
buf
[12
job
];

49 
ôem
;

50 
digô
;

52 
	`¥ötf
("Êñ≠ÁÇπ========================\n");

53 
°r
 = "\n shit\t \nB 345d53 xxgge";

54 
°rO
 = "\\n shit\\t \nB 345d53 xxgge";

55 
	`¥ötf
("Ê¨≤ËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫:%s\n", 
°rO
);

56 
	`ssˇnf
(
°r
, "%†%¯%d", 
buf
, &
ôem
, &
digô
);

57 
	`¥ötf
("buf=%†ôem=%¯digô=%d\n\n", 
buf
, 
ôem
, 
digô
);

59 
buf
[0] = '\0';

60 
ôem
 = '\0';

61 
digô
 = 0;

62 
	`¥ötf
("Êñ≠ÁÇπ========================\n");

63 
°r
 = "\n B xxxx 1234";

64 
°rO
 = "\\n B xxxx 1234";

65 
	`¥ötf
("Ê¨≤ËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫:%s\n", 
°rO
);

66 
	`ssˇnf
(
°r
, "%¯%†%d", &
ôem
, 
buf
, &
digô
);

67 
	`¥ötf
("ôem=%¯buf=%†digô=%d\n\n", 
ôem
, 
buf
, 
digô
);

68 
	}
}

75 
	$ssˇnf_ã°
()

77 
ªt
;

78 *
°rög
 = 
NULL
;

79 
digô
;

80 
buf1
[255];

81 
buf2
[255];

82 
buf3
[255];

83 
buf4
[255];

87 
	`¥ötf
("======================================\n");

88 
°rög
 = "UESTC EE 4200job02";

89 
ªt
 = 
	`ssˇnf
(
°rög
, "%†%†%d", 
buf1
, 
buf2
, &
digô
);

90 
	`¥ötf
("1.°rög=%s\n", 
°rög
);

91 
	`¥ötf
("1.ªt=%d, buf1=%s, buf2=%s, digô=%d\n\n", 
ªt
, 
buf1
, 
buf2
, 
digô
);

99 
	`¥ötf
("======================================\n");

100 
°rög
 = "1234567job9";

101 
	`ssˇnf
(
°rög
, "%5s", 
buf1
);

102 
	`¥ötf
("2.°rög=%s\n", 
°rög
);

103 
	`¥ötf
("2.buf1=%s\n\n", 
buf1
);

110 
	`¥ötf
("======================================\n");

111 
°rög
 = "123/456";

112 
	`ssˇnf
(
°rög
, "%[^/]", 
buf1
);

113 
	`¥ötf
("3.°rög=%s\n", 
°rög
);

114 
	`¥ötf
("3.buf1=%s\n\n", 
buf1
);

121 
	`¥ötf
("======================================\n");

122 
°rög
 = "123abcABC";

123 
	`ssˇnf
(
°rög
, "%[^A-Z]", 
buf1
);

124 
	`¥ötf
("4.°rög=%s\n", 
°rög
);

125 
	`¥ötf
("4.buf1=%s\n\n", 
buf1
);

132 
	`¥ötf
("======================================\n");

133 
°rög
 = "0123abcABC";

134 
	`ssˇnf
(
°rög
, "%[0-9]%[a-z]%[A-Z]", 
buf1
, 
buf2
, 
buf3
);

135 
	`¥ötf
("5.°rög=%s\n", 
°rög
);

136 
	`¥ötf
("5.buf1=%s, buf2=%s, buf3=%s\n\n", 
buf1
, 
buf2
, 
buf3
);

146 
	`¥ötf
("======================================\n");

147 
°rög
 = "ios<Android>wp7";

148 
	`ssˇnf
(
°rög
, "%*[^<]<%[^>]", 
buf1
);

149 
	`¥ötf
("6.°rög=%s\n", 
°rög
);

150 
	`¥ötf
("6.buf1=%s\n\n", 
buf1
);

158 
	`¥ötf
("======================================\n");

159 
°rög
 = "iosVSandroid";

160 
	`ssˇnf
(
°rög
, "%[a-z]VS%[a-z]", 
buf1
, 
buf2
);

161 
	`¥ötf
("7.°rög=%s\n", 
°rög
);

162 
	`¥ötf
("7.buf1=%s, buf2=%s\n\n", 
buf1
, 
buf2
);

169 
	`¥ötf
("======================================\n");

170 
°rög
 = "android-iphone-wp7";

175 
	`ssˇnf
(
°rög
, "%[^-]-%[^-]-%[^-]", 
buf1
, 
buf2
, 
buf3
);

176 
	`¥ötf
("job.°rög=%s\n", 
°rög
);

177 
	`¥ötf
("job.buf1=%s, buf2=%s, buf3=%s\n\n", 
buf1
, 
buf2
, 
buf3
);

184 
	`¥ötf
("======================================\n");

185 
°rög
 = "Email:shihui512@139.com";

186 
	`ssˇnf
(
°rög
, "%[^:]:%[^@]@%[^.].%s", 
buf1
, 
buf2
, 
buf3
, 
buf4
);

187 
	`¥ötf
("9.°rög=%s\n", 
°rög
);

188 
	`¥ötf
("9.buf1=%s, buf2=%s, buf3=%s, buf4=%s\n\n", 
buf1
, 
buf2
, 
buf3
, 
buf4
);

195 
	`¥ötf
("======================================\n");

196 
°rög
 = "black space (~_~)\nxxx";

197 
	`ssˇnf
(
°rög
, "%[^\n]", 
buf1
);

198 
	`¥ötf
("10.°rög=%s\n", 
°rög
);

199 
	`¥ötf
("10.buf1=%s\n\n", 
buf1
);

206 
	`¥ötf
("======================================\n");

207 
°rög
 = "mylove =Öan";

208 
	`ssˇnf
(
°rög
, "%[^=|^ |^\t]", 
buf1
);

209 
	`¥ötf
("11.°rög=%s\n", 
°rög
);

210 
	`¥ötf
("11.buf1=%s\n\n", 
buf1
);

213 
	`¥ötf
("======================================\n");

214 
°rög
 = "mylove =Öan";

215 
	`gë_•ecifõd_§ög
(
°rög
, 
buf1
, "= \t");

216 
	`¥ötf
("11.°rög=%s\n", 
°rög
);

217 
	`¥ötf
("11.buf1=%s\n\n", 
buf1
);

220 
	`¥ötf
("======================================\n");

221 
°rög
 = "\\xE5\\xjobC\\x97\\xE4\\xBA\\xAC\\xE5\\xBjob\\xjob2";

222 
	`ssˇnf
(
°rög
, "\\x%[0-9|A-F]", 
buf1
);

223 
	`¥ötf
("13.°rög=%s\n", 
°rög
);

224 
	`¥ötf
("13.buf1=\\x%s\n\n", 
buf1
);

225 
	}
}

228 
	$maö
(
¨gc
, **
¨gv
)

231 
	`bªakpoöt_ã°
();

232 
	`sim∂e_bœnk•a˚
();

233 
	`ssˇnf_ã°
();

236 
	}
}

	@/root/grocery-shop/language/gcc/src/json/parseTest.c

1 
	~<°dio.h
>

	@/root/grocery-shop/language/gcc/src/libev/evBreak.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<±hªad.h
>

6 
	~<ev.h
>

8 
±hªad_t
 
	gã°_thªad
;

9 
ev_lo›
 *
	glo›
;

10 
ev_timî
 
	gtimî_w©chî
;

13 
	$thªad_im∂
(*
¨g
)

15 
	`¶ìp
(10);

16 
	`¥ötf
("Á∫øÁ®ãÂáÜÂÖ≥Èó≠ÊâÄÊúâÁöÑEV_Timer:\n");

17 
	`ev_bªak
(
lo›
, 
EVBREAK_ALL
);

18 
	`exô
(0);

19 
	}
}

22 
	$timî_ˇŒback
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w
, 
ªvíts
)

25 
	`¶ìp
(1);

26 
	`¥ötf
("TIMER ......\n");

28 
	}
}

31 
	$maö
(
¨gc
, **
¨gv
)

38 
lo›
 = 
EV_DEFAULT
;

39 i‡(
	`±hªad_¸óã
(&
ã°_thªad
, 
NULL
, 
thªad_im∂
, NULL) != 0) {

40 
	`¥ötf
("ÂàõÂª∫Á∫øÁ®ãÂ§±Ë¥•!\n");

43 
	`ev_timî_öô
(&
timî_w©chî
, 
timî_ˇŒback
, 0.0, 5.0);

44 
	`ev_timî_°¨t
(
lo›
, &
timî_w©chî
);

45 
	`ev_run
(
lo›
, 0);

47 
	`¥ötf
("ÁªìÊùü!\n");

50 
	}
}

	@/root/grocery-shop/language/gcc/src/libev/evMultiple.c

8 
	~"ev_time.h
"

11 
ev_timî
 
	gfú°
, 
	g£c⁄d
, 
	gthúd
;

12 
ev_lo›
 *
	glo›
 = 
NULL
;

13 
	gtime_num
 = 0;

16 
	$timî_ˇŒback
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w
, 
ªvíts
)

18 
i
 = 0;

20 
	`¥ötf
("ev_ôî©i⁄=%d\n", 
	`ev_ôî©i⁄
(
lo›
));

21 
	`¥ötf
("ev_≥ndög_cou¡=%d\n", 
	`ev_≥ndög_cou¡
(
lo›
));

22 i‡(
w
 =&
fú°
) {

23 
	`¥ötf
("first\n");

24 } i‡(
w
 =&
£c⁄d
) {

25 
	`¥ötf
("second\n");

27 
	`¥ötf
("third\n");

30 
i
++ < 3) {

31 
	`¥ötf
("%d-----\n", 
time_num
++);

32 
	`¶ìp
(1);

34 
	`¥ötf
("©:%f,ª≥©:%f\n", 
w
->
©
, w->
ª≥©
);

35 
	}
}

39 
	$sim∂e_ã°
()

41 
	`ev_timî_öô
(&
fú°
, 
timî_ˇŒback
, 0.0, 4.0);

42 
	`ev_timî_°¨t
(
lo›
, &
fú°
);

43 
	`ev_timî_öô
(&
£c⁄d
, 
timî_ˇŒback
, 0.0, 10.0);

44 
	`ev_timî_°¨t
(
lo›
, &
£c⁄d
);

47 
	}
}

50 
	$time_ã°
()

52 
timeSå
[12
job
] = {0};

53 
time_t
 
now
;

54 
time_t
 
scheduÀTime
;

55 
diff
 = 0.0;

56 
ªt
 = -1;

58 
	`time
(&
now
);

59 
	`¥ötf
("PÀa£ i≈uà®time,ÇowÅimêis: %s", 
	`˘ime
(&
now
));

60 
	`sˇnf
("%s", 
timeSå
);

62 
ªt
 = 
	`°rög_to_©time
(
timeSå
, &
scheduÀTime
);

63 i‡(
ªt
 < 0) {

66 
diff
 = 
	`gë_öãrvÆ_by_time
(1, 
scheduÀTime
, 
DIFF_TIME_FLAG_DAY
);

67 
	`¥ötf
("dif‡%lf\n", 
diff
);

68 i‡(
diff
 > 0) {

69 
	`ev_timî_öô
(&
thúd
, 
timî_ˇŒback
, 
diff
, diff);

70 
	`ev_timî_°¨t
(
lo›
, &
thúd
);

74 
	}
}

77 
	$maö
(
¨gc
, **
¨gv
)

79 
lo›
 = 
EV_DEFAULT
;

82 
	`time_ã°
();

84 
	`ev_run
(
lo›
, 0);

86 
	}
}

	@/root/grocery-shop/language/gcc/src/libev/evPeriodic.c

4 
	~"ev_time.h
"

5 
	~<±hªad.h
>

7 
ev_≥riodic
 
	gt1
,
	gt2
;

8 
±hªad_t
 
	gthªad1
;

9 
ev_lo›
 *
	glo›
 = 
NULL
;

16 
	$≥riodic_ˇŒback
(
ev_lo›
 *
lo›
, 
ev_≥riodic
 *
w
, 
ªvíts
)

18 
time_t
 
now
;

20 
	`¥ötf
("ev_ôî©i⁄=%d\n", 
	`ev_ôî©i⁄
(
lo›
));

21 
	`¥ötf
("ev_≥ndög_cou¡=%d\n", 
	`ev_≥ndög_cou¡
(
lo›
));

22 
	`¥ötf
("off£t:%f,öãrvÆ:%f\n", 
w
->
off£t
, w->
öãrvÆ
);

24 
	`time
(&
now
);

25 
	`¥ötf
("nowÅime°amp:%lu\n", 
now
);

26 
	}
}

28 
	sTT
{

29 
time_t
 
	mt
;

30 
	ma
;

31 }
	tTT
;

34 
	$≥riodic_thªad_cb
(*
tTime
)

36 
time_t
 
now
;

37 
TT
 *
ãmpTT
 = (TT*)
tTime
;

39 
	`¶ìp
(2);

40 
now
 = 
ãmpTT
->
t
 - 20;

41 i‡(
	`°ime
(&
now
)) {

42 
	`¥ötf
("OccurÉrror!\n");

43  
NULL
;

45 
	`¥ötf
("Ch™gêsy°emÅimêto: %s.\n", 
	`˘ime
(&
now
));

46 
	`‰ì
(
ãmpTT
);

47 
	`±hªad_exô
(
NULL
);

48 
	}
}

51 
	$≥riodic_thªad_¸óã
(
time_t
 
tTime
)

54 
TT
 *
t
 = (TT*)
	`mÆloc
((TT));

56 
	`mem£t
(&
thªad1
, 0, (
±hªad_t
));

57 
t
->à
tTime
;

58 i‡(
	`±hªad_¸óã
(&
thªad1
, 
NULL
, 
≥riodic_thªad_cb
, 
t
)!=0) {

59 
	`¥ötf
("CreateáÇewÅhread failure!\n");

62 
	}
}

68 
	$≥riodic_time_ã°
()

70 
timeSå
[12
job
] = {0};

71 
time_t
 
now
;

72 
time_t
 
scheduÀTime
;

73 
tm
 *
tmNow
 = 
NULL
;

74 
tm
 
tmScheduÀ
;

75 
ªt
 = -1;

77 
	`time
(&
now
);

78 
	`¥ötf
("PÀa£ i≈uà®≥riodi¯time,ÇowÅimêis: %s", 
	`˘ime
(&
now
));

79 
	`sˇnf
("%s", 
timeSå
);

81 
ªt
 = 
	`°rög_to_©time
(
timeSå
, &
scheduÀTime
);

82 i‡(
ªt
 < 0) {

83 
	`¥ötf
("occurÉrror!\n");

86 
tmNow
 = 
	`loˇ…ime
(&
now
);

87 
	`c›y_time_tm
(&
tmScheduÀ
, 
tmNow
);

88 
tmScheduÀ
.
tm_hour
 = 
scheduÀTime
/3600;

89 
tmScheduÀ
.
tm_mö
 = (
scheduÀTime
%3600)/60;

90 
tmScheduÀ
.
tm_£c
 = (
scheduÀTime
%3600)%60;

91 
	`¥ötf
("C⁄figuªÅimêis: %s\n", 
	`as˘ime
(&
tmScheduÀ
));

92 
scheduÀTime
 = 
	`mktime
(&
tmScheduÀ
);

94 
	`ev_≥riodic_öô
(&
t1
, 
≥riodic_ˇŒback
, (
ev_t°amp
)
scheduÀTime
, 0.0, 
NULL
);

95 
	`ev_≥riodic_°¨t
(
lo›
, &
t1
);

98 
	}
}

101 
	$≥riodic_öãrvÆ_time_ã°
()

103 
timeSå
[12
job
] = {0};

104 
timeI¡î
[12
job
] = {0};

105 
time_t
 
now
;

106 
time_t
 
scheduÀTime
;

107 
tm
 *
tmNow
 = 
NULL
;

108 
tm
 
tmScheduÀ
;

109 
ªt
 = -1;

111 
	`time
(&
now
);

112 
	`¥ötf
("PÀa£ i≈uà®≥riodi¯time,ÇowÅimêis: %s", 
	`˘ime
(&
now
));

113 
	`¥ötf
("periodic-time:\n");

114 
	`sˇnf
("%s", 
timeSå
);

115 
	`¥ötf
("interval-time:\n");

116 
	`sˇnf
("%s", 
timeI¡î
);

118 
ªt
 = 
	`°rög_to_©time
(
timeSå
, &
scheduÀTime
);

119 i‡(
ªt
 < 0) {

122 
tmNow
 = 
	`loˇ…ime
(&
now
);

123 
	`c›y_time_tm
(&
tmScheduÀ
, 
tmNow
);

124 
tmScheduÀ
.
tm_hour
 = 
scheduÀTime
/3600;

125 
tmScheduÀ
.
tm_mö
 = (
scheduÀTime
%3600)/60;

126 
tmScheduÀ
.
tm_£c
 = (
scheduÀTime
%3600)%60;

127 
	`¥ötf
("C⁄figuªÅimêis: %s\n", 
	`as˘ime
(&
tmScheduÀ
));

128 
scheduÀTime
 = 
	`mktime
(&
tmScheduÀ
);

130 
	`ev_≥riodic_öô
(&
t1
, 
≥riodic_ˇŒback
, 
scheduÀTime
, ()
	`©oi
(
timeI¡î
), 
NULL
);

131 
	`ev_≥riodic_°¨t
(
lo›
, &
t1
);

134 
	}
}

141 
	$≥riodic_time_now_ã°
()

143 
time_t
 
now
;

144 
time_t
 
åiggî_time
;

146 
	`time
(&
now
);

147 
	`¥ötf
("Timêbef‹êadd: %s\n", 
	`˘ime
(&
now
));

148 
åiggî_time
 = 
now
 + 3600;

149 
	`¥ötf
("Timêa·îádd 1 hour†is: %s\n", 
	`˘ime
(&
åiggî_time
));

150 
	`¥ötf
("Time°am∞o‡åiggî_timêtime:%lu\n", 
åiggî_time
);

153 
	`≥riodic_thªad_¸óã
(
åiggî_time
);

155 
	`ev_≥riodic_öô
(&
t2
, 
≥riodic_ˇŒback
, 
åiggî_time
, 0.0, 
NULL
);

156 
	`ev_≥riodic_°¨t
(
lo›
, &
t2
);

158 
	}
}

161 
	$maö
(
¨gc
, **
¨gv
)

163 
lo›
 = 
EV_DEFAULT
;

165 
	`≥riodic_time_ã°
();

169 
	`ev_run
(
lo›
, 0);

171 
	}
}

	@/root/grocery-shop/language/gcc/src/libev/ev_time.c

1 
	~<˘y≥.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<time.h
>

6 
	~"ev_time.h
"

12 
	$gë_maxDay
()

14 
tm
 
whí
;

15 
time_t
 
ªsu…
, 
now
;

17 
	`time
(&
now
);

18 
whí
 = *
	`loˇ…ime
(&
now
);

19 
whí
.
tm_m⁄
 ++;

20 
whí
.
tm_mday
 = 0;

21 
ªsu…
 = 
	`mktime
(&
whí
);

22 i‡(
ªsu…
 == -1) {

25 
whí
 = *
	`loˇ…ime
(&
ªsu…
);

26  
whí
.
tm_mday
;

27 
	}
}

30 
	$c›y_time_tm
(
tm
 *
d°
, tm *
§c
)

32 
d°
->
tm_yór
 = 
§c
->tm_year;

33 
d°
->
tm_m⁄
 = 
§c
->tm_mon;

34 
d°
->
tm_mday
 = 
§c
->tm_mday;

35 
d°
->
tm_hour
 = 
§c
->tm_hour;

36 
d°
->
tm_mö
 = 
§c
->tm_min;

37 
d°
->
tm_£c
 = 
§c
->tm_sec;

38 
d°
->
tm_wday
 = 
§c
->tm_wday;

39 
d°
->
tm_yday
 = 
§c
->tm_yday;

40 
d°
->
tm_isd°
 = 
§c
->tm_isdst;

41 
	}
}

48 
	$gë_öãrvÆ_by_time
(
d©e_f
, 
time_t
 
©time
, 
Êags
)

50 
shi·Pos
 = 0;

51 
d©eNum
 =0,
comm⁄
, 
maxDay
;

52 
ödex
 = 0;

53 
tŸÆ
 = -1.0;

54 
tm
 *
tmNow
 = 
NULL
, *
tmAâime
 = NULL;

55 
tm
 
tmTemp
;

56 
time_t
 
nowtime
 = 0;

59 i‡–
d©e_f
 == 0 ) {

62 
maxDay
 = 
	`gë_maxDay
();

63 i‡(
maxDay
 == 0) {

66 
nowtime
 = 
	`time
(
NULL
);

67 
tmNow
 = 
	`loˇ…ime
(&
nowtime
);

68 
	`c›y_time_tm
(&
tmTemp
, 
tmNow
);

70 if(
Êags
 =
DIFF_TIME_FLAG_MONTH
){

71 
d©eNum
 = 
tmTemp
.
tm_mday
;

72 
comm⁄
 = 
MONTH_SIZE
;

74 }if(
Êags
 =
DIFF_TIME_FLAG_WEEK
){

75 
d©eNum
 = 
tmTemp
.
tm_wday
;

76 
comm⁄
 = 
WEEK_SIZE
;

79 
d©eNum
 = 1;

80 
comm⁄
 = 
DAY_SIZE
;

82 
shi·Pos
 = (0x1<<(
d©eNum
-1));

85 
tmAâime
 = 
	`loˇ…ime
(&
©time
);

86 
	`¥ötf
("ÂΩìÂâçÁöÑÊó•ÊúüÔºöyear=%d month=%d day=%d hour=%d min=%d sec=%d\n",

87 
tmTemp
.
tm_yór
,ÅmTemp.
tm_m⁄
,ÅmTemp.
tm_mday
,

88 
tmTemp
.
tm_hour
,ÅmTemp.
tm_mö
,ÅmTemp.
tm_£c
);

89 
	`¥ötf
("ÈÖçÁΩÆÁöÑÊó•ÊúüÔºöyear=%d month=%d day=%d hour=%d min=%d sec=%d\n",

90 
tmAâime
->
tm_yór
,ÅmAâime->
tm_m⁄
,ÅmAâime->
tm_mday
,

91 
tmAâime
->
tm_hour
,ÅmAâime->
tm_mö
,ÅmAâime->
tm_£c
);

92 
True
) {

93 i‡(
d©e_f
 & 
shi·Pos
) {

94 
tŸÆ
 = 
ödex
 * 
SECOND_DAY
 +

95 (
tmAâime
->
tm_hour
 - 
tmTemp
.tm_hour)*
SECOND_HOUR
 +

96 (
tmAâime
->
tm_mö
 - 
tmTemp
.tm_mö)*
SECOND_MINUTE
 +

97 (
tmAâime
->
tm_£c
 - 
tmTemp
.tm_sec) ;

98 i‡(
tŸÆ
 > 0) {

99 #i‡
DD


100 
	`¥ötf
("%s:tŸÆ=%lf\n", 
__func__
, 
tŸÆ
);

102  
tŸÆ
;

107 i‡(
d©eNum
 =
comm⁄
 || d©eNum>=
maxDay
) {

108 
shi·Pos
 = 1;

109 
d©eNum
 = 1;

111 
shi·Pos
 = shiftPos<<1;

112 
d©eNum
 ++;

115 
ödex
++;

117 
	}
}

123 
	$°rög_to_©time
(*
°r
, 
time_t
 *
time
)

125 
tm
Åm;

127 i‡(
	`ssˇnf
(
°r
, "%2d:%2d:%2d", &
tm
.
tm_hour
, &tm.
tm_mö
, &tm.
tm_£c
) != 3) {

130 *
time
 = 
tm
.
tm_hour
 * 3600 +Åm.
tm_mö
 * 60 +Åm.
tm_£c
;

133 
	}
}

	@/root/grocery-shop/language/gcc/src/libev/ev_time.h

1 #i‚de‡
_EV_TIME_H_


2 
	#_EV_TIME_H_


	)

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

8 
	~<time.h
>

9 
	~<ev.h
>

11 
	#True
 1

	)

12 
	#FÆ£
 0

	)

14 
	#SECOND_HOUR
 3600

	)

15 
	#SECOND_MINUTE
 60

	)

16 
	#SECOND_DAY
 24*
SECOND_HOUR


	)

17 
	#MONTH_SIZE
 31

	)

18 
	#WEEK_SIZE
 7

	)

19 
	#DAY_SIZE
 1

	)

22 
	mDIFF_TIME_FLAG_DAY
 = 0,

23 
	mDIFF_TIME_FLAG_WEEK
,

24 
	mDIFF_TIME_FLAG_MONTH
,

26 
	#DAY
 1

	)

33 
gë_öãrvÆ_by_time
(
d©e_f
, 
time_t
 
©time
, 
Êags
);

38 
°rög_to_©time
(*
°r
, 
time_t
 *
time
);

43 
c›y_time_tm
(
tm
 *
d°
, tm *
§c
);

	@/root/grocery-shop/language/gcc/src/libev/serverSocket.c

1 
	~<ev.h
>

2 
	~<°dio.h
>

3 
	~<√töë/ö.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	#PORT
 577
job9


	)

8 
	#BUFFER_SIZE
 204
job


	)

9 
	#MAX_ALLOWED_CLIENT
 10240

	)

11 
ev_io
 *
	glibevli°
[
MAX_ALLOWED_CLIENT
] = {
NULL
};

13 
ac˚±_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
);

15 
ªad_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
);

17 
timî_bót
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w©chî
, 
ªvíts
);

19 
‰ìlibev
(
ev_lo›
 *
lo›
, 
fd
);

22 
	$maö
()

24 
ev_lo›
 *
lo›
=
	`ev_deÁu…_lo›
(0);

25 
sd
;

26 
sockaddr_ö
 
addr
;

27 
addr_Àn
 = (
addr
);

30 
ev_io
 
sockë_ac˚±
;

31 
ev_timî
 
timeout_w
;

33 
sd
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0);

34 if(
sd
 < 0)

36 
	`¥ötf
("socketÉrror\n");

39 
	`bzîo
(&
addr
, (addr));

40 
addr
.
sö_Ámûy
 = 
AF_INET
;

41 
addr
.
sö_p‹t
 = 
	`ht⁄s
(
PORT
);

42 
addr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

44 if(
	`böd
(
sd
, (
sockaddr
*)&
addr
, (addr)) != 0)

46 
	`¥ötf
("bindÉrror\n");

50 if(
	`li°í
(
sd
, 
SOMAXCONN
) < 0)

52 
	`¥ötf
("listenÉrror\n");

56 
bReu£addr
=1;

57 if(
	`£tsock›t
(
sd
,
SOL_SOCKET
 ,
SO_REUSEADDR
,(c⁄° *)&
bReu£addr
,(bReuseaddr)) != 0)

59 
	`¥ötf
("£tsock›àîr‹ i¿ªu£addr[%d]\n", 
sd
);

64 
	`ev_io_öô
(&
sockë_ac˚±
, 
ac˚±_cb
, 
sd
, 
EV_READ
);

65 
	`ev_io_°¨t
(
lo›
, &
sockë_ac˚±
);

71 
	`ev_run
(
lo›
, 0);

74 
	}
}

76 
	$ac˚±_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
)

81 
sockaddr_ö
 
˛õ¡_addr
;

82 
sockÀn_t
 
˛õ¡_Àn
 = (
˛õ¡_addr
);

83 
˛õ¡_sd
;

85 
ev_io
 *
w_˛õ¡
 = (ev_io*Ë
	`mÆloc
((ev_io));

87 if(
w_˛õ¡
 =
NULL
)

89 
	`¥ötf
("mallocÉrror ináccept_cb\n");

93 if(
EV_ERROR
 & 
ªvíts
)

95 
	`¥ötf
("errorÉvent ináccept\n");

100 
˛õ¡_sd
 = 
	`ac˚±
(
w©chî
->
fd
, (
sockaddr
*)&
˛õ¡_addr
, &
˛õ¡_Àn
);

101 if(
˛õ¡_sd
 < 0)

103 
	`¥ötf
("acceptÉrror\n");

107 if–
˛õ¡_sd
 > 
MAX_ALLOWED_CLIENT
)

109 
	`¥ötf
("fdÅoÿœrge[%d]\n", 
˛õ¡_sd
);

110 
	`˛o£
(
˛õ¡_sd
);

114 if(
libevli°
[
˛õ¡_sd
] !
NULL
)

116 
	`¥ötf
("˛õ¡_sdÇŸ NULL fd i†[%d]\n", 
˛õ¡_sd
);

120 
	`¥ötf
("client connected\n");

122 
	`ev_io_öô
(
w_˛õ¡
, 
ªad_cb
, 
˛õ¡_sd
, 
EV_READ
);

123 
	`ev_io_°¨t
(
lo›
, 
w_˛õ¡
);

125 
libevli°
[
˛õ¡_sd
] = 
w_˛õ¡
;

127 
	}
}

129 
	$ªad_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
)

131 
buf„r
[
BUFFER_SIZE
];

132 
ssize_t
 
ªad
;

134 if(
EV_ERROR
 & 
ªvíts
)

136 
	`¥ötf
("errorÉvent inÑead\n");

140 
ªad
 = 
	`ªcv
(
w©chî
->
fd
, 
buf„r
, 
BUFFER_SIZE
, 0);

141 if(
ªad
 < 0)

143 
	`¥ötf
("readÉrror\n");

147 if(
ªad
 == 0)

149 
	`¥ötf
("client disconnected.\n");

153 
	`‰ìlibev
(
lo›
, 
w©chî
->
fd
);

159 
	`¥ötf
("ª˚ivêmesßge:%s\n", 
buf„r
);

162 
	`£nd
(
w©chî
->
fd
, 
buf„r
, 
ªad
, 0);

163 
	`bzîo
(
buf„r
, 
ªad
);

164 
	}
}

166 
	$timî_bót
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w©chî
, 
ªvíts
)

168 
timeout
 = 2.0;

170 
	`¥ötf
("£nd bóà≥r[%f]\n",
timeout
);

171 
	`fÊush
(
°dout
);

173 if(
EV_ERROR
 & 
ªvíts
)

175 
	`¥ötf
("errorÉvent inÅimer_beat\n");

179 
	`ev_timî_£t
(
w©chî
, 
timeout
,0.);

180 
	`ev_timî_°¨t
(
lo›
, 
w©chî
);

182 
	}
}

184 
	$‰ìlibev
(
ev_lo›
 *
lo›
, 
fd
)

193 if(
libevli°
[
fd
] =
NULL
)

195 
	`¥ötf
("thêfdáÃódy fªed[%d]\n", 
fd
);

199 
	`˛o£
(
fd
);

200 
	`ev_io_°›
(
lo›
, 
libevli°
[
fd
]);

201 
	`‰ì
(
libevli°
[
fd
]);

202 
libevli°
[
fd
] = 
NULL
;

204 
	}
}

	@/root/grocery-shop/language/gcc/src/loop/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<time.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
=0;

9 
FILE
 *
Â
;

11 
Â
 = 
	`f›í
("./store.sh", "w+");

14 
	`Âuts
("ã°Åe°\n", 
Â
);

15 
	`fÊush
(
Â
);

16 
	`¶ìp
(2);

19 
	`f˛o£
(
Â
);

21 
	}
}

	@/root/grocery-shop/language/gcc/src/macro/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<glob.h
>

5 
	~<löux/kî√l.h
>

7 
	#A
(
s
Ë#s

	)

8 
	#_A
(
s
Ë
	`A
(s)

	)

9 
	#ST
(
a
, 
b
Ë◊##
XX
##b)

	)

10 
	#_ST
(
a
, 
b
Ë
	`ST
◊, b)

	)

12 
	#B
 (2)

	)

13 
	#INT_MAX
 
ABC


	)

14 
	#_STR
(
s
Ë#s

	)

15 
	#STR
(
s
Ë
	`_STR
(s)

16 
	#_CONS
(
a
,
b
Ë◊##
e
##b)

	)

17 
	#CONS
(
a
,
b
Ë
	`_CONS
(a,b)

18 

	)

19 
	#my¥ötf
(...Ë
	`¥ötf
("[lch]:File:%s, Line:%d, Function:%s," \

20 
__VA_ARGS__
, 
__FILE__
, 
__LINE__
 ,
__FUNCTION__
);

	)

22 
	$maö
(
¨gc
, **
¨gv
)

25 
	`¥ötf
("öàmax: %s\n", 
	`STR
(
INT_MAX
));

27 
	`¥ötf
("ÂìáÂìàÂìà:%s\n", 
	`STR
(STR(
INT_MAX
)) );

30 
	`¥ötf
("aagege""agegege\n");

32 
	`my¥ötf
("....");

35 
	}
}

	@/root/grocery-shop/language/gcc/src/macro/myinclude.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"myö˛ude.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 *
desc
 = "mylove is ?\n";

9 
	`¥ötf
("%s", 
desc
);

10 
	`¥ötf
("%s\n", 
AAA
);

13 
	}
}

	@/root/grocery-shop/language/gcc/src/macro/myinclude.h

1 #i‚de‡
_MYINCLUDE_H_


2 
	#_MYINCLUDE_H_


	)

4 
	#A
 1

	)

5 
	#A1
 1

	)

6 
	#A2
 1

	)

7 
	#A3
 1

	)

8 
	#A4
 1

	)

9 
	#A5
 1

	)

10 
	#A6
 1

	)

13 
	#D1
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

14 
	#D2
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

15 
	#D3
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

16 
	#D4
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

17 
	#D5
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

18 
	#D6
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

19 
	#D7
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

20 
	#Djob
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

21 
	#D9
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE"

	)

24 
	#D10
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"

	)

25 
	#D11
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"

	)

26 
	#D12
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"

	)

27 
	#D13
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"

	)

28 
	#D14
 "AGEGEGEGEG GGGGGGGGGGGGGGGGGGGGGGGEG GEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE GEEEEEEEEEEEEEE kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"

	)

31 c⁄° 
	gfú°
 = 0;

32 c⁄° 
	g£c⁄d
 = 0;

34 c⁄° *
	g⁄e
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

35 c⁄° *
	gtwo
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

36 c⁄° *
	gthªe
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

37 c⁄° *
	gfour
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

38 c⁄° *
	gfour1
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

39 c⁄° *
	gfour2
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

40 c⁄° *
	gfour3
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

41 c⁄° *
	gfour4
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

42 c⁄° *
	gfour5
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

43 c⁄° *
	gfour6
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

44 c⁄° *
	gfour7
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

45 c⁄° *
	gfourjob1
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

46 c⁄° *
	gfourjob2
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

47 c⁄° *
	gfourjob3
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

48 c⁄° *
	gfourjob4
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

49 c⁄° *
	gfourjob5
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

50 c⁄° *
	gfourjob6
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

51 c⁄° *
	gfourjob7
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

52 c⁄° *
	gfourjobjob
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

53 c⁄° *
	gfourjob9
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

55 c⁄° *
	gthªe1
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

56 c⁄° *
	gthªe2
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

57 c⁄° *
	gthªe3
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

58 c⁄° *
	gthªe4
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

59 c⁄° *
	gthªe5
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

60 c⁄° *
	gthªe6
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

61 c⁄° *
	gthªe7
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

62 c⁄° *
	gthªejob
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

63 c⁄° *
	gthªe9
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

64 c⁄° *
	gthªe10
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

65 c⁄° *
	gthªe11
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

66 c⁄° *
	gthªe12
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb";

68 c⁄° *
	g£c⁄d1
 = "a";

69 c⁄° *
	g£c⁄d2
 = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb";

70 c⁄° *
	g£c⁄d3
 = "agegxxxxxxxxxxxxxxxxxxxxxx";

73 
	#AAA
 "ØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØØ bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"

	)

75 c⁄° 
thúd
;

76 c⁄° 
thúd1
;

77 c⁄° 
thúd2
;

78 c⁄° 
thúd3
;

79 c⁄° 
thúd4
;

80 c⁄° 
thúd5
;

81 c⁄° 
thúd6
;

82 c⁄° 
thúd7
;

83 c⁄° 
thúdjob
;

84 c⁄° 
thúd9
;

85 c⁄° 
thúd10
;

86 c⁄° 
thúd11
;

87 c⁄° 
thúd12
;

88 c⁄° 
thúd13
;

89 c⁄° 
thúd14
;

90 c⁄° 
thúd15
;

91 c⁄° 
thúd16
;

92 c⁄° 
thúd17
;

93 c⁄° 
thúd1job
;

94 c⁄° 
thúd19
;

95 c⁄° 
thúd20
;

97 c⁄° 
fúth
;

98 c⁄° 
fúth1
;

99 c⁄° 
fúth2
;

100 c⁄° 
fúth3
;

	@/root/grocery-shop/language/gcc/src/macro/va_arg.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<°d¨g.h
>

7 
	$sim∂e_va_fun
(
i
, ...)

9 
va_li°
 
¨g_±r
;

10 
j
=0;

12 
	`va_°¨t
(
¨g_±r
, 
i
);

13 
j
=
	`va_¨g
(
¨g_±r
, );

14 
	`va_íd
(
¨g_±r
);

15 
	`¥ötf
("%d %d\n", 
i
, 
j
);

17 
	}
}

19 
	$v¨_£c⁄d_v¢p
(c⁄° *
fmt
, ...)

21 
va_li°
 
≠
;

22 
buf
[1024];

24 
	`va_°¨t
(
≠
, 
fmt
);

25 
	`v¢¥ötf
(
buf
, 1024, 
fmt
, 
≠
);

26 
	`va_íd
(
≠
);

28 
	`¥ötf
("_________________________\n");

29 
	`¥ötf
("F‹m©=%s\n", 
fmt
);

30 
	`¥ötf
("_________________________\n");

31 
	`¥ötf
("Sec⁄d ouçut:%s\n", 
buf
);

32 
	`¥ötf
("_________________________\n");

33 
	}
}

36 
	$v¨_v¢¥ötf
(c⁄° *
fmt
, ...)

38 
va_li°
 
¨g_±r
;

39 
buf
[1024];

41 
	`va_°¨t
(
¨g_±r
, 
fmt
);

42 
	`v¢¥ötf
(
buf
, 1024, 
fmt
, 
¨g_±r
);

43 
	`v¨_£c⁄d_v¢p
(
buf
);

44 
	`va_íd
(
¨g_±r
);

46 
	`¥ötf
("Ouçut:%s\n", 
buf
);

47 
	}
}

50 
	$îr‹_£c⁄d_v¢p
(c⁄° *
fmt
, ...)

52 
va_li°
 
≠
;

53 
buf
[1024];

55 
	`va_°¨t
(
≠
, 
fmt
);

56 
	`v¢¥ötf
(
buf
, 1024, 
fmt
, 
≠
);

57 
	`va_íd
(
≠
);

58 
	`¥ötf
("Eº‹Åe°:%s\n", 
buf
);

59 
	}
}

62 
	$maö
(
¨gc
, **
¨gv
)

64 
	`sim∂e_va_fun
(100);

65 
	`¥ötf
("==============================\n");

66 
	`sim∂e_va_fun
(100, 200);

67 
	`¥ötf
("==============================\n");

68 
	`sim∂e_va_fun
(100, 200, 300);

71 
	`îr‹_£c⁄d_v¢p
("test:=3, =XXXXX\n");

72 
	`v¨_v¢¥ötf
("test:%%d=%d, %%s=%s+++\n", 3, "vsnprintf");

75 
	}
}

	@/root/grocery-shop/language/gcc/src/memory/example.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<uni°d.h
>

7 
	~<î∫o.h
>

8 
	~<°dlib.h
>

11 
	$‰ìMem‹y
(**
buf
)

13 i‡(
buf
 =
NULL
 && *buf == NULL) {

18 *
buf
 = 
NULL
;

19 
	}
}

21 
	$maö
()

23 *
buf
 = 
NULL
;

25 
	`¥ötf
("MyÖro˚s†ID i†%d\n", 
	`gëpid
());

26 
buf
 = (*)
	`mÆloc
(10000);

27 
	`°r˝y
(
buf
, "aljgelgje");

29 
	`‰ìMem‹y
(&
buf
);

30 i‡(
buf
 =
NULL
) {

31 
	`¥ötf
("Free memory success in other scope.\n");

33 
	`¥ötf
("failure!\n");

34 
	`‰ì
(
buf
);

38 
	}
}

	@/root/grocery-shop/language/gcc/src/memory/memoryCompilation.c

1 
	~<°dio.h
>

3 
	$showmsg
(*
szMsg
)

5 
	`¥ötf
("%s\n", 
szMsg
);

6 
	}
}

8 
	$maö
(
¨gc
, **
¨gv
)

10 
szMsg
[] = "Hello, world!";

11 
	`showmsg
(
szMsg
);

14 
	}
}

	@/root/grocery-shop/language/gcc/src/memory/memoryDistribute.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	gi1
 = 10;

7 
	gi2
;

8 
	gi3
 = 30;

9 c⁄° 
	gi4
 = 40;

10 
	$fun
(
i5
)

12 
i6
 = 60;

13 
i7
 = 70;

14 c⁄° 
ijob
 = 
job0
;

15 * 
°r1
 = "ABCDE";

16 
°r2
[] = "ABCDE";

17 * 
pi
 = 
	`mÆloc
(());

18 
	`¥ötf
("&i5=%p\n", &
i5
);

19 
	`¥ötf
("&i6=%p\n", &
i6
);

20 
	`¥ötf
("&i7=%p\n", &
i7
);

21 
	`¥ötf
("&ijob=%p\n", &
ijob
);

22 
	`¥ötf
("°r1=%p\n", 
°r1
);

23 
	`¥ötf
("°r2=%p\n", 
°r2
);

24 
	`¥ötf
("pi=%p\n", 
pi
);

25 
	`‰ì
(
pi
);

26 
	}
}

28 
	$maö
()

30 
	`¥ötf
("&i1=%p\n", &
i1
);

31 
	`¥ötf
("&i2=%p\n", &
i2
);

32 
	`¥ötf
("&i3=%p\n", &
i3
);

33 
	`¥ötf
("&i4=%p\n", &
i4
);

34 
	`fun
(50);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/base64.c

2 
	~<›ís¶/bio.h
>

3 
	~<›ís¶/evp.h
>

4 
	~<°rög.h
>

5 
	~<°dio.h
>

6 
	~<m©h.h
>

8 
	$Ba£64Encode
(c⁄° * 
mesßge
, ** 
buf„r
) {

9 
BIO
 *
bio
, *
b64
;

10 
FILE
* 
°ªam
;

11 
ícodedSize
 = 4*
	`˚û
(()
	`°æí
(
mesßge
)/3);

12 *
buf„r
 = (*)
	`mÆloc
(
ícodedSize
+1);

14 
°ªam
 = 
	`fmem›í
(*
buf„r
, 
ícodedSize
+1, "w");

15 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

16 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

17 
bio
 = 
	`BIO_push
(
b64
, bio);

18 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

19 
	`BIO_wrôe
(
bio
, 
mesßge
, 
	`°æí
(message));

20 
	`BIO_Êush
(
bio
);

21 
	`BIO_‰ì_Æl
(
bio
);

22 
	`f˛o£
(
°ªam
);

25 
	}
}

27 
	$ˇlcDecodeLígth
(c⁄° * 
b64öput
) {

28 
Àn
 = 
	`°æí
(
b64öput
);

29 
∑ddög
 = 0;

31 i‡(
b64öput
[
Àn
-1] == '=' && b64input[len-2] == '=')

32 
∑ddög
 = 2;

33 i‡(
b64öput
[
Àn
-1] == '=')

34 
∑ddög
 = 1;

36  ()
Àn
*0.75 - 
∑ddög
;

37 
	}
}

39 
	$Ba£64Decode
(* 
b64mesßge
, ** 
buf„r
) {

40 
BIO
 *
bio
, *
b64
;

41 
decodeLí
 = 
	`ˇlcDecodeLígth
(
b64mesßge
),

42 
Àn
 = 0;

43 *
buf„r
 = (*)
	`mÆloc
(
decodeLí
+1);

44 
FILE
* 
°ªam
 = 
	`fmem›í
(
b64mesßge
, 
	`°æí
(b64message), "r");

46 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

47 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

48 
bio
 = 
	`BIO_push
(
b64
, bio);

49 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

50 
Àn
 = 
	`BIO_ªad
(
bio
, *
buf„r
, 
	`°æí
(
b64mesßge
));

52 (*
buf„r
)[
Àn
] = '\0';

54 
	`BIO_‰ì_Æl
(
bio
);

55 
	`f˛o£
(
°ªam
);

58 
	}
}

60 
	$maö
() {

61 * 
ba£64EncodeOuçut
;

62 * 
ba£64DecodeOuçut
;

64 
	`¥ötf
("NOTE:Re-make currentÖrogram\n");

66 
	`Ba£64Encode
("HñlÿW‹ld", &
ba£64EncodeOuçut
);

67 
	`¥ötf
("Ouçuà(ba£64): %s\n", 
ba£64EncodeOuçut
);

70 
	`Ba£64Decode
(
ba£64EncodeOuçut
, &
ba£64DecodeOuçut
);

71 
	`¥ötf
("Ouçut: %s\n", 
ba£64DecodeOuçut
);

74 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/crypt.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<m©h.h
>

5 
	~<›ís¶/rc4.h
>

6 
	~<›ís¶/bio.h
>

7 
	~<›ís¶/evp.h
>

9 
	~"¸y±.h
"

11 
RC4_KEY
 
	gí¸y±Key
;

12 
RC4_KEY
 
	gde¸y±Key
;

19 
	$t›waf_¸y±_ba£64_öô
()

21 c⁄° 
key_d©a
[
job
] = { 0x01, 0x23, 0x45, 0x67, 0x
job9
, 0xab, 0xcd, 0xef };

23 
	`RC4_£t_key
(&
í¸y±Key
, (
key_d©a
), key_data);

24 
	`RC4_£t_key
(&
de¸y±Key
, (
key_d©a
), key_data);

25 
	}
}

33 
	$waf_í¸y±_ba£64
(*
§c
, *
d°
, 
d°Lí
)

35 
RC4_KEY
 
ãmpEn¸y±Key
 = 
í¸y±Key
;

36 
£¸ë_d©a
[256];

37 
£¸ë_d©a_ªcmb
[256];

38 
BIO
 *
bio
, *
b64
;

39 
FILE
 *
°ªam
;

40 
ícodedSize
 = -1;

41 
§cLí
 = -1;

42 
i
 = -1;

44 i‡(!
§c
 || !
d°
 ) {

48 
§cLí
 = 
	`°æí
((*)
§c
);

49 
ícodedSize
 = 4*
	`˚û
(()
§cLí
/3);

50 i‡(
§cLí
 > 256) {

54 
	`mem£t
(
d°
, 0, 
d°Lí
);

55 
	`mem£t
(
£¸ë_d©a
, 0, 256);

58 
	`RC4
(&
ãmpEn¸y±Key
, 
§cLí
, 
§c
, 
£¸ë_d©a
);

61 
£¸ë_d©a_ªcmb
[0] = ()
§cLí
;

62 
i
=1; i<256; i++) {

63 
£¸ë_d©a_ªcmb
[
i
] = 
£¸ë_d©a
[i-1];

67 
°ªam
 = 
	`fmem›í
(
d°
, 
ícodedSize
+1, "w");

68 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

69 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

70 
bio
 = 
	`BIO_push
(
b64
, bio);

71 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

72 
	`BIO_wrôe
(
bio
, 
£¸ë_d©a_ªcmb
, 
	`°æí
((*)
§c
) + 1);

73 
	`BIO_Êush
(
bio
);

74 
	`BIO_‰ì_Æl
(
bio
);

75 
	`f˛o£
(
°ªam
);

78 
	}
}

84 
	$ˇlcDecodeLígth
(c⁄° * 
b64öput
)

86 
Àn
 = 
	`°æí
(
b64öput
);

87 
∑ddög
 = 0;

89 i‡(
b64öput
[
Àn
-1] == '=' && b64input[len-2] == '=') {

90 
∑ddög
 = 2;

91 } i‡(
b64öput
[
Àn
-1] == '=') {

92 
∑ddög
 = 1;

95  ()
Àn
*0.75 - 
∑ddög
;

96 
	}
}

105 
	$waf_de¸y±_ba£64
(*
ba£Src
, *
d°
)

107 
RC4_KEY
 
ãmpDe¸y±Key
 = 
de¸y±Key
;

108 
BIO
 *
bio
, *
b64
;

109 
Àn
 = 0, 
decodeLí
 = 0;

110 
∑sswdLí
 = 0;

111 
buf„r
[256] = {0};

112 
FILE
 *
°ªam
 = 
NULL
;

114 i‡(!
ba£Src
 || !
d°
) {

119 
decodeLí
 = 
	`ˇlcDecodeLígth
((*)
ba£Src
);

120 
°ªam
 = 
	`fmem›í
(
ba£Src
, 
	`°æí
((*)baseSrc), "r");

123 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

124 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

125 
bio
 = 
	`BIO_push
(
b64
, bio);

126 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

127 
Àn
 = 
	`BIO_ªad
(
bio
, 
buf„r
, 
	`°æí
((*)
ba£Src
));

128 i‡(
Àn
 !
decodeLí
) {

131 
buf„r
[
Àn
] = '\0';

133 
	`BIO_‰ì_Æl
(
bio
);

134 
	`f˛o£
(
°ªam
);

137 
∑sswdLí
 = 
buf„r
[0];

138 i‡(
∑sswdLí
 !
decodeLí
 -1) {

142 
	`RC4
(&
ãmpDe¸y±Key
, ()
∑sswdLí
, (*)&
buf„r
[1], 
d°
);

145 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/crypt.h

1 #i‚de‡
_TOPWAF_CRYPT_H


2 
	#_TOPWAF_CRYPT_H


	)

7 
t›waf_¸y±_ba£64_öô
();

16 
waf_de¸y±_ba£64
(*
ba£Src
, *
d°
);

23 
waf_í¸y±_ba£64
(*
§c
, *
d°
, 
d°Lí
);

	@/root/grocery-shop/language/gcc/src/openssl/hex.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

15 *
	$bö2hex
(*
d©a
, 
size
)

17 
i
 = 0;

18 
v
 = 0;

19 *
p
 = 
NULL
;

20 *
buf
 = 
NULL
;

21 
ba£_ch¨
 = 'A';

23 
buf
 = 
p
 = (*)
	`mÆloc
(
size
 * 2 + 1);

24 
i
 = 0; i < 
size
; i++) {

25 
v
 = 
d©a
[
i
] >> 4;

26 *
p
++ = 
v
 < 10 ? v + '0' : v - 10 + 
ba£_ch¨
;

28 
v
 = 
d©a
[
i
] & 0x0f;

29 *
p
++ = 
v
 < 10 ? v + '0' : v - 10 + 
ba£_ch¨
;

32 *
p
 = '\0';

33  
buf
;

34 
	}
}

47 *
	$hex2bö
(c⁄° *
d©a
, 
size
, *
ouéí
)

49 
i
 = 0;

50 
Àn
 = 0;

51 
ch¨1
 = '\0';

52 
ch¨2
 = '\0';

53 
vÆue
 = 0;

54 *
out
 = 
NULL
;

56 i‡(
size
 % 2 != 0) {

57  
NULL
;

60 
Àn
 = 
size
 / 2;

61 
out
 = (*)
	`mÆloc
(
Àn
 * () + 1);

62 i‡(
out
 =
NULL
) {

63  
NULL
;

66 
i
 < 
Àn
) {

67 
ch¨1
 = *
d©a
;

68 i‡(
ch¨1
 >= '0' && char1 <= '9') {

69 
vÆue
 = (
ch¨1
 - '0') << 4;

71 i‡(
ch¨1
 >= 'a' && char1 <= 'f') {

72 
vÆue
 = (
ch¨1
 - 'a' + 10) << 4;

74 i‡(
ch¨1
 >= 'A' && char1 <= 'F') {

75 
vÆue
 = (
ch¨1
 - 'A' + 10) << 4;

78 
	`‰ì
(
out
);

79  
NULL
;

81 
d©a
++;

83 
ch¨2
 = *
d©a
;

84 i‡(
ch¨2
 >= '0' && char2 <= '9') {

85 
vÆue
 |
ch¨2
 - '0';

87 i‡(
ch¨2
 >= 'a' && char2 <= 'f') {

88 
vÆue
 |
ch¨2
 - 'a' + 10;

90 i‡(
ch¨2
 >= 'A' && char2 <= 'F') {

91 
vÆue
 |
ch¨2
 - 'A' + 10;

94 
	`‰ì
(
out
);

95  
NULL
;

98 
d©a
++;

99 *(
out
 + 
i
++Ë
vÆue
;

101 *(
out
 + 
i
) = '\0';

103 i‡(
ouéí
 !
NULL
) {

104 *
ouéí
 = 
i
;

107  
out
;

108 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/hex.h

1 #i‚de‡
_HEX_H_


2 
	#_HEX_H_


	)

4 *
bö2hex
(*
d©a
, 
size
);

6 *
hex2bö
(c⁄° *
d©a
, 
size
, *
ouéí
);

	@/root/grocery-shop/language/gcc/src/openssl/simple_3des.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<›ís¶/des.h
>

13 
	$maö
()

15 
cou¡
;

16 
i
;

17 
Àn
;

18 
doc⁄töue
 = 1;

19 *
d©a
 = "hello world!";

20 
d©a_Àn
;

21 
d©a_ª°
;

22 
ch
;

23 *
§c
 = 
NULL
;

24 *
d°
 = 
NULL
;

25 
tmp
[
job
];

26 
ö
[
job
];

27 
out
[
job
];

28 *
k
 = "01234567job99job76543210";

29 
key_Àn
;

30 
	#LEN_OF_KEY
 24

	)

31 
key
[
LEN_OF_KEY
];

32 
block_key
[9];

33 
DES_key_scheduÀ
 
ks
,
ks2
,
ks3
;

36 
key_Àn
 = 
	`°æí
(
k
);

37 
	`mem˝y
(
key
, 
k
, 
key_Àn
);

38 
	`mem£t
(
key
 + 
key_Àn
, 0x00, 
LEN_OF_KEY
 - key_len);

41 
d©a_Àn
 = 
	`°æí
(
d©a
);

42 
d©a_ª°
 = 
d©a_Àn
 % 
job
;

43 
Àn
 = 
d©a_Àn
 + (
job
 - 
d©a_ª°
);

44 
ch
 = 
job
 - 
d©a_ª°
;

45 
§c
 = (*)
	`mÆloc
(
Àn
);

46 
d°
 = (*)
	`mÆloc
(
Àn
);

47 i‡(
NULL
 =
§c
 || NULL =
d°
) {

48 
íd
;

52 
	`mem£t
(
§c
, 0, 
Àn
);

53 
	`mem˝y
(
§c
, 
d©a
, 
d©a_Àn
);

54 
	`mem£t
(
§c
 + 
d©a_Àn
, 
ch
, 
job
 - 
d©a_ª°
);

57 
	`mem£t
(
block_key
, 0, (block_key));

58 
	`mem˝y
(
block_key
, 
key
 + 0, 
job
);

59 
	`DES_£t_key_unchecked
((
c⁄°_DES_cblock
*)
block_key
, &
ks
);

60 
	`mem˝y
(
block_key
, 
key
 + 
job
, job);

61 
	`DES_£t_key_unchecked
((
c⁄°_DES_cblock
*)
block_key
, &
ks2
);

62 
	`mem˝y
(
block_key
, 
key
 + 16, 
job
);

63 
	`DES_£t_key_unchecked
((
c⁄°_DES_cblock
*)
block_key
, &
ks3
);

66 
	`¥ötf
("beforeÉncrypt:\n");

67 
i
 = 0; i < 
Àn
; i++)

69 
	`¥ötf
("0x%.2X ", *(
§c
 + 
i
));

71 
	`¥ötf
("\n");

74 
cou¡
 = 
Àn
 / 
job
;

75 
i
 = 0; i < 
cou¡
; i++)

77 
	`mem£t
(
tmp
, 0, 
job
);

78 
	`mem£t
(
ö
, 0, 
job
);

79 
	`mem£t
(
out
, 0, 
job
);

80 
	`mem˝y
(
tmp
, 
§c
 + 
job
 * 
i
, job);

82 
	`DES_ecb3_í¸y±
((
c⁄°_DES_cblock
*)
tmp
, (
DES_cblock
*)
ö
, &
ks
, &
ks2
, &
ks3
, 
DES_ENCRYPT
);

84 
	`DES_ecb3_í¸y±
((
c⁄°_DES_cblock
*)
ö
, (
DES_cblock
*)
out
, &
ks
, &
ks2
, &
ks3
, 
DES_DECRYPT
);

86 
	`mem˝y
(
d°
 + 
job
 * 
i
, 
out
, job);

90 
	`¥ötf
("after decrypt :\n");

91 
i
 = 0; i < 
Àn
; i++)

93 
	`¥ötf
("0x%.2X ", *(
d°
 + 
i
));

95 
	`¥ötf
("\n");

96 
	`¥ötf
("Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
d°
);

98 
íd
:

99 i‡(
NULL
 !
§c
) {

100 
	`‰ì
(
§c
);

101 
§c
 = 
NULL
;

103 i‡(
NULL
 !
d°
) {

104 
	`‰ì
(
d°
);

105 
d°
 = 
NULL
;

108 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_3ds_ecb.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	~<›ís¶/des.h
>

5 
	~<›ís¶/ønd.h
>

6 
	~"hex.h
"

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
i
 = 0;

20 
Àn
 = 0;

21 
∆í
 = 0;

23 
ch
 = '\0';

24 *
key1
 = "0000000000000000";

25 *
key2
 = "0000000000000000";

26 *
key3
 = "0000000000000000";

27 *
d©a
 = "1234567job1234567job1234567job1234567job";

28 
§c
[64] = {0};

29 
out
[64] = {0};

30 
tmp
[64] = {0};

32 *
±r
 = 
NULL
;

33 
block
[
job
] = {0};

34 
DES_key_scheduÀ
 
ks1
, 
ks2
, 
ks3
;

37 
±r
 = 
	`hex2bö
(
key1
, 
	`°æí
(key1), &
∆í
);

38 
	`mem˝y
(
block
, 
±r
, (block));

39 
	`‰ì
(
±r
);

40 
	`DES_£t_key_unchecked
((
C_Block
 *)
block
, &
ks1
);

42 
±r
 = 
	`hex2bö
(
key2
, 
	`°æí
(key2), &
∆í
);

43 
	`mem˝y
(
block
, 
±r
, (block));

44 
	`‰ì
(
±r
);

45 
	`DES_£t_key_unchecked
((
C_Block
 *)
block
, &
ks2
);

47 
±r
 = 
	`hex2bö
(
key3
, 
	`°æí
(key3), &
∆í
);

48 
	`mem˝y
(
block
, 
±r
, (block));

49 
	`‰ì
(
±r
);

50 
	`DES_£t_key_unchecked
((
C_Block
 *)
block
, &
ks3
);

52 
±r
 = 
	`hex2bö
(
d©a
, 
	`°æí
(d©a), &
∆í
);

53 
	`mem˝y
(
§c
, 
±r
, 
∆í
);

54 
	`‰ì
(
±r
);

56 
Àn
 = (
∆í
 / 
job
 + (nlen % job ? 1: 0)) * job;

58 
ch
 = 
job
 - 
∆í
 % job;

59 
	`mem£t
(
§c
 + 
∆í
, 
ch
, (
job
 -Çlen % job) % job);

61 
	`¥ötf
("Âä†ÂØÜÂâçÊï∞ÊçÆ: ");

62 
i
 = 0; i < 
Àn
; i++) {

63 
	`¥ötf
("%02X", *(
§c
 + 
i
));

65 
	`¥ötf
("\n");

67 
i
 = 0; i < 
Àn
; i +
job
) {

68 
	`DES_ecb3_í¸y±
((
C_Block
 *)(
§c
 + 
i
), (C_Block *)(
out
 + i), &
ks1
, &
ks2
, &
ks3
, 
DES_ENCRYPT
);

71 
	`¥ötf
("Âä†ÂØÜÂêéÊï∞ÊçÆ: ");

72 
i
 = 0; i < 
Àn
; i++) {

73 
	`¥ötf
("%02X" , *(
out
 + 
i
));

75 
	`¥ötf
("\n");

77 
i
 = 0; i < 
Àn
; i +
job
) {

78 
	`DES_ecb3_í¸y±
((
C_Block
 *)(
out
 + 
i
), (C_Block *)(
tmp
 + i), &
ks1
, &
ks2
, &
ks3
, 
DES_DECRYPT
);

81 
	`¥ötf
("Ëß£ÂØÜÂêéÊï∞ÊçÆ: ");

82 
i
 = 0; i < 
Àn
; i++) {

83 
	`¥ötf
("%02X", *(
tmp
 + 
i
));

85 
	`¥ötf
("\n");

86 
	`¥ötf
("%s\n", 
tmp
);

89 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_aes.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<›ís¶/´s.h
>

4 
	~<›ís¶/ønd.h
>

8 
hexdump
(

9 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
FILE
 *
f
,

10 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†c⁄° *
tôÀ
,

11 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†c⁄° *
s
,

12 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
l
)

14 ¬†¬†¬†¬†
	gn
 = 0;

16 ¬†¬†¬†¬†
Ârötf
(
f
, "%s", 
tôÀ
);

17 ¬†¬†¬†¬†; 
	gn
 < 
	gl
; ++n) {

18 ¬†¬†¬†¬†¬†¬†¬†¬†i‡((
	gn
 % 16) == 0) {

19 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
Ârötf
(
f
, "\n%04x", 
n
);

21 ¬†¬†¬†¬†¬†¬†¬†¬†
Ârötf
(
f
, " %02x", 
s
[
n
]);

24 ¬†¬†¬†¬†
Ârötf
(
f
, "\n");

27 
	$maö
(
¨gc
, **
¨gv
)

30 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
rkey
[16];

32 ¬†¬†¬†¬†¬†¬†¬†¬†
AES_KEY
¬†¬†¬†¬†¬†¬†¬†¬† 
key
;

35 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
∂aöãxt
[
AES_BLOCK_SIZE
 * 4];

36 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
cùhîãxt
[
AES_BLOCK_SIZE
 * 4];

37 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
checkãxt
[
AES_BLOCK_SIZE
 * 4];

40 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
iv
[
AES_BLOCK_SIZE
 * 4];

42 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬† 
ßved_iv
[
AES_BLOCK_SIZE
 * 4];

44 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_bôs
 = 0;

45 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
 = 0;

48 ¬†¬†¬†¬†¬†¬†¬†¬†
	`mem£t
(
∂aöãxt
, 0, Ölaintext);

49 ¬†¬†¬†¬†¬†¬†¬†¬†
	`mem£t
(
cùhîãxt
, 0,  ciphertext);

50 ¬†¬†¬†¬†¬†¬†¬†¬†
	`mem£t
(
checkãxt
, 0,  checktext);

53 ¬†¬†¬†¬†¬†¬†¬†¬†
	`RAND_p£udo_byãs
(
rkey
, Ñkey);

54 ¬†¬†¬†¬†¬†¬†¬†¬†
	`RAND_p£udo_byãs
(
∂aöãxt
, Ölaintext);

55 ¬†¬†¬†¬†¬†¬†¬†¬†
	`RAND_p£udo_byãs
(
ßved_iv
,  saved_iv);

57 ¬†¬†¬†¬†¬†¬†¬†¬†
	`hexdump
(
°dout
, "==Ñkey ==",

58 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
rkey
,

59 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†(
rkey
));

60 ¬†¬†¬†¬†¬†¬†¬†¬†
	`hexdump
(
°dout
, "== iv ==",

61 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
ßved_iv
,

62 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†(
ßved_iv
));

63 ¬†¬†¬†¬†¬†¬†¬†¬†
	`¥ötf
("\n");

65 ¬†¬†¬†¬†¬†¬†¬†¬†
	`hexdump
(
°dout
, "==Ölaintext ==",

66 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
∂aöãxt
,

67 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†(
∂aöãxt
));

68 ¬†¬†¬†¬†¬†¬†¬†¬†
	`¥ötf
("\n");

71 ¬†¬†¬†¬†¬†¬†¬†¬†
	`mem˝y
(
iv
, 
ßved_iv
, (iv));

72 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_bôs
 = 
job
 * (
rkey
);

73 ¬†¬†¬†¬†¬†¬†¬†¬†
	`AES_£t_í¸y±_key
(
rkey
, 
ƒ_of_bôs
, &
key
);

74 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
 = (
∂aöãxt
);

75 ¬†¬†¬†¬†¬†¬†¬†¬†
	`AES_cbc_í¸y±
(
∂aöãxt
,

76 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
cùhîãxt
,

77 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
,

78 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&
key
,

79 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
iv
,

80 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
AES_ENCRYPT
);

82 ¬†¬†¬†¬†¬†¬†¬†¬†
	`hexdump
(
°dout
, "== ciphertext ==",

83 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
cùhîãxt
,

84 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†(
cùhîãxt
));

85 ¬†¬†¬†¬†¬†¬†¬†¬†
	`¥ötf
("\n");

88 ¬†¬†¬†¬†¬†¬†¬†¬†
	`mem˝y
(
iv
, 
ßved_iv
, (iv));

89 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
 = 
job
 * (
rkey
);

90 ¬†¬†¬†¬†¬†¬†¬†¬†
	`AES_£t_de¸y±_key
(
rkey
, 
ƒ_of_bôs
, &
key
);

91 ¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
 = (
cùhîãxt
) / 2;

93 ¬†¬†¬†¬†¬†¬†¬†¬†
	`AES_cbc_í¸y±
(
cùhîãxt
,

94 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
checkãxt
,

95 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
,

96 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&
key
, 
iv
,

97 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
AES_DECRYPT
);

98 ¬†¬†¬†¬†¬†¬†¬†¬†
	`AES_cbc_í¸y±
(

99 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
cùhîãxt
 + 
ƒ_of_byãs
,

100 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
checkãxt
 + 
ƒ_of_byãs
,

101 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
ƒ_of_byãs
,

102 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&
key
,

103 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
iv
,

104 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
AES_DECRYPT
);

105 ¬†¬†¬†¬†¬†¬†¬†¬†
	`hexdump
(
°dout
, "== checktext ==",

106 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†
checkãxt
,

107 ¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†(
checkãxt
));

108 ¬†¬†¬†¬†¬†¬†¬†¬†
	`¥ötf
("\n");

111 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_aes_test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<›ís¶/´s.h
>

5 
	$hexdump
(
FILE
 *
f
, c⁄° *
tôÀ
,

6 c⁄° *
tôÀ
, c⁄° *
s
,

7 
l
)

9 
n
 = 0;

10 
	`Ârötf
(
f
, "%s", 
tôÀ
);

11 ; 
n
<1; ++n) {

12 i‡((
n
%16) == 0) {

13 
	`Ârötf
(
f
, "\n%04x", 
n
);

15 
	`Ârötf
(
f
, " %02x", 
s
[
n
]);

17 
	`Ârötf
(
f
, "\n");

18 
	}
}

21 
	$maö
(
¨gc
, **
¨gv
)

23 
rkey
[16];

24 
AES_KEY
 
key
;

25 ¬†¬† 
iv
[
AES_BLOCK_SIZE
 * 4];

26 ¬†¬† 
ßved_iv
[
AES_BLOCK_SIZE
 * 4];

27 
ƒ_of_bôs
 = 0;

28 
ƒ_of_byãs
 = 0;

30 
∂aöãxt
[
AES_BLOCK_SIZE
 * 4];

31 
cùhîãxt
[
AES_BLOCK_SIZE
 * 4];

32 
checkãxt
[
AES_BLOCK_SIZE
 * 4];

34 
	`mem£t
(
∂aöãxt
, 0, Ölaintext);

35 
	`mem£t
(
cùhîãxt
, 0,  ciphertext);

36 
	`mem£t
(
checkãxt
, 0,  checktext);

38 
	`RAND_p£udo_byãs
(
∂aöãxt
, Ölaintext);

39 
	`RAND_p£udo_byãs
(
rkey
, Ñkey);

40 
	`RAND_p£udo_byãs
(
ßved_iv
,  saved_iv);

42 
	`mem˝y
(
iv
, 
ßved_iv
, (iv));

43 
ƒ_of_bôs
 = 
job
 * (
rkey
);

44 
	`AES_£t_í¸y±_key
(
rkey
, 
ƒ_of_bôs
, &
key
);

45 
ƒ_of_byãs
 = (
cùhîãxt
) / 2;

46 
	`AES_cfb12job_í¸y±
(
cùhîãxt
, 
checkãxt
, 
ƒ_of_byãs
, &
key
, 
iv
, 
AES_ENCRYPT
);

48 
	`mem˝y
(
iv
, 
ßved_iv
, (iv));

49 
ƒ_of_bôs
 = 
job
 * (
rkey
);

50 
	`AES_£t_de¸y±_key
(
rkey
, 
ƒ_of_bôs
, &
key
);

51 
	`AES_cfb12job_í¸y±
(
cùhîãxt
 + 
ƒ_of_byãs
, 
checkãxt
 +Çr_of_bytes,

52 
ƒ_of_byãs
, &
key
, 
iv
, 
AES_DECRYPT
);

54 
	`¥ötf
("Â≠óÁ¨¶‰∏≤‰∏∫:%s\n", 
checkãxt
);

57 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_crypt.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<›ís¶/rc4.h
>

6 
	~"¸y±.h
"

7 
	~"symmëry_¸y±.h
"

8 
	~"symmëry_¸y±_sim∂e.h
"

11 
	$ã°
(
RC4_KEY
 
key
, 
buÊí
, *
buf
, *
ªsu…
)

13 
	`RC4
(&
key
, 
buÊí
, 
buf
, 
ªsu…
);

15 
	}
}

17 
	$¸y±
()

19 
RC4_KEY
 
key1
;

20 
RC4_KEY
 
key2
;

21 c⁄° 
key_d©a
[
job
] = { 0x01, 0x23, 0x45, 0x67, 0x
job9
, 0xab, 0xcd, 0xef };

22 *
øw_d©a
 = (*)"this isáÑc4Åest case";

23 
outBuf
[256] = {0};

24 
outBuf1
[256] = {0};

25 
i
 = 0;

27 
	`RC4_£t_key
(&
key1
, (
key_d©a
), key_data);

28 
	`RC4_£t_key
(&
key2
, (
key_d©a
), key_data);

30 
	`mem£t
(
outBuf
, 0, (outBuf));

31 
	`ã°
(
key1
, 
	`°æí
((*)
øw_d©a
),Ñaw_d©a, 
outBuf
);

33 
	`¥ötf
("Á¨¨‰∏ÄÊ¨°Âä†ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤: ÈïøÂ∫¶‰∏∫%d\n", 
	`°æí
((*)
outBuf
));

34 
i
=0; i<256; i++) {

35 
	`¥ötf
("%c", 
outBuf
[
i
]);

37 
	`ã°
(
key2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

38 
	`¥ötf
("\nÁ¨¨‰∏ÄÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBuf1
);

40 
	`ã°
(
key2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

41 
	`¥ötf
("\nÁ¨¨‰∫åÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBuf1
);

44 
	}
}

46 
	$¸y±_£c⁄d
()

48 
RC4_KEY
 
key1
;

49 
RC4_KEY
 
key2
, 
ãmpKey2
;

50 c⁄° 
key_d©a
[
job
] = { 0x01, 0x23, 0x45, 0x67, 0x
job9
, 0xab, 0xcd, 0xef };

51 *
øw_d©a
 = (*)"this isáÑc4Åest casexxxx";

52 
outBuf
[256] = {0};

53 
outBuf1
[256] = {0};

54 
i
 = 0;

56 
	`RC4_£t_key
(&
key1
, (
key_d©a
), key_data);

57 
	`RC4_£t_key
(&
key2
, (
key_d©a
), key_data);

59 
	`mem£t
(
outBuf
, 0, (outBuf));

60 
	`RC4
(&
key1
, 
	`°æí
((*)
øw_d©a
),Ñaw_d©a, 
outBuf
);

62 
	`¥ötf
("+++++++++++++++++++++++++++++\n");

63 
	`¥ötf
("Á¨¨‰∏ÄÊ¨°Âä†ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤: ÈïøÂ∫¶‰∏∫%d\n", 
	`°æí
((*)
outBuf
));

64 
i
=0; i<256; i++) {

65 
	`¥ötf
("%c", 
outBuf
[
i
]);

68 
ãmpKey2
 = 
key2
;

69 
	`RC4
(&
ãmpKey2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

70 
	`¥ötf
("\nÁ¨¨‰∏ÄÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBuf1
);

72 
	`RC4
(&
key2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

73 
	`¥ötf
("\nÁ¨¨‰∫åÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBuf1
);

76 
	}
}

79 
	$¸y±_thúd
()

81 
RC4_KEY
 
key1
, 
ãmpKey1
;

82 
RC4_KEY
 
key2
, 
ãmpKey2
;

83 c⁄° 
key_d©a
[
job
] = { 0x01, 0x23, 0x45, 0x67, 0x
job9
, 0xab, 0xcd, 0xef };

84 *
øw_d©a
 = (*)"this isáÑc4Åest casexxxx";

85 *
øw_d©a2
 = (*)"this isáÑc4Åest caseshitege";

86 
outBuf
[256] = {0};

87 
outBuf1
[256] = {0};

88 
outBufSec⁄d
[256] = {0};

89 
outBufSec⁄d1
[256] = {0};

90 
i
 = 0;

92 
	`RC4_£t_key
(&
key1
, (
key_d©a
), key_data);

93 
	`RC4_£t_key
(&
key2
, (
key_d©a
), key_data);

95 
	`mem£t
(
outBuf
, 0, (outBuf));

96 
ãmpKey1
 = 
key1
;

97 
	`RC4
(&
ãmpKey1
, 
	`°æí
((*)
øw_d©a
),Ñaw_d©a, 
outBuf
);

99 
	`¥ötf
("+++++++++++++++++++++++++++++\n");

100 
	`¥ötf
("Á¨¨‰∏ÄÊ¨°Âä†ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤: ÈïøÂ∫¶‰∏∫%d\n", 
	`°æí
((*)
outBuf
));

101 
i
=0; i<256; i++) {

102 
	`¥ötf
("%c", 
outBuf
[
i
]);

105 
ãmpKey2
 = 
key2
;

106 
	`RC4
(&
ãmpKey2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

107 
	`¥ötf
("\nÁ¨¨‰∏ÄÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBuf1
);

109 
ãmpKey1
 = 
key1
;

110 
ãmpKey2
 = 
key2
;

111 
	`mem£t
(
outBufSec⁄d
, 0, (
outBufSec⁄d1
));

112 
	`mem£t
(
outBufSec⁄d
, 0, (outBufSecond));

113 
	`RC4
(&
ãmpKey1
, 
	`°æí
((*)
øw_d©a2
),Ñaw_d©a2, 
outBufSec⁄d
);

114 
	`RC4
(&
ãmpKey2
, 
	`°æí
((*)
øw_d©a2
), 
outBufSec⁄d
, 
outBufSec⁄d1
);

115 
	`¥ötf
("\nÁ¨¨‰∫åÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤:%s\n", 
outBufSec⁄d1
);

117 
ãmpKey2
 = 
key2
;

118 
	`mem£t
(
outBuf1
, 0, (outBuf1));

119 
	`RC4
(&
ãmpKey2
, 
	`°æí
((*)
øw_d©a
), 
outBuf
, 
outBuf1
);

120 
	`¥ötf
("\nÁ¨¨‰∏âÊ¨°Ëß£ÂØÜÂêéÁöÑÂ≠óÁ¨¶‰∏≤(ÂØπÂ∫îÁ¨¨‰∏ÄÊ¨°Âä†ÂØÜ):%s\n", 
outBuf1
);

123 
	}
}

125 
	$maö
(
¨gc
, * 
¨gv
[])

127 
∑ssw‹d
[256] = {0};

128 
§c
[12
job
] = {0};

129 *
key
 = "gelgejlgjelgjelgjlejglegjlegjlegjlegjelj";

130 *
°rög
 = "This isáÅest string forÉncrypt or decrypt";

131 
de°
[256] = {0};

132 
sour˚
[256] = {0};

134 
	`¸y±
();

135 
	`¸y±_£c⁄d
();

136 
	`¥ötf
("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n");

137 
	`¸y±_thúd
();

139 
	`¥ötf
("==============================================================================\n");

140 
	`¥ötf
("==============================================================================\n");

141 
	`¥ötf
("==============================================================================\n");

142 
	`t›waf_¸y±_ba£64_öô
();

143 
	`waf_í¸y±_ba£64
((*)"hñlo, w‹œgñgejl", 
∑ssw‹d
, 256);

144 
	`¥ötf
("Âä†ÂØÜÂêéÁöÑ‰∏≤%s\n", 
∑ssw‹d
);

145 
	`waf_de¸y±_ba£64
(
∑ssw‹d
, 
§c
);

146 
	`¥ötf
("Ëß£ÂØÜÂêéÁöÑ‰∏≤%s\n", 
§c
);

148 
	`¥ötf
("******************************************************************************\n");

149 
	`¥ötf
("******************************************************************************\n");

150 
	`¥ötf
("******************************************************************************\n");

157 
°rög
 = "MYLOVE2014\0gegege";

158 
	`¥ötf
("ÂàùÂßãÂ≠óÁ¨¶‰∏≤:%s\n", 
°rög
);

159 
	`mem£t
(
sour˚
, 0, 256);

160 
	`waf_í¸y±
(
key
, 
°rög
, 
	`°æí
(°rög), 
sour˚
);

161 
	`¥ötf
("Âä†ÂØÜÂêéÁöÑ‰∏≤‰∏∫:%s\n", 
sour˚
);

162 
	`waf_de¸y±
(
key
, 
sour˚
, 
	`°æí
(sour˚), 
de°
);

163 
	`¥ötf
("Ëß£ÂØÜÂêéÁöÑ‰∏≤‰∏∫:%s\n", 
de°
);

165 
	`¥ötf
("###############################################################################\n");

166 
	`¥ötf
("###############################################################################\n");

167 
	`¥ötf
("###############################################################################\n");

168 
°rög
 = "liu_huichao7job9";

169 
	`¥ötf
("ÂàùÂßãÂ≠óÁ¨¶‰∏≤:%s\n", 
°rög
);

170 
	`mem£t
(
sour˚
, 0, 256);

171 
	`mem£t
(
de°
, 0, 256);

172 
	`waf_í¸y±_ba£64_1
(
°rög
, 
	`°æí
(°rög), 
sour˚
);

173 
	`¥ötf
("Âä†ÂØÜÂêéÁöÑ‰∏≤‰∏∫:%s\n", 
sour˚
);

181 
	`waf_de¸y±_ba£64_1
(
sour˚
, 
	`°æí
(sour˚), 
de°
);

182 
	`¥ötf
("Ëß£ÂØÜÂêéÁöÑ‰∏≤‰∏∫:%s\n", 
de°
);

185 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_des.c

1 
	~<›ís¶/des.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

7 
	$í¸y±_des
(
DES_cblock
 *
cblock
, 
DES_key_scheduÀ
 *
ks1
, DES_key_scheduÀ *
ks2
, DES_key_scheduÀ *
ks3
,

8 *
cùhî
, *
°rög
, 
°rögLí
)

10 
	`DES_ede3_cbc_í¸y±
((c⁄° *)
°rög
,

11 (*)
cùhî
,

12 
°rögLí
, 
ks1
, 
ks2
, 
ks3
,

13 
cblock
, 
DES_ENCRYPT
);

14 
	`¥ötf
("En¸y±ed : %32.32s\n",
cùhî
);

17 
	}
}

19 
	$de¸y±_des
(*
cùhî
, *
ãxt
, 
DES_key_scheduÀ
 *
ks1
, DES_key_scheduÀ *
ks2
,

20 
DES_key_scheduÀ
 *
ks3
, 
DES_cblock
 *
cblock
, 
cùhîLí
)

23 
	`mem£t
(
cblock
,0,(
DES_cblock
));

24 
	`DES_£t_odd_∑rôy
(
cblock
);

30 
	`DES_ede3_cbc_í¸y±
((c⁄° *)
cùhî
,

31 (*)
ãxt
,

32 
cùhîLí
, 
ks1
, 
ks2
, 
ks3
,

33 
cblock
,
DES_DECRYPT
);

34 
	`¥ötf
("De¸y±ed : %s\n",
ãxt
);

37 
	}
}

39 
	$maö
() {

40 
DES_cblock
 
cb1
 = { 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE };

41 
DES_cblock
 
cb2
 = { 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE };

42 
DES_cblock
 
cb3
 = { 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE, 0xAE };

44 
DES_key_scheduÀ
 
ks1
,
ks2
,
ks3
;

46 
DES_cblock
 
cblock
 = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

48 
°rög
[] = "Iámá software developer, bbbxxxxxxxxxx, gjeogjeogjeojsb";

49 
ªt
 = -1;

54 
°rögLí
 = 
	`°æí
(
°rög
) + 1;

55 
cùhîLí
 = 
°rögLí
 *2;

57 
	`¥ötf
("Pœö Texà: %s\n",
°rög
);

58 *
cùhî
 = (*)
	`mÆloc
(
cùhîLí
);

59 *
ãxt
 = (*)
	`mÆloc
(
°rögLí
);

60 
	`mem£t
(
cùhî
, 0, 
cùhîLí
);

61 
	`mem£t
(
ãxt
,0,
°rögLí
);

63 
	`DES_£t_odd_∑rôy
(&
cblock
);

64 i‡(
	`DES_£t_key_checked
(&
cb1
, &
ks1
) ||

65 
	`DES_£t_key_checked
(&
cb2
, &
ks2
) ||

66 
	`DES_£t_key_checked
(&
cb3
, &
ks3
)) {

67 
	`¥ötf
("KeyÉrror,Éxiting ....\n");

71 
ªt
 = 
	`í¸y±_des
(&
cblock
, &
ks1
, &
ks2
, &
ks3
, 
cùhî
, 
°rög
, 
°rögLí
);

72 i‡(
ªt
 < 0) {

73  
ªt
;

76 
ªt
 = 
	`de¸y±_des
(
cùhî
, 
ãxt
, &
ks1
, &
ks2
, &
ks3
, &
cblock
, 
cùhîLí
);

77 i‡(
ªt
 < 0) {

78  
ªt
;

82 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_openssl.c

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<°dlib.h
>

9 
	~<›ís¶/bn.h
>

10 
	~<›ís¶/rß.h
>

12 
	$maö
(
¨gc
, ** 
¨gv
) {

13 
RSA
* 
rß
;

14 * 
öput_°rög
;

15 * 
í¸y±_°rög
;

16 * 
de¸y±_°rög
;

17 
i
;

20 i‡(
¨gc
 != 2) {

21 
	`Ârötf
(
°dîr
, "%†<∂aöÅext>\n", 
¨gv
[0]);

22 
	`exô
(-1);

26 
öput_°rög
 = (*)
	`ˇŒoc
(
	`°æí
(
¨gv
[1]) + 1,

28 i‡(
öput_°rög
 =
NULL
) {

29 
	`Ârötf
(
°dîr
, "UnableÅoállocate memory for input_string\n");

30 
	`exô
(-1);

32 
	`°∫˝y
((*)
öput_°rög
, 
¨gv
[1], 
	`°æí
(argv[1]));

35 
rß
 = 
	`RSA_gíî©e_key
(1024, 3, 
NULL
, NULL);

39 * 
n_b
 = (*)
	`ˇŒoc
(
	`RSA_size
(
rß
),

41 * 
e_b
 = (*)
	`ˇŒoc
(
	`RSA_size
(
rß
),

43 
n_size
 = 
	`BN_bn2bö
(
rß
->
n
, 
n_b
);

44 
b_size
 = 
	`BN_bn2bö
(
rß
->
e
, 
e_b
);

46 
RSA
* 
í¸y±_rß
 = 
	`RSA_√w
();

47 
í¸y±_rß
->
n
 = 
	`BN_bö2bn
(
n_b
, 
n_size
, 
NULL
);

48 
í¸y±_rß
->
e
 = 
	`BN_bö2bn
(
e_b
, 
b_size
, 
NULL
);

51 
í¸y±_°rög
 = (*)
	`ˇŒoc
(
	`RSA_size
(
í¸y±_rß
),

53 i‡(
í¸y±_°rög
 =
NULL
) {

54 
	`Ârötf
(
°dîr
, "UnableÅoállocate memory forÉncrypt_string\n");

55 
	`exô
(-1);

61 
í¸y±_size
 = 
	`RSA_public_í¸y±
(
	`°æí
((*)
öput_°rög
),

62 
öput_°rög
, 
í¸y±_°rög
, 
í¸y±_rß
, 
RSA_PKCS1_OAEP_PADDING
);

65 
í¸y±_size
 = 
	`RSA_public_í¸y±
(
	`°æí
((*)
öput_°rög
),

66 
öput_°rög
, 
í¸y±_°rög
, 
í¸y±_rß
, 
RSA_PKCS1_OAEP_PADDING
);

67 
de¸y±_°rög
 = (*)
	`ˇŒoc
(
	`RSA_size
(
rß
),

69 i‡(
de¸y±_°rög
 =
NULL
) {

70 
	`Ârötf
(
°dîr
, "UnableÅoállocate memory for decrypt_string\n");

71 
	`exô
(-1);

75 
de¸y±_size
 = 
	`RSA_¥iv©e_de¸y±
(
í¸y±_size
,

76 
í¸y±_°rög
, 
de¸y±_°rög
, 
rß
, 
RSA_PKCS1_OAEP_PADDING
);

79 
	`¥ötf
("öput_°rög = %s\n", 
öput_°rög
);

80 
	`¥ötf
("Lí = %d-%dÉn¸y±ed såög = ", 
	`°æí
((*)
í¸y±_°rög
), 
í¸y±_size
);

81 
i
=0; i<
í¸y±_size
; ++i) {

82 
	`¥ötf
("%x%x", (
í¸y±_°rög
[
i
] >> 4) & 0xf,Éncrypt_string[i] & 0xf);

84 
	`¥ötf
("\n");

85 
	`¥ötf
("de¸y±ed såög (%dË%s\n", 
de¸y±_size
, 
de¸y±_°rög
);

87 
de¸y±_size
 = 
	`RSA_¥iv©e_de¸y±
(
í¸y±_size
,

88 
í¸y±_°rög
, 
de¸y±_°rög
, 
rß
, 
RSA_PKCS1_OAEP_PADDING
);

90 
	`¥ötf
("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n");

91 
	`¥ötf
("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n");

92 
	`¥ötf
("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n");

93 
	`¥ötf
("öput_°rög = %s\n", 
öput_°rög
);

94 
	`¥ötf
("Lí = %d-%dÉn¸y±ed såög = ", 
	`°æí
((*)
í¸y±_°rög
), 
í¸y±_size
);

95 
i
=0; i<
í¸y±_size
; ++i) {

96 
	`¥ötf
("%x%x", (
í¸y±_°rög
[
i
] >> 4) & 0xf,Éncrypt_string[i] & 0xf);

98 
	`¥ötf
("\n");

99 
	`¥ötf
("de¸y±ed såög (%dË%s\n", 
de¸y±_size
, 
de¸y±_°rög
);

101 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/simple_rc4.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

7 
	#SECRET_KEY
 "thi†i†®key:^&^&^gjeou93g6job54job43-43job502job520job5903job02job502job"

	)

10 
InôSbox
(
sbox
[]);

11 
KeyEx∑nsi⁄
(
key
[], *
k
, 
Àn
);

12 
Up£tSbox
(
sbox
[], 
key
[]);

13 
D©aPro˚ss
(
sbox
[], 
FILE
 *
Â1
, FILE *
Â2
);

14 
D©aEn¸y±
(*
k
, *
key
, *
sbox
, 
FILE
 *
Â1
, FILE *
Â2
);

15 
D©aDe¸y±
(*
k1
, *
key
, *
sbox
, 
FILE
 *
Â1
, FILE *
Â2
);

19 
	$InôSbox
(
sbox
[]){

20 
i
;

22 
i
 = 0; i < 256; i++)

23 
sbox
[
i
] = i;

24 
	}
}

28 
	$KeyEx∑nsi⁄
(
key
[], *
k
, 
Àn
){

29 
i
 = -1;

31 if(
Àn
 <= 256){

32 
i
 = 0; i < 256; i++Ë
key
[i] = 
k
[ò% 
Àn
];

34 if(
Àn
 > 256){

35 
i
 = 0; i < 256; i++Ë
key
[i] = 
k
[i];

37 
	}
}

41 
	$Up£tSbox
(
sbox
[], 
key
[]){

42 
j
 = 0, 
i
 = -1;

43 
ãmp
;

44 
n
;

46 
i
 = 0; i < 256; i++){

47 
n
 = 
j
 + ()
sbox
[
i
] + ()
key
[i];

48 
j
 = 
n
 % 256;

49 
ãmp
 = 
sbox
[
i
];

50 
sbox
[
i
] = sbox[
j
];

51 
sbox
[
j
] = 
ãmp
;

53 
	}
}

57 
	$D©aPro˚ss
(
sbox
[], 
FILE
 *
Â1
, FILE *
Â2
){

58 
ch
 = 
	`fgëc
(
Â1
);

59 
i
, 
j
, 
t
;

60 
ãmp2
,
ãmp1
;

61 
k
,
cùhîch¨
;

62 
ãmp
;

64 
i
 = 0; 
j
 = 0;

65 
ch
 !
EOF
){

66 
i
 = (i + 1) % 256;

67 
ãmp2
 = 
j
 + ()
sbox
[
i
];

68 
j
 = 
ãmp2
 % 256;

69 
ãmp
 = 
sbox
[
i
];

70 
sbox
[
i
] = sbox[
j
];

71 
sbox
[
j
] = 
ãmp
;

72 
ãmp1
 = ()
sbox
[
i
] + ()sbox[
j
];

73 
t
 = 
ãmp1
 % 256;

74 
k
 = 
sbox
[
t
];

75 
cùhîch¨
 = 
ch
 ^ 
k
;

76 
	`Âutc
(
cùhîch¨
, 
Â2
);

77 
ch
 = 
	`fgëc
(
Â1
);

79 
	}
}

83 
	$D©aEn¸y±
(*
k
, *
key
, *
sbox
, 
FILE
 *
Â1
, FILE *
Â2
)

85 
Àn
 = 
	`°æí
(
k
);

87 
	`KeyEx∑nsi⁄
(
key
, 
k
, 
Àn
);

88 
	`InôSbox
(
sbox
);

89 
	`Up£tSbox
(
sbox
, 
key
);

90 
	`D©aPro˚ss
(
sbox
, 
Â1
, 
Â2
);

91 
	`f˛o£
(
Â1
);

92 
	`f˛o£
(
Â2
);

93 
	`¥ötf
("\nÂä†ÂØÜÊàêÂäü!\n\n");

94 
	}
}

98 
	$D©aDe¸y±
(*
k1
, *
key
, *
sbox
, 
FILE
 *
Â1
, FILE *
Â2
)

100 
Àn
 = 
	`°æí
(
k1
);

102 
	`KeyEx∑nsi⁄
(
key
, 
k1
, 
Àn
);

103 
	`InôSbox
(
sbox
);

104 
	`Up£tSbox
(
sbox
, 
key
);

105 
	`D©aPro˚ss
(
sbox
, 
Â1
, 
Â2
);

106 
	`f˛o£
(
Â1
);

107 
	`f˛o£
(
Â2
);

108 
	`¥ötf
("\nËß£ÂØÜÊàêÂäü!\n\n");

109 
	}
}

112 
	$maö
()

114 
key
[256] = {0x00};

115 
sbox
[256] = {0x00};

116 
FILE
 *
Â1
, *
Â2
;

117 
Êag
 = 1;

118 
choi˚
;

121 
	`¥ötf
("*****************************RC4Âä†ÂØÜËß£ÂØÜÊñá‰ª∂************************************");

122 
	`¥ötf
("\n");

123 
	`¥ötf
(" 1.Âä†ÂØÜÊñá‰ª∂\n\n");

124 
	`¥ötf
(" 2.Ëß£ÂØÜÊñá‰ª∂\n\n");

125 
	`¥ötf
(" 3.ÈÄÄÂá∫\n\n");

126 
	`¥ötf
("ËØ∑ÈÄâÊã©Ë¶ÅËøõË°åÁöÑÊìç‰Ωú:");

127 
	`sˇnf
("%d",&
choi˚
);

128 
choi˚
){

129 1: 
Â1
 = 
	`f›í
("Ê∫êÊñá‰ª∂.txt","r");

130 if(
Â1
 =
NULL
){

131 
	`¥ötf
("ÊâìÂºÄÊ∫êÊñá‰ª∂Â§±Ë¥•!\n");

132 
	`gëch¨
();

133 
	`exô
(0);

135 
Â2
 = 
	`f›í
("Âä†ÂØÜÂêéÊñá‰ª∂.txt","w");

136 if(
Â2
 =
NULL
){

137 
	`¥ötf
("ÊâìÂºÄÂä†ÂØÜÂêéÊñá‰ª∂Â§±Ë¥•!\n");

138 
	`gëch¨
();

139 
	`exô
(0);

141 
	`D©aEn¸y±
(
SECRET_KEY
, 
key
, 
sbox
, 
Â1
, 
Â2
);

143 2: 
Â1
 = 
	`f›í
("Âä†ÂØÜÂêéÊñá‰ª∂.txt","r");

144 if(
Â1
 =
NULL
){

145 
	`¥ötf
("ÊâìÂºÄÂä†ÂØÜÂêéÊñá‰ª∂Â§±Ë¥•!\n");

146 
	`gëch¨
();

147 
	`exô
(0);

149 
Â2
 = 
	`f›í
("Ëß£ÂØÜÂêéÊñá‰ª∂.txt","w");

150 if(
Â2
 =
NULL
){

151 
	`¥ötf
("ÊâìÂºÄËß£ÂØÜÂêéÊñá‰ª∂Â§±Ë¥•!\n");

152 
	`gëch¨
();

153 
	`exô
(0);

155 
	`D©aDe¸y±
(
SECRET_KEY
, 
key
, 
sbox
, 
Â1
, 
Â2
);

157 3: 
Êag
 = 0;;

158  : 
	`¥ötf
("\nÊìç‰Ωú‰∏çÂêàÊ≥ï!\n\n");

160 }
Êag
);

163 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

8 
	~<m©h.h
>

9 
	~<›ís¶/bio.h
>

10 
	~<›ís¶/evp.h
>

11 
	~"symmëry_¸y±.h
"

13 
	tuch¨
;

15 
	#Nb
 4

16 
	#Nk
 4

17 
	#Nr
 10

18 #ÂøÖÈ°ªÊòØËøûÁª≠ÁöÑÂ≠óÁ¨¶Ôºå‰∏çËÉΩÂ∞ë‰∫é12
jobbôs


	)

19 
	#LOVEKEY
 "This-is-key-f‹-t›waf*^*^*%*(("

	)

21 c⁄° 
	gTabÀ_CRC
[] = {

22 0x00000000, 0x04C11DB7, 0x09
job23B6E
, 0x0D4326D9, 0x130476DC, 0x17C56B6B, 0x1A
job64DB2
, 0x1E475005,

23 0x260
jobEDBjob
, 0x22C9F00F, 0x2F
jobAD6D6
, 0x2B4BCB61, 0x350C9B64, 0x31CD
job6D3
, 0x3C
jobEA00A
, 0x3
job4FBDBD
,

24 0x4C11DB70, 0x4
jobD0C6C7
, 0x4593E01E, 0x4152FDA9, 0x5F15ADAC, 0x5BD4B01B, 0x569796C2, 0x5256
jobB75
,

25 0x6A1936C
job
, 0x6ED
job2B7F
, 0x639B0DA6, 0x675A1011, 0x791D4014, 0x7DDC5DA3, 0x709F7B7A, 0x745E66CD,

26 0x9
job23B6E0
, 0x9CE2AB57, 0x91A1
jobDjobE
, 0x95609039, 0x
jobB27C03C
, 0x
jobFE6DDjobB
, 0x
job2A5FB52
, 0x
job664E6E5
,

27 0xBE2B5B5
job
, 0xBAEA46EF, 0xB7A96036, 0xB36
job7Djob1
, 0xAD2F2D
job4
, 0xA9EE3033, 0xA4AD16EA, 0xA06C0B5D,

29 0xF23A
job02job
, 0xF6FB9D9F, 0xFBB
jobBB46
, 0xFF79A6F1, 0xE13EF6F4, 0xE5FFEB43, 0xE
jobBCCD9A
, 0xEC7DD02D,

30 0x34
job67077
, 0x30476DC0, 0x3D044B19, 0x39C556AE, 0x27
job206AB
, 0x23431B1C, 0x2E003DC5, 0x2AC12072,

31 0x12
jobE9DCF
, 0x164F
job07job
, 0x1B0CA6A1, 0x1FCDBB16, 0x01
jobAEB13
, 0x054BF6A4, 0x0
job0jobD07D
, 0x0CC9CDCA,

32 0x7
job97AB07
, 0x7C56B6B0, 0x71159069, 0x75D4
jobDDE
, 0x6B93DDDB, 0x6F52C06C, 0x6211E6B5, 0x66D0FB02,

33 0x5E9F46BF, 0x5A5E5B0
job
, 0x571D7DD1, 0x53DC6066, 0x4D9B3063, 0x495A2DD4, 0x44190B0D, 0x40D
job16BA
,

34 0xACA5C697, 0xA
job64DB20
, 0xA527FDF9, 0xA1E6E04E, 0xBFA1B04B, 0xBB60ADFC, 0xB623
jobB25
, 0xB2E29692,

35 0x
jobAAD2B2F
, 0x
jobE6C369job
, 0x
job32F1041
, 0x
job7EE0DF6
, 0x99A95DF3, 0x9D6
job4044
, 0x902B669D, 0x94EA7B2A,

36 0xE0B41DE7, 0xE4750050, 0xE93626
job9
, 0xEDF73B3E, 0xF3B06B3B, 0xF77176
jobC
, 0xFA325055, 0xFEF34DE2,

37 0xC6BCF05F, 0xC27DEDE
job
, 0xCF3ECB31, 0xCBFFD6
job6
, 0xD5B
jobjob6job3
, 0xD1799B34, 0xDC3ABDED, 0xD
jobFBA05A
,

38 0x690CE0EE, 0x6DCDFD59, 0x60
jobEDBjob0
, 0x644FC637, 0x7A0
job9632
, 0x7EC9
jobBjob5
, 0x73
jobAAD5C
, 0x774BB0EB,

39 0x4F040D56, 0x4BC510E1, 0x46
job6363job
, 0x42472B
jobF
, 0x5C007B
jobA
, 0x5
jobC1663D
, 0x55
job240E4
, 0x51435D53,

40 0x251D3B9E, 0x21DC2629, 0x2C9F00F0, 0x2
job5E1D47
, 0x36194D42, 0x32D
job50F5
, 0x3F9B762C, 0x3B5A6B9B,

41 0x0315D626, 0x07D4CB91, 0x0A97ED4
job
, 0x0E56F0FF, 0x1011A0FA, 0x14D0BD4D, 0x19939B94, 0x1D52
job623
,

42 0xF12F560E, 0xF5EE4BB9, 0xF
jobAD6D60
, 0xFC6C70D7, 0xE22B20D2, 0xE6EA3D65, 0xEBA91BBC, 0xEF6
job060B
,

43 0xD727BBB6, 0xD3E6A601, 0xDEA5
job0Djob
, 0xDA649D6F, 0xC423CD6A, 0xC0E2D0DD, 0xCDA1F604, 0xC960EBB3,

44 0xBD3E
jobD7E
, 0xB9FF90C9, 0xB4BCB610, 0xB07DABA7, 0xAE3AFBA2, 0xAAFBE615, 0xA7B
jobC0CC
, 0xA379DD7B,

45 0x9B3660C6, 0x9FF77D71, 0x92B45BA
job
, 0x9675461F, 0x
jobjob32161A
, 0x
jobCF30BAD
, 0x
job1B02D74
, 0x
job57130C3
,

46 0x5D
jobA9099
, 0x594B
jobD2E
, 0x540
jobABF7
, 0x50C9B640, 0x4E
jobEE645
, 0x4A4FFBF2, 0x470CDD2B, 0x43CDC09C,

47 0x7B
job27D21
, 0x7F436096, 0x7200464F, 0x76C15BF
job
, 0x6
jobjob60BFD
, 0x6C47164A, 0x61043093, 0x65C52D24,

48 0x119B4BE9, 0x155A565E, 0x1
job1970job7
, 0x1CD
job6D30
, 0x029F3D35, 0x065E20
job2
, 0x0B1D065B, 0x0FDC1BEC,

49 0x3793A651, 0x3352BBE6, 0x3E119D3F, 0x3AD0
job0jobjob
, 0x2497D0
jobD
, 0x2056CD3A, 0x2D15EBE3, 0x29D4F654,

50 0xC5A92679, 0xC16
job3BCE
, 0xCC2B1D17, 0xC
jobEA00A0
, 0xD6AD50A5, 0xD26C4D12, 0xDF2F6BCB, 0xDBEE767C,

51 0xE3A1CBC1, 0xE760D676, 0xEA23F0AF, 0xEEE2ED1
job
, 0xF0A5BD1D, 0xF464A0AA, 0xF927
job673
, 0xFDE69BC4,

52 0x
job9BjobFD09
, 0x
jobD79E0BE
, 0x
job03AC667
, 0x
job4FBDBD0
, 0x9ABC
jobBD5
, 0x9E7D9662, 0x933EB0BB, 0x97FFAD0C,

53 0xAFB010B1, 0xAB710D06, 0xA6322BDF, 0xA2F3366
job
, 0xBCB4666D, 0xB
job757BDA
, 0xB5365D03, 0xB1F740B4

56 
uch¨
 
	gSbox
[256] = {

58 0xˇ, 0x
job2
, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,

59 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd
job
, 0x31, 0x15,

60 0x04, 0xc7, 0x23, 0xc3, 0x1
job
, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x
job0
, 0xe2, 0xeb, 0x27, 0xb2, 0x75,

61 0x09, 0x
job3
, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x
job4
,

62 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x5
job
, 0xcf,

63 0xd0, 0xef, 0xØ, 0xfb, 0x43, 0x4d, 0x33, 0x
job5
, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa
job
,

64 0x51, 0xa3, 0x40, 0x
jobf
, 0x92, 0x9d, 0x3
job
, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,

66 0x60, 0x
job1
, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x
jobjob
, 0x46, 0xì, 0xb
job
, 0x14, 0xde, 0x5e, 0x0b, 0xdb,

68 0xe7, 0xc
job
, 0x37, 0x6d, 0x
jobd
, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x0job,

69 0xba, 0x7
job
, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xejob, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x
jobb
, 0x
joba
,

70 0x70, 0x3e, 0xb5, 0x66, 0x4
job
, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x
job6
, 0xc1, 0x1d, 0x9e,

71 0xe1, 0xf
job
, 0x9job, 0x11, 0x69, 0xd9, 0x
jobe
, 0x94, 0x9b, 0x1e, 0x
job7
, 0xe9, 0xce, 0x55, 0x2job, 0xdf,

72 0x
jobc
, 0xa1, 0x
job9
, 0x0d, 0xbf, 0xe6, 0x42, 0x6
job
, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};

74 
uch¨
 
	gInvSbox
[256] = {

75 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x3
job
, 0xbf, 0x40, 0xa3, 0x9e, 0x
job1
, 0xf3, 0xd7, 0xfb,

76 0x7c, 0xe3, 0x39, 0x
job2
, 0x9b, 0x2f, 0xff, 0x
job7
, 0x34, 0x
jobe
, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,

78 0x0
job
, 0x2e, 0xa1, 0x66, 0x2job, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x
jobb
, 0xd1, 0x25,

79 0x72, 0xf
job
, 0xf6, 0x64, 0x
job6
, 0x6job, 0x9job, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,

80 0x6c, 0x70, 0x4
job
, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x
jobd
, 0x9d, 0x
job4
,

81 0x90, 0xd
job
, 0xab, 0x00, 0x
jobc
, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x5job, 0x05, 0xbjob, 0xb3, 0x45, 0x06,

82 0xd0, 0x2c, 0x1e, 0x
jobf
, 0xˇ, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x
joba
, 0x6b,

84 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x
job5
, 0xe2, 0xf9, 0x37, 0xe
job
, 0x1c, 0x75, 0xdf, 0x6e,

85 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x
job9
, 0x6f, 0xb7, 0x62, 0x0e, 0xØ, 0x1
job
, 0xbe, 0x1b,

86 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0x„, 0x7
job
, 0xcd, 0x5a, 0xf4,

87 0x1f, 0xdd, 0xa
job
, 0x33, 0x
jobjob
, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x
job0
, 0xec, 0x5f,

89 0xa0, 0xe0, 0x3b, 0x4d, 0x´, 0x2a, 0xf5, 0xb0, 0xc
job
, 0xeb, 0xbb, 0x3c, 0x
job3
, 0x53, 0x99, 0x61,

93 
uch¨
 
	gXtime2Sbox
[256] = {

94 0xc6, 0xf
job
, 0xee, 0xf6, 0xff, 0xd6, 0xde, 0x91, 0x60, 0x02, 0xce, 0x56, 0xe7, 0xb5, 0x4d, 0xec,

95 0x
jobf
, 0x1f, 0x
job9
, 0xÁ, 0xef, 0xb2, 0x
jobe
, 0xfb, 0x41, 0xb3, 0x5f, 0x45, 0x23, 0x53, 0xe4, 0x9b,

96 0x75, 0xe1, 0x3d, 0x4c, 0x6c, 0x7e, 0xf5, 0x
job3
, 0x6
job
, 0x51, 0xd1, 0xf9, 0xe2, 0xab, 0x62, 0x2a,

97 0x0
job
, 0x95, 0x46, 0x9d, 0x30, 0x37, 0x0a, 0x2f, 0x0e, 0x24, 0x1b, 0xdf, 0xcd, 0x4e, 0x7f, 0xea,

98 0x12, 0x1d, 0x5
job
, 0x34, 0x36, 0xdc, 0xb4, 0x5b, 0xa4, 0x76, 0xb7, 0x7d, 0x52, 0xdd, 0x5e, 0x13,

99 0xa6, 0xb9, 0x00, 0xc1, 0x40, 0xe3, 0x79, 0xb6, 0xd4, 0x
jobd
, 0x67, 0x72, 0x94, 0x9
job
, 0xb0, 0x
job5
,

100 0xbb, 0xc5, 0x4f, 0xed, 0x
job6
, 0x9a, 0x66, 0x11, 0x
joba
, 0xe9, 0x04, 0x„, 0xa0, 0x7
job
, 0x25, 0x4b,

101 0xa2, 0x5d, 0x
job0
, 0x05, 0x3f, 0x21, 0x70, 0xf1, 0x63, 0x77, 0xaf, 0x42, 0x20, 0xe5, 0xfd, 0xbf,

102 0x
job1
, 0x1
job
, 0x26, 0xc3, 0xbe, 0x35, 0x
jobjob
, 0x2e, 0x93, 0x55, 0xfc, 0x7a, 0xcjob, 0xba, 0x32, 0xe6,

103 0xc0, 0x19, 0x9e, 0xa3, 0x44, 0x54, 0x3b, 0x0b, 0x
jobc
, 0xc7, 0x6b, 0x2
job
, 0xa7, 0xbc, 0x16, 0xad,

104 0xdb, 0x64, 0x74, 0x14, 0x92, 0x0c, 0x4
job
, 0xbjob, 0x9f, 0xbd, 0x43, 0xc4, 0x39, 0x31, 0xd3, 0xf2,

105 0xd5, 0x
jobb
, 0x6e, 0xda, 0x01, 0xb1, 0x9c, 0x49, 0xd
job
, 0xac, 0xf3, 0xcf, 0xca, 0xf4, 0x47, 0x10,

106 0x6f, 0xf0, 0x4a, 0x5c, 0x3
job
, 0x57, 0x73, 0x97, 0xcb, 0xa1, 0xejob, 0x3e, 0x96, 0x61, 0x0d, 0x0f,

108 0xd9, 0xeb, 0x2b, 0x22, 0xd2, 0xa9, 0x07, 0x33, 0x2d, 0x3c, 0x15, 0xc9, 0x
job7
, 0xaa, 0x50, 0xa5,

109 0x03, 0x59, 0x09, 0x1a, 0x65, 0xd7, 0x
job4
, 0xd0, 0x
job2
, 0x29, 0x5a, 0x1e, 0x7b, 0xa
job
, 0x6d, 0x2c

113 
uch¨
 
	gXtime3Sbox
[256] = {

114 0xa5, 0x
job4
, 0x99, 0x
jobd
, 0x0d, 0xbd, 0xb1, 0x54, 0x50, 0x03, 0xa9, 0x7d, 0x19, 0x62, 0xe6, 0x9a,

115 0x45, 0x9d, 0x40, 0x
job7
, 0x15, 0xeb, 0xc9, 0x0b, 0xec, 0x67, 0xfd, 0xea, 0xbf, 0xf7, 0x96, 0x5b,

116 0xc2, 0x1c, 0x´, 0x6a, 0x5a, 0x41, 0x02, 0x4f, 0x5c, 0xf4, 0x34, 0x0
job
, 0x93, 0x73, 0x53, 0x3f,

117 0x0c, 0x52, 0x65, 0x5e, 0x2
job
, 0xa1, 0x0f, 0xb5, 0x09, 0x36, 0x9b, 0x3d, 0x26, 0x69, 0xcd, 0x9f,

119 0xf5, 0x6
job
, 0x00, 0x2c, 0x60, 0x1f, 0xcjob, 0xed, 0xbe, 0x46, 0xd9, 0x4b, 0xde, 0xd4, 0xejob, 0x4a,

120 0x6b, 0x2a, 0xe5, 0x16, 0xc5, 0xd7, 0x55, 0x94, 0xcf, 0x10, 0x06, 0x
job1
, 0xf0, 0x44, 0xba, 0xe3,

121 0xf3, 0x„, 0xc0, 0x
joba
, 0xad, 0xbc, 0x4
job
, 0x04, 0xdf, 0xc1, 0x75, 0x63, 0x30, 0x1a, 0x0e, 0x6d,

122 0x4c, 0x14, 0x35, 0x2f, 0xe1, 0xa2, 0xcc, 0x39, 0x57, 0xf2, 0x
job2
, 0x47, 0xac, 0xe7, 0x2b, 0x95,

123 0xa0, 0x9
job
, 0xd1, 0x7f, 0x66, 0x7e, 0xab, 0x
job3
, 0xca, 0x29, 0xd3, 0x3c, 0x79, 0xe2, 0x1d, 0x76,

124 0x3b, 0x56, 0x4e, 0x1e, 0xdb, 0x0a, 0x6c, 0xe4, 0x5d, 0x6e, 0xef, 0xa6, 0xa
job
, 0xa4, 0x37, 0x
jobb
,

125 0x32, 0x43, 0x59, 0xb7, 0x
jobc
, 0x64, 0xd2, 0xe0, 0xb4, 0xÁ, 0x07, 0x25, 0xaf, 0x
jobe
, 0xe9, 0x1
job
,

126 0xd5, 0x
jobjob
, 0x6f, 0x72, 0x24, 0xf1, 0xc7, 0x51, 0x23, 0x7c, 0x9c, 0x21, 0xdd, 0xdc, 0x
job6
, 0x
job5
,

127 0x90, 0x42, 0xc4, 0xØ, 0xd
job
, 0x05, 0x01, 0x12, 0xa3, 0x5f, 0xf9, 0xd0, 0x91, 0x5job, 0x27, 0xb9,

128 0x3
job
, 0x13, 0xb3, 0x33, 0xbb, 0x70, 0x
job9
, 0xa7, 0xb6, 0x22, 0x92, 0x20, 0x49, 0xff, 0x7job, 0x7a,

129 0x
jobf
, 0xf
job
, 0x
job0
, 0x17, 0xda, 0x31, 0xc6, 0xbjob, 0xc3, 0xb0, 0x77, 0x11, 0xcb, 0xfc, 0xd6, 0x3a

139 
__©åibuã__
((
__unu£d__
))

140 
uch¨
 
	gXtime2
[256] = {

141 0x00, 0x02, 0x04, 0x06, 0x0
job
, 0x0a, 0x0c, 0x0e, 0x10, 0x12, 0x14, 0x16, 0x1job, 0x1a, 0x1c, 0x1e,

142 0x20, 0x22, 0x24, 0x26, 0x2
job
, 0x2a, 0x2c, 0x2e, 0x30, 0x32, 0x34, 0x36, 0x3job, 0x3a, 0x3c, 0x3e,

143 0x40, 0x42, 0x44, 0x46, 0x4
job
, 0x4a, 0x4c, 0x4e, 0x50, 0x52, 0x54, 0x56, 0x5job, 0x5a, 0x5c, 0x5e,

144 0x60, 0x62, 0x64, 0x66, 0x6
job
, 0x6a, 0x6c, 0x6e, 0x70, 0x72, 0x74, 0x76, 0x7job, 0x7a, 0x7c, 0x7e,

145 0x
job0
, 0x
job2
, 0x
job4
, 0x
job6
, 0x
jobjob
, 0x
joba
, 0x
jobc
, 0x
jobe
, 0x90, 0x92, 0x94, 0x96, 0x9
job
, 0x9a, 0x9c, 0x9e,

146 0xa0, 0xa2, 0xa4, 0xa6, 0xa
job
, 0xaa, 0xac, 0xae, 0xb0, 0xb2, 0xb4, 0xb6, 0xbjob, 0xba, 0xbc, 0xbe,

147 0xc0, 0xc2, 0xc4, 0xc6, 0xc
job
, 0xca, 0xcc, 0xce, 0xd0, 0xd2, 0xd4, 0xd6, 0xdjob, 0xda, 0xdc, 0xde,

148 0xe0, 0xe2, 0xe4, 0xe6, 0xe
job
, 0xea, 0xec, 0xee, 0xf0, 0xf2, 0xf4, 0xf6, 0xfjob, 0xfa, 0xfc, 0xfe,

153 0x9b, 0x99, 0x9f, 0x9d, 0x93, 0x91, 0x97, 0x95, 0x
jobb
, 0x
job9
, 0x
jobf
, 0x
jobd
, 0x
job3
, 0x
job1
, 0x
job7
, 0x
job5
,

158 
uch¨
 
	gXtime9
[256] = {

159 0x00, 0x09, 0x12, 0x1b, 0x24, 0x2d, 0x36, 0x3f, 0x4
job
, 0x41, 0x5a, 0x53, 0x6c, 0x65, 0x7e, 0x77,

160 0x90, 0x99, 0x
job2
, 0x
jobb
, 0xb4, 0xbd, 0xa6, 0xaf, 0xd
job
, 0xd1, 0xca, 0xc3, 0xfc, 0xf5, 0xee, 0xe7,

161 0x3b, 0x32, 0x29, 0x20, 0x1f, 0x16, 0x0d, 0x04, 0x73, 0x7a, 0x61, 0x6
job
, 0x57, 0x5e, 0x45, 0x4c,

162 0xab, 0xa2, 0xb9, 0xb0, 0x
jobf
, 0x
job6
, 0x9d, 0x94, 0xe3, 0xó, 0xf1, 0xf
job
, 0xc7, 0xce, 0xd5, 0xdc,

163 0x76, 0x7f, 0x64, 0x6d, 0x52, 0x5b, 0x40, 0x49, 0x3e, 0x37, 0x2c, 0x25, 0x1a, 0x13, 0x0
job
, 0x01,

164 0xe6, 0xef, 0xf4, 0xfd, 0xc2, 0xcb, 0xd0, 0xd9, 0x´, 0xa7, 0xbc, 0xb5, 0x
joba
, 0x
job3
, 0x9
job
, 0x91,

165 0x4d, 0x44, 0x5f, 0x56, 0x69, 0x60, 0x7b, 0x72, 0x05, 0x0c, 0x17, 0x1e, 0x21, 0x2
job
, 0x33, 0x3a,

166 0xdd, 0xd4, 0xcf, 0xc6, 0xf9, 0xf0, 0xeb, 0xe2, 0x95, 0x9c, 0x
job7
, 0x
jobe
, 0xb1, 0xb
job
, 0xa3, 0xaa,

167 0xec, 0xe5, 0x„, 0xf7, 0xc
job
, 0xc1, 0xda, 0xd3, 0xa4, 0xad, 0xb6, 0xbf, 0x
job0
, 0x
job9
, 0x92, 0x9b,

168 0x7c, 0x75, 0x6e, 0x67, 0x5
job
, 0x51, 0x4a, 0x43, 0x34, 0x3d, 0x26, 0x2f, 0x10, 0x19, 0x02, 0x0b,

169 0xd7, 0xde, 0xc5, 0xcc, 0xf3, 0xÁ, 0xe1, 0xe
job
, 0x9f, 0x96, 0x
jobd
, 0x
job4
, 0xbb, 0xb2, 0xa9, 0xa0,

170 0x47, 0x4e, 0x55, 0x5c, 0x63, 0x6a, 0x71, 0x7
job
, 0x0f, 0x06, 0x1d, 0x14, 0x2b, 0x22, 0x39, 0x30,

171 0x9a, 0x93, 0x
jobjob
, 0x
job1
, 0xbe, 0xb7, 0xac, 0xa5, 0xd2, 0xdb, 0xc0, 0xc9, 0xf6, 0xff, 0xe4, 0xed,

172 0x0a, 0x03, 0x1
job
, 0x11, 0x2e, 0x27, 0x3c, 0x35, 0x42, 0x4b, 0x50, 0x59, 0x66, 0x6f, 0x74, 0x7d,

173 0xa1, 0xa
job
, 0xb3, 0xba, 0x
job5
, 0x
jobc
, 0x97, 0x9e, 0xe9, 0xe0, 0xfb, 0xf2, 0xcd, 0xc4, 0xdf, 0xd6,

174 0x31, 0x3
job
, 0x23, 0x2a, 0x15, 0x1c, 0x07, 0x0e, 0x79, 0x70, 0x6b, 0x62, 0x5d, 0x54, 0x4f, 0x46};

176 
uch¨
 
	gXtimeB
[256] = {

177 0x00, 0x0b, 0x16, 0x1d, 0x2c, 0x27, 0x3a, 0x31, 0x5
job
, 0x53, 0x4e, 0x45, 0x74, 0x7f, 0x62, 0x69,

178 0xb0, 0xbb, 0xa6, 0xad, 0x9c, 0x97, 0x
joba
, 0x
job1
, 0xe
job
, 0xe3, 0xfe, 0xf5, 0xc4, 0xcf, 0xd2, 0xd9,

179 0x7b, 0x70, 0x6d, 0x66, 0x57, 0x5c, 0x41, 0x4a, 0x23, 0x2
job
, 0x35, 0x3e, 0x0f, 0x04, 0x19, 0x12,

180 0xcb, 0xc0, 0xdd, 0xd6, 0xe7, 0xec, 0xf1, 0xÁ, 0x93, 0x9
job
, 0x
job5
, 0x
jobe
, 0xbf, 0xb4, 0xa9, 0xa2,

181 0xf6, 0xfd, 0xe0, 0xeb, 0xda, 0xd1, 0xcc, 0xc7, 0x´, 0xa5, 0xb
job
, 0xb3, 0x
job2
, 0x
job9
, 0x94, 0x9f,

182 0x46, 0x4d, 0x50, 0x5b, 0x6a, 0x61, 0x7c, 0x77, 0x1e, 0x15, 0x0
job
, 0x03, 0x32, 0x39, 0x24, 0x2f,

183 0x
jobd
, 0x
job6
, 0x9b, 0x90, 0xa1, 0xØ, 0xb7, 0xbc, 0xd5, 0xde, 0xc3, 0xc
job
, 0xf9, 0xf2, 0xef, 0xe4,

184 0x3d, 0x36, 0x2b, 0x20, 0x11, 0x1a, 0x07, 0x0c, 0x65, 0x6e, 0x73, 0x7
job
, 0x49, 0x42, 0x5f, 0x54,

185 0xf7, 0xfc, 0xe1, 0xó, 0xdb, 0xd0, 0xcd, 0xc6, 0xaf, 0xa4, 0xb9, 0xb2, 0x
job3
, 0x
jobjob
, 0x95, 0x9e,

186 0x47, 0x4c, 0x51, 0x5a, 0x6b, 0x60, 0x7d, 0x76, 0x1f, 0x14, 0x09, 0x02, 0x33, 0x3
job
, 0x25, 0x2e,

187 0x
jobc
, 0x
job7
, 0x9a, 0x91, 0xa0, 0xab, 0xb6, 0xbd, 0xd4, 0xdf, 0xc2, 0xc9, 0xf
job
, 0xf3, 0xee, 0xe5,

188 0x3c, 0x37, 0x2a, 0x21, 0x10, 0x1b, 0x06, 0x0d, 0x64, 0x6f, 0x72, 0x79, 0x4
job
, 0x43, 0x5e, 0x55,

189 0x01, 0x0a, 0x17, 0x1c, 0x2d, 0x26, 0x3b, 0x30, 0x59, 0x52, 0x4f, 0x44, 0x75, 0x7e, 0x63, 0x6
job
,

190 0xb1, 0xba, 0xa7, 0xac, 0x9d, 0x96, 0x
jobb
, 0x
job0
, 0xe9, 0xe2, 0xff, 0xf4, 0xc5, 0x˚, 0xd3, 0xd
job
,

191 0x7a, 0x71, 0x6c, 0x67, 0x56, 0x5d, 0x40, 0x4b, 0x22, 0x29, 0x34, 0x3f, 0x0e, 0x05, 0x1
job
, 0x13,

192 0xˇ, 0xc1, 0xdc, 0xd7, 0xe6, 0xed, 0xf0, 0xfb, 0x92, 0x99, 0x
job4
, 0x
jobf
, 0xbe, 0xb5, 0xa
job
, 0xa3};

194 
uch¨
 
	gXtimeD
[256] = {

195 0x00, 0x0d, 0x1a, 0x17, 0x34, 0x39, 0x2e, 0x23, 0x6
job
, 0x65, 0x72, 0x7f, 0x5c, 0x51, 0x46, 0x4b,

196 0xd0, 0xdd, 0xˇ, 0xc7, 0xe4, 0xe9, 0x„, 0xf3, 0xb
job
, 0xb5, 0xa2, 0xaf, 0x
jobc
, 0x
job1
, 0x96, 0x9b,

197 0xbb, 0xb6, 0xa1, 0xac, 0x
jobf
, 0x
job2
, 0x95, 0x9
job
, 0xd3, 0xde, 0xc9, 0xc4, 0xe7, 0xea, 0xfd, 0xf0,

198 0x6b, 0x66, 0x71, 0x7c, 0x5f, 0x52, 0x45, 0x4
job
, 0x03, 0x0e, 0x19, 0x14, 0x37, 0x3a, 0x2d, 0x20,

199 0x6d, 0x60, 0x77, 0x7a, 0x59, 0x54, 0x43, 0x4e, 0x05, 0x0
job
, 0x1f, 0x12, 0x31, 0x3c, 0x2b, 0x26,

200 0xbd, 0xb0, 0xa7, 0xØ, 0x
job9
, 0x
job4
, 0x93, 0x9e, 0xd5, 0xd
job
, 0xcf, 0xc2, 0xe1, 0xec, 0xfb, 0xf6,

201 0xd6, 0xdb, 0xcc, 0xc1, 0xe2, 0xef, 0xf
job
, 0xf5, 0xbe, 0xb3, 0xa4, 0xa9, 0x
joba
, 0x
job7
, 0x90, 0x9d,

202 0x06, 0x0b, 0x1c, 0x11, 0x32, 0x3f, 0x2
job
, 0x25, 0x6e, 0x63, 0x74, 0x79, 0x5a, 0x57, 0x40, 0x4d,

203 0xda, 0xd7, 0xc0, 0xcd, 0xì, 0xe3, 0xf4, 0xf9, 0xb2, 0xbf, 0xa
job
, 0xa5, 0x
job6
, 0x
jobb
, 0x9c, 0x91,

204 0x0a, 0x07, 0x10, 0x1d, 0x3e, 0x33, 0x24, 0x29, 0x62, 0x6f, 0x7
job
, 0x75, 0x56, 0x5b, 0x4c, 0x41,

205 0x61, 0x6c, 0x7b, 0x76, 0x55, 0x5
job
, 0x4f, 0x42, 0x09, 0x04, 0x13, 0x1e, 0x3d, 0x30, 0x27, 0x2a,

206 0xb1, 0xbc, 0xab, 0xa6, 0x
job5
, 0x
jobjob
, 0x9f, 0x92, 0xd9, 0xd4, 0xc3, 0xce, 0xed, 0xe0, 0xf7, 0xfa,

207 0xb7, 0xba, 0xad, 0xa0, 0x
job3
, 0x
jobe
, 0x99, 0x94, 0xdf, 0xd2, 0xc5, 0xc
job
, 0xeb, 0xe6, 0xf1, 0xfc,

208 0x67, 0x6a, 0x7d, 0x70, 0x53, 0x5e, 0x49, 0x44, 0x0f, 0x02, 0x15, 0x1
job
, 0x3b, 0x36, 0x21, 0x2c,

209 0x0c, 0x01, 0x16, 0x1b, 0x3
job
, 0x35, 0x22, 0x2f, 0x64, 0x69, 0x7e, 0x73, 0x50, 0x5d, 0x4a, 0x47,

210 0xdc, 0xd1, 0xc6, 0xcb, 0xe
job
, 0xe5, 0xf2, 0xff, 0xb4, 0xb9, 0x´, 0xa3, 0x
job0
, 0x
jobd
, 0x9a, 0x97};

212 
uch¨
 
	gXtimeE
[256] = {

213 0x00, 0x0e, 0x1c, 0x12, 0x3
job
, 0x36, 0x24, 0x2a, 0x70, 0x7e, 0x6c, 0x62, 0x4job, 0x46, 0x54, 0x5a,

214 0xe0, 0xì, 0xfc, 0xf2, 0xd
job
, 0xd6, 0xc4, 0xˇ, 0x90, 0x9e, 0x
jobc
, 0x
job2
, 0xajob, 0xa6, 0xb4, 0xba,

215 0xdb, 0xd5, 0xc7, 0xc9, 0xe3, 0xed, 0xff, 0xf1, 0xab, 0xa5, 0xb7, 0xb9, 0x93, 0x9d, 0x
jobf
, 0x
job1
,

217 0xad, 0xa3, 0xb1, 0xbf, 0x95, 0x9b, 0x
job9
, 0x
job7
, 0xdd, 0xd3, 0xc1, 0xcf, 0xe5, 0xeb, 0xf9, 0xf7,

219 0x76, 0x7
job
, 0x6a, 0x64, 0x4e, 0x40, 0x52, 0x5c, 0x06, 0x0job, 0x1a, 0x14, 0x3e, 0x30, 0x22, 0x2c,

220 0x96, 0x9
job
, 0x
joba
, 0x
job4
, 0xae, 0xa0, 0xb2, 0xbc, 0xe6, 0xejob, 0xfa, 0xf4, 0xde, 0xd0, 0xc2, 0xcc,

222 0xa1, 0xaf, 0xbd, 0xb3, 0x99, 0x97, 0x
job5
, 0x
jobb
, 0xd1, 0xdf, 0xcd, 0xc3, 0xe9, 0xe7, 0xf5, 0xfb,

223 0x9a, 0x94, 0x
job6
, 0x
jobjob
, 0xa2, 0xac, 0xbe, 0xb0, 0xó, 0xe4, 0xf6, 0xf
job
, 0xd2, 0xdc, 0xce, 0xc0,

224 0x7a, 0x74, 0x66, 0x6
job
, 0x42, 0x4c, 0x5e, 0x50, 0x0a, 0x04, 0x16, 0x1job, 0x32, 0x3c, 0x2e, 0x20,

225 0xec, 0xe2, 0xf0, 0x„, 0xd4, 0xda, 0xc
job
, 0xc6, 0x9c, 0x92, 0x
job0
, 0x
jobe
, 0xa4, 0xaa, 0xbjob, 0xb6,

226 0x0c, 0x02, 0x10, 0x1e, 0x34, 0x3a, 0x2
job
, 0x26, 0x7c, 0x72, 0x60, 0x6e, 0x44, 0x4a, 0x5job, 0x56,

228 0xd7, 0xd9, 0xcb, 0xc5, 0xef, 0xe1, 0xf3, 0xfd, 0xa7, 0xa9, 0xbb, 0xb5, 0x9f, 0x91, 0x
job3
, 0x
jobd
};

231 
uch¨
 
	gkey
[16] = {0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79};

233 
uch¨
 
	gRc⁄
[11] = {

234 0x00, 0x01, 0x02, 0x04, 0x0
job
, 0x10, 0x20, 0x40, 0x
job0
, 0x1b, 0x36};

239 
ölöe
 
	$Shi·Rows
 (
uch¨
 *
°©e
)

241 
uch¨
 
tmp
;

244 
°©e
[0] = 
Sbox
[state[0]], state[4] = Sbox[state[4]];

245 
°©e
[
job
] = 
Sbox
[state[job]], state[12] = Sbox[state[12]];

248 
tmp
 = 
Sbox
[
°©e
[1]], state[1] = Sbox[state[5]];

249 
°©e
[5] = 
Sbox
[°©e[9]], sèã[9] = Sbox[°©e[13]], sèã[13] = 
tmp
;

252 
tmp
 = 
Sbox
[
°©e
[2]], state[2] = Sbox[state[10]], state[10] =Åmp;

253 
tmp
 = 
Sbox
[
°©e
[6]], state[6] = Sbox[state[14]], state[14] =Åmp;

256 
tmp
 = 
Sbox
[
°©e
[15]], state[15] = Sbox[state[11]];

257 
°©e
[11] = 
Sbox
[°©e[7]], sèã[7] = Sbox[°©e[3]], sèã[3] = 
tmp
;

258 
	}
}

263 
ölöe
 
	$InvShi·Rows
 (
uch¨
 *
°©e
)

265 
uch¨
 
tmp
;

268 
°©e
[0] = 
InvSbox
[state[0]], state[4] = InvSbox[state[4]];

269 
°©e
[
job
] = 
InvSbox
[state[job]], state[12] = InvSbox[state[12]];

272 
tmp
 = 
InvSbox
[
°©e
[13]], state[13] = InvSbox[state[9]];

273 
°©e
[9] = 
InvSbox
[°©e[5]], sèã[5] = InvSbox[°©e[1]], sèã[1] = 
tmp
;

276 
tmp
 = 
InvSbox
[
°©e
[2]], state[2] = InvSbox[state[10]], state[10] =Åmp;

277 
tmp
 = 
InvSbox
[
°©e
[6]], state[6] = InvSbox[state[14]], state[14] =Åmp;

280 
tmp
 = 
InvSbox
[
°©e
[3]], state[3] = InvSbox[state[7]];

281 
°©e
[7] = 
InvSbox
[°©e[11]], sèã[11] = InvSbox[°©e[15]], sèã[15] = 
tmp
;

282 
	}
}

285 
ölöe
 
	$MixSubCﬁumns
 (
uch¨
 *
°©e
)

287 
uch¨
 
√w°©e
[4 * 
Nb
];

290 
√w°©e
[0] = 
Xtime2Sbox
[
°©e
[0]] ^ 
Xtime3Sbox
[°©e[5]] ^ 
Sbox
[state[10]] ^ Sbox[state[15]];

291 
√w°©e
[1] = 
Sbox
[
°©e
[0]] ^ 
Xtime2Sbox
[°©e[5]] ^ 
Xtime3Sbox
[state[10]] ^ Sbox[state[15]];

292 
√w°©e
[2] = 
Sbox
[
°©e
[0]] ^ Sbox[°©e[5]] ^ 
Xtime2Sbox
[°©e[10]] ^ 
Xtime3Sbox
[state[15]];

293 
√w°©e
[3] = 
Xtime3Sbox
[
°©e
[0]] ^ 
Sbox
[°©e[5]] ^ Sbox[°©e[10]] ^ 
Xtime2Sbox
[state[15]];

296 
√w°©e
[4] = 
Xtime2Sbox
[
°©e
[4]] ^ 
Xtime3Sbox
[°©e[9]] ^ 
Sbox
[state[14]] ^ Sbox[state[3]];

297 
√w°©e
[5] = 
Sbox
[
°©e
[4]] ^ 
Xtime2Sbox
[°©e[9]] ^ 
Xtime3Sbox
[state[14]] ^ Sbox[state[3]];

298 
√w°©e
[6] = 
Sbox
[
°©e
[4]] ^ Sbox[°©e[9]] ^ 
Xtime2Sbox
[°©e[14]] ^ 
Xtime3Sbox
[state[3]];

299 
√w°©e
[7] = 
Xtime3Sbox
[
°©e
[4]] ^ 
Sbox
[°©e[9]] ^ Sbox[°©e[14]] ^ 
Xtime2Sbox
[state[3]];

302 
√w°©e
[
job
] = 
Xtime2Sbox
[
°©e
[job]] ^ 
Xtime3Sbox
[°©e[13]] ^ 
Sbox
[state[2]] ^ Sbox[state[7]];

303 
√w°©e
[9] = 
Sbox
[
°©e
[
job
]] ^ 
Xtime2Sbox
[°©e[13]] ^ 
Xtime3Sbox
[state[2]] ^ Sbox[state[7]];

304 
√w°©e
[10] = 
Sbox
[
°©e
[
job
]] ^ Sbox[°©e[13]] ^ 
Xtime2Sbox
[°©e[2]] ^ 
Xtime3Sbox
[state[7]];

305 
√w°©e
[11] = 
Xtime3Sbox
[
°©e
[
job
]] ^ 
Sbox
[°©e[13]] ^ Sbox[°©e[2]] ^ 
Xtime2Sbox
[state[7]];

308 
√w°©e
[12] = 
Xtime2Sbox
[
°©e
[12]] ^ 
Xtime3Sbox
[°©e[1]] ^ 
Sbox
[state[6]] ^ Sbox[state[11]];

309 
√w°©e
[13] = 
Sbox
[
°©e
[12]] ^ 
Xtime2Sbox
[°©e[1]] ^ 
Xtime3Sbox
[state[6]] ^ Sbox[state[11]];

310 
√w°©e
[14] = 
Sbox
[
°©e
[12]] ^ Sbox[°©e[1]] ^ 
Xtime2Sbox
[°©e[6]] ^ 
Xtime3Sbox
[state[11]];

311 
√w°©e
[15] = 
Xtime3Sbox
[
°©e
[12]] ^ 
Sbox
[°©e[1]] ^ Sbox[°©e[6]] ^ 
Xtime2Sbox
[state[11]];

313 
	`mem˝y
 (
°©e
, 
√w°©e
, (newstate));

314 
	}
}

317 
ölöe
 
	$InvMixSubCﬁumns
 (
uch¨
 *
°©e
)

319 
uch¨
 
√w°©e
[4 * 
Nb
];

320 
i
;

323 
√w°©e
[0] = 
XtimeE
[
°©e
[0]] ^ 
XtimeB
[°©e[1]] ^ 
XtimeD
[°©e[2]] ^ 
Xtime9
[state[3]];

324 
√w°©e
[5] = 
Xtime9
[
°©e
[0]] ^ 
XtimeE
[°©e[1]] ^ 
XtimeB
[°©e[2]] ^ 
XtimeD
[state[3]];

325 
√w°©e
[10] = 
XtimeD
[
°©e
[0]] ^ 
Xtime9
[°©e[1]] ^ 
XtimeE
[°©e[2]] ^ 
XtimeB
[state[3]];

326 
√w°©e
[15] = 
XtimeB
[
°©e
[0]] ^ 
XtimeD
[°©e[1]] ^ 
Xtime9
[°©e[2]] ^ 
XtimeE
[state[3]];

329 
√w°©e
[4] = 
XtimeE
[
°©e
[4]] ^ 
XtimeB
[°©e[5]] ^ 
XtimeD
[°©e[6]] ^ 
Xtime9
[state[7]];

330 
√w°©e
[9] = 
Xtime9
[
°©e
[4]] ^ 
XtimeE
[°©e[5]] ^ 
XtimeB
[°©e[6]] ^ 
XtimeD
[state[7]];

331 
√w°©e
[14] = 
XtimeD
[
°©e
[4]] ^ 
Xtime9
[°©e[5]] ^ 
XtimeE
[°©e[6]] ^ 
XtimeB
[state[7]];

332 
√w°©e
[3] = 
XtimeB
[
°©e
[4]] ^ 
XtimeD
[°©e[5]] ^ 
Xtime9
[°©e[6]] ^ 
XtimeE
[state[7]];

335 
√w°©e
[
job
] = 
XtimeE
[
°©e
[job]] ^ 
XtimeB
[°©e[9]] ^ 
XtimeD
[°©e[10]] ^ 
Xtime9
[state[11]];

336 
√w°©e
[13] = 
Xtime9
[
°©e
[
job
]] ^ 
XtimeE
[°©e[9]] ^ 
XtimeB
[°©e[10]] ^ 
XtimeD
[state[11]];

337 
√w°©e
[2] = 
XtimeD
[
°©e
[
job
]] ^ 
Xtime9
[°©e[9]] ^ 
XtimeE
[°©e[10]] ^ 
XtimeB
[state[11]];

338 
√w°©e
[7] = 
XtimeB
[
°©e
[
job
]] ^ 
XtimeD
[°©e[9]] ^ 
Xtime9
[°©e[10]] ^ 
XtimeE
[state[11]];

341 
√w°©e
[12] = 
XtimeE
[
°©e
[12]] ^ 
XtimeB
[°©e[13]] ^ 
XtimeD
[°©e[14]] ^ 
Xtime9
[state[15]];

342 
√w°©e
[1] = 
Xtime9
[
°©e
[12]] ^ 
XtimeE
[°©e[13]] ^ 
XtimeB
[°©e[14]] ^ 
XtimeD
[state[15]];

343 
√w°©e
[6] = 
XtimeD
[
°©e
[12]] ^ 
Xtime9
[°©e[13]] ^ 
XtimeE
[°©e[14]] ^ 
XtimeB
[state[15]];

344 
√w°©e
[11] = 
XtimeB
[
°©e
[12]] ^ 
XtimeD
[°©e[13]] ^ 
Xtime9
[°©e[14]] ^ 
XtimeE
[state[15]];

346  
i
=0; i < 4 * 
Nb
; i++ )

347 
°©e
[
i
] = 
InvSbox
[
√w°©e
[i]];

348 
	}
}

354 
ölöe
 
	$AddRoundKey
 (*
°©e
, *
key
)

356 
idx
;

358  
idx
 = 0; idx < 4; idx++ )

359 
°©e
[
idx
] ^
key
[idx];

360 
	}
}

363 
ölöe
 
	$Ex∑ndKey
 (
uch¨
 *
key
, uch¨ *
expkey
)

365 
uch¨
 
tmp0
, 
tmp1
, 
tmp2
, 
tmp3
, 
tmp4
;

366 
idx
;

368  
idx
 = 0; idx < 
Nk
; idx++ ) {

369 
expkey
[4*
idx
+0] = 
key
[4 * idx + 0];

370 
expkey
[4*
idx
+1] = 
key
[4 * idx + 1];

371 
expkey
[4*
idx
+2] = 
key
[4 * idx + 2];

372 
expkey
[4*
idx
+3] = 
key
[4 * idx + 3];

375  
idx
 = 
Nk
; idx < 
Nb
 * (
Nr
 + 1); idx++ ) {

376 
tmp0
 = 
expkey
[4*
idx
 - 4];

377 
tmp1
 = 
expkey
[4*
idx
 - 3];

378 
tmp2
 = 
expkey
[4*
idx
 - 2];

379 
tmp3
 = 
expkey
[4*
idx
 - 1];

380 if–!(
idx
 % 
Nk
) ) {

381 
tmp4
 = 
tmp3
;

382 
tmp3
 = 
Sbox
[
tmp0
];

383 
tmp0
 = 
Sbox
[
tmp1
] ^ 
Rc⁄
[
idx
/
Nk
];

384 
tmp1
 = 
Sbox
[
tmp2
];

385 
tmp2
 = 
Sbox
[
tmp4
];

390 
expkey
[4*
idx
+0] =Éxpkey[4*idx - 4*
Nk
 + 0] ^ 
tmp0
;

391 
expkey
[4*
idx
+1] =Éxpkey[4*idx - 4*
Nk
 + 1] ^ 
tmp1
;

392 
expkey
[4*
idx
+2] =Éxpkey[4*idx - 4*
Nk
 + 2] ^ 
tmp2
;

393 
expkey
[4*
idx
+3] =Éxpkey[4*idx - 4*
Nk
 + 3] ^ 
tmp3
;

395 
	}
}

398 
	$En¸y±
 (*
InText
, *
ExpKey
, *
OutText
)

400 
round
, 
idx
;

401 
Sèã
[
Nb
 * 4];

402  
idx
 = 0; idx < 
Nb
; idx++ ) {

403 
Sèã
[4*
idx
+0] = *
InText
++;

404 
Sèã
[4*
idx
+1] = *
InText
++;

405 
Sèã
[4*
idx
+2] = *
InText
++;

406 
Sèã
[4*
idx
+3] = *
InText
++;

408 
	`AddRoundKey
 ((*)
Sèã
, (*)
ExpKey
);

409  
round
 = 1;Ñound < 
Nr
 + 1;Ñound++ ) {

410 if–
round
 < 
Nr
 )

411 
	`MixSubCﬁumns
 (
Sèã
);

413 
	`Shi·Rows
 (
Sèã
);

414 
	`AddRoundKey
 ((*)
Sèã
, (*)
ExpKey
 + 
round
 * 
Nb
);

416  
idx
 = 0; idx < 
Nb
; idx++ ) {

417 *
OutText
++ = 
Sèã
[4*
idx
+0];

418 *
OutText
++ = 
Sèã
[4*
idx
+1];

419 *
OutText
++ = 
Sèã
[4*
idx
+2];

420 *
OutText
++ = 
Sèã
[4*
idx
+3];

422 
	}
}

424 
ölöe
 
	$De¸y±
 (
uch¨
 *
ö
, uch¨ *
expkey
, uch¨ *
out
)

426 
idx
, 
round
;

427 
uch¨
 
°©e
[
Nb
 * 4];

429  
idx
 = 0; idx < 
Nb
; idx++ ) {

430 
°©e
[4*
idx
+0] = *
ö
++;

431 
°©e
[4*
idx
+1] = *
ö
++;

432 
°©e
[4*
idx
+2] = *
ö
++;

433 
°©e
[4*
idx
+3] = *
ö
++;

436 
	`AddRoundKey
 ((*)
°©e
, (*)
expkey
 + 
Nr
 * 
Nb
);

437 
round
 = 
Nr
;

439 
	`InvShi·Rows
(
°©e
);

441  
round
-- ) {

442 
	`AddRoundKey
 ((*)
°©e
, (*)
expkey
 + 
round
 * 
Nb
);

443 if–
round
 )

444 
	`InvMixSubCﬁumns
 (
°©e
);

447  
idx
 = 0; idx < 
Nb
; idx++ ) {

448 *
out
++ = 
°©e
[4*
idx
+0];

449 *
out
++ = 
°©e
[4*
idx
+1];

450 *
out
++ = 
°©e
[4*
idx
+2];

451 *
out
++ = 
°©e
[4*
idx
+3];

453 
	}
}

456 
uch¨
 
	gö
[16] = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x
jobjob
, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};

458 
uch¨
 
	gout
[16];

461 
	$waf_í¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
)

463 
uch¨
 
expkey
[4 * 
Nb
 * (
Nr
 + 1)];

464 
idx
 = 0;

465 
s
 = 0, 
d
 = 0;

466 
À·
 = 0, 
§˛í
=
¶í
;

468 i‡(
mykey
) {

469 
	`°∫˝y
((*)
key
, 
mykey
, (key));

471 
	`Ex∑ndKey
 (
key
, 
expkey
);

473 
À·
 = 
¶í
%16;

474 
¶í
 -
À·
;

476 
¶í
--) {

477 
ö
[
idx
++] = 
§c
[
s
++];

478 if–
idx
 % 16 )

481 
	`En¸y±
 (
ö
, 
expkey
, 
out
);

483  
idx
 = 0; idx < 16; idx++ )

484 
de°
[
d
++] = 
out
[
idx
];

486 
idx
 = 0;

488 i‡(
À·
) {

489 
	`°rˇt
(
de°
, 
§c
+
§˛í
-
À·
);

491 
	}
}

494 c⁄° 
	gba£64Fœg
 = '&';

496 
	$waf_de¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
)

498 
uch¨
 
expkey
[4 * 
Nb
 * (
Nr
 + 1)];

499 
idx
 = 0;

500 
s
 = 0, 
d
 = 0;

501 
À·
 = 0, 
§˛í
=
¶í
;

503 
À·
 = 
¶í
%16;

504 
¶í
 -
À·
;

506 i‡(
mykey
) {

507 
	`°∫˝y
 ((*)
key
, 
mykey
, (key));

510 
	`Ex∑ndKey
 (
key
, 
expkey
);

512 
¶í
--) {

513 
ö
[
idx
++] = 
§c
[
s
++];

514 if–
idx
 % 16 )

517 
	`De¸y±
 (
ö
, 
expkey
, 
out
);

519  
idx
 = 0; idx < 16; idx++ )

520 
de°
[
d
++] = 
out
[
idx
];

522 
idx
 = 0;

524 i‡(
À·
) {

525 
	`°rˇt
(
de°
, 
§c
+
§˛í
-
À·
);

527 
	}
}

529 
	#DD
 0

	)

536 
	$waf_í¸y±_ba£64_1
(*
§c
, 
§cLí
, *
d°
)

538 #i‡
DD


539 *
ãmpBuf
 = 
NULL
;

540 *
ãmpSrc
 = 
NULL
;

541 
ãmpLí
 = 
§cLí
;

542 
BIO
 *
bio
, *
b64
;

543 
FILE
 *
°ªam
;

544 
ícodedSize
 = -1, 
ãm∂í
;

545 
ªt
 = -1;

547 i‡(!
§c
 || !
d°
 ) {

550 i‡((
ªt
=
ãmpLí
%16)) {

551 
ãmpLí
 +(16 - 
ªt
);

553 
ãmpBuf
 = (*)
	`mÆloc
(
ãmpLí
+1);

554 
	`mem£t
(
ãmpBuf
, 0, 
ãmpLí
+1);

555 
ãmpSrc
 = (*)
	`mÆloc
(
ãmpLí
+1);

556 
	`mem£t
(
ãmpSrc
, 0, 
ãmpLí
+1);

557 
	`mem˝y
(
ãmpSrc
, 
§c
, 
§cLí
);

558 
	`waf_í¸y±
(
LOVEKEY
, 
ãmpSrc
, 
ãmpLí
, 
ãmpBuf
);

560 
d°
[0] = '&';

561 
	`¥ötf
("Én¸y±:----%†Àn=%d\n", 
ãmpBuf
, 
	`°æí
(tempBuf));

562 
ãm∂í
 = 
	`°æí
(
ãmpBuf
);

563 
ícodedSize
 = 4*
	`˚û
(()
ãm∂í
/3);

565 
°ªam
 = 
	`fmem›í
(&
d°
[1], 
ícodedSize
+1, "w");

566 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

567 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

568 
bio
 = 
	`BIO_push
(
b64
, bio);

569 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

570 
	`BIO_wrôe
(
bio
, 
ãmpBuf
, 
ãm∂í
);

571 ()
	`BIO_Êush
(
bio
);

572 
	`BIO_‰ì_Æl
(
bio
);

573 
	`f˛o£
(
°ªam
);

575 
	`‰ì
(
ãmpBuf
);

576 
	`‰ì
(
ãmpSrc
);

579 *
buf„r
 = 
NULL
;

580 *
ãmp
 = 
NULL
;

581 
ãmpLí
 = 
§cLí
;

582 
BIO
 *
bio
, *
b64
;

583 
FILE
 *
°ªam
;

584 
ícodedSize
 = -1, 
ãm∂í
;

586 i‡(!
§c
 || !
d°
 ) {

590 i‡(
ãmpLí
%16) {

591 
ãmpLí
 += (16 -ÅempLen%16);

593 
buf„r
 = (*)
	`mÆloc
(
ãmpLí
+1);

594 
	`mem£t
(
buf„r
, 0, 
ãmpLí
+1);

595 
ãmp
 = (*)
	`mÆloc
(
ãmpLí
+1);

596 
	`mem£t
(
ãmp
, 0, 
ãmpLí
+1);

597 
	`mem˝y
(
ãmp
, 
§c
, 
§cLí
);

598 
	`waf_í¸y±
(
LOVEKEY
, 
ãmp
, 
ãmpLí
, 
buf„r
);

601 
d°
[0] = 
ba£64Fœg
;

603 
ãm∂í
 = 
	`°æí
(
buf„r
);

604 
ícodedSize
 = 4*
	`˚û
(()
ãm∂í
/3);

606 
°ªam
 = 
	`fmem›í
(
d°
+1, 
ícodedSize
+1, "w");

607 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

608 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

609 
bio
 = 
	`BIO_push
(
b64
, bio);

610 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

611 
	`BIO_wrôe
(
bio
, 
buf„r
, 
ãm∂í
);

612 ()
	`BIO_Êush
(
bio
);

613 
	`BIO_‰ì_Æl
(
bio
);

614 
	`f˛o£
(
°ªam
);

616 
	`‰ì
(
buf„r
);

617 
	`‰ì
(
ãmp
);

620 
	}
}

626 
	$ˇlcDecodeLígth
(c⁄° * 
b64öput
)

628 
Àn
 = 
	`°æí
(
b64öput
);

629 
∑ddög
 = 0;

631 i‡(
b64öput
[
Àn
-1] == '=' && b64input[len-2] == '=') {

632 
∑ddög
 = 2;

633 } i‡(
b64öput
[
Àn
-1] == '=') {

634 
∑ddög
 = 1;

637  ()
Àn
*0.75 - 
∑ddög
;

638 
	}
}

646 
	$waf_de¸y±_ba£64_1
(*
§c
, 
§cLí
, *
d°
)

648 #i‡
DD


649 
BIO
 *
bio
, *
b64
;

650 
Àn
 = 0, 
decodeLí
 = 0;

651 
FILE
 *
°ªam
 = 
NULL
;

652 *
buf„r
 = 
NULL
;

653 *
ãmp
 = 
NULL
;

654 
ãmpLí
 = 0;

656 i‡(!
§c
 || !
d°
) {

660 i‡(
§c
[0] != '&') {

663 
ãmp
 = &
§c
[1];

664 
ãmpLí
 = 
§cLí
 -1;

667 
buf„r
 = (*)
	`mÆloc
(
ãmpLí
+1);

668 
	`mem£t
(
buf„r
, 0, 
ãmpLí
+1);

669 
decodeLí
 = 
	`ˇlcDecodeLígth
(
ãmp
);

670 
°ªam
 = 
	`fmem›í
(
ãmp
, 
ãmpLí
, "r");

672 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

673 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

674 
bio
 = 
	`BIO_push
(
b64
, bio);

675 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

676 
Àn
 = 
	`BIO_ªad
(
bio
, 
buf„r
, 
ãmpLí
);

677 i‡(
Àn
 !
decodeLí
) {

680 
buf„r
[
Àn
] = '\0';

682 
	`BIO_‰ì_Æl
(
bio
);

683 
	`f˛o£
(
°ªam
);

686 
	`¥ötf
(" de¸y±:====%†Àn=%d\n", 
buf„r
, 
	`°æí
(buffer));

687 
	`waf_de¸y±
(
LOVEKEY
, 
buf„r
, 
	`°æí
(buf„r), 
d°
);

691 
BIO
 *
bio
, *
b64
;

692 
Àn
 = 0, 
decodeLí
 = 0, 
ãmpLí
=0;

693 
FILE
 *
°ªam
 = 
NULL
;

694 *
buf„r
 = 
NULL
, *
ãmp
 = NULL;

696 i‡(!
§c
 || !
d°
) {

700 i‡(
§c
[0] !
ba£64Fœg
) {

703 
ãmp
 = &
§c
[1];

704 
ãmpLí
 = 
§cLí
 -1;

707 
buf„r
 = (*)
	`mÆloc
(
ãmpLí
+1);

708 
	`mem£t
(
buf„r
, 0, 
ãmpLí
+1);

709 
decodeLí
 = 
	`ˇlcDecodeLígth
(
ãmp
);

710 
°ªam
 = 
	`fmem›í
(
ãmp
, 
ãmpLí
, "r");

712 
b64
 = 
	`BIO_√w
(
	`BIO_f_ba£64
());

713 
bio
 = 
	`BIO_√w_Â
(
°ªam
, 
BIO_NOCLOSE
);

714 
bio
 = 
	`BIO_push
(
b64
, bio);

715 
	`BIO_£t_Êags
(
bio
, 
BIO_FLAGS_BASE64_NO_NL
);

716 
Àn
 = 
	`BIO_ªad
(
bio
, 
buf„r
, 
ãmpLí
);

717 i‡(
Àn
 !
decodeLí
) {

720 
buf„r
[
Àn
] = '\0';

722 
	`BIO_‰ì_Æl
(
bio
);

723 
	`f˛o£
(
°ªam
);

726 
	`waf_de¸y±
(
LOVEKEY
, 
buf„r
, 
	`°æí
(buf„r), 
d°
);

730 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt.h

4 #i‚de‡
_SYMMETRY_CRYPT_H


5 
	#_SYMMETRY_CRYPT_H
 1

	)

7 
waf_í¸y±_ba£64_1
(*
§c
, 
§cLí
, *
d°
);

9 
waf_de¸y±_ba£64_1
(*
§c
, 
§cLí
, *
d°
);

11 
waf_í¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
);

12 
waf_de¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
);

	@/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt_simple.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<°rög.h
>

7 
	~"symmëry_¸y±_sim∂e.h
"

9 
	tuch¨
;

11 
	#Nb
 4

12 
	#Nk
 4

13 
	#Nr
 10

14 

	)

15 c⁄° 
	gTabÀ_CRC
[] = {

16 0x00000000, 0x04C11DB7, 0x09
job23B6E
, 0x0D4326D9, 0x130476DC, 0x17C56B6B, 0x1A
job64DB2
, 0x1E475005,

17 0x260
jobEDBjob
, 0x22C9F00F, 0x2F
jobAD6D6
, 0x2B4BCB61, 0x350C9B64, 0x31CD
job6D3
, 0x3C
jobEA00A
, 0x3
job4FBDBD
,

18 0x4C11DB70, 0x4
jobD0C6C7
, 0x4593E01E, 0x4152FDA9, 0x5F15ADAC, 0x5BD4B01B, 0x569796C2, 0x5256
jobB75
,

19 0x6A1936C
job
, 0x6ED
job2B7F
, 0x639B0DA6, 0x675A1011, 0x791D4014, 0x7DDC5DA3, 0x709F7B7A, 0x745E66CD,

20 0x9
job23B6E0
, 0x9CE2AB57, 0x91A1
jobDjobE
, 0x95609039, 0x
jobB27C03C
, 0x
jobFE6DDjobB
, 0x
job2A5FB52
, 0x
job664E6E5
,

21 0xBE2B5B5
job
, 0xBAEA46EF, 0xB7A96036, 0xB36
job7Djob1
, 0xAD2F2D
job4
, 0xA9EE3033, 0xA4AD16EA, 0xA06C0B5D,

23 0xF23A
job02job
, 0xF6FB9D9F, 0xFBB
jobBB46
, 0xFF79A6F1, 0xE13EF6F4, 0xE5FFEB43, 0xE
jobBCCD9A
, 0xEC7DD02D,

24 0x34
job67077
, 0x30476DC0, 0x3D044B19, 0x39C556AE, 0x27
job206AB
, 0x23431B1C, 0x2E003DC5, 0x2AC12072,

25 0x12
jobE9DCF
, 0x164F
job07job
, 0x1B0CA6A1, 0x1FCDBB16, 0x01
jobAEB13
, 0x054BF6A4, 0x0
job0jobD07D
, 0x0CC9CDCA,

26 0x7
job97AB07
, 0x7C56B6B0, 0x71159069, 0x75D4
jobDDE
, 0x6B93DDDB, 0x6F52C06C, 0x6211E6B5, 0x66D0FB02,

27 0x5E9F46BF, 0x5A5E5B0
job
, 0x571D7DD1, 0x53DC6066, 0x4D9B3063, 0x495A2DD4, 0x44190B0D, 0x40D
job16BA
,

28 0xACA5C697, 0xA
job64DB20
, 0xA527FDF9, 0xA1E6E04E, 0xBFA1B04B, 0xBB60ADFC, 0xB623
jobB25
, 0xB2E29692,

29 0x
jobAAD2B2F
, 0x
jobE6C369job
, 0x
job32F1041
, 0x
job7EE0DF6
, 0x99A95DF3, 0x9D6
job4044
, 0x902B669D, 0x94EA7B2A,

30 0xE0B41DE7, 0xE4750050, 0xE93626
job9
, 0xEDF73B3E, 0xF3B06B3B, 0xF77176
jobC
, 0xFA325055, 0xFEF34DE2,

31 0xC6BCF05F, 0xC27DEDE
job
, 0xCF3ECB31, 0xCBFFD6
job6
, 0xD5B
jobjob6job3
, 0xD1799B34, 0xDC3ABDED, 0xD
jobFBA05A
,

32 0x690CE0EE, 0x6DCDFD59, 0x60
jobEDBjob0
, 0x644FC637, 0x7A0
job9632
, 0x7EC9
jobBjob5
, 0x73
jobAAD5C
, 0x774BB0EB,

33 0x4F040D56, 0x4BC510E1, 0x46
job6363job
, 0x42472B
jobF
, 0x5C007B
jobA
, 0x5
jobC1663D
, 0x55
job240E4
, 0x51435D53,

34 0x251D3B9E, 0x21DC2629, 0x2C9F00F0, 0x2
job5E1D47
, 0x36194D42, 0x32D
job50F5
, 0x3F9B762C, 0x3B5A6B9B,

35 0x0315D626, 0x07D4CB91, 0x0A97ED4
job
, 0x0E56F0FF, 0x1011A0FA, 0x14D0BD4D, 0x19939B94, 0x1D52
job623
,

36 0xF12F560E, 0xF5EE4BB9, 0xF
jobAD6D60
, 0xFC6C70D7, 0xE22B20D2, 0xE6EA3D65, 0xEBA91BBC, 0xEF6
job060B
,

37 0xD727BBB6, 0xD3E6A601, 0xDEA5
job0Djob
, 0xDA649D6F, 0xC423CD6A, 0xC0E2D0DD, 0xCDA1F604, 0xC960EBB3,

38 0xBD3E
jobD7E
, 0xB9FF90C9, 0xB4BCB610, 0xB07DABA7, 0xAE3AFBA2, 0xAAFBE615, 0xA7B
jobC0CC
, 0xA379DD7B,

39 0x9B3660C6, 0x9FF77D71, 0x92B45BA
job
, 0x9675461F, 0x
jobjob32161A
, 0x
jobCF30BAD
, 0x
job1B02D74
, 0x
job57130C3
,

40 0x5D
jobA9099
, 0x594B
jobD2E
, 0x540
jobABF7
, 0x50C9B640, 0x4E
jobEE645
, 0x4A4FFBF2, 0x470CDD2B, 0x43CDC09C,

41 0x7B
job27D21
, 0x7F436096, 0x7200464F, 0x76C15BF
job
, 0x6
jobjob60BFD
, 0x6C47164A, 0x61043093, 0x65C52D24,

42 0x119B4BE9, 0x155A565E, 0x1
job1970job7
, 0x1CD
job6D30
, 0x029F3D35, 0x065E20
job2
, 0x0B1D065B, 0x0FDC1BEC,

43 0x3793A651, 0x3352BBE6, 0x3E119D3F, 0x3AD0
job0jobjob
, 0x2497D0
jobD
, 0x2056CD3A, 0x2D15EBE3, 0x29D4F654,

44 0xC5A92679, 0xC16
job3BCE
, 0xCC2B1D17, 0xC
jobEA00A0
, 0xD6AD50A5, 0xD26C4D12, 0xDF2F6BCB, 0xDBEE767C,

45 0xE3A1CBC1, 0xE760D676, 0xEA23F0AF, 0xEEE2ED1
job
, 0xF0A5BD1D, 0xF464A0AA, 0xF927
job673
, 0xFDE69BC4,

46 0x
job9BjobFD09
, 0x
jobD79E0BE
, 0x
job03AC667
, 0x
job4FBDBD0
, 0x9ABC
jobBD5
, 0x9E7D9662, 0x933EB0BB, 0x97FFAD0C,

47 0xAFB010B1, 0xAB710D06, 0xA6322BDF, 0xA2F3366
job
, 0xBCB4666D, 0xB
job757BDA
, 0xB5365D03, 0xB1F740B4

50 
uch¨
 
	gSbox
[256] = {

52 0xˇ, 0x
job2
, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,

53 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd
job
, 0x31, 0x15,

54 0x04, 0xc7, 0x23, 0xc3, 0x1
job
, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x
job0
, 0xe2, 0xeb, 0x27, 0xb2, 0x75,

55 0x09, 0x
job3
, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x
job4
,

56 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x5
job
, 0xcf,

57 0xd0, 0xef, 0xØ, 0xfb, 0x43, 0x4d, 0x33, 0x
job5
, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa
job
,

58 0x51, 0xa3, 0x40, 0x
jobf
, 0x92, 0x9d, 0x3
job
, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,

60 0x60, 0x
job1
, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x
jobjob
, 0x46, 0xì, 0xb
job
, 0x14, 0xde, 0x5e, 0x0b, 0xdb,

62 0xe7, 0xc
job
, 0x37, 0x6d, 0x
jobd
, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x0job,

63 0xba, 0x7
job
, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xejob, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x
jobb
, 0x
joba
,

64 0x70, 0x3e, 0xb5, 0x66, 0x4
job
, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x
job6
, 0xc1, 0x1d, 0x9e,

65 0xe1, 0xf
job
, 0x9job, 0x11, 0x69, 0xd9, 0x
jobe
, 0x94, 0x9b, 0x1e, 0x
job7
, 0xe9, 0xce, 0x55, 0x2job, 0xdf,

66 0x
jobc
, 0xa1, 0x
job9
, 0x0d, 0xbf, 0xe6, 0x42, 0x6
job
, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};

68 
uch¨
 
	gInvSbox
[256] = {

69 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x3
job
, 0xbf, 0x40, 0xa3, 0x9e, 0x
job1
, 0xf3, 0xd7, 0xfb,

70 0x7c, 0xe3, 0x39, 0x
job2
, 0x9b, 0x2f, 0xff, 0x
job7
, 0x34, 0x
jobe
, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,

72 0x0
job
, 0x2e, 0xa1, 0x66, 0x2job, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x
jobb
, 0xd1, 0x25,

73 0x72, 0xf
job
, 0xf6, 0x64, 0x
job6
, 0x6job, 0x9job, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,

74 0x6c, 0x70, 0x4
job
, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x
jobd
, 0x9d, 0x
job4
,

75 0x90, 0xd
job
, 0xab, 0x00, 0x
jobc
, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x5job, 0x05, 0xbjob, 0xb3, 0x45, 0x06,

76 0xd0, 0x2c, 0x1e, 0x
jobf
, 0xˇ, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x
joba
, 0x6b,

78 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x
job5
, 0xe2, 0xf9, 0x37, 0xe
job
, 0x1c, 0x75, 0xdf, 0x6e,

79 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x
job9
, 0x6f, 0xb7, 0x62, 0x0e, 0xØ, 0x1
job
, 0xbe, 0x1b,

80 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0x„, 0x7
job
, 0xcd, 0x5a, 0xf4,

81 0x1f, 0xdd, 0xa
job
, 0x33, 0x
jobjob
, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x
job0
, 0xec, 0x5f,

83 0xa0, 0xe0, 0x3b, 0x4d, 0x´, 0x2a, 0xf5, 0xb0, 0xc
job
, 0xeb, 0xbb, 0x3c, 0x
job3
, 0x53, 0x99, 0x61,

87 
uch¨
 
	gXtime2Sbox
[256] = {

88 0xc6, 0xf
job
, 0xee, 0xf6, 0xff, 0xd6, 0xde, 0x91, 0x60, 0x02, 0xce, 0x56, 0xe7, 0xb5, 0x4d, 0xec,

89 0x
jobf
, 0x1f, 0x
job9
, 0xÁ, 0xef, 0xb2, 0x
jobe
, 0xfb, 0x41, 0xb3, 0x5f, 0x45, 0x23, 0x53, 0xe4, 0x9b,

90 0x75, 0xe1, 0x3d, 0x4c, 0x6c, 0x7e, 0xf5, 0x
job3
, 0x6
job
, 0x51, 0xd1, 0xf9, 0xe2, 0xab, 0x62, 0x2a,

91 0x0
job
, 0x95, 0x46, 0x9d, 0x30, 0x37, 0x0a, 0x2f, 0x0e, 0x24, 0x1b, 0xdf, 0xcd, 0x4e, 0x7f, 0xea,

92 0x12, 0x1d, 0x5
job
, 0x34, 0x36, 0xdc, 0xb4, 0x5b, 0xa4, 0x76, 0xb7, 0x7d, 0x52, 0xdd, 0x5e, 0x13,

93 0xa6, 0xb9, 0x00, 0xc1, 0x40, 0xe3, 0x79, 0xb6, 0xd4, 0x
jobd
, 0x67, 0x72, 0x94, 0x9
job
, 0xb0, 0x
job5
,

94 0xbb, 0xc5, 0x4f, 0xed, 0x
job6
, 0x9a, 0x66, 0x11, 0x
joba
, 0xe9, 0x04, 0x„, 0xa0, 0x7
job
, 0x25, 0x4b,

95 0xa2, 0x5d, 0x
job0
, 0x05, 0x3f, 0x21, 0x70, 0xf1, 0x63, 0x77, 0xaf, 0x42, 0x20, 0xe5, 0xfd, 0xbf,

96 0x
job1
, 0x1
job
, 0x26, 0xc3, 0xbe, 0x35, 0x
jobjob
, 0x2e, 0x93, 0x55, 0xfc, 0x7a, 0xcjob, 0xba, 0x32, 0xe6,

97 0xc0, 0x19, 0x9e, 0xa3, 0x44, 0x54, 0x3b, 0x0b, 0x
jobc
, 0xc7, 0x6b, 0x2
job
, 0xa7, 0xbc, 0x16, 0xad,

98 0xdb, 0x64, 0x74, 0x14, 0x92, 0x0c, 0x4
job
, 0xbjob, 0x9f, 0xbd, 0x43, 0xc4, 0x39, 0x31, 0xd3, 0xf2,

99 0xd5, 0x
jobb
, 0x6e, 0xda, 0x01, 0xb1, 0x9c, 0x49, 0xd
job
, 0xac, 0xf3, 0xcf, 0xca, 0xf4, 0x47, 0x10,

100 0x6f, 0xf0, 0x4a, 0x5c, 0x3
job
, 0x57, 0x73, 0x97, 0xcb, 0xa1, 0xejob, 0x3e, 0x96, 0x61, 0x0d, 0x0f,

102 0xd9, 0xeb, 0x2b, 0x22, 0xd2, 0xa9, 0x07, 0x33, 0x2d, 0x3c, 0x15, 0xc9, 0x
job7
, 0xaa, 0x50, 0xa5,

103 0x03, 0x59, 0x09, 0x1a, 0x65, 0xd7, 0x
job4
, 0xd0, 0x
job2
, 0x29, 0x5a, 0x1e, 0x7b, 0xa
job
, 0x6d, 0x2c

107 
uch¨
 
	gXtime3Sbox
[256] = {

108 0xa5, 0x
job4
, 0x99, 0x
jobd
, 0x0d, 0xbd, 0xb1, 0x54, 0x50, 0x03, 0xa9, 0x7d, 0x19, 0x62, 0xe6, 0x9a,

109 0x45, 0x9d, 0x40, 0x
job7
, 0x15, 0xeb, 0xc9, 0x0b, 0xec, 0x67, 0xfd, 0xea, 0xbf, 0xf7, 0x96, 0x5b,

110 0xc2, 0x1c, 0x´, 0x6a, 0x5a, 0x41, 0x02, 0x4f, 0x5c, 0xf4, 0x34, 0x0
job
, 0x93, 0x73, 0x53, 0x3f,

111 0x0c, 0x52, 0x65, 0x5e, 0x2
job
, 0xa1, 0x0f, 0xb5, 0x09, 0x36, 0x9b, 0x3d, 0x26, 0x69, 0xcd, 0x9f,

113 0xf5, 0x6
job
, 0x00, 0x2c, 0x60, 0x1f, 0xcjob, 0xed, 0xbe, 0x46, 0xd9, 0x4b, 0xde, 0xd4, 0xejob, 0x4a,

114 0x6b, 0x2a, 0xe5, 0x16, 0xc5, 0xd7, 0x55, 0x94, 0xcf, 0x10, 0x06, 0x
job1
, 0xf0, 0x44, 0xba, 0xe3,

115 0xf3, 0x„, 0xc0, 0x
joba
, 0xad, 0xbc, 0x4
job
, 0x04, 0xdf, 0xc1, 0x75, 0x63, 0x30, 0x1a, 0x0e, 0x6d,

116 0x4c, 0x14, 0x35, 0x2f, 0xe1, 0xa2, 0xcc, 0x39, 0x57, 0xf2, 0x
job2
, 0x47, 0xac, 0xe7, 0x2b, 0x95,

117 0xa0, 0x9
job
, 0xd1, 0x7f, 0x66, 0x7e, 0xab, 0x
job3
, 0xca, 0x29, 0xd3, 0x3c, 0x79, 0xe2, 0x1d, 0x76,

118 0x3b, 0x56, 0x4e, 0x1e, 0xdb, 0x0a, 0x6c, 0xe4, 0x5d, 0x6e, 0xef, 0xa6, 0xa
job
, 0xa4, 0x37, 0x
jobb
,

119 0x32, 0x43, 0x59, 0xb7, 0x
jobc
, 0x64, 0xd2, 0xe0, 0xb4, 0xÁ, 0x07, 0x25, 0xaf, 0x
jobe
, 0xe9, 0x1
job
,

120 0xd5, 0x
jobjob
, 0x6f, 0x72, 0x24, 0xf1, 0xc7, 0x51, 0x23, 0x7c, 0x9c, 0x21, 0xdd, 0xdc, 0x
job6
, 0x
job5
,

121 0x90, 0x42, 0xc4, 0xØ, 0xd
job
, 0x05, 0x01, 0x12, 0xa3, 0x5f, 0xf9, 0xd0, 0x91, 0x5job, 0x27, 0xb9,

122 0x3
job
, 0x13, 0xb3, 0x33, 0xbb, 0x70, 0x
job9
, 0xa7, 0xb6, 0x22, 0x92, 0x20, 0x49, 0xff, 0x7job, 0x7a,

123 0x
jobf
, 0xf
job
, 0x
job0
, 0x17, 0xda, 0x31, 0xc6, 0xbjob, 0xc3, 0xb0, 0x77, 0x11, 0xcb, 0xfc, 0xd6, 0x3a

133 
__©åibuã__
((
__unu£d__
))

134 
uch¨
 
	gXtime2
[256] = {

135 0x00, 0x02, 0x04, 0x06, 0x0
job
, 0x0a, 0x0c, 0x0e, 0x10, 0x12, 0x14, 0x16, 0x1job, 0x1a, 0x1c, 0x1e,

136 0x20, 0x22, 0x24, 0x26, 0x2
job
, 0x2a, 0x2c, 0x2e, 0x30, 0x32, 0x34, 0x36, 0x3job, 0x3a, 0x3c, 0x3e,

137 0x40, 0x42, 0x44, 0x46, 0x4
job
, 0x4a, 0x4c, 0x4e, 0x50, 0x52, 0x54, 0x56, 0x5job, 0x5a, 0x5c, 0x5e,

138 0x60, 0x62, 0x64, 0x66, 0x6
job
, 0x6a, 0x6c, 0x6e, 0x70, 0x72, 0x74, 0x76, 0x7job, 0x7a, 0x7c, 0x7e,

139 0x
job0
, 0x
job2
, 0x
job4
, 0x
job6
, 0x
jobjob
, 0x
joba
, 0x
jobc
, 0x
jobe
, 0x90, 0x92, 0x94, 0x96, 0x9
job
, 0x9a, 0x9c, 0x9e,

140 0xa0, 0xa2, 0xa4, 0xa6, 0xa
job
, 0xaa, 0xac, 0xae, 0xb0, 0xb2, 0xb4, 0xb6, 0xbjob, 0xba, 0xbc, 0xbe,

141 0xc0, 0xc2, 0xc4, 0xc6, 0xc
job
, 0xca, 0xcc, 0xce, 0xd0, 0xd2, 0xd4, 0xd6, 0xdjob, 0xda, 0xdc, 0xde,

142 0xe0, 0xe2, 0xe4, 0xe6, 0xe
job
, 0xea, 0xec, 0xee, 0xf0, 0xf2, 0xf4, 0xf6, 0xfjob, 0xfa, 0xfc, 0xfe,

147 0x9b, 0x99, 0x9f, 0x9d, 0x93, 0x91, 0x97, 0x95, 0x
jobb
, 0x
job9
, 0x
jobf
, 0x
jobd
, 0x
job3
, 0x
job1
, 0x
job7
, 0x
job5
,

152 
uch¨
 
	gXtime9
[256] = {

153 0x00, 0x09, 0x12, 0x1b, 0x24, 0x2d, 0x36, 0x3f, 0x4
job
, 0x41, 0x5a, 0x53, 0x6c, 0x65, 0x7e, 0x77,

154 0x90, 0x99, 0x
job2
, 0x
jobb
, 0xb4, 0xbd, 0xa6, 0xaf, 0xd
job
, 0xd1, 0xca, 0xc3, 0xfc, 0xf5, 0xee, 0xe7,

155 0x3b, 0x32, 0x29, 0x20, 0x1f, 0x16, 0x0d, 0x04, 0x73, 0x7a, 0x61, 0x6
job
, 0x57, 0x5e, 0x45, 0x4c,

156 0xab, 0xa2, 0xb9, 0xb0, 0x
jobf
, 0x
job6
, 0x9d, 0x94, 0xe3, 0xó, 0xf1, 0xf
job
, 0xc7, 0xce, 0xd5, 0xdc,

157 0x76, 0x7f, 0x64, 0x6d, 0x52, 0x5b, 0x40, 0x49, 0x3e, 0x37, 0x2c, 0x25, 0x1a, 0x13, 0x0
job
, 0x01,

158 0xe6, 0xef, 0xf4, 0xfd, 0xc2, 0xcb, 0xd0, 0xd9, 0x´, 0xa7, 0xbc, 0xb5, 0x
joba
, 0x
job3
, 0x9
job
, 0x91,

159 0x4d, 0x44, 0x5f, 0x56, 0x69, 0x60, 0x7b, 0x72, 0x05, 0x0c, 0x17, 0x1e, 0x21, 0x2
job
, 0x33, 0x3a,

160 0xdd, 0xd4, 0xcf, 0xc6, 0xf9, 0xf0, 0xeb, 0xe2, 0x95, 0x9c, 0x
job7
, 0x
jobe
, 0xb1, 0xb
job
, 0xa3, 0xaa,

161 0xec, 0xe5, 0x„, 0xf7, 0xc
job
, 0xc1, 0xda, 0xd3, 0xa4, 0xad, 0xb6, 0xbf, 0x
job0
, 0x
job9
, 0x92, 0x9b,

162 0x7c, 0x75, 0x6e, 0x67, 0x5
job
, 0x51, 0x4a, 0x43, 0x34, 0x3d, 0x26, 0x2f, 0x10, 0x19, 0x02, 0x0b,

163 0xd7, 0xde, 0xc5, 0xcc, 0xf3, 0xÁ, 0xe1, 0xe
job
, 0x9f, 0x96, 0x
jobd
, 0x
job4
, 0xbb, 0xb2, 0xa9, 0xa0,

164 0x47, 0x4e, 0x55, 0x5c, 0x63, 0x6a, 0x71, 0x7
job
, 0x0f, 0x06, 0x1d, 0x14, 0x2b, 0x22, 0x39, 0x30,

165 0x9a, 0x93, 0x
jobjob
, 0x
job1
, 0xbe, 0xb7, 0xac, 0xa5, 0xd2, 0xdb, 0xc0, 0xc9, 0xf6, 0xff, 0xe4, 0xed,

166 0x0a, 0x03, 0x1
job
, 0x11, 0x2e, 0x27, 0x3c, 0x35, 0x42, 0x4b, 0x50, 0x59, 0x66, 0x6f, 0x74, 0x7d,

167 0xa1, 0xa
job
, 0xb3, 0xba, 0x
job5
, 0x
jobc
, 0x97, 0x9e, 0xe9, 0xe0, 0xfb, 0xf2, 0xcd, 0xc4, 0xdf, 0xd6,

168 0x31, 0x3
job
, 0x23, 0x2a, 0x15, 0x1c, 0x07, 0x0e, 0x79, 0x70, 0x6b, 0x62, 0x5d, 0x54, 0x4f, 0x46};

170 
uch¨
 
	gXtimeB
[256] = {

171 0x00, 0x0b, 0x16, 0x1d, 0x2c, 0x27, 0x3a, 0x31, 0x5
job
, 0x53, 0x4e, 0x45, 0x74, 0x7f, 0x62, 0x69,

172 0xb0, 0xbb, 0xa6, 0xad, 0x9c, 0x97, 0x
joba
, 0x
job1
, 0xe
job
, 0xe3, 0xfe, 0xf5, 0xc4, 0xcf, 0xd2, 0xd9,

173 0x7b, 0x70, 0x6d, 0x66, 0x57, 0x5c, 0x41, 0x4a, 0x23, 0x2
job
, 0x35, 0x3e, 0x0f, 0x04, 0x19, 0x12,

174 0xcb, 0xc0, 0xdd, 0xd6, 0xe7, 0xec, 0xf1, 0xÁ, 0x93, 0x9
job
, 0x
job5
, 0x
jobe
, 0xbf, 0xb4, 0xa9, 0xa2,

175 0xf6, 0xfd, 0xe0, 0xeb, 0xda, 0xd1, 0xcc, 0xc7, 0x´, 0xa5, 0xb
job
, 0xb3, 0x
job2
, 0x
job9
, 0x94, 0x9f,

176 0x46, 0x4d, 0x50, 0x5b, 0x6a, 0x61, 0x7c, 0x77, 0x1e, 0x15, 0x0
job
, 0x03, 0x32, 0x39, 0x24, 0x2f,

177 0x
jobd
, 0x
job6
, 0x9b, 0x90, 0xa1, 0xØ, 0xb7, 0xbc, 0xd5, 0xde, 0xc3, 0xc
job
, 0xf9, 0xf2, 0xef, 0xe4,

178 0x3d, 0x36, 0x2b, 0x20, 0x11, 0x1a, 0x07, 0x0c, 0x65, 0x6e, 0x73, 0x7
job
, 0x49, 0x42, 0x5f, 0x54,

179 0xf7, 0xfc, 0xe1, 0xó, 0xdb, 0xd0, 0xcd, 0xc6, 0xaf, 0xa4, 0xb9, 0xb2, 0x
job3
, 0x
jobjob
, 0x95, 0x9e,

180 0x47, 0x4c, 0x51, 0x5a, 0x6b, 0x60, 0x7d, 0x76, 0x1f, 0x14, 0x09, 0x02, 0x33, 0x3
job
, 0x25, 0x2e,

181 0x
jobc
, 0x
job7
, 0x9a, 0x91, 0xa0, 0xab, 0xb6, 0xbd, 0xd4, 0xdf, 0xc2, 0xc9, 0xf
job
, 0xf3, 0xee, 0xe5,

182 0x3c, 0x37, 0x2a, 0x21, 0x10, 0x1b, 0x06, 0x0d, 0x64, 0x6f, 0x72, 0x79, 0x4
job
, 0x43, 0x5e, 0x55,

183 0x01, 0x0a, 0x17, 0x1c, 0x2d, 0x26, 0x3b, 0x30, 0x59, 0x52, 0x4f, 0x44, 0x75, 0x7e, 0x63, 0x6
job
,

184 0xb1, 0xba, 0xa7, 0xac, 0x9d, 0x96, 0x
jobb
, 0x
job0
, 0xe9, 0xe2, 0xff, 0xf4, 0xc5, 0x˚, 0xd3, 0xd
job
,

185 0x7a, 0x71, 0x6c, 0x67, 0x56, 0x5d, 0x40, 0x4b, 0x22, 0x29, 0x34, 0x3f, 0x0e, 0x05, 0x1
job
, 0x13,

186 0xˇ, 0xc1, 0xdc, 0xd7, 0xe6, 0xed, 0xf0, 0xfb, 0x92, 0x99, 0x
job4
, 0x
jobf
, 0xbe, 0xb5, 0xa
job
, 0xa3};

188 
uch¨
 
	gXtimeD
[256] = {

189 0x00, 0x0d, 0x1a, 0x17, 0x34, 0x39, 0x2e, 0x23, 0x6
job
, 0x65, 0x72, 0x7f, 0x5c, 0x51, 0x46, 0x4b,

190 0xd0, 0xdd, 0xˇ, 0xc7, 0xe4, 0xe9, 0x„, 0xf3, 0xb
job
, 0xb5, 0xa2, 0xaf, 0x
jobc
, 0x
job1
, 0x96, 0x9b,

191 0xbb, 0xb6, 0xa1, 0xac, 0x
jobf
, 0x
job2
, 0x95, 0x9
job
, 0xd3, 0xde, 0xc9, 0xc4, 0xe7, 0xea, 0xfd, 0xf0,

192 0x6b, 0x66, 0x71, 0x7c, 0x5f, 0x52, 0x45, 0x4
job
, 0x03, 0x0e, 0x19, 0x14, 0x37, 0x3a, 0x2d, 0x20,

193 0x6d, 0x60, 0x77, 0x7a, 0x59, 0x54, 0x43, 0x4e, 0x05, 0x0
job
, 0x1f, 0x12, 0x31, 0x3c, 0x2b, 0x26,

194 0xbd, 0xb0, 0xa7, 0xØ, 0x
job9
, 0x
job4
, 0x93, 0x9e, 0xd5, 0xd
job
, 0xcf, 0xc2, 0xe1, 0xec, 0xfb, 0xf6,

195 0xd6, 0xdb, 0xcc, 0xc1, 0xe2, 0xef, 0xf
job
, 0xf5, 0xbe, 0xb3, 0xa4, 0xa9, 0x
joba
, 0x
job7
, 0x90, 0x9d,

196 0x06, 0x0b, 0x1c, 0x11, 0x32, 0x3f, 0x2
job
, 0x25, 0x6e, 0x63, 0x74, 0x79, 0x5a, 0x57, 0x40, 0x4d,

197 0xda, 0xd7, 0xc0, 0xcd, 0xì, 0xe3, 0xf4, 0xf9, 0xb2, 0xbf, 0xa
job
, 0xa5, 0x
job6
, 0x
jobb
, 0x9c, 0x91,

198 0x0a, 0x07, 0x10, 0x1d, 0x3e, 0x33, 0x24, 0x29, 0x62, 0x6f, 0x7
job
, 0x75, 0x56, 0x5b, 0x4c, 0x41,

199 0x61, 0x6c, 0x7b, 0x76, 0x55, 0x5
job
, 0x4f, 0x42, 0x09, 0x04, 0x13, 0x1e, 0x3d, 0x30, 0x27, 0x2a,

200 0xb1, 0xbc, 0xab, 0xa6, 0x
job5
, 0x
jobjob
, 0x9f, 0x92, 0xd9, 0xd4, 0xc3, 0xce, 0xed, 0xe0, 0xf7, 0xfa,

201 0xb7, 0xba, 0xad, 0xa0, 0x
job3
, 0x
jobe
, 0x99, 0x94, 0xdf, 0xd2, 0xc5, 0xc
job
, 0xeb, 0xe6, 0xf1, 0xfc,

202 0x67, 0x6a, 0x7d, 0x70, 0x53, 0x5e, 0x49, 0x44, 0x0f, 0x02, 0x15, 0x1
job
, 0x3b, 0x36, 0x21, 0x2c,

203 0x0c, 0x01, 0x16, 0x1b, 0x3
job
, 0x35, 0x22, 0x2f, 0x64, 0x69, 0x7e, 0x73, 0x50, 0x5d, 0x4a, 0x47,

204 0xdc, 0xd1, 0xc6, 0xcb, 0xe
job
, 0xe5, 0xf2, 0xff, 0xb4, 0xb9, 0x´, 0xa3, 0x
job0
, 0x
jobd
, 0x9a, 0x97};

206 
uch¨
 
	gXtimeE
[256] = {

207 0x00, 0x0e, 0x1c, 0x12, 0x3
job
, 0x36, 0x24, 0x2a, 0x70, 0x7e, 0x6c, 0x62, 0x4job, 0x46, 0x54, 0x5a,

208 0xe0, 0xì, 0xfc, 0xf2, 0xd
job
, 0xd6, 0xc4, 0xˇ, 0x90, 0x9e, 0x
jobc
, 0x
job2
, 0xajob, 0xa6, 0xb4, 0xba,

209 0xdb, 0xd5, 0xc7, 0xc9, 0xe3, 0xed, 0xff, 0xf1, 0xab, 0xa5, 0xb7, 0xb9, 0x93, 0x9d, 0x
jobf
, 0x
job1
,

211 0xad, 0xa3, 0xb1, 0xbf, 0x95, 0x9b, 0x
job9
, 0x
job7
, 0xdd, 0xd3, 0xc1, 0xcf, 0xe5, 0xeb, 0xf9, 0xf7,

213 0x76, 0x7
job
, 0x6a, 0x64, 0x4e, 0x40, 0x52, 0x5c, 0x06, 0x0job, 0x1a, 0x14, 0x3e, 0x30, 0x22, 0x2c,

214 0x96, 0x9
job
, 0x
joba
, 0x
job4
, 0xae, 0xa0, 0xb2, 0xbc, 0xe6, 0xejob, 0xfa, 0xf4, 0xde, 0xd0, 0xc2, 0xcc,

216 0xa1, 0xaf, 0xbd, 0xb3, 0x99, 0x97, 0x
job5
, 0x
jobb
, 0xd1, 0xdf, 0xcd, 0xc3, 0xe9, 0xe7, 0xf5, 0xfb,

217 0x9a, 0x94, 0x
job6
, 0x
jobjob
, 0xa2, 0xac, 0xbe, 0xb0, 0xó, 0xe4, 0xf6, 0xf
job
, 0xd2, 0xdc, 0xce, 0xc0,

218 0x7a, 0x74, 0x66, 0x6
job
, 0x42, 0x4c, 0x5e, 0x50, 0x0a, 0x04, 0x16, 0x1job, 0x32, 0x3c, 0x2e, 0x20,

219 0xec, 0xe2, 0xf0, 0x„, 0xd4, 0xda, 0xc
job
, 0xc6, 0x9c, 0x92, 0x
job0
, 0x
jobe
, 0xa4, 0xaa, 0xbjob, 0xb6,

220 0x0c, 0x02, 0x10, 0x1e, 0x34, 0x3a, 0x2
job
, 0x26, 0x7c, 0x72, 0x60, 0x6e, 0x44, 0x4a, 0x5job, 0x56,

222 0xd7, 0xd9, 0xcb, 0xc5, 0xef, 0xe1, 0xf3, 0xfd, 0xa7, 0xa9, 0xbb, 0xb5, 0x9f, 0x91, 0x
job3
, 0x
jobd
};

225 
uch¨
 
	gkey
[16] = {0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79};

227 
uch¨
 
	gRc⁄
[11] = {

228 0x00, 0x01, 0x02, 0x04, 0x0
job
, 0x10, 0x20, 0x40, 0x
job0
, 0x1b, 0x36};

233 
ölöe
 
	$Shi·Rows
 (
uch¨
 *
°©e
)

235 
uch¨
 
tmp
;

238 
°©e
[0] = 
Sbox
[state[0]], state[4] = Sbox[state[4]];

239 
°©e
[
job
] = 
Sbox
[state[job]], state[12] = Sbox[state[12]];

242 
tmp
 = 
Sbox
[
°©e
[1]], state[1] = Sbox[state[5]];

243 
°©e
[5] = 
Sbox
[°©e[9]], sèã[9] = Sbox[°©e[13]], sèã[13] = 
tmp
;

246 
tmp
 = 
Sbox
[
°©e
[2]], state[2] = Sbox[state[10]], state[10] =Åmp;

247 
tmp
 = 
Sbox
[
°©e
[6]], state[6] = Sbox[state[14]], state[14] =Åmp;

250 
tmp
 = 
Sbox
[
°©e
[15]], state[15] = Sbox[state[11]];

251 
°©e
[11] = 
Sbox
[°©e[7]], sèã[7] = Sbox[°©e[3]], sèã[3] = 
tmp
;

252 
	}
}

257 
ölöe
 
	$InvShi·Rows
 (
uch¨
 *
°©e
)

259 
uch¨
 
tmp
;

262 
°©e
[0] = 
InvSbox
[state[0]], state[4] = InvSbox[state[4]];

263 
°©e
[
job
] = 
InvSbox
[state[job]], state[12] = InvSbox[state[12]];

266 
tmp
 = 
InvSbox
[
°©e
[13]], state[13] = InvSbox[state[9]];

267 
°©e
[9] = 
InvSbox
[°©e[5]], sèã[5] = InvSbox[°©e[1]], sèã[1] = 
tmp
;

270 
tmp
 = 
InvSbox
[
°©e
[2]], state[2] = InvSbox[state[10]], state[10] =Åmp;

271 
tmp
 = 
InvSbox
[
°©e
[6]], state[6] = InvSbox[state[14]], state[14] =Åmp;

274 
tmp
 = 
InvSbox
[
°©e
[3]], state[3] = InvSbox[state[7]];

275 
°©e
[7] = 
InvSbox
[°©e[11]], sèã[11] = InvSbox[°©e[15]], sèã[15] = 
tmp
;

276 
	}
}

279 
ölöe
 
	$MixSubCﬁumns
 (
uch¨
 *
°©e
)

281 
uch¨
 
√w°©e
[4 * 
Nb
];

284 
√w°©e
[0] = 
Xtime2Sbox
[
°©e
[0]] ^ 
Xtime3Sbox
[°©e[5]] ^ 
Sbox
[state[10]] ^ Sbox[state[15]];

285 
√w°©e
[1] = 
Sbox
[
°©e
[0]] ^ 
Xtime2Sbox
[°©e[5]] ^ 
Xtime3Sbox
[state[10]] ^ Sbox[state[15]];

286 
√w°©e
[2] = 
Sbox
[
°©e
[0]] ^ Sbox[°©e[5]] ^ 
Xtime2Sbox
[°©e[10]] ^ 
Xtime3Sbox
[state[15]];

287 
√w°©e
[3] = 
Xtime3Sbox
[
°©e
[0]] ^ 
Sbox
[°©e[5]] ^ Sbox[°©e[10]] ^ 
Xtime2Sbox
[state[15]];

290 
√w°©e
[4] = 
Xtime2Sbox
[
°©e
[4]] ^ 
Xtime3Sbox
[°©e[9]] ^ 
Sbox
[state[14]] ^ Sbox[state[3]];

291 
√w°©e
[5] = 
Sbox
[
°©e
[4]] ^ 
Xtime2Sbox
[°©e[9]] ^ 
Xtime3Sbox
[state[14]] ^ Sbox[state[3]];

292 
√w°©e
[6] = 
Sbox
[
°©e
[4]] ^ Sbox[°©e[9]] ^ 
Xtime2Sbox
[°©e[14]] ^ 
Xtime3Sbox
[state[3]];

293 
√w°©e
[7] = 
Xtime3Sbox
[
°©e
[4]] ^ 
Sbox
[°©e[9]] ^ Sbox[°©e[14]] ^ 
Xtime2Sbox
[state[3]];

296 
√w°©e
[
job
] = 
Xtime2Sbox
[
°©e
[job]] ^ 
Xtime3Sbox
[°©e[13]] ^ 
Sbox
[state[2]] ^ Sbox[state[7]];

297 
√w°©e
[9] = 
Sbox
[
°©e
[
job
]] ^ 
Xtime2Sbox
[°©e[13]] ^ 
Xtime3Sbox
[state[2]] ^ Sbox[state[7]];

298 
√w°©e
[10] = 
Sbox
[
°©e
[
job
]] ^ Sbox[°©e[13]] ^ 
Xtime2Sbox
[°©e[2]] ^ 
Xtime3Sbox
[state[7]];

299 
√w°©e
[11] = 
Xtime3Sbox
[
°©e
[
job
]] ^ 
Sbox
[°©e[13]] ^ Sbox[°©e[2]] ^ 
Xtime2Sbox
[state[7]];

302 
√w°©e
[12] = 
Xtime2Sbox
[
°©e
[12]] ^ 
Xtime3Sbox
[°©e[1]] ^ 
Sbox
[state[6]] ^ Sbox[state[11]];

303 
√w°©e
[13] = 
Sbox
[
°©e
[12]] ^ 
Xtime2Sbox
[°©e[1]] ^ 
Xtime3Sbox
[state[6]] ^ Sbox[state[11]];

304 
√w°©e
[14] = 
Sbox
[
°©e
[12]] ^ Sbox[°©e[1]] ^ 
Xtime2Sbox
[°©e[6]] ^ 
Xtime3Sbox
[state[11]];

305 
√w°©e
[15] = 
Xtime3Sbox
[
°©e
[12]] ^ 
Sbox
[°©e[1]] ^ Sbox[°©e[6]] ^ 
Xtime2Sbox
[state[11]];

307 
	`mem˝y
 (
°©e
, 
√w°©e
, (newstate));

308 
	}
}

311 
ölöe
 
	$InvMixSubCﬁumns
 (
uch¨
 *
°©e
)

313 
uch¨
 
√w°©e
[4 * 
Nb
];

314 
i
;

317 
√w°©e
[0] = 
XtimeE
[
°©e
[0]] ^ 
XtimeB
[°©e[1]] ^ 
XtimeD
[°©e[2]] ^ 
Xtime9
[state[3]];

318 
√w°©e
[5] = 
Xtime9
[
°©e
[0]] ^ 
XtimeE
[°©e[1]] ^ 
XtimeB
[°©e[2]] ^ 
XtimeD
[state[3]];

319 
√w°©e
[10] = 
XtimeD
[
°©e
[0]] ^ 
Xtime9
[°©e[1]] ^ 
XtimeE
[°©e[2]] ^ 
XtimeB
[state[3]];

320 
√w°©e
[15] = 
XtimeB
[
°©e
[0]] ^ 
XtimeD
[°©e[1]] ^ 
Xtime9
[°©e[2]] ^ 
XtimeE
[state[3]];

323 
√w°©e
[4] = 
XtimeE
[
°©e
[4]] ^ 
XtimeB
[°©e[5]] ^ 
XtimeD
[°©e[6]] ^ 
Xtime9
[state[7]];

324 
√w°©e
[9] = 
Xtime9
[
°©e
[4]] ^ 
XtimeE
[°©e[5]] ^ 
XtimeB
[°©e[6]] ^ 
XtimeD
[state[7]];

325 
√w°©e
[14] = 
XtimeD
[
°©e
[4]] ^ 
Xtime9
[°©e[5]] ^ 
XtimeE
[°©e[6]] ^ 
XtimeB
[state[7]];

326 
√w°©e
[3] = 
XtimeB
[
°©e
[4]] ^ 
XtimeD
[°©e[5]] ^ 
Xtime9
[°©e[6]] ^ 
XtimeE
[state[7]];

329 
√w°©e
[
job
] = 
XtimeE
[
°©e
[job]] ^ 
XtimeB
[°©e[9]] ^ 
XtimeD
[°©e[10]] ^ 
Xtime9
[state[11]];

330 
√w°©e
[13] = 
Xtime9
[
°©e
[
job
]] ^ 
XtimeE
[°©e[9]] ^ 
XtimeB
[°©e[10]] ^ 
XtimeD
[state[11]];

331 
√w°©e
[2] = 
XtimeD
[
°©e
[
job
]] ^ 
Xtime9
[°©e[9]] ^ 
XtimeE
[°©e[10]] ^ 
XtimeB
[state[11]];

332 
√w°©e
[7] = 
XtimeB
[
°©e
[
job
]] ^ 
XtimeD
[°©e[9]] ^ 
Xtime9
[°©e[10]] ^ 
XtimeE
[state[11]];

335 
√w°©e
[12] = 
XtimeE
[
°©e
[12]] ^ 
XtimeB
[°©e[13]] ^ 
XtimeD
[°©e[14]] ^ 
Xtime9
[state[15]];

336 
√w°©e
[1] = 
Xtime9
[
°©e
[12]] ^ 
XtimeE
[°©e[13]] ^ 
XtimeB
[°©e[14]] ^ 
XtimeD
[state[15]];

337 
√w°©e
[6] = 
XtimeD
[
°©e
[12]] ^ 
Xtime9
[°©e[13]] ^ 
XtimeE
[°©e[14]] ^ 
XtimeB
[state[15]];

338 
√w°©e
[11] = 
XtimeB
[
°©e
[12]] ^ 
XtimeD
[°©e[13]] ^ 
Xtime9
[°©e[14]] ^ 
XtimeE
[state[15]];

340  
i
=0; i < 4 * 
Nb
; i++ )

341 
°©e
[
i
] = 
InvSbox
[
√w°©e
[i]];

342 
	}
}

348 
ölöe
 
	$AddRoundKey
 (*
°©e
, *
key
)

350 
idx
;

352  
idx
 = 0; idx < 4; idx++ )

353 
°©e
[
idx
] ^
key
[idx];

354 
	}
}

357 
ölöe
 
	$Ex∑ndKey
 (
uch¨
 *
key
, uch¨ *
expkey
)

359 
uch¨
 
tmp0
, 
tmp1
, 
tmp2
, 
tmp3
, 
tmp4
;

360 
idx
;

362  
idx
 = 0; idx < 
Nk
; idx++ ) {

363 
expkey
[4*
idx
+0] = 
key
[4 * idx + 0];

364 
expkey
[4*
idx
+1] = 
key
[4 * idx + 1];

365 
expkey
[4*
idx
+2] = 
key
[4 * idx + 2];

366 
expkey
[4*
idx
+3] = 
key
[4 * idx + 3];

369  
idx
 = 
Nk
; idx < 
Nb
 * (
Nr
 + 1); idx++ ) {

370 
tmp0
 = 
expkey
[4*
idx
 - 4];

371 
tmp1
 = 
expkey
[4*
idx
 - 3];

372 
tmp2
 = 
expkey
[4*
idx
 - 2];

373 
tmp3
 = 
expkey
[4*
idx
 - 1];

374 if–!(
idx
 % 
Nk
) ) {

375 
tmp4
 = 
tmp3
;

376 
tmp3
 = 
Sbox
[
tmp0
];

377 
tmp0
 = 
Sbox
[
tmp1
] ^ 
Rc⁄
[
idx
/
Nk
];

378 
tmp1
 = 
Sbox
[
tmp2
];

379 
tmp2
 = 
Sbox
[
tmp4
];

384 
expkey
[4*
idx
+0] =Éxpkey[4*idx - 4*
Nk
 + 0] ^ 
tmp0
;

385 
expkey
[4*
idx
+1] =Éxpkey[4*idx - 4*
Nk
 + 1] ^ 
tmp1
;

386 
expkey
[4*
idx
+2] =Éxpkey[4*idx - 4*
Nk
 + 2] ^ 
tmp2
;

387 
expkey
[4*
idx
+3] =Éxpkey[4*idx - 4*
Nk
 + 3] ^ 
tmp3
;

389 
	}
}

392 
	$En¸y±
 (*
InText
, *
ExpKey
, *
OutText
)

394 
round
, 
idx
;

395 
Sèã
[
Nb
 * 4];

396  
idx
 = 0; idx < 
Nb
; idx++ ) {

397 
Sèã
[4*
idx
+0] = *
InText
++;

398 
Sèã
[4*
idx
+1] = *
InText
++;

399 
Sèã
[4*
idx
+2] = *
InText
++;

400 
Sèã
[4*
idx
+3] = *
InText
++;

402 
	`AddRoundKey
 ((*)
Sèã
, (*)
ExpKey
);

403  
round
 = 1;Ñound < 
Nr
 + 1;Ñound++ ) {

404 if–
round
 < 
Nr
 )

405 
	`MixSubCﬁumns
 (
Sèã
);

407 
	`Shi·Rows
 (
Sèã
);

408 
	`AddRoundKey
 ((*)
Sèã
, (*)
ExpKey
 + 
round
 * 
Nb
);

410  
idx
 = 0; idx < 
Nb
; idx++ ) {

411 *
OutText
++ = 
Sèã
[4*
idx
+0];

412 *
OutText
++ = 
Sèã
[4*
idx
+1];

413 *
OutText
++ = 
Sèã
[4*
idx
+2];

414 *
OutText
++ = 
Sèã
[4*
idx
+3];

416 
	}
}

418 
ölöe
 
	$De¸y±
 (
uch¨
 *
ö
, uch¨ *
expkey
, uch¨ *
out
)

420 
idx
, 
round
;

421 
uch¨
 
°©e
[
Nb
 * 4];

423  
idx
 = 0; idx < 
Nb
; idx++ ) {

424 
°©e
[4*
idx
+0] = *
ö
++;

425 
°©e
[4*
idx
+1] = *
ö
++;

426 
°©e
[4*
idx
+2] = *
ö
++;

427 
°©e
[4*
idx
+3] = *
ö
++;

430 
	`AddRoundKey
 ((*)
°©e
, (*)
expkey
 + 
Nr
 * 
Nb
);

431 
round
 = 
Nr
;

433 
	`InvShi·Rows
(
°©e
);

435  
round
-- ) {

436 
	`AddRoundKey
 ((*)
°©e
, (*)
expkey
 + 
round
 * 
Nb
);

437 if–
round
 )

438 
	`InvMixSubCﬁumns
 (
°©e
);

441  
idx
 = 0; idx < 
Nb
; idx++ ) {

442 *
out
++ = 
°©e
[4*
idx
+0];

443 *
out
++ = 
°©e
[4*
idx
+1];

444 *
out
++ = 
°©e
[4*
idx
+2];

445 *
out
++ = 
°©e
[4*
idx
+3];

447 
	}
}

450 
uch¨
 
	gö
[16] = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x
jobjob
, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};

452 
uch¨
 
	gout
[16];

455 
	$í¸y±_sim∂e
 (*
mykey
, *
§c
, 
¶í
, *
de°
)

457 
uch¨
 
expkey
[4 * 
Nb
 * (
Nr
 + 1)];

458 
idx
 = 0;

459 
s
 = 0, 
d
 = 0;

460 
À·
 = 0, 
§˛í
=
¶í
;

462 i‡(
mykey
) {

463 
	`°∫˝y
((*)
key
, 
mykey
, (key));

465 
	`Ex∑ndKey
 (
key
, 
expkey
);

467 
À·
 = 
¶í
%16;

468 
¶í
 -
À·
;

470 
¶í
--) {

471 
ö
[
idx
++] = 
§c
[
s
++];

472 if–
idx
 % 16 )

475 
	`En¸y±
 (
ö
, 
expkey
, 
out
);

477  
idx
 = 0; idx < 16; idx++ )

478 
de°
[
d
++] = 
out
[
idx
];

480 
idx
 = 0;

482 i‡(
À·
) {

483 
	`°rˇt
(
de°
, 
§c
+
§˛í
-
À·
);

516 
	}
}

519 
	$de¸y±_sim∂e
 (*
mykey
, *
§c
, 
¶í
, *
de°
)

521 
uch¨
 
expkey
[4 * 
Nb
 * (
Nr
 + 1)];

522 
idx
 = 0;

523 
s
 = 0, 
d
 = 0;

524 
À·
 = 0, 
§˛í
=
¶í
;

526 
À·
 = 
¶í
%16;

527 
¶í
 -
À·
;

529 i‡(
mykey
) {

530 
	`°∫˝y
 ((*)
key
, 
mykey
, (key));

533 
	`Ex∑ndKey
 (
key
, 
expkey
);

535 
¶í
--) {

536 
ö
[
idx
++] = 
§c
[
s
++];

537 if–
idx
 % 16 )

540 
	`De¸y±
 (
ö
, 
expkey
, 
out
);

542  
idx
 = 0; idx < 16; idx++ )

543 
de°
[
d
++] = 
out
[
idx
];

545 
idx
 = 0;

547 i‡(
À·
) {

548 
	`°rˇt
(
de°
, 
§c
+
§˛í
-
À·
);

550 
	}
}

	@/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt_simple.h

4 #i‚de‡
_SYMMETRY_CRYPT_SIMPLE_H


5 
	#_SYMMETRY_CRYPT_SIMPLE_H
 1

	)

7 
de¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
);

8 
í¸y±
 (*
mykey
, *
§c
, 
¶í
, *
de°
);

	@/root/grocery-shop/language/gcc/src/orphanProcess/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<uni°d.h
>

6 
	$maö
()

8 
pid_t
 
pid
;

10 
pid
 = 
	`f‹k
();

12 i‡(
pid
 < 0)

14 
	`≥º‹
("forkÉrror:");

15 
	`exô
(1);

18 i‡(
pid
 == 0)

20 
	`¥ötf
("Children:IámÅhe childÖrocess.\n");

22 
	`¥ötf
("Chûdªn:pid: %d\çpid:%d\n",
	`gëpid
(),
	`gëµid
());

25 
	`¥ötf
("Chûdªn:pid: %d\çpid:%d\n",
	`gëpid
(),
	`gëµid
());

26 
	`¥ötf
("Children:childÖrocess isÉxited.\n");

31 
	`¥ötf
("Father:Iám fatherÖrocess.\n");

33 
	`¶ìp
(1);

34 
	`¥ötf
("Father:fatherÖrocess isÉxited.\n");

37 
	}
}

	@/root/grocery-shop/language/gcc/src/ptrace/first.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<sys/ªg.h
>

4 
	~<sys/u£r.h
>

5 
	~<sys/±ø˚.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/waô.h
>

8 
	~<uni°d.h
>

10 
	$maö
()

12 
pid_t
 
chûd
;

13 
‹ig_óx
;

15 
chûd
 = 
	`f‹k
();

16 if(
chûd
 == 0) {

20 
	`¥ötf
("Â≠êËøõÁ®ãIDÔºö%d\n", 
	`gëpid
());

21 
	`±ø˚
(
PTRACE_TRACEME
, 0, 
NULL
, NULL);

22 
	`¥ötf
("xxxx\n");

23 
	`exe˛
("/bö/ls", "ls", 
NULL
);

25 
	`waô
(
NULL
);

27 
‹ig_óx
 = 
	`±ø˚
(
PTRACE_PEEKUSER
,

28 
chûd
, 4 * 
ORIG_EAX
,

29 
NULL
);

30 
	`¥ötf
("The child madeá "

31 "sy°em cÆ»%ld \n", 
‹ig_óx
);

33 
	`±ø˚
(
PTRACE_CONT
, 
chûd
, 
NULL
, NULL);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/python/pytest.py

1 #!/
bö
/
sh


2 #codög:
utf
-
job


4 #Pyth⁄ËÑöÊú¨ÔºåÂ≠ò‰∏∫
pyã°
.
py


5 
def
 
	$add
(
a
,
b
):

6 
¥öt
 "inÖython functionádd"

7 
¥öt
 "®" + 
	$°r
(
a
)

8 
¥öt
 "b = " + 
	$°r
(
b
)

9 
¥öt
 "ªà" + 
	`°r
(
a
+
b
)

10  
a
 + 
b


12 
__«me__
 == '__main__':

14 
	`add
(1, 3);

	@/root/grocery-shop/language/gcc/src/python/simple_python.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~"Pyth⁄.h
"

6 
	$maö
(
¨gc
, ** 
¨gv
)

11 * 
°rög
;

12 
PyObje˘
 *
pName
, *
pModuÀ
, *
pDi˘
, *
pFunc
, *
pArgs
, *
pRëVÆ
;

14 
	`Py_Inôülize
();

15 i‡–!
	`Py_IsInôülized
() )

18 
	`PyRun_Sim∂eSåög
("import sys");

19 
	`PyRun_Sim∂eSåög
("sys.path.append('./')");

22 
pName
 = 
	`PySåög_FromSåög
("pytest");

23 
pModuÀ
 = 
	`PyImp‹t_Imp‹t
(
pName
);

24 i‡–!
pModuÀ
 )

26 
	`¥ötf
("can't findÖytest.py");

27 
	`gëch¨
();

30 
pDi˘
 = 
	`PyModuÀ_GëDi˘
(
pModuÀ
);

31 i‡–!
pDi˘
 )

37 
pFunc
 = 
	`PyDi˘_GëIãmSåög
(
pDi˘
, "add");

38 i‡–!
pFunc
 || !
	`PyCÆœbÀ_Check
(pFunc) )

40 
	`¥ötf
("can't find function [add]");

41 
	`gëch¨
();

46 
pArgs
 = 
	`PyTu∂e_New
(2);

57 
	`PyTu∂e_SëIãm
(
pArgs
, 0, 
	`Py_BuûdVÆue
("i",3));

58 
	`PyTu∂e_SëIãm
(
pArgs
, 1, 
	`Py_BuûdVÆue
("i",4));

61 
pRëVÆ
 = 
	`PyObje˘_CÆlObje˘
(
pFunc
, 
pArgs
);

62 
	`¥ötf
("fun˘i⁄Ñëu∫ vÆuê: %ld\r\n", 
	`PyI¡_AsL⁄g
(
pRëVÆ
));

64 
	`Py_DECREF
(
pName
);

65 
	`Py_DECREF
(
pArgs
);

66 
	`Py_DECREF
(
pModuÀ
);

67 
	`Py_DECREF
(
pRëVÆ
);

70 
	`Py_FöÆize
();

72 
	}
}

	@/root/grocery-shop/language/gcc/src/readConfig/readConfig.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<as£π.h
>

5 
	~<î∫o.h
>

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<˘y≥.h
>

11 
	#KEYVALLEN
 100

	)

23 * 
	$À·_åim
(* 
szOuçut
, c⁄° *
szI≈ut
)

25 i‡(
szI≈ut
 =
NULL
 || 
szOuçut
 == NULL || szOutput == szInput) {

26  
NULL
;

29 ; *
szI≈ut
 !'\0' && 
	`is•a˚
(*szInput); ++szInput){

33  
	`°r˝y
(
szOuçut
, 
szI≈ut
);

34 
	}
}

39 *
	$right_åim
(*
szOuçut
, c⁄° *
szI≈ut
)

41 *
p
 = 
NULL
;

43 i‡(
szI≈ut
 =
NULL
 || 
szOuçut
 == NULL || szOutput == szInput) {

44  
NULL
;

47 
	`°r˝y
(
szOuçut
, 
szI≈ut
);

49 
p
 = 
szOuçut
 + 
	`°æí
(szOuçutË- 1;Ö >szOuçuà&& 
	`is•a˚
(*p); --p){

52 *(++
p
) = '\0';

53  
szOuçut
;

54 
	}
}

59 * 
	$bŸh_åim
(* 
szOuçut
, c⁄° * 
szI≈ut
)

61 *
p
 = 
NULL
;

63 i‡(
szI≈ut
 =
NULL
 || 
szOuçut
 == NULL) {

64  
NULL
;

67 i‡(
	`À·_åim
(
szOuçut
, 
szI≈ut
Ë=
NULL
) {

68  
NULL
;

71 
p
 = 
szOuçut
 + 
	`°æí
(szOuçutË- 1;∞>szOuçuà&& 
	`is•a˚
(*p); --p){

74 *(++
p
) = '\0';

76  
szOuçut
;

77 
	}
}

84 
	$gë_•ecifõd_§ög
(c⁄° *
§c
, *
d°
, c⁄° *
moduÀ
)

86 c⁄° *
ãmp
 = 
§c
;

88 i‡(!
§c
 || !
d°
 || !
moduÀ
) {

92 *
ãmp
 != '\0') {

93 i‡(
	`°rchr
(
moduÀ
, *
ãmp
Ë!
NULL
) {

96 
ãmp
++;

98 
	`°∫˝y
(
d°
, 
§c
, 
ãmp
-src);

99 
d°
[
ãmp
-
§c
] = '\0';

102 
	}
}

109 
	$£˘i⁄_gë_vÆue_by_key
(
FILE
 *
Â
, *
£˘i⁄
, *
key
, *
vÆue
 )

111 
≠≤ame
[32],
key«me
[32];

112 *
buf
,*
c
;

113 
buf_i
[
KEYVALLEN
], 
buf_o
[KEYVALLEN];

114 
found
=0;

116 i‡–
Â
 =
NULL
 || 
£˘i⁄
 =NULL || 
key
 =NULL || 
vÆue
 == NULL ) {

120 
	`f£ek
–
Â
, 0, 
SEEK_SET
 );

121 
	`mem£t
–
≠≤ame
, 0, (appname) );

122 
	`•rötf
–
≠≤ame
,"[%s]", 
£˘i⁄
 );

124  !
	`„of
(
Â
Ë&& 
	`fgës
(
buf_i
, 
KEYVALLEN
, f∞)!=
NULL
 ){

125 i‡(
	`À·_åim
(
buf_o
, 
buf_i
Ë=
NULL
) {

128 i‡(
	`°æí
(
buf_o
) <= 0) {

132 
buf
 = 
buf_o
;

134 if–
found
 == 0 ){

135 if–
buf
[0] != '[' ) {

137 } i‡–
	`°∫cmp
(
buf
,
≠≤ame
,
	`°æí
(appname))==0 ){

138 
found
 = 1;

142 } if–
found
 == 1 ) {

143 if–
buf
[0] == '#' ){

145 } i‡–
buf
[0] == '[' ) {

148 if–(
c
 = (*)
	`°rchr
(
buf
, '=')Ë=
NULL
 )

151 
	`mem£t
–
key«me
, 0, (keyname) );

152 
	`gë_•ecifõd_§ög
(
buf
, 
key«me
, "\t =");

153 i‡(
	`°rcmp
(
key«me
, 
key
) == 0) {

154 
	`gë_•ecifõd_§ög
(++
c
, 
vÆue
, "\n");

156 *
vÆue_o
 = (*)
	`mÆloc
(
	`°æí
(
vÆue
) + 1);

157 if(
vÆue_o
 !
NULL
){

158 
	`mem£t
(
vÆue_o
, 0, 
	`°æí
(
vÆue
) + 1);

160 i‡(
	`bŸh_åim
(
vÆue_o
, 
vÆue
Ë=
NULL
) {

163 if(
vÆue_o
 && 
	`°æí
(value_o) > 0)

164 
	`°r˝y
(
vÆue
, 
vÆue_o
);

165 
	`‰ì
(
vÆue_o
);

166 
vÆue_o
 = 
NULL
;

168 
found
 = 2;

177 if–
found
 == 2 ) {

181 
	}
}

188 
	$gë_vÆue_by_key
(
FILE
 *
Â
, *
key
, *
vÆue
)

190 
key«me
[32];

191 *
buf
 = 
NULL
, *
pos
 = NULL;

192 *
ãmp
 = 
NULL
, *
ãmpVÆue
 = NULL;

193 
buf_i
[
KEYVALLEN
], 
buf_o
[KEYVALLEN];

195 i‡(
Â
 =
NULL
 || 
key
 =NULL || 
vÆue
 == NULL) {

200 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

201 
buf_i
[0] = '\0';

202 
buf_o
[0] = '\0';

203 
ãmp
 = 
vÆue
;

206 !
	`„of
(
Â
Ë&& 
	`fgës
(
buf_i
, 
KEYVALLEN
, fpË!
NULL
) {

207 i‡(
	`À·_åim
(
buf_o
, 
buf_i
Ë=
NULL
) {

208 
	`¥ötf
("ReadConfig:CallÜeft_trimÑeturn illegal value.\n");

212 i‡(
	`°æí
(
buf_o
) <= 0) {

216 
buf
 = 
NULL
;

217 
buf
 = 
buf_o
;

219 i‡(
buf
[0] == '#') {

221 } i‡(
buf
[0] == '[') {

222 
	`¥ötf
("ReadConfig:Illegal formatÜine.\n");

226 i‡((
pos
 = (*)
	`°rchr
(
buf
, '=')Ë=
NULL
) {

231 i‡(
	`gë_•ecifõd_§ög
(
buf
, 
key«me
, "\t =") < 0) {

232 
	`¥ötf
("ReadConfig:call get_specified_sring failed.\n");

237 i‡(
	`°rcmp
(
key«me
, 
key
) == 0) {

238 i‡(
	`gë_•ecifõd_§ög
(++
pos
, 
ãmp
, "\n") < 0) {

239 
	`¥ötf
("ReadConfig:call get_specified_sring failed.\n");

242 
ãmpVÆue
 = (*)
	`mÆloc
(
	`°æí
(
ãmp
) + 1);

243 i‡(
ãmpVÆue
 =
NULL
) {

244 
	`¥ötf
("ReadConfig:lack of memory.\n");

247 
	`mem£t
(
ãmpVÆue
, 0, (tempValue));

250 i‡(
	`bŸh_åim
(
ãmpVÆue
, 
ãmp
Ë=
NULL
) {

251 
	`¥ötf
("ReadConfig:Call both_trimÑeturn illegal value.\n");

254 i‡(
	`°æí
(
ãmpVÆue
) > 0) {

255 
	`°r˝y
(
vÆue
, 
ãmpVÆue
);

257 
	`‰ì
(
ãmpVÆue
);

258 
ãmpVÆue
 = 
NULL
;

265 
	}
}

268 
	$maö
(
¨gc
, **
¨gv
)

270 
mode
[32] = {0};

271 
ªt
 = -1;

272 
FILE
 *
Â
;

275 
	`¥ötf
("==================start==================\n");

276 
	`¥ötf
("=====================================\n");

277 
	`¥ötf
("Ê†πÊçÆsctionÂíåkeyËé∑ÂèñvalueÂÄº:\n");

278 
Â
 = 
	`f›í
("/root/waf/a.info", "r");

279 i‡(
Â
 =
NULL
) {

280 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂%sÂ§±Ë¥•!\n", "/root/waf/a.info");

281 
£c⁄d
;

283 
ªt
 = 
	`£˘i⁄_gë_vÆue_by_key
(
Â
, "Hi°‹y", "pﬁicy", 
mode
);

284 i‡(
ªt
 < 0) {

285 
	`¥ötf
("ÂèëÁîüÈîôËØØ!\n");

286 
	`f˛o£
(
Â
);

287 
Â
 = 
NULL
;

288  
ªt
;

290 
	`f˛o£
(
Â
);

291 
Â
 = 
NULL
;

292 
	`¥ötf
("£˘i⁄=%†key=%†vÆue=%s\n","Hi°‹y", "pﬁicy", 
mode
);

293 
	`¥ötf
("=====================================\n");

294 
	`¥ötf
("=================end===================\n\n");

296 
£c⁄d
:

298 
	`¥ötf
("==================start==================\n");

299 
	`¥ötf
("=====================================\n");

300 
	`¥ötf
("Ê†πÊçÆËé∑ÂèñvalueÂÄº:\n");

301 
Â
 = 
	`f›í
("./option", "r");

302 i‡(
Â
 =
NULL
) {

303 
	`¥ötf
("ÊâìÂºÄÊñá‰ª∂%sÂ§±Ë¥•!\n", "./option");

305 
ªt
 = 
	`gë_vÆue_by_key
(
Â
, "TOPWAF_EXPIRE", 
mode
);

306 i‡(
ªt
 < 0) {

307 
	`¥ötf
("ÂèëÁîüÈîôËØØ!\n");

308 
	`f˛o£
(
Â
);

309 
Â
 = 
NULL
;

310  
ªt
;

312 
	`f˛o£
(
Â
);

313 
Â
 = 
NULL
;

314 
	`¥ötf
("key=%†vÆue=%s\n", "TOPWAF_EXPIRE", 
mode
);

315 
	`¥ötf
("=====================================\n");

316 
	`¥ötf
("=================end===================\n\n");

318 
	}
}

	@/root/grocery-shop/language/gcc/src/readConfig/tools/testToolsModule/test_toolsModule.c

1 
	~"../toﬁs.h
"

2 
	~"../../unôy/§c/unôy.h
"

4 
	$£tUp
()

6 
	}
}

8 
	$ã¨Down
()

10 
	}
}

12 
	$ã°_gëSe˘i⁄
()

14 * 
c⁄ã¡
 = "Écho \"\
[TcpClient] \n\
 =ÅcpClient1 \n\
 = 127.0.0.1 \n\
 = 1111 \n\
 = jobjobjobjob \n\
\n\
[TcpClient] \n\
 =ÅcpClient2 \n\
 = 127.0.0.1 \n\
 = 2222 \n\
 = 9999 \n\
\n\
[TcpClient] \n\
 =ÅcpClient3 \n\
 = 127.0.0.1 \n\
 = 3333 \n\
 = 1234 \n\" > commModule.conf";

32 
	`sy°em
(
c⁄ã¡
);

33 
£˘i⁄
[
MAX_LEN_SECTION
] = {0};

34 
ªt
 = 
	`gëSe˘i⁄
("./commModuÀ.c⁄f", 0, "T˝Clõ¡", 
£˘i⁄
);

35 
	`TEST_ASSERT_EQUAL_INT
(3, 
ªt
);

37 
	`mem£t
(
£˘i⁄
, 0, 
MAX_LEN_SECTION
);

38 
ªt
 = 
	`gëSe˘i⁄
("./commModuÀ.c⁄f", 1, "T˝Clõ¡", 
£˘i⁄
);

39 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

40 
	`TEST_ASSERT_EQUAL_STRING
("[T˝Clõ¡] \nLogicNamê =Å˝Clõ¡1 \nDe°I∞ = 127.0.0.1 \nDe°P‹à = 1111 \nLoˇlP‹à = jobjobjobjob \n\n", 
£˘i⁄
);

42 
	`mem£t
(
£˘i⁄
, 0, 
MAX_LEN_SECTION
);

43 
ªt
 = 
	`gëSe˘i⁄
("./commModuÀ.c⁄f", 2, "T˝Clõ¡", 
£˘i⁄
);

44 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

45 
	`TEST_ASSERT_EQUAL_STRING
("[T˝Clõ¡] \nLogicNamê =Å˝Clõ¡2 \nDe°I∞ = 127.0.0.1 \nDe°P‹à = 2222 \nLoˇlP‹à = 9999 \n\n", 
£˘i⁄
);

47 
	`mem£t
(
£˘i⁄
, 0, 
MAX_LEN_SECTION
);

48 
ªt
 = 
	`gëSe˘i⁄
("./commModuÀ.c⁄f", 3, "T˝Clõ¡", 
£˘i⁄
);

49 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

50 
	`TEST_ASSERT_EQUAL_STRING
("[T˝Clõ¡] \nLogicNamê =Å˝Clõ¡3 \nDe°I∞ = 127.0.0.1 \nDe°P‹à = 3333 \nLoˇlP‹à = 1234 \n\n", 
£˘i⁄
);

51 
	}
}

53 
	$ã°_gëVÆueOfKey
()

55 * 
£˘i⁄
 = "[TcpClient] \nLogicName = \"tcpCÜient3\" \n\
 = 127.0.0.1 \n\
 = 3333 \n\
 = 1234 \n\n";

59 
ªs
[
MAX_LEN_ROW
] = {0};

60 
size
 = 
MAX_LEN_ROW
;

61 
ªt
 = 
	`gëVÆueOfKey
(
£˘i⁄
, "LogicName", 
ªs
, &
size
);

62 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

63 
	`TEST_ASSERT_EQUAL_STRING
("\"t˝CÜõ¡3\"", 
ªs
);

65 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

66 
size
 = 
MAX_LEN_ROW
;

67 
ªt
 = 
	`gëVÆueOfKey
(
£˘i⁄
, "De°Ip", 
ªs
, &
size
);

68 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

69 
	`TEST_ASSERT_EQUAL_STRING
("127.0.0.1", 
ªs
);

71 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

72 
size
 = 
MAX_LEN_ROW
;

73 
ªt
 = 
	`gëVÆueOfKey
(
£˘i⁄
, "LoˇlP‹t", 
ªs
, &
size
);

74 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

75 
	`TEST_ASSERT_EQUAL_STRING
("1234", 
ªs
);

76 
	}
}

78 
	$ã°_ªadVÆueFromC⁄f_ext
()

80 * 
c⁄ã¡
 = "Écho \"\
[TcpClient] \n\
 =ÅcpClient1 \n\
 = 127.0.0.1 \n\
 = 1111 \n\
 = jobjobjobjob \n \
\n\
[TcpClient] \n\
 =ÅcpClient2 \n\
 = 127.0.0.1 \n\
 = 2222 \n\
 = 9999 \n\
\n\
[TcpClient] \n\
 =ÅcpClient3 \n\
 = 127.0.0.1 \n\
 = 3333 \n\
 = 1234 \n\" > commModule.conf";

98 
	`sy°em
(
c⁄ã¡
);

99 
ªs
[
MAX_LEN_ROW
] = {0};

100 
size
 = 
MAX_LEN_ROW
;

101 
ªt
 = 
	`ªadVÆueFromC⁄f_ext
("./commModuÀ.c⁄f", 0, "T˝Clõ¡", "LogicName", 
ªs
, &
size
);

102 
	`TEST_ASSERT_EQUAL_INT
(3, 
ªt
);

104 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

105 
size
 = 
MAX_LEN_ROW
;

106 
ªt
 = 
	`ªadVÆueFromC⁄f_ext
("./nosuchfûe.c⁄f", 1, "T˝Clõ¡", "LogicName", 
ªs
, &
size
);

107 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_CANNOT_OPEN_CONF
, 
ªt
);

109 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

110 
size
 = 
MAX_LEN_ROW
;

111 
ªt
 = 
	`ªadVÆueFromC⁄f_ext
("./commModuÀ.c⁄f", 1, "noSuchFõld", "LogicName", 
ªs
, &
size
);

112 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_CANNOT_FIND_VALUES
, 
ªt
);

114 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

115 
size
 = 
MAX_LEN_ROW
;

116 
ªt
 = 
	`ªadVÆueFromC⁄f_ext
("./commModuÀ.c⁄f", 1, "T˝Clõ¡", "noSuchKey", 
ªs
, &
size
);

117 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_CANNOT_FIND_VALUES
, 
ªt
);

119 
	`mem£t
(
ªs
, 0, 
MAX_LEN_ROW
);

120 
size
 = 
MAX_LEN_ROW
;

121 
ªt
 = 
	`ªadVÆueFromC⁄f_ext
("./commModuÀ.c⁄f", 1, "T˝Clõ¡", "LogicName", 
ªs
, &
size
);

122 
	`TEST_ASSERT_EQUAL_INT
(
TOOLS_SUCCESS
, 
ªt
);

123 
	`TEST_ASSERT_EQUAL_STRING
("t˝Clõ¡1", 
ªs
);

124 
	`TEST_ASSERT_EQUAL_INT
(10, 
size
);

126 
	`sy°em
("rm -rf commModule.conf");

127 
	}
}

	@/root/grocery-shop/language/gcc/src/readConfig/tools/tools.c

1 
	~"toﬁs.h
"

3 
	$gëResu…FromSy°emCÆl
(c⁄° * 
pCmd
, * 
pResu…
, * 
size
)

5 
fd
[2];

6 if(
	`pùe
(
fd
)) {

7 
	`¥ötf
("pipeÉrror!\n");

11 
	`fÊush
(
°dout
);

14 
bak_fd
 = 
	`dup
(
STDOUT_FILENO
);

15 
√w_fd
 = 
	`dup2
(
fd
[1], 
STDOUT_FILENO
);

18 
	`sy°em
(
pCmd
);

19 
	`Ârötf
(
°dout
, "B");

20 
	`fÊush
(
°dout
);

21 
	`mem£t
(
pResu…
, 0, *
size
);

22 
	`ªad
(
fd
[0], 
pResu…
, (*
size
)-1);

24 
pResu…
[
	`°æí
(pResult)-1] = 0;

25 if(
	`°æí
(
pResu…
)) {

26 
pResu…
[
	`°æí
(pResult)-1] = 0;

31 
	`dup2
(
bak_fd
, 
√w_fd
);

34 
	`˛o£
(
fd
[0]);

35 
	`˛o£
(
fd
[1]);

37 
	`fÊush
(
°dout
);

41 
	}
}

43 
	$ªadVÆueFromC⁄f
(c⁄° * 
fûeP©h
, c⁄° * 
key
, * 
ªs
, * 
size
)

45 if((
NULL
 =
fûeP©h
Ë|| (0 =*
size
)) {

48 
cmd
[100] = {0};

50 
	`•rötf
(
cmd
, "ˇà%†| gª∞-m 1 -E \"^%s\" | cuà-d-f2 | sed 's/[[:•a˚:]]*//g'", 
fûeP©h
, 
key
);

51 
	`mem£t
(
ªs
, 0, *
size
);

54  
	`gëResu…FromSy°emCÆl
(
cmd
, 
ªs
, 
size
);

58 
ªt
 = 
	`gëResu…FromSy°emCÆl
(
cmd
, 
ªs
, 
size
);

59  
ªt
;

61 
	}
}

66 
	$gëSe˘i⁄
(c⁄° * 
fûeP©h
, c⁄° 
times
, c⁄° * 
fõld
, * 
£˘i⁄
)

68 
fõld_cmp
[
MAX_LEN_ROW
] = {0};

69 
row
[
MAX_LEN_ROW
];

70 
Êag_°¨t_c›y
 = 0;

71 
FILE
* 
Â
 = 
NULL
;

72 
curTimes
 = 0;

74 
	`•rötf
(
fõld_cmp
, "[%s]", 
fõld
);

76 if(
NULL
 =(
Â
 = 
	`f›í
(
fûeP©h
, "r"))) {

77  
TOOLS_CANNOT_OPEN_CONF
;

80 
	`mem£t
(
row
, 0, 
MAX_LEN_ROW
);

81 
	`fgës
(
row
, 
MAX_LEN_ROW
, 
Â
)) {

82 if(('[' =
row
[0]Ë&& (1 =
Êag_°¨t_c›y
)) {

83 
Êag_°¨t_c›y
 = 2;

85 if(0 =
	`memcmp
(
fõld_cmp
, 
row
, 
	`°æí
(field_cmp))) {

86 
curTimes
++;

87 if(
times
 =
curTimes
) {

88 
Êag_°¨t_c›y
 = 1;

91 if(1 =
Êag_°¨t_c›y
) {

92 if(
MAX_LEN_SECTION
 <(
	`°æí
(
£˘i⁄
Ë+ såÀn(
row
))) {

93  
TOOLS_SECTIONLEN_OVERFLOW
;

95 
	`mem˝y
(
£˘i⁄
+
	`°æí
(£˘i⁄), 
row
, strlen(row));

97 if(2 =
Êag_°¨t_c›y
) {

98  
TOOLS_SUCCESS
;

100 
	`mem£t
(
row
, 0, 
MAX_LEN_ROW
);

103 if(0 =
times
) {

104  
curTimes
;

106  
TOOLS_SUCCESS
;

107 
	}
}

109 
	$gëVÆueOfKey
(c⁄° * 
£˘i⁄
, c⁄° * 
key
, * 
ªs
, * 
size
)

111 if((
NULL
 =
£˘i⁄
Ë|| (NULL =
key
Ë|| (NULL =
size
)) {

112  
TOOLS_INVALID_PARA
;

115 
˘mp
[
MAX_LEN_ROW
] = {0};

116 *
pSèπC›y
, *
pSt›C›y
;

117 
	`•rötf
(
˘mp
, "\n%s", 
key
);

118 
pSèπC›y
 = 
	`°r°r
(
£˘i⁄
, 
˘mp
);

119 if(
NULL
 =
pSèπC›y
) {

120  
TOOLS_CANNOT_FIND_VALUES
;

122 
pSèπC›y
++;

123 
pSt›C›y
 = 
	`°rchr
(
pSèπC›y
, '\n');

124 if(
NULL
 =
pSt›C›y
) {

125 
pSt›C›y
 = 
	`°rchr
(
pSèπC›y
, '\0');

126 if(
NULL
 =
pSt›C›y
) {

127  
TOOLS_CANNOT_FIND_VALUES
;

131 
	`mem£t
(
˘mp
, 0, 
MAX_LEN_ROW
);

132 
	`mem˝y
(
˘mp
, 
pSèπC›y
, (
pSt›C›y
 -ÖStartCopy));

133 if((
pSt›C›y
 - 
pSèπC›y
Ë>(
MAX_LEN_ROW
 - 1)) {

134  
TOOLS_ROWLEN_OVERFLOW
;

137 
	#°¨t_c›y
(
c
)((¯!'\t'Ë&& (¯!'\n'Ë&& (¯!' 'Ë&& (¯!'='Ë)

	)

138 
	#°›_c›y
(
c
)(¯='\0')

	)

139 
	#is_•a˚
(
c
Ë(('\t' =cË|| (' ' =cË|| ('\n' =c))

	)

140 * 
pos
 = 
˘mp
 + 
	`°æí
(
key
);

141 
f_c›y
 = 0;

142 
f_c›y_•a˚
 = 0;

143 *
size
 = 0;

145 if(
	`°¨t_c›y
(*
pos
)) {

146 
f_c›y
 = 1;

148 if(
	`°›_c›y
(*
pos
)) {

149 
f_c›y
 = 0;

152 i‡(
f_c›y
) {

153 if('"' =*
pos
) {

154 
f_c›y_•a˚
++;

156 if(0 =
f_c›y_•a˚
%2) {

157 if(
	`is_•a˚
(*
pos
)) ;

159 
ªs
[(*
size
)++] = *
pos
;

161 
pos
++;

164  
TOOLS_SUCCESS
;

165 
	}
}

167 
	$ªadVÆueFromC⁄f_ext
(c⁄° * 
fûeP©h
, c⁄° 
times
, c⁄° * 
fõld
, c⁄° * 
key
, * 
ªs
, * 
size
)

169 
£˘i⁄
[
MAX_LEN_SECTION
] = {0};

171 if(0 =
times
) {

172  
	`gëSe˘i⁄
(
fûeP©h
, 
times
, 
fõld
, 
£˘i⁄
);

175 
ªt
 = 
	`gëSe˘i⁄
(
fûeP©h
, 
times
, 
fõld
, 
£˘i⁄
);

176 if(
TOOLS_SUCCESS
 !
ªt
) {

177  
ªt
;

180  
	`gëVÆueOfKey
(
£˘i⁄
, 
key
, 
ªs
, 
size
);

181 
	}
}

	@/root/grocery-shop/language/gcc/src/readConfig/tools/tools.h

1 #i‚de‡
_TOOL_H_


2 
	#_TOOL_H_


	)

14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~<°rög.h
>

17 
	~<f˙é.h
>

18 
	~<uni°d.h
>

21 
	etoﬁsEºNo
 {

22 
	mTOOLS_SUCCESS
 = 0,

23 
	mTOOLS_CANNOT_OPEN_CONF
,

24 
	mTOOLS_INVALID_PARA
,

25 
	mTOOLS_CANNOT_FIND_VALUES
,

26 
	mTOOLS_ROWLEN_OVERFLOW
,

27 
	mTOOLS_SECTIONLEN_OVERFLOW
,

28 
	mtoﬁsMAXERRNO


31 
	#DEBUGERROR
(
f‹m©
, ...Ë
	`¥ötf
("[%s]<löe:%d> "f‹m©"\n", 
__FUNCTION__
, 
__LINE__
, ##
__VA_ARGS__
); 
	`fÊush
(
°dout
)

	)

32 
	#DEBUGINFO
(
f‹m©
, ...Ë
	`¥ötf
("[%s]<löe:%d>"f‹m©"\n", 
__FUNCTION__
, 
__LINE__
, ##
__VA_ARGS__
); 
	`fÊush
(
°dout
)

	)

33 
	#DEBUG
 
DEBUGINFO


	)

36 
	#HIDE_STDOUT
 do { \

37 
fd
 = 
	`›í
("/dev/nuŒ", 
O_APPEND
); \

38 if(-1 =
fd
) {\

39 
	`¥ötf
("open dev/nullÉrror!\n");\

40 
	`fÊush
(
°dout
);\

41 
	`exô
(1);\

43 
bak_fd
 = 
	`dup
(
STDOUT_FILENO
);\

44 
√w_fd
 = 
	`dup2
(
fd
, 
STDOUT_FILENO
);

	)

46 
	#RESUME_STDOUT
 \

47 
	`dup2
(
bak_fd
, 
√w_fd
);\

48 }0);

	)

59 
ªadVÆueFromC⁄f
(c⁄° * 
fûeP©h
, c⁄° * 
key
, * 
ªs
, * 
size
);

77 
ªadVÆueFromC⁄f_ext
(c⁄° * 
fûeP©h
, c⁄° 
times
, c⁄° * 
fõld
, c⁄° * 
key
, * 
ªs
, * 
size
);

79 
	#MAX_LEN_ROW
 200

	)

80 
	#MAX_LEN_SECTION
 4096

	)

81 
gëResu…FromSy°emCÆl
(c⁄° * 
pCmd
, * 
pResu…
, * 
size
);

82 
gëSe˘i⁄
(c⁄° * 
fûeP©h
, c⁄° 
times
, c⁄° * 
fõld
, * 
£˘i⁄
);

83 
gëVÆueOfKey
(c⁄° * 
£˘i⁄
, c⁄° * 
key
, * 
ªs
, * 
size
);

	@/root/grocery-shop/language/gcc/src/regex/simple_pcre.c

1 
	~<p¸e.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

5 
	$maö
(
¨gc
, ** 
¨gv
)

7 i‡(
¨gc
 != 3)

9 
	`¥ötf
("Ußge: %†∑âî¿ãxt\n", 
¨gv
[0]);

13 c⁄° * 
pP©ã∫
 = 
¨gv
[1];

14 c⁄° * 
pText
 = 
¨gv
[2];

15 c⁄° * 
pEºMsg
 = 
NULL
;

16 
p¸e
 * 
pP¸e
 = 
NULL
;

17 
nOff£t
 = -1;

19 i‡(
NULL
 =(
pP¸e
 = 
	`p¸e_compûe
(
pP©ã∫
, 0, &
pEºMsg
, &
nOff£t
, NULL)))

21 
	`¥ötf
("EºMsg=%s, Off£t=%d\n", 
pEºMsg
, 
nOff£t
);

26 i‡(
	`p¸e_exec
(
pP¸e
, 
NULL
, 
pText
, 
	`°æí
(pText), 0, 0, NULL, 0) < 0)

28 
	`¥ötf
("%†d€¢'àm©ch %s\n", 
pText
, 
pP©ã∫
);

32 
	`¥ötf
("%†m©che†%s\n", 
pText
, 
pP©ã∫
);

37 
	}
}

	@/root/grocery-shop/language/gcc/src/regex/simple_regex.c

1 
	~<sys/ty≥s.h
>

2 
	~<ªgex.h
>

3 
	~<°dio.h
>

5 
	$maö
(
¨gc
, ** 
¨gv
)

7 c⁄° *
pRegexSå
 = 
NULL
;

8 c⁄° *
pText
 = 
NULL
;

9 
ªgex_t
 
oRegex
;

10 
nEºCode
 = 0;

11 
szEºMsg
[1024] = {0};

12 
size_t
 
unEºMsgLí
 = 0;

14 i‡(
¨gc
 != 3)

16 
	`¥ötf
("Ußge: %†RegexSåög Text\n", 
¨gv
[0]);

20 
pRegexSå
 = 
¨gv
[1];

21 
pText
 = 
¨gv
[2];

22 i‡((
nEºCode
 = 
	`ªgcomp
(&
oRegex
, 
pRegexSå
, 0)) == 0)

24 i‡((
nEºCode
 = 
	`ªgexec
(&
oRegex
, 
pText
, 0, 
NULL
, 0)) == 0)

26 
	`¥ötf
("%†m©che†%s\n", 
pText
, 
pRegexSå
);

27 
	`ªg‰ì
(&
oRegex
);

32 
unEºMsgLí
 = 
	`ªgîr‹
(
nEºCode
, &
oRegex
, 
szEºMsg
, (szErrMsg));

33 
unEºMsgLí
 = unEºMsgLí < (
szEºMsg
) ? unErrMsgLen : (szErrMsg) - 1;

34 
szEºMsg
[
unEºMsgLí
] = '\0';

35 
	`¥ötf
("EºMsg: %s\n", 
szEºMsg
);

37 
	`ªg‰ì
(&
oRegex
);

40 
	}
}

	@/root/grocery-shop/language/gcc/src/signal/kill/killTest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<sched.h
>

5 
	~<gë›t.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/waô.h
>

9 
	~<uni°d.h
>

10 
	~<sys/sysˇŒ.h
>

11 
	~<uni°d.h
>

12 
	~<asm/uni°d.h
>

13 
	~<uni°d.h
>

14 
	~<löux/uni°d.h
>

15 
	~<sys/klog.h
>

16 
	~<sy¶og.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/¥˘l.h
>

20 
	~<f˙é.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

24 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

25 
	#True
 1

	)

26 
	#FÆ£
 0

	)

28 
	gpidAºay
[3] = {0};

31 
	$sig_d´m_u§_h™dÀ
(
sig«l
)

33 
	`¥ötf
("Receiveá signal from otherÖrocess!\n");

34 
	}
}

37 
	$sig_d´m_°›_h™dÀ
(
sig«l
)

39 
i
 = -1;

40 
ªt
 = -1;

42 
	`¥ötf
("PreparingÅoÉxitÅheÖrocess.\n");

43 
i
=0; i<3; i++) {

44 
ªt
 = 
	`kûl
(
pidAºay
[
i
], 
SIGTERM
);

45 
	`¥ötf
("ªà%d -=0=0=0=0=0=0\n", 
ªt
);

47 
	`exô
(0);

48 
	}
}

51 
	$sig_fú°_°›_h™dÀ
(
sig«l
)

53 
	`¶ìp
(15);

54 
	`¥ötf
("%s\n", 
__func__
);

55 
	}
}

58 
	$sig_£c⁄d_°›_h™dÀ
(
sig«l
)

60 
	`¶ìp
(15);

61 
	`¥ötf
("secondÖrocess quit!\n");

62 
	}
}

65 
	$sig_thúd_°›_h™dÀ
(
sig«l
)

67 
	`¶ìp
(15);

68 
	`¥ötf
("thirdÖrocess quit!\n");

69 
	}
}

72 
	$fú°Pro˚ss
()

75 
	`sig«l
(
SIGTERM
, 
sig_fú°_°›_h™dÀ
);

77 
True
) {

78 
	`¶ìp
(10);

79 
	`¥ötf
("firstÖrocessÑunning!\n");

83 
	}
}

86 
	$£c⁄dPro˚ss
()

89 
	`sig«l
(
SIGTERM
, 
sig_£c⁄d_°›_h™dÀ
);

91 
True
) {

92 
	`¶ìp
(15);

93 
	`¥ötf
("secondÖrocessÑunning!\n");

97 
	}
}

100 
	$thúdPro˚ss
()

103 
	`sig«l
(
SIGTERM
, 
sig_thúd_°›_h™dÀ
);

105 
True
) {

106 
	`¶ìp
(5);

107 
	`¥ötf
("thirdÖrocessÑunning!\n");

111 
	}
}

115 
	$kûl_f‹k_chûd
(
num
)

117 
pid_t
 
pid
 = 0;

118 
ªt
 = -1;

119 
i
 = 0;

121 
i
=0; i<
num
; i++) {

122 i‡((
pid
=
	`f‹k
()) < 0) {

124 } i‡(
pid
 == 0) {

125 i‡(
i
 == 0) {

126 
ªt
 = 
	`fú°Pro˚ss
();

127 } i‡(
i
 == 0) {

128 
ªt
 = 
	`£c⁄dPro˚ss
();

130 
ªt
 = 
	`thúdPro˚ss
();

132 
	`exô
(0);

134 
pidAºay
[
i
] = 
pid
;

135 
	`¥ötf
("ËøõÁ®ã%dÂàõÂª∫ÊàêÂäüÔºÅ\n", 
pid
);

138 
	}
}

141 
	$maö
(
¨gc
, *
¨gv
[])

143 
lock_fd
 = -1;

144 
Êock
 
lock
;

145 
°r
[64];

146 
pid_t
 
pid
;

147 
mode
 = 1;

150 
lock_fd
 = 
	`›í
(
DAEMON_PID_FILE
, 
O_CREAT
 | 
O_RDWR
, 0666);

151 i‡(
lock_fd
 == -1) {

152 
	`¥ötf
("C™'à›íÜock fûê'%s' ,Éº‹ : '%s'\n", 
DAEMON_PID_FILE
, 
	`°ªº‹
(
î∫o
));

162 
lock
.
l_whí˚
 = 
SEEK_SET
;

163 
lock
.
l_ty≥
 = 
F_WRLCK
;

164 
lock
.
l_°¨t
 = 0;

165 
lock
.
l_Àn
 = 0;

166 
lock
.
l_pid
 = 0;

168 i‡(
¨gc
 =1 || (¨g¯=2 && (
	`°rcmp
(
¨gv
[1], "start") == 0))) {

169 
	`¥ötf
("\n(~_~)Readying start wafalarmd......\n");

170 
mode
 = 1;

171 } i‡(
¨gc
 =2 && (
	`°rcmp
(
¨gv
[1], "stop") == 0)) {

172 
mode
 = 2;

173 
	`¥ötf
("\n(>_<)Readying stop wafalarmd......\n");

175 
	`¥ötf
("\n(v_v)unknown option, usage: wafalarmd [start|stop|reload]\n");

176 
	`˛o£
(
lock_fd
);

180 i‡(
mode
 == 1) {

181 i‡(
	`f˙é
(
lock_fd
, 
F_SETLK
, &
lock
) < 0 ) {

182 
	`¥ötf
("\n(v_v)Other wafalarmdÖrocess isÑunning!\n");

183 
	`˛o£
(
lock_fd
);

188 i‡(
mode
 == 2) {

189 i‡(
	`ªad
(
lock_fd
, 
°r
, 64) < 0) {

190 
	`˛o£
(
lock_fd
);

194 
pid
 = 
	`©ﬁ
(
°r
);

195 
	`kûl
(
pid
, 
SIGTERM
);

200 
	`¢¥ötf
(
°r
, 63, "%lu", ()
	`gëpid
());

201 
°r
[63] = '\0';

202 
	`¥ötf
("Cuºíàpid i†:%s\n", 
°r
);

203 
	`·runˇã
(
lock_fd
, 0);

204 i‡(
	`wrôe
(
lock_fd
, 
°r
, 
	`°æí
(str)) != strlen(str)) {

205 
	`¥ötf
("C™'àwrôêlock fûe,Éº‹ : '%s'\n", 
	`°ªº‹
(
î∫o
));

209 
	`sig«l
(
SIGUSR1
, 
sig_d´m_u§_h™dÀ
);

210 
	`sig«l
(
SIGTERM
, 
sig_d´m_°›_h™dÀ
);

212 
	`kûl_f‹k_chûd
(3);

214 
True
) {

215 
	`¶ìp
(10);

219 
	}
}

	@/root/grocery-shop/language/gcc/src/signal/kill/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<f˙é.h
>

5 
	~<˘y≥.h
>

6 
	~<sig«l.h
>

7 
	~<uni°d.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~<sys/¥˘l.h
>

11 
	~<sys/waô.h
>

13 
	#True
 1

	)

14 
	#FÆ£
 0

	)

16 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

18 
pid_t


19 
	$gë_pid_‰om_fûe
(*
fûíame
)

21 
FILE
 *
Â
 = 
NULL
;

22 
°r
[12
job
] = {0};

24 
Â
 = 
	`f›í
(
fûíame
, "r+");

25 i‡(
	`fgës
(
°r
, 12
job
, 
Â
Ë!
NULL
) {

26  
	`©oi
(
°r
);

30 
	}
}

33 
	$maö
(
¨gc
, *
¨gv
[])

35 
pid_t
 
pid
 = 0;

37 
	`¥ötf
("Test'sÖrocess is startÑunning!\n");

38 
pid
 = 
	`gë_pid_‰om_fûe
(
DAEMON_PID_FILE
);

39 i‡(
pid
 < 0) {

40 
	`¥ötf
("getÖid occurÉrror!\n");

41 
	`exô
(0);

44 
	`¥ötf
("pid i†%d\n", 
pid
);

45 
True
) {

46 i‡(
	`kûl
(
pid
, 
SIGUSR1
) < 0) {

47 
	`¥ötf
("kû»%d faûuª!\n", 
pid
);

48 
pid
 = 
	`gë_pid_‰om_fûe
(
DAEMON_PID_FILE
);

50 
	`¶ìp
(3);

54 
	}
}

	@/root/grocery-shop/language/gcc/src/signal/kill/testNull.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sig«l.h
>

7 
	$maö
(
¨gc
, **
¨gv
)

9 
ªt
 = -1;

11 
ªt
 = 
	`kûl
(3222, 
SIGTERM
);

12 
	`¥ötf
("ªtu∫ sètu†i†:%d\n", 
ªt
);

15 
	}
}

	@/root/grocery-shop/language/gcc/src/signal/killTest.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~<sched.h
>

5 
	~<gë›t.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/waô.h
>

9 
	~<uni°d.h
>

10 
	~<sys/sysˇŒ.h
>

11 
	~<uni°d.h
>

12 
	~<asm/uni°d.h
>

13 
	~<uni°d.h
>

14 
	~<löux/uni°d.h
>

15 
	~<sys/klog.h
>

16 
	~<sy¶og.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/¥˘l.h
>

20 
	~<f˙é.h
>

21 
	~<˘y≥.h
>

22 
	~<î∫o.h
>

24 
	#DAEMON_PID_FILE
 "/v¨/run/d´m⁄.pid"

	)

25 
	#True
 1

	)

26 
	#FÆ£
 0

	)

28 
	gpidAºay
[3] = {0};

31 
	$sig_d´m_u§_h™dÀ
(
sig«l
)

33 
	`¥ötf
("Receiveá signal from otherÖrocess!\n");

34 
	}
}

37 
	$sig_d´m_°›_h™dÀ
(
sig«l
)

39 
i
 = -1;

40 
ªt
 = -1;

42 
	`¥ötf
("PreparingÅoÉxitÅheÖrocess.\n");

43 
i
=0; i<3; i++) {

44 
ªt
 = 
	`kûl
(
pidAºay
[
i
], 
SIGTERM
);

45 
	`¥ötf
("ªà%d -=0=0=0=0=0=0\n", 
ªt
);

47 
	`exô
(0);

48 
	}
}

51 
	$sig_fú°_°›_h™dÀ
(
sig«l
)

53 
	`¶ìp
(15);

54 
	`¥ötf
("%s\n", 
__func__
);

55 
	}
}

58 
	$sig_£c⁄d_°›_h™dÀ
(
sig«l
)

60 
	`¶ìp
(15);

61 
	`¥ötf
("secondÖrocess quit!\n");

62 
	}
}

65 
	$sig_thúd_°›_h™dÀ
(
sig«l
)

67 
	`¶ìp
(15);

68 
	`¥ötf
("thirdÖrocess quit!\n");

69 
	}
}

72 
	$fú°Pro˚ss
()

75 
	`sig«l
(
SIGTERM
, 
sig_fú°_°›_h™dÀ
);

77 
True
) {

78 
	`¶ìp
(10);

79 
	`¥ötf
("firstÖrocessÑunning!\n");

83 
	}
}

86 
	$£c⁄dPro˚ss
()

89 
	`sig«l
(
SIGTERM
, 
sig_£c⁄d_°›_h™dÀ
);

91 
True
) {

92 
	`¶ìp
(15);

93 
	`¥ötf
("secondÖrocessÑunning!\n");

97 
	}
}

100 
	$thúdPro˚ss
()

103 
	`sig«l
(
SIGTERM
, 
sig_thúd_°›_h™dÀ
);

105 
True
) {

106 
	`¶ìp
(5);

107 
	`¥ötf
("thirdÖrocessÑunning!\n");

111 
	}
}

115 
	$kûl_f‹k_chûd
(
num
)

117 
pid_t
 
pid
 = 0;

118 
ªt
 = -1;

119 
i
 = 0;

121 
i
=0; i<
num
; i++) {

122 i‡((
pid
=
	`f‹k
()) < 0) {

124 } i‡(
pid
 == 0) {

125 i‡(
i
 == 0) {

126 
ªt
 = 
	`fú°Pro˚ss
();

127 } i‡(
i
 == 0) {

128 
ªt
 = 
	`£c⁄dPro˚ss
();

130 
ªt
 = 
	`thúdPro˚ss
();

132 
	`exô
(0);

134 
pidAºay
[
i
] = 
pid
;

135 
	`¥ötf
("ËøõÁ®ã%dÂàõÂª∫ÊàêÂäüÔºÅ\n", 
pid
);

138 
	}
}

141 
	$maö
(
¨gc
, *
¨gv
[])

143 
lock_fd
 = -1;

144 
Êock
 
lock
;

145 
°r
[64];

146 
pid_t
 
pid
;

147 
mode
 = 1;

150 
lock_fd
 = 
	`›í
(
DAEMON_PID_FILE
, 
O_CREAT
 | 
O_RDWR
, 0666);

151 i‡(
lock_fd
 == -1) {

152 
	`¥ötf
("C™'à›íÜock fûê'%s' ,Éº‹ : '%s'\n", 
DAEMON_PID_FILE
, 
	`°ªº‹
(
î∫o
));

162 
lock
.
l_whí˚
 = 
SEEK_SET
;

163 
lock
.
l_ty≥
 = 
F_WRLCK
;

164 
lock
.
l_°¨t
 = 0;

165 
lock
.
l_Àn
 = 0;

166 
lock
.
l_pid
 = 0;

168 i‡(
¨gc
 =1 || (¨g¯=2 && (
	`°rcmp
(
¨gv
[1], "start") == 0))) {

169 
	`¥ötf
("\n(~_~)Readying start wafalarmd......\n");

170 
mode
 = 1;

171 } i‡(
¨gc
 =2 && (
	`°rcmp
(
¨gv
[1], "stop") == 0)) {

172 
mode
 = 2;

173 
	`¥ötf
("\n(>_<)Readying stop wafalarmd......\n");

175 
	`¥ötf
("\n(v_v)unknown option, usage: wafalarmd [start|stop|reload]\n");

176 
	`˛o£
(
lock_fd
);

180 i‡(
mode
 == 1) {

181 i‡(
	`f˙é
(
lock_fd
, 
F_SETLK
, &
lock
) < 0 ) {

182 
	`¥ötf
("\n(v_v)Other wafalarmdÖrocess isÑunning!\n");

183 
	`˛o£
(
lock_fd
);

188 i‡(
mode
 == 2) {

189 i‡(
	`ªad
(
lock_fd
, 
°r
, 64) < 0) {

190 
	`˛o£
(
lock_fd
);

194 
pid
 = 
	`©ﬁ
(
°r
);

195 
	`kûl
(
pid
, 
SIGTERM
);

200 
	`¢¥ötf
(
°r
, 63, "%lu", ()
	`gëpid
());

201 
°r
[63] = '\0';

202 
	`¥ötf
("Cuºíàpid i†:%s\n", 
°r
);

203 
	`·runˇã
(
lock_fd
, 0);

204 i‡(
	`wrôe
(
lock_fd
, 
°r
, 
	`°æí
(str)) != strlen(str)) {

205 
	`¥ötf
("C™'àwrôêlock fûe,Éº‹ : '%s'\n", 
	`°ªº‹
(
î∫o
));

209 
	`sig«l
(
SIGUSR1
, 
sig_d´m_u§_h™dÀ
);

210 
	`sig«l
(
SIGTERM
, 
sig_d´m_°›_h™dÀ
);

212 
	`kûl_f‹k_chûd
(3);

214 
True
) {

215 
	`¶ìp
(10);

219 
	}
}

	@/root/grocery-shop/language/gcc/src/signal/signalMask.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<sig«l.h
>

8 
	~<uni°d.h
>

10 
sig_quô
();

11 
sig_a˘i⁄
();

12 
sig_u£r1
();

13 
sig_Æm
();

14 
sig«l_mask
();

15 
sig«l_a˘i⁄
();

16 
sig«l_ty≥_u£r
();

17 
sig«l_ty≥_Æ¨m
();

19 
	gglobÆ_Æ¨m
;

22 
	$maö
()

24 
ªt
 = -1;

27 
	`¥ötf
("=====================test mask=================\n");

29 i‡(
ªt
 < 0) {

31 
	`¥ötf
("=====================test Action=================\n");

33 i‡(
ªt
 < 0) {

36 
	`¥ötf
("=====================test USER1=================\n");

38 i‡(
ªt
 < 0) {

41 
	`¥ötf
("=====================test ALARM=================\n");

42 
ªt
 = 
	`sig«l_ty≥_Æ¨m
();

43 i‡(
ªt
 < 0) {

47 
	}
}

54 
	$sig_quô
(
signo
)

56 
	`¥ötf
("ÁõëÂê¨Âà∞‰ø°Âè∑--SIGQUIT!\n");

57 i‡(
	`sig«l
(
SIGQUIT
, 
SIG_DFL
Ë=
SIG_ERR
) {

58 
	`¥ötf
("can'tÑeset SIGQUIT\n");

60 
	}
}

68 
	$sig_a˘i⁄
(
signo
)

70 
	`¥ötf
("sig_action:ÁõëÂê¨Âà∞‰ø°Âè∑SIGQUIT!\n");

71 
	}
}

79 
	$sig_u£r1
(
signo
)

81 
	`¥ötf
("sig_action:ÁõëÂê¨Âà∞‰ø°Âè∑SIGUSR1!\n");

82 
	}
}

89 
	$sig_Æm
(
signo
)

91 i‡(
globÆ_Æ¨m
 == 0) {

92 
globÆ_Æ¨m
 = 1;

94 
	`¥ötf
("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");

95 
	}
}

102 
	$sig«l_ty≥_Æ¨m
()

104 
ªt
 = 0;

106 i‡(
	`sig«l
(
SIGALRM
, 
sig_Æm
Ë=
SIG_ERR
) {

107 
	`¥ötf
("can't catch SIGALRM");

108 
ªt
 = -1;

109 
íd
;

112 
	`¥ötf
("ALARM:ÂºÄÂßãËÆæÁΩÆÂÆöÊó∂Âô®Ôºà7ÁßíÔºâ:\n");

113 
	`Æ¨m
(20);

115 i‡(
globÆ_Æ¨m
 == 0) {

116 
	`¥ötf
(" (v_v)Ê≤°ÊúâÈòªÂ°ûÂì¶ÔºÅË∞ÉÁî®pauseÈòªÂ°û.\n");

117 
	`∑u£
();

119 
	`¥ötf
(" (~_~)ÈòªÂ°û‰∫ÜÔºÅ\n");

122 
íd
:

123  
ªt
;

124 
	}
}

131 
	$sig«l_a˘i⁄
()

134 i‡(
	`sig«l
(
SIGQUIT
, 
sig_a˘i⁄
Ë=
SIG_ERR
) {

135 
	`¥ötf
("‰∏çËÉΩËß¶ÂèëSIGQUIT‰ø°Âè∑!\n");

138 
	`¥ötf
("Action:Âª∂Êó∂Á≠âÂæÖ5ÁßíÔºåÊ£ÄÊü•‰ø°Âè∑Âπ∂ËøõË°åÂõûË∞ÉÂ§ÑÁêÜ:\n");

139 
	`∑u£
();

141 i‡(
	`sig«l
(
SIGQUIT
, 
SIG_IGN
Ë=
SIG_ERR
) {

142 
	`¥ötf
("‰∏çËÉΩËß¶ÂèëSIGQUIT‰ø°Âè∑!\n");

145 
	`¥ötf
("Action:Âª∂Êó∂Á≠âÂæÖ5ÁßíÔºåÊ£ÄÊü•‰ø°Âè∑ÂèëÁîüÂêéÊòØÂê¶Ë¢´ÂøΩÁï•:\n");

146 
	`¶ìp
(5);

148 i‡(
	`sig«l
(
SIGQUIT
, 
SIG_DFL
Ë=
SIG_ERR
) {

149 
	`¥ötf
("‰∏çËÉΩËß¶ÂèëSIGQUIT‰ø°Âè∑!\n");

152 
	`¥ötf
("Action:Âª∂Êó∂Á≠âÂæÖ5ÁßíÔºåÊ£ÄÊü•‰ø°Âè∑ÂèëÁîüÂêéÁöÑÈªòËÆ§Âä®‰Ωú:\n");

153 
	`∑u£
();

155 
	`¥ötf
("signal_actionÉnd!\n");

157 
	}
}

163 
	$sig«l_mask
()

165 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
≥ndmask
;

168 i‡(
	`sig«l
(
SIGQUIT
, 
sig_quô
Ë=
SIG_ERR
) {

169 
	`¥ötf
("can't catch SIGQUIT");

174 
	`sigem±y£t
(&
√wmask
);

175 
	`sigadd£t
(&
√wmask
, 
SIGQUIT
);

176 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0) {

177 
	`¥ötf
("SIG_BLOCKÉrror\n");

180 i‡(
	`sigismembî
(&
√wmask
, 
SIGQUIT
) == 0) {

181 
	`¥ötf
("ÈòªÂ°ûSIGQUIT‰ø°Âè∑Â§±Ë¥•!\n");

184 
	`¥ötf
("MASKÔºöÂºÄÂßãÂøΩÁï•‰ø°Âè∑SIGQUITÔºåÊåÅÁª≠Êó∂Èó¥5Áßí(ËØ∑Êåâctrl+dÊµãËØï)"

186 
	`∑u£
();

189 i‡(
	`sig≥ndög
(&
≥ndmask
) < 0) {

190 
	`¥ötf
("Ëé∑ÂèñÂΩìÂâç‰ø°Âè∑ÈõÜÔºåÂáΩÊï∞sigpendingË∞ÉÁî®Â§±Ë¥•!\n");

193 i‡(
	`sigismembî
(&
≥ndmask
, 
SIGQUIT
)){

194 
	`¥ötf
("\nSIGQUITÖendingÔºåË°®Á§∫Êúâ‰ø°Âè∑‰∫ßÁîüÂπ∂Â§Ñ‰∫éÊú™ÂÜ≥Áä∂ÊÄÅ„ÄÇ\n");

200 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0) {

201 
	`¥ötf
("SIG_SETMASKÉrror\n");

204 
	`¥ötf
("MASK:SIGQUIT unblocked,Â∞ëÂπ¥ÔºåÂºÄÂßãÊµãËØïÂêß(100ÁßíÁöÑÊú∫‰ºö)Ôºö\n");

206 
	`¶ìp
(100);

209 
	}
}

217 
	$sig«l_ty≥_u£r
()

219 
ªt
 = 0;

222 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u£r1
Ë=
SIG_ERR
) {

223 
	`¥ötf
("can't catch SIGUSR1");

224 
ªt
 = -1;

225 
íd
;

227 
	`¥ötf
("TYPE_USERÔºöÂºÄÂêØÁõëÂê¨SIGUSER1‰ø°Âè∑:\n");

228 
	`∑u£
();

230 
íd
:

231  
ªt
;

232 
	}
}

	@/root/grocery-shop/language/gcc/src/sizeof/array.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
¨øy
[3][3] = {{3,4,5},{10,5,6},{0,1,1}};

9 **
p
 = 
NULL
;

10 *
l
 = 
NULL
;

12 
p
 = (**)
¨øy
;

13 
l
 = *
p
+1;

14 
	`¥ötf
("%p, %p, %p, %p\n", 
p
, 
l
, 
¨øy
,árray[0]);

17 
s
 = 3;

18 
	`¥ötf
("%d %d\n", (
s
<<1), (s<<2));

20 *
hód
 = 
NULL
;

22 
hód
 = (*)
	`mÆloc
(100);

23 i‡(
NULL
 =
hód
) {

26 
	`mem£t
(
hód
, 0, 100);

27 
	`¥ötf
("addªss:%p\n", 
hód
);

29 (*
±
)[3] = 
¨øy
;

30 
	`¥ötf
("%p, %p, %d, %d\n", 
±
+1, *pt, *(*pt+1), *(*pt+2));

32 
abc
[4] = {1, 2, 0};

33 
	`¥ötf
("%∞%∞\n", 
abc
, &abc);

36 
	}
}

	@/root/grocery-shop/language/gcc/src/sizeof/test.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

6 
c⁄dôi⁄
 
	tc⁄dôi⁄
;

7 
	sc⁄dôi⁄
 {

8 
	mv¨übÀs
[512];

9 
	m›î©‹
[64];

10 
	må‚s
[256];

11 
	mex¥essi⁄
[256];

14 
	$ã°Ma¸o
()

16 
	#LINE
 "ØØa\r\n"

	)

18 
	`¥ötf
("Ma¸o(\"\\r\\n\"Ëi†%d:\n",(
LINE
));

19 
	`¥ötf
("Ma¸ÿ°æí (\"\\r\\n\"Ëi†%d:\n",
	`°æí
(
LINE
));

20 
	}
}

22 
	$ã°C⁄°Såög
()

24 c⁄° *
°r
 = "abcdef";

26 
	`¥ötf
("abcde‡i†%d\n", (
°r
));

27 
	`¥ötf
("shit is %d\n", ("shit"));

28 
	}
}

30 
	$maö
(
¨gc
,** 
¨gv
) {

32 
	`ã°Ma¸o
();

33 
	`ã°C⁄°Såög
();

35 c⁄° *
a
 = "";

36 c⁄° *
cookõ
 = "Set-cookie";

37 
num
 = 
	`©oi
(
a
);

38 
	`¥ötf
("%d\n", 
num
);

40 
	`¥ötf
("c⁄dôi⁄--%d\n", (
c⁄dôi⁄
)*5);

41 
	`¥ötf
("£t-cookõ--%d--%d\n", ("£t-cookõ"), (
cookõ
));

44 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/client.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<mÆloc.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<î∫o.h
>

7 
	~<sys/°©.h
>

8 
	~<f˙é.h
>

9 
	~<sys/£À˘.h
>

10 
	~<uni°d.h
>

11 
	~<ãrmios.h
>

12 
	~<sys/°©.h
>

14 
	~<sys/time.h
>

15 
	~<sig«l.h
>

17 
	~<sys/sockë.h
>

18 
	~<sys/un.h
>

20 
	~<sys/io˘l.h
>

21 #¥agm®
∑ck
(1)

22 
	#UNIX_DOMAIN2
 "/tmp/UNIX2.domaö"

	)

24 
	gªcv_php_buf
[256]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07};

25 
	sã°


27 
	m«me
[32];

28 
	mb
;

29 
	md©a
[100];

30 }
	g£
;

32 
	$maö
()

34 
c⁄√˘_fd
;

35 
ªt
=0;

36 
i
;

37 
sockaddr_un
 
§v_addr
;

38 
	`¥ötf
("ipcÈÄö‰ø°Á∫øÁ®ã\n");

41 
c⁄√˘_fd
=
	`sockë
(
AF_UNIX
,
SOCK_STREAM
,0);

42 
	`¥ötf
("%d\n",
c⁄√˘_fd
);

43 if(
c⁄√˘_fd
<0)

45 
	`≥º‹
("cannot create communication socket");

46 
	`¥ötf
("%d\n",
c⁄√˘_fd
);

51 
§v_addr
.
sun_Ámûy
=
AF_UNIX
;

52 
	`°r˝y
(
§v_addr
.
sun_∑th
,
UNIX_DOMAIN2
);

55 
ªt
=
	`c⁄√˘
(
c⁄√˘_fd
,(
sockaddr
*)&
§v_addr
,(srv_addr));

56 if(
ªt
==-1)

58 
	`˛o£
(
c⁄√˘_fd
);

59 
	`¥ötf
("connect fail\n");

64 
	`mem£t
(&
£
, 0, (se));

65 
	`°r˝y
(
£
.
«me
, "xxxxx");

66 
£
.
b
=0x01020304;

67 
£
.
c
=0x0506070
job
;

68 
	`wrôe
(
c⁄√˘_fd
, &
£
, (se));

82 
	`¶ìp
(1);

83 
	`˛o£
(
c⁄√˘_fd
);

88 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/nonUdpClient.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

5 
	~<√tdb.h
>

6 
	~<°dio.h
>

7 
	~<uni°d.h
>

8 
	~<î∫o.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~<sys/£À˘.h
>

12 
	~<sys/f˙é.h
>

14 
	#MAX_LENGTH
 1024

	)

15 
	#HOST
 "localhost"

16 

	)

17 
	$îr‹
(*
mesßge
)

19 
	`≥º‹
(
mesßge
);

20 
	`exô
(1);

21 
	}
}

23 
	$maö
()

25 
fd_£t
 
‹igöÆ_sockë
;

26 
fd_£t
 
‹igöÆ_°dö
;

27 
fd_£t
 
ªadfds
;

28 
fd_£t
 
wrôefds
;

29 
timevÆ
 
tv
;

30 
numfd
, 
Êags
;

31 
sockë_fd
,
byãs_ªcõved
;

32 
addªss_Àngth
;

33 
sockaddr_ö
 
£rvî_addªss
;

34 
ho°ít
 *
ho°
;

35 
£nd_d©a
[
MAX_LENGTH
],
ªcõve_d©a
[MAX_LENGTH];

37 
ho°
 = (
ho°ít
 *Ë
	`gëho°by«me
((*)
HOST
);

38 i‡((
sockë_fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) == -1)

40 
	`îr‹
("socket()");

43 
Êags
 = 
	`f˙é
(
sockë_fd
, 
F_GETFL
);

44 
Êags
 |
O_NONBLOCK
;

45 
	`f˙é
(
sockë_fd
, 
F_SETFL
, 
Êags
);

49 
	`FD_ZERO
(&
‹igöÆ_sockë
);

50 
	`FD_ZERO
(&
‹igöÆ_°dö
);

51 
	`FD_ZERO
(&
ªadfds
);

52 
	`FD_ZERO
(&
wrôefds
);

54 
	`FD_SET
(
sockë_fd
, &
‹igöÆ_sockë
);

55 
	`FD_SET
(
sockë_fd
, &
ªadfds
);

56 
	`FD_SET
(0,&
‹igöÆ_°dö
);

57 
	`FD_SET
(0, &
wrôefds
);

61 
numfd
 = 
sockë_fd
 + 1;

64 
tv
.
tv_£c
 = 10;

65 
tv
.
tv_u£c
 = 500000;

68 
£rvî_addªss
.
sö_Ámûy
 = 
AF_INET
;

69 
£rvî_addªss
.
sö_p‹t
 = 
	`ht⁄s
(5000);

70 
£rvî_addªss
.
sö_addr
 = *((
ö_addr
 *)
ho°
->
h_addr
);

71 
	`bzîo
(&(
£rvî_addªss
.
sö_zîo
),
job
);

72 
addªss_Àngth
 = (
sockaddr
);

73 
	`¥ötf
("Type (q or Q)átánytimeÅo quit\n");

77 
ªadfds
 = 
‹igöÆ_sockë
;

78 
wrôefds
 = 
‹igöÆ_°dö
;

79 
ªcõve
 = 
	`£À˘
(
numfd
, &
ªadfds
, &
wrôefds
, 
NULL
, &
tv
);

80 i‡(
ªcõve
 == -1)

82 
	`≥º‹
("select");

84 i‡(
ªcõve
 == 0)

86 
	`¥ötf
("Timeout occurred! No dataáfter 10.5 seconds.\n");

91 i‡(
	`FD_ISSET
(
sockë_fd
, &
ªadfds
))

93 
	`FD_CLR
(
sockë_fd
, &
ªadfds
);

94 
byãs_ªcõved
 = 
	`ªcv‰om
(
sockë_fd
,
ªcõve_d©a
, ‘ecõve_d©a),0,(
sockaddr
 *)&
£rvî_addªss
,&
addªss_Àngth
);

95 
ªcõve_d©a
[
byãs_ªcõved
]= '\0';

96 if((
	`°rcmp
(
ªcõve_d©a
 , "q") == 0) || (strcmp(recieve_data , "Q") == 0))

98 
	`¥ötf
("\nServer hasÉxitedÅhe chat.\n");

101 
	`¥ötf
("\n(%†, %dËßid: %s\n",
	`öë_¡ﬂ
(
£rvî_addªss
.
sö_addr
),
	`¡ohs
(£rvî_addªss.
sö_p‹t
),
ªcõve_d©a
);

104 i‡(
	`FD_ISSET
(0 , &
wrôefds
))

107 
	`FD_CLR
(0, &
wrôefds
);

108 
	`¥ötf
("ClIENT: ");

109 
	`fgës
 (
£nd_d©a
, 
MAX_LENGTH
, 
°dö
);

110 i‡((
	`°æí
(
£nd_d©a
)>0) && (send_data[strlen (send_data) - 1] == '\n'))

112 
£nd_d©a
[
	`°æí
 (send_data) - 1] = '\0';

114 i‡((
	`°rcmp
(
£nd_d©a
 , "q") == 0) || strcmp(send_data , "Q") == 0)

116 
	`£ndto
(
sockë_fd
, 
£nd_d©a
, 
	`°æí
(£nd_d©a), 0, (
sockaddr
 *)&
£rvî_addªss
, (sockaddr));

121 
	`£ndto
(
sockë_fd
, 
£nd_d©a
, 
	`°æí
(£nd_d©a), 0, (
sockaddr
 *)&
£rvî_addªss
, (sockaddr));

124 
	`¥ötf
("\nOOPS! What happened? CLIENT");

128 
	`˛o£
 (
sockë_fd
);

130 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/nonUdpServer.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<î∫o.h
>

8 
	~<°rög.h
>

9 
	~<°dlib.h
>

10 
	~<sys/£À˘.h
>

11 
	~<sys/f˙é.h
>

13 #i‡!
deföed
(
__boﬁ_åue_Ál£_¨e_deföed
Ë&& !deföed(
__˝lu•lus
)

14 
	tboﬁ
;

15 
	#åue
 1

	)

16 
	#Ál£
 0

	)

17 
	#__boﬁ_åue_Ál£_¨e_deföed


	)

20 
	#UDP_SERVER_PORT
 5000

	)

21 
	#MAX_LENGTH
 1024

	)

30 
	$_îr‹
(*
mesßge
)

32 
	`≥º‹
(
mesßge
);

33 
	`exô
(1);

34 
	}
}

36 
boﬁ
 
	$sockë_öô
(*
sockfd
, 
sockaddr_ö
 *
ßddr
)

38 
cfd
;

40 i‡((
cfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) == -1) {

41 
	`_îr‹
("socket()");

42  
Ál£
;

46 
Êags
 = 
	`f˙é
(
cfd
, 
F_GETFL
);

47 
Êags
 |
O_NONBLOCK
;

48 
	`f˙é
(
cfd
, 
F_SETFL
, 
Êags
);

53 
ßddr
->
sö_Ámûy
 = 
AF_INET
;

54 
ßddr
->
sö_p‹t
 = 
	`ht⁄s
(
UDP_SERVER_PORT
);

55 
ßddr
->
sö_addr
.
s_addr
 = 
INADDR_ANY
;

56 
	`bzîo
(&(
ßddr
->
sö_zîo
),
job
);

58 
r°
 = 
	`böd
(
cfd
,(
sockaddr
 *)
ßddr
, (sockaddr));

59 i‡(
r°
 == -1) {

60 
	`_îr‹
("bind()");

63 *
sockfd
 = 
cfd
;

65  
åue
;

66 
	}
}

68 
boﬁ
 
	$ªad_msg
(
sockfd
, 
buf
, 
sockaddr
 *
ˇddr
, *
ˇddrLí
)

70 
buff
[
MAX_LENGTH
];

72 
∂í
 = 
	`ªcv‰om
(
sockfd
, 
buf
, 
MAX_LENGTH
,0, (
sockaddr
 *)
ˇddr
, 
ˇddrLí
);

73 
ªcõve_d©a
[
∂í
] = '\0';

74 if((
	`°rcmp
(
buf
, "q") == 0) || (strcmp(buf , "Q") == 0)) {

75 
	`¥ötf
("\nClient hasÉxitedÅhe chat.\n");

78 
	`¥ötf
("\n(%†, %dËßid: %s\n",
	`öë_¡ﬂ
(
ˇddr
->
sö_addr
),

79 
	`¡ohs
(
ˇddr
->
sö_p‹t
), 
buf
);

81  
åue
;

82 
	}
}

84 
boﬁ
 
	$wrôe_msg
(
sockfd
, c⁄° 
sbuf
, 
sockaddr
 *
ˇddr
, *
ˇddrLí
)

86 
	`¥ötf
("SERVER: ");

87 
	`fgës
 (
sbuf
, 
MAX_LENGTH
, 
°dö
);

88 i‡((
	`°æí
(
sbuf
)>0) && (sbuf[strlen (sbuf) - 1] == '\n')) {

89 
sbuf
[
	`°æí
(sbuf) - 1] = '\0';

91 i‡((
	`°rcmp
(
sbuf
 , "q") == 0) || (strcmp(sbuf , "Q") == 0)) {

92 
	`£ndto
(
sockfd
,
sbuf
,
	`°æí
(sbuf),0,

93 (
sockaddr
 *)&
ˇddr
, (sockaddr));

94  
Ál£
;

96 
	`£ndto
(
sockfd
, 
sbuf
,
	`°æí
(sbuf),0,

97 (
sockaddr
 *)&
ˇddr
, (sockaddr));

99  
åue
;

100 
	}
}

102 
	$maö
()

104 
fd_£t
 
‹igöÆ_sockë
, 
‹igöÆ_°dö
;

105 
fd_£t
 
ªadfds
, 
wrôefds
;

106 
timevÆ
 
tv
;

107 
numfd
, 
Êags
, 
ª˚ive
;

108 
sockfd
, 
byãs_ªad
;

109 
addrLí
;

110 
ªcõve_d©a
[
MAX_LENGTH
], 
sbuf
[MAX_LENGTH];

111 
sockaddr_ö
 
£rvî_addªss
 , 
ˇddr
;

114 
	`FD_ZERO
(&
‹igöÆ_sockë
);

115 
	`FD_ZERO
(&
‹igöÆ_°dö
);

116 
	`FD_ZERO
(&
ªadfds
);

117 
	`FD_ZERO
(&
wrôefds
);

119 
	`FD_SET
(
sockfd
, &
‹igöÆ_sockë
);

120 
	`FD_SET
(
sockfd
, &
ªadfds
);

121 
	`FD_SET
(0,&
‹igöÆ_°dö
);

122 
	`FD_SET
(0, &
wrôefds
);

124 
numfd
 = 
sockfd
 + 1;

125 
addrLí
 = (
sockaddr
);

126 
	`¥ötf
("\nUDP_Server Waiting for clientÅoÑespond...\n");

127 
	`¥ötf
("Type (q or Q)átánytimeÅo quit\n");

128 
	`fÊush
(
°dout
);

133 
tv
.
tv_£c
 = 1;

134 
tv
.
tv_u£c
 = 500000;

135 
ªadfds
 = 
‹igöÆ_sockë
;

136 
wrôefds
 = 
‹igöÆ_°dö
;

138 
ªcõve
 = 
	`£À˘
(
numfd
, &
ªadfds
, &
wrôefds
, 
NULL
, &
tv
);

139 i‡(
ªcõve
 == -1) {

140 
	`_îr‹
("select");

141 } i‡(
ªcõve
 == 0) {

142 
	`¥ötf
("Timeout occurred! No dataáfter 10.5 seconds.\n");

145 i‡(
	`FD_ISSET
(
sockfd
, &
ªadfds
))

147 
	`FD_CLR
(
sockfd
, &
ªadfds
);

148 
	`ªad_msg
(
sockfd
, 
ªcõve_d©a
, &
ˇddr
, &
addrLí
);

149 } i‡(
	`FD_ISSET
(0, &
wrôefds
)) {

150 
	`FD_CLR
(0, &
wrôefds
);

151 
	`wrôe_msg
(
sockfd
, 
sbuf
, &
ˇddr
, &
ˇddrLí
);

153 
	`¥ötf
("\nOOPS! What happened? SERVER");

158 
	`˛o£
(
sockfd
);

160 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/server.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<mÆloc.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<î∫o.h
>

7 
	~<sys/°©.h
>

8 
	~<f˙é.h
>

9 
	~<sys/£À˘.h
>

10 
	~<uni°d.h
>

11 
	~<ãrmios.h
>

12 
	~<sys/°©.h
>

14 
	~<sys/time.h
>

15 
	~<sig«l.h
>

17 
	~<sys/sockë.h
>

18 
	~<sys/un.h
>

20 
	#UNIX_DOMAIN
 "/tmp/UNIX2.domaö"

	)

22 
	gªcv_php_buf
[256];

23 
	gªcv_php_num
=0;

24 c⁄° 
	gªcv_php_buf1
[20]={0x00,0x01,0x02,0x03,0x04,0x05,0x06};

26 
	$maö
()

28 
li°í_fd
;

29 
com_fd
;

30 
ªt
=0;

31 
i
;

33 
sockÀn_t
 
Àn
;

34 
sockaddr_un
 
˛t_addr
;

35 
sockaddr_un
 
§v_addr
;

40 
li°í_fd
=
	`sockë
(
AF_UNIX
,
SOCK_STREAM
,0);

41 if(
li°í_fd
<0)

43 
	`≥º‹
("cannot createÜistening socket");

51 
§v_addr
.
sun_Ámûy
=
AF_UNIX
;

52 
	`°∫˝y
(
§v_addr
.
sun_∑th
,
UNIX_DOMAIN
,(srv_addr.sun_path)-1);

53 
	`u∆ök
(
UNIX_DOMAIN
);

55 
ªt
=
	`böd
(
li°í_fd
,(
sockaddr
*)&
§v_addr
,(srv_addr));

56 if(
ªt
==-1)

58 
	`≥º‹
("cannot bind server socket");

59 
	`˛o£
(
li°í_fd
);

60 
	`u∆ök
(
UNIX_DOMAIN
);

64 
ªt
=
	`li°í
(
li°í_fd
,1);

65 if(
ªt
==-1)

67 
	`≥º‹
("cannotÜistenÅhe client connectÑequest");

68 
	`˛o£
(
li°í_fd
);

69 
	`u∆ök
(
UNIX_DOMAIN
);

72 
	`chmod
(
UNIX_DOMAIN
,00777);

76 
Àn
=(
˛t_addr
);

77 
com_fd
=
	`ac˚±
(
li°í_fd
,(
sockaddr
*)&
˛t_addr
, &
Àn
);

78 if(
com_fd
<0)

80 
	`≥º‹
("cannotáccept client connectÑequest");

81 
	`˛o£
(
li°í_fd
);

82 
	`u∆ök
(
UNIX_DOMAIN
);

86 
	`mem£t
(
ªcv_php_buf
,0,256);

87 
ªcv_php_num
=
	`ªad
(
com_fd
,
ªcv_php_buf
,(recv_php_buf));

88 
	`¥ötf
("\n=====recv=====\n");

89 
i
=0;i<
ªcv_php_num
;i++)

90 
	`¥ötf
("%d ",
ªcv_php_buf
[
i
]);

91 
	`¥ötf
("\n");

105 
	`wrôe
(
com_fd
,
ªcv_php_buf
,
ªcv_php_num
);

106 
	`¥ötf
("\n=====send=====\n");

107 
i
=0;i<
ªcv_php_num
;i++)

108 
	`¥ötf
("%d ",
ªcv_php_buf
[
i
]);

109 
	`¥ötf
("\n");

111 
	`˛o£
(
com_fd
);

119 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/unixSocketClient.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<ev.h
>

6 
	~<√töë/ö.h
>

7 
	~<sys/¥˘l.h
>

8 
	~<sys/sockë.h
>

9 
	~<sys/un.h
>

11 
	#MAX_ALLOWED_CLIENT
 10240

	)

12 
	#UNIX_SOCKET_FILE
 "/d©a/agítSîvî/ngöx-ªdis.sock"

	)

14 
	ssockë_d©a_∑ckage
 {

15 
	m«me
[32];

16 
	md©a_Àn
;

17 
	md©a
[];

21 
sockë_d©a_∑ckage
 
	tsockë_d©a_∑ckage
;

26 
ölöe
 

27 
	$sockë_h™dÀ
(*
«me
, *
°rög
)

29 
˛ifd
;

30 
∂í
;

31 
sockaddr_un
 
£rvaddr
;

32 
sockÀn_t
 
sockÀn
;

33 
sockë_d©a_∑ckage
 *
£ndD
;

36 i‡–(
˛ifd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0 )) < 0 ) {

41 
£rvaddr
.
sun_Ámûy
 = 
AF_UNIX
;

42 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIX_SOCKET_FILE
);

44 
sockÀn
 = (
£rvaddr
);

45 i‡(
	`c⁄√˘
(
˛ifd
, (
sockaddr
 *)&
£rvaddr
, 
sockÀn
) < 0) {

50 
∂í
 = (
sockë_d©a_∑ckage
Ë+ 
	`°æí
(
°rög
) + 1;

52 
£ndD
 = (
sockë_d©a_∑ckage
*)
	`mÆloc
(
∂í
);

53 
	`mem£t
(
£ndD
, 0, 
∂í
);

54 
	`°r˝y
(
£ndD
->
d©a
, 
°rög
);

55 
£ndD
->
d©a_Àn
 = 
	`°æí
(
°rög
) + 1;

56 
	`°r˝y
(
£ndD
->
«me
,Çame);

57 
	`¥ötf
("«mê%† d©a_Àn=%d d©a=%s\n", 
£ndD
->
«me
, sídD->
d©a_Àn
, sídD->
d©a
);

59 
ªt
;

60 
ªt
 = 
	`wrôe
(
˛ifd
, (*)
£ndD
, 
∂í
);

61 
	`¥ötf
("ªà%d\n", 
ªt
);

62 i‡(
ªt
 !
∂í
) {

63 
	`¥ötf
("-------------\n");

64 
	`˛o£
(
˛ifd
);

70 
	`˛o£
(
˛ifd
);

72 
	}
}

76 
	$maö
(
¨gc
, **
¨gv
)

78 
«me
[32] = {0};

79 
d©a
[1024] = {0};

95 
	`sockë_h™dÀ
("xxxxxxxxx", "bbbbbbbbb");

98 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/unixSocketServer.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°ddef.h
>

4 
	~<°rög.h
>

5 
	~<uni°d.h
>

6 
	~<√töë/ö.h
>

7 
	~<ev.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/¥˘l.h
>

10 
	~<sys/un.h
>

12 
	#MAX_ALLOWED_CLIENT
 10240

	)

13 
	#UNIX_SOCKET_FILE
 "/tmp/a.sockë"

	)

15 
	ssockë_d©a_∑ckage
 {

16 
	m«me
[32];

17 
	md©a_Àn
;

18 
	md©a
[];

21 
sockë_d©a_∑ckage
 
	tsockë_d©a_∑ckage
;

24 
ac˚±_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
);

25 
timî_cb
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w
, 
ªvíts
);

27 
ev_timî
 
	gmytimî
;

29 
	$maö
()

31 
ev_lo›
 *
lo›
=
	`ev_deÁu…_lo›
(0);

32 
sd
;

33 
sockaddr_un
 
addr
;

34 
sockÀn_t
 
addæí
;

37 
ev_io
 
sockë_ac˚±
;

39 i‡((
sd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

40 
	`¥ötf
("socketÉrror\n");

44 
	`bzîo
(&
addr
, (
sockaddr_un
));

45 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

46 
	`°r˝y
(
addr
.
sun_∑th
, 
UNIX_SOCKET_FILE
);

47 
addæí
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
addr
.sun_path);

49 
	`u∆ök
(
UNIX_SOCKET_FILE
);

51 if(
	`böd
(
sd
, (
sockaddr
*)&
addr
, 
addæí
) != 0)

53 
	`¥ötf
("bindÉrror\n");

57 if(
	`li°í
(
sd
, 
SOMAXCONN
) < 0)

59 
	`¥ötf
("listenÉrror\n");

62 
	`chmod
(
UNIX_SOCKET_FILE
,00777);

65 
	`ev_io_öô
(&
sockë_ac˚±
, 
ac˚±_cb
, 
sd
, 
EV_READ
);

66 
	`ev_io_°¨t
(
lo›
, &
sockë_ac˚±
);

68 
	`ev_timî_öô
(&
mytimî
, 
timî_cb
, 0., 5.);

69 
	`ev_timî_°¨t
(
lo›
, &
mytimî
);

71 
	`ev_run
(
lo›
, 0);

73 
	`˛o£
(
sd
);

74 
	`ev_io_°›
(
lo›
, &
sockë_ac˚±
);

76 
	}
}

79 
	$timî_cb
(
ev_lo›
 *
lo›
, 
ev_timî
 *
w
, 
ªvíts
)

81 
	`¥ötf
("%s===================================\n", 
__func__
);

82 
	}
}

85 
	$ac˚±_cb
(
ev_lo›
 *
lo›
, 
ev_io
 *
w©chî
, 
ªvíts
)

88 
sockaddr_un
 
˛õ¡_addr
;

89 
sockÀn_t
 
˛õ¡_Àn
 = (
˛õ¡_addr
);

90 
sockë_d©a_∑ckage
 
ªcvbuf
;

91 
buf„r
[1024] = {0};

92 
˛õ¡_sd
, 
buÊí
;

94 
	`ev_timî_°›
(
lo›
, &
mytimî
);

95 
	`ev_timî_£t
(&
mytimî
, 0., 15.0);

96 
	`ev_timî_°¨t
(
lo›
, &
mytimî
);

98 
buÊí
 = (
sockë_d©a_∑ckage
);

99 if(
EV_ERROR
 & 
ªvíts
)

101 
	`¥ötf
("errorÉvent ináccept\n");

106 
˛õ¡_sd
 = 
	`ac˚±
(
w©chî
->
fd
, (
sockaddr
*)&
˛õ¡_addr
, &
˛õ¡_Àn
);

107 if(
˛õ¡_sd
 < 0)

109 
	`¥ötf
("acceptÉrror\n");

114 i‡(
˛õ¡_sd
 > 
MAX_ALLOWED_CLIENT
) {

115 
	`¥ötf
("fdÅoÿœrge[%d]\n", 
˛õ¡_sd
);

116 
	`˛o£
(
˛õ¡_sd
);

120 
ªt
;

121 
ªt
 = 
	`ªad
(
˛õ¡_sd
, (*)&
ªcvbuf
, 
buÊí
);

122 i‡(
ªt
 < 0) {

123 
	`¥ötf
("read socket failure!\n");

127 
buÊí
 = 
ªcvbuf
.
d©a_Àn
;

128 i‡(
buÊí
 < 0) {

129 
	`¥ötf
("package data isÇull.\n");

133 i‡(
	`ªad
(
˛õ¡_sd
, 
buf„r
, 
buÊí
) < 0) {

134 
	`¥ötf
("read socket failure!\n");

138 
	`¥ötf
("«me=%†d©a=%s\n", 
ªcvbuf
.
«me
, 
buf„r
);

140 
	}
}

	@/root/grocery-shop/language/gcc/src/socket/unixSystem.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	$maö
(
¨gc
, **
¨gv
)

6 
	`sy°em
("unixSocketClient");

9 
	}
}

	@/root/grocery-shop/language/gcc/src/string/phase_string/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
c⁄dôi⁄
 
	tc⁄dôi⁄
;

6 
	sc⁄dôi⁄
 {

7 
	mv¨übÀs
;

8 
	m›î©‹
;

9 
	må‚s
;

10 
c⁄dôi⁄
 *
	m√xt
;

11 *
	mex¥essi⁄
;

14 c⁄° 
	gesˇ≥Ch¨a˘î
[] = {'\'', '(', ')', '\\', '"'};

16 
	#ENABLE
 1

	)

17 
	#DISABLE
 0

	)

18 
	#BUFLEN
 1024

	)

21 
	mWAF_USER_DEFINED_INIT
 = -1,

22 
	mWAF_USER_DEFINED_VAR
,

23 
	mWAF_USER_DEFINED_OPT
,

24 
	mWAF_USER_DEFINED_TRFNS
,

25 
	mWAF_USER_DEFINED_EXP
,

26 
	mWAF_USER_DEFINED_MAX
,

28 c⁄° * 
	gkeyCh¨a˘î
[] = {

38 
	$esˇ≥_judge
(
ch
)

40 
i
 = 0;

41 
Àn
 = (
esˇ≥Ch¨a˘î
)/(escapeCharacter[0]);

43 
i
=0; i<
Àn
; i++) {

44 i‡(
ch
 =
esˇ≥Ch¨a˘î
[
i
]) {

50 
	}
}

51 
	$c⁄vît
(c⁄° *
°r
)

53 
ªsu…
=0,
f
=1;

55 *
°r
!='\0' && *str>='0' && *str<='9')

57 
ªsu…
Ùesu…*10 + *
°r
-'0';

58 
°r
++;

61  ((*
°r
!='\0'Ë? -1 : 
ªsu…
*
f
);

62 
	}
}

67 
	$key_judge
(c⁄° *
°rög
)

69 
i
 = 0;

71 i‡(
NULL
 =
°rög
 || !
	`°æí
(string)) {

75 
i
=0; i<
WAF_USER_DEFINED_MAX
; i++) {

76 i‡(
	`°rcmp
(
°rög
, 
keyCh¨a˘î
[
i
]) == 0) {

77  
i
;

81 
	}
}

86 
	$vÆue_judge
(
c⁄dôi⁄
 *
c⁄d
, c⁄° *
°rög
, 
Êag
)

88 
ªt
 = -1;

90 i‡(
NULL
 =
°rög
 || !
	`°æí
(string)) {

94 
Êag
) {

95 
WAF_USER_DEFINED_VAR
:

96 i‡((
ªt
=
	`c⁄vît
(
°rög
)) < 0) {

97  
ªt
;

99 
c⁄d
->
v¨übÀs
 = 
ªt
;

101 
WAF_USER_DEFINED_OPT
:

102 i‡((
ªt
=
	`c⁄vît
(
°rög
)) < 0) {

103  
ªt
;

105 
c⁄d
->
›î©‹
 = 
ªt
;

107 
WAF_USER_DEFINED_TRFNS
:

108 i‡((
ªt
=
	`c⁄vît
(
°rög
)) < 0) {

109  
ªt
;

111 
c⁄d
->
å‚s
 = 
ªt
;

118 
	}
}

125 
	$pha£_°rög
(c⁄° *
°rög
, 
c⁄dôi⁄
 **
c⁄d
)

127 c⁄° *
p
 = 
NULL
;

128 
ãmpBuf
[
BUFLEN
] = {'\0'};

129 
esˇ≥Fœg
 = 
DISABLE
;

130 
bøckëFœg
 = 
DISABLE
;

131 
doubÀQuŸeFœg
 = 
DISABLE
;

132 
•a˚Fœg
 = 
DISABLE
;

133 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

134 
ödex
 = 0, 
ªt
 = -1, 
c⁄dIndex
 = 0;

135 
c⁄dôi⁄
 *
ãmpC⁄d
 = 
NULL
, *
c⁄d
;

137 i‡(
NULL
 =
°rög
 || NULL =
c⁄d
) {

141 
	`¥ötf
("HANDLE STRING: %s\n", 
°rög
);

142 
p
 = 
°rög
;

143 *
p
 != '\0') {

144 
	`¥ötf
("%c", *
p
);

145 i‡('s' =*
p
) {

146 
ªt
 = -1;

148 i‡(
ENABLE
 =
esˇ≥Fœg
) {

149 i‡(
	`esˇ≥_judge
(*
p
) < 0) {

152 
ãmpBuf
[
ödex
++] = *
p
;

153 
esˇ≥Fœg
 = 
DISABLE
;

154 
√xt
;

157 i‡(' ' =*
p
) {

158 i‡(
ENABLE
 =
doubÀQuŸeFœg
) {

159 
ãmpBuf
[
ödex
++] = *
p
;

160 } i‡(
DISABLE
 =
•a˚Fœg
) {

161 i‡(
keyFœg
 >
WAF_USER_DEFINED_VAR
 &&

162 
keyFœg
 < 
WAF_USER_DEFINED_EXP
) {

163 i‡((
ªt
 = 
	`vÆue_judge
(
c⁄d
, 
ãmpBuf
, 
keyFœg
)) < 0) {

164  
ªt
;

166 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

167 
ödex
 = 0;

169 
•a˚Fœg
 = 
ENABLE
;

170 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

172 
√xt
;

175 
•a˚Fœg
 = 
DISABLE
;

176 i‡('(' =*
p
) {

177 i‡(
c⁄dIndex
 >= 5) {

180 
ãmpC⁄d
 = (
c⁄dôi⁄
*)
	`mÆloc
((condition));

181 
	`mem£t
(
ãmpC⁄d
, 0, (
c⁄dôi⁄
));

182 i‡(
NULL
 =*
c⁄d
) {

183 *
c⁄d
 = 
ãmpC⁄d
;

184 
c⁄d
 = 
ãmpC⁄d
;

186 
c⁄d
[
c⁄dIndex
].
√xt
 = 
ãmpC⁄d
;

187 
c⁄d
 = 
ãmpC⁄d
;

189 
bøckëFœg
 = 
ENABLE
;

190 
c⁄dIndex
++;

192 } i‡(')' =*
p
) {

193 i‡(
keyFœg
 !
WAF_USER_DEFINED_INIT
) {

194 i‡(
keyFœg
 >
WAF_USER_DEFINED_VAR
 &&

195 
keyFœg
 < 
WAF_USER_DEFINED_EXP
) {

196 i‡((
ªt
 = 
	`vÆue_judge
(
c⁄d
, 
ãmpBuf
, 
keyFœg
)) < 0) {

197  
ªt
;

203 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

204 
ödex
 = 0;

205 
bøckëFœg
 = 
DISABLE
;

206 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

207 
doubÀQuŸeFœg
 = 
DISABLE
;

208 
•a˚Fœg
 = 
DISABLE
;

210 } i‡('"' =*
p
) {

211 i‡(
DISABLE
 =
doubÀQuŸeFœg
) {

212 
doubÀQuŸeFœg
 = 
ENABLE
;

214 
ªt
 = 
	`°æí
(
ãmpBuf
) + 1;

215 
c⁄d
[
c⁄dIndex
].
ex¥essi⁄
 = (*)
	`mÆloc
(
ªt
);

216 
	`°r˝y
(
c⁄d
[
c⁄dIndex
].
ex¥essi⁄
, 
ãmpBuf
);

217 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

218 
ödex
=0;

219 
doubÀQuŸeFœg
 = 
DISABLE
;

222 } i‡(':' =*
p
) {

223 i‡(
WAF_USER_DEFINED_INIT
 !
keyFœg
) {

226 i‡((
ªt
 = 
	`key_judge
(
ãmpBuf
)) < 0) {

227  
ªt
;

229 
keyFœg
 = 
ªt
;

230 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

231 
ödex
 = 0;

234 } i‡('\\' =*
p
) {

235 
esˇ≥Fœg
 = 
ENABLE
;

238 
ãmpBuf
[
ödex
++] = *
p
;

240 
√xt
:

241 
p
++;

245 
	}
}

248 
	$pha£_°rög
(c⁄° *
°rög
, 
c⁄dôi⁄
 *
c⁄d
, *
c⁄dôi⁄Index
)

250 c⁄° *
p
 = 
NULL
;

251 
ãmpBuf
[
BUFLEN
] = {'\0'};

252 
esˇ≥Fœg
 = 
DISABLE
;

253 
bøckëFœg
 = 
DISABLE
;

254 
doubÀQuŸeFœg
 = 
DISABLE
;

255 
•a˚Fœg
 = 
DISABLE
;

256 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

257 
ödex
 = 0, 
ªt
 = -1, 
c⁄dIndex
 = -1;

259 i‡(
NULL
 =
°rög
 || NULL =
c⁄d
) {

263 
	`¥ötf
("HANDLE STRING: %s\n", 
°rög
);

264 
p
 = 
°rög
;

265 *
p
 != '\0') {

266 
	`¥ötf
("%c", *
p
);

267 i‡('s' =*
p
) {

268 
ªt
 = -1;

270 i‡(
ENABLE
 =
esˇ≥Fœg
) {

271 i‡(
	`esˇ≥_judge
(*
p
) < 0) {

274 
ãmpBuf
[
ödex
++] = *
p
;

275 
esˇ≥Fœg
 = 
DISABLE
;

276 
√xt
;

279 i‡(' ' =*
p
) {

280 i‡(
ENABLE
 =
doubÀQuŸeFœg
) {

281 
ãmpBuf
[
ödex
++] = *
p
;

282 } i‡(
DISABLE
 =
•a˚Fœg
) {

283 i‡(
keyFœg
 >
WAF_USER_DEFINED_VAR
 &&

284 
keyFœg
 < 
WAF_USER_DEFINED_EXP
) {

285 i‡((
ªt
 = 
	`vÆue_judge
(&
c⁄d
[
c⁄dIndex
], 
ãmpBuf
, 
keyFœg
)) < 0) {

286  
ªt
;

288 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

289 
ödex
 = 0;

291 
•a˚Fœg
 = 
ENABLE
;

292 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

294 
√xt
;

297 
•a˚Fœg
 = 
DISABLE
;

298 i‡('(' =*
p
) {

299 i‡(
c⁄dIndex
 >= 5) {

302 
bøckëFœg
 = 
ENABLE
;

303 
c⁄dIndex
++;

305 } i‡(')' =*
p
) {

306 i‡(
keyFœg
 !
WAF_USER_DEFINED_INIT
) {

307 i‡(
keyFœg
 >
WAF_USER_DEFINED_VAR
 &&

308 
keyFœg
 < 
WAF_USER_DEFINED_EXP
) {

309 i‡((
ªt
 = 
	`vÆue_judge
(&
c⁄d
[
c⁄dIndex
], 
ãmpBuf
, 
keyFœg
)) < 0) {

310  
ªt
;

316 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

317 
ödex
 = 0;

318 
bøckëFœg
 = 
DISABLE
;

319 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

320 
doubÀQuŸeFœg
 = 
DISABLE
;

321 
•a˚Fœg
 = 
DISABLE
;

323 } i‡('"' =*
p
) {

324 i‡(
DISABLE
 =
doubÀQuŸeFœg
) {

325 
doubÀQuŸeFœg
 = 
ENABLE
;

327 
ªt
 = 
	`°æí
(
ãmpBuf
) + 1;

328 
c⁄d
[
c⁄dIndex
].
ex¥essi⁄
 = (*)
	`mÆloc
(
ªt
);

329 
	`mem£t
(
c⁄d
[
c⁄dIndex
].
ex¥essi⁄
, 0, 
ªt
);

330 
	`°r˝y
(
c⁄d
[
c⁄dIndex
].
ex¥essi⁄
, 
ãmpBuf
);

331 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

332 
ödex
=0;

333 
doubÀQuŸeFœg
 = 
DISABLE
;

336 } i‡(':' =*
p
) {

337 i‡(
WAF_USER_DEFINED_INIT
 !
keyFœg
) {

340 i‡((
ªt
 = 
	`key_judge
(
ãmpBuf
)) < 0) {

341  
ªt
;

343 
keyFœg
 = 
ªt
;

344 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

345 
ödex
 = 0;

348 } i‡('\\' =*
p
) {

349 
esˇ≥Fœg
 = 
ENABLE
;

352 
ãmpBuf
[
ödex
++] = *
p
;

354 
√xt
:

355 
p
++;

357 *
c⁄dôi⁄Index
 = 
c⁄dIndex
;

360 
	}
}

362 
	$öput_°rög
(*
öput
)

364 
ch
 = '0';

366 (
ch
=
	`gëch¨
()) != '\n') {

367 *
öput
++ = 
ch
;

370 
	}
}

372 
	$maö
(
¨gc
, **
¨gv
)

374 
c⁄dôi⁄
 
c⁄d
[5];

375 
öput
[1024] = {0};

376 
ªt
 = -1, 
i
;

377 
c⁄dôi⁄Index
 = 0;

380 
	`mem£t
(
öput
, 0, 1024);

381 
	`mem£t
(
c⁄d
, 0, (
c⁄dôi⁄
)*5);

383 i‡(
	`öput_°rög
(
öput
) < 0) {

384 
	`¥ötf
("\nInput failure\n");

388 
ªt
 = 
	`pha£_°rög
(
öput
, 
c⁄d
, &
c⁄dôi⁄Index
);

389 i‡(
ªt
 < 0) {

390 
	`¥ötf
("\nPhase string occurÉrror!\n");

394 
	`¥ötf
("\nEND:\n");

395 
i
=0; i<=
c⁄dôi⁄Index
; i++) {

396 
	`¥ötf
("%d %d %d %s\n", 
c⁄d
[
i
].
›î©‹
, c⁄d[i].
v¨übÀs
, c⁄d[i].
å‚s
, c⁄d[i].
ex¥essi⁄
);

397 i‡(
c⁄d
[
i
].
ex¥essi⁄
) {

398 
	`‰ì
(
c⁄d
[
i
].
ex¥essi⁄
);

404 
	}
}

	@/root/grocery-shop/language/gcc/src/string/phase_string/strEscape.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<˘y≥.h
>

13 *
	$ª∂a˚_°r2
(c⁄° *
°r
, c⁄° *
ﬁd
, c⁄° *
√w
)

15 *
ªt
, *
r
;

16 c⁄° *
p
, *
q
;

17 
size_t
 
ﬁdÀn
;

18 
size_t
 
cou¡
, 
ªéí
, 
√wÀn
;

19 
ßmesize
;

20 
l
;

22 
ﬁdÀn
 = 
	`°æí
(
ﬁd
);

23 
√wÀn
 = 
	`°æí
(
√w
);

24 
ßmesize
 = (
ﬁdÀn
 =
√wÀn
);

26 i‡(!
ßmesize
) {

27 
cou¡
 = 0, 
p
 = 
°r
; (
q
 = 
	`°r°r
’, 
ﬁd
)Ë!
NULL
;Ö = q + 
ﬁdÀn
) {

28 
cou¡
++;

31 
ªéí
 = 
p
 - 
°r
 + 
	`°æí
’Ë+ 
cou¡
 * (
√wÀn
 - 
ﬁdÀn
);

33 
ªéí
 = 
	`°æí
(
°r
);

37 i‡(!(
ªt
 = 
	`mÆloc
(
ªéí
 + 1))) {

38  
NULL
;

41 
r
 = 
ªt
, 
p
 = 
°r
;

50 i‡(!
ßmesize
 && !
cou¡
--)

59 i‡((
q
 = 
	`°r°r
(
p
, 
ﬁd
)Ë=
NULL
)

62 
l
 = 
q
 - 
p
;

63 
	`mem˝y
(
r
, 
p
, 
l
);

64 
r
 +
l
;

65 
	`mem˝y
(
r
, 
√w
, 
√wÀn
);

66 
r
 +
√wÀn
;

67 
p
 = 
q
 + 
ﬁdÀn
;

69 
	`°r˝y
(
r
, 
p
);

71  
ªt
;

72 
	}
}

84 
	$°r_esˇ≥_isDec
(*
±r
, 
Àn
)

86 *
ãmp
 = 
±r
;

87 
c
 = '\0';

88 
Êag
 = -1;

90 (
c
 = *
ãmp
++)!'\0' && 
Àn
-->0) {

91 i‡((
c
<'0'||c>'9') && (c<'A' || c>'F')&&(c<'a' || c>'f')) {

92 
Êag
 = -1;

95 
Êag
 = 0;

98  
Êag
;

99 
	}
}

105 
	$°r_esˇ≥_åavî£_dec
(*
§c
, *
d°
, *
§cLí
)

107 c⁄° *
sub°r
 = "\\x";

108 
subÀn
 , 
de˛í
, 
tŸÆLí
;

109 
°rögÀn
 = 0, 
tmpLí
, 
d°Lí
 = 0;

110 *
curPoöãr
 = 
NULL
, *
¥ePoöãr
 = NULL;

111 *
d°Poöãr
 = 
NULL
;

112 
c
 = 0;

115 
subÀn
 = 
	`°æí
(
sub°r
);

116 
de˛í
 = 
	`°æí
("EE");

117 
tŸÆLí
 = 
	`°æí
("\\xEE");

120 
°rögÀn
 = *
§cLí
;

121 
¥ePoöãr
 = 
curPoöãr
 = 
§c
;

122 
d°Poöãr
 = 
d°
;

125 
°rögÀn
 > 0) {

126 i‡((
curPoöãr
 = 
	`°r°r
(
¥ePoöãr
, 
sub°r
)Ë=
NULL
) {

127 
	`°r˝y
(
d°Poöãr
 + 
d°Lí
, 
¥ePoöãr
);

128 
tmpLí
 = 
	`°æí
(
¥ePoöãr
);

129 
tmpLí
 =ÅmpLen==0?1:tmpLen;

130 
d°Lí
 +
tmpLí
;

131 
°rögÀn
 -
tmpLí
;

132 
¥ePoöãr
 +
tmpLí
;

134 
	`°∫˝y
(
d°Poöãr
 + 
d°Lí
, 
¥ePoöãr
, 
curPoöãr
-prePointer);

135 
d°Lí
 +(
curPoöãr
-
¥ePoöãr
);

136 
°rögÀn
 -(
curPoöãr
-
¥ePoöãr
);

138 i‡(
	`°r_esˇ≥_isDec
(
curPoöãr
+
subÀn
, 
de˛í
) >= 0) {

139 
	`ssˇnf
(
curPoöãr
, "\\x%02x", &
c
);

140 
	`mem˝y
(
d°Poöãr
 + 
d°Lí
, &
c
, ());

141 
d°Lí
 += ();

142 
°rögÀn
 -
tŸÆLí
;

143 
curPoöãr
 +
tŸÆLí
;

145 
	`°∫˝y
(
d°Poöãr
 + 
d°Lí
, 
curPoöãr
, 
subÀn
);

146 
d°Lí
 +
subÀn
;

147 
°rögÀn
 -
subÀn
;

148 
curPoöãr
 +
subÀn
;

150 
¥ePoöãr
 = 
curPoöãr
;

154 *
§cLí
 = 
d°Lí
;

155 *(
d°Poöãr
+
d°Lí
) = '\0';

158 
	}
}

164 
	$°r_esˇ≥_åavî£
(*
°r
)

166 
c
;

167 *
p
 = 
°r
;

169 i‡(!
p
) {

173 (
c
=*
p
++)!='\0') {

174 
	`¥ötf
("Cuºíàch¨a˘î i†%c\n", 
c
);

177 
	}
}

190 
	$°r_esˇ≥_f‹m©_c⁄vît
(c⁄° *
°r
, *
d°
, *
Àn
,

191 c⁄° *
moduÀ
, 
modLí
)

193 
c
 = '\0';

194 c⁄° *
poöt
 = 
°r
;

195 
hexBuf
[10] = {0};

196 
§cLí
 = *
Àn
, 
d°Lí
 = 0;

198 i‡(
moduÀ
 =
NULL
) {

199 
	`mem˝y
(
d°
, 
°r
, *
Àn
);

203 
§cLí
-- > 0) {

204 i‡((
c
 = *
poöt
++) == '\0') {

205 *(
d°
+
d°Lí
Ë
c
;

206 
d°Lí
++;

208 i‡(
	`ißscii
(
c
)) {

209 *(
d°
+
d°Lí
Ë
c
;

210 
d°Lí
++;

212 
	`•rötf
(
hexBuf
, 
moduÀ
, ()
c
);

213 
	`°∫˝y
(
d°
+
d°Lí
, 
hexBuf
, 
modLí
);

214 
d°Lí
 +
modLí
;

218 *
Àn
 = 
d°Lí
;

221 
	}
}

232 
	$°r_esˇ≥_gë_Àn
(c⁄° *
°r
, c⁄° *
íd°r
)

234 c⁄° *
±r
 = 
°r
, *
íd
;

236 (
íd
=
	`°r°r
(
±r
, 
íd°r
)Ë=
NULL
) {

237 
±r
 +(
	`°æí
(ptr) + 1);

240  
íd
-
°r
;

241 
	}
}

250 
	$°r_esˇ≥_di•œy
(c⁄° *
°r
, 
Àn
)

252 c⁄° *
tmpPå
 = 
°r
;

253 
tmpLí
 = 0;

255 
Àn
 > 0) {

256 
tmpLí
 = 
	`°æí
(
tmpPå
) + 1;

257 
	`putch¨
('\t');

258 
	`puts
(
tmpPå
);

259 
Àn
 -
tmpLí
;

260 
tmpPå
 +
tmpLí
;

262 
	}
}

265 
	$maö
(
¨gc
, **
¨gv
)

268 c⁄° *
c°r
 = "Âåó‰∫¨Â∏Ç:‰∏≤ÁªìÊùü\0\\x2ÂìáÂìàÂìà:‰∏≤ÁªìÊùü\0So stupid,ÂëµÂëµxxEND";

269 *
buf
, *
d°
;

270 
Àn
 = 0, 
tmpLí
 = 0;

276 
buf
 = (*)
	`mÆloc
(512);

277 i‡(
buf
 =
NULL
) {

280 
	`mem£t
(
buf
, 0, 512);

281 
d°
 = (*)
	`mÆloc
(1024);

282 i‡(
buf
 =
NULL
) {

285 
	`mem£t
(
d°
, 0, 1024);

287 
	`¥ötf
("\n===========================================\n");

288 
	`¥ötf
("Êï¥‰∏™Â≠óËäÇ‰∏≤ÁöÑÈïøÂ∫¶‰∏∫:%u\n", (
Àn
=
	`°r_esˇ≥_gë_Àn
(
c°r
, "END")));

290 
	`¥ötf
("Â§öÂ≠óËäÇÁºñÁ†ÅÂ≠óÁ¨¶ËæìÂá∫ÊòæÁ§∫(module==NULL):\n");

291 
tmpLí
 = 
Àn
;

292 
	`°r_esˇ≥_f‹m©_c⁄vît
(
c°r
, 
buf
, &
tmpLí
, 
NULL
, 0);

293 
	`°r_esˇ≥_di•œy
(
buf
, 
tmpLí
);

295 
	`¥ötf
("\nÂ§öÂ≠óËäÇÁºñÁ†ÅÂ≠óÁ¨¶ËæìÂá∫ÊòæÁ§∫(module==\\x%%02x):\n");

296 
	`mem£t
(
buf
, 0, 512);

297 
tmpLí
 = 
Àn
;

298 
	`°r_esˇ≥_f‹m©_c⁄vît
(
c°r
, 
buf
, &
tmpLí
, "\\x%02x", 4);

299 
	`°r_esˇ≥_di•œy
(
buf
, 
tmpLí
);

301 
	`¥ötf
("\nÂ∞ÜÂ§öÂ≠óËäÇÁºñÁ†ÅÂ≠óÁ¨¶ÈáçÊñ∞‰ª•Ê≠£Â∏∏ÂΩ¢ÂºèËæìÂá∫Ôºö\n");

302 
	`mem£t
(
d°
, 0, 1024);

303 
	`°r_esˇ≥_åavî£_dec
(
buf
, 
d°
, &
tmpLí
);

304 
	`°r_esˇ≥_di•œy
(
d°
, 
tmpLí
);

314 
	`putc
('\n', 
°dout
);

316 
	}
}

	@/root/grocery-shop/language/gcc/src/string/phase_string/strtok.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
	#MSC_VARS_MATCH_SIZE
 512

	)

7 
	#MAX_EXPRESSION_SIZE
 256

	)

8 
	töt_¨øy4_t
[4];

9 
	smsc_ruÀ_c⁄dôi⁄
 {

10 
	mcmd
;

11 
	m›
;

12 
öt_¨øy4_t
 
	må‚s
;

13 
	mv¨s
[
MSC_VARS_MATCH_SIZE
];

14 
	mex¥essi⁄
[
MAX_EXPRESSION_SIZE
];

15 
	mèû
[0];

16 } 
	tmsc_ruÀ_c⁄dôi⁄
;

18 
	$maö
(
¨gc
, **
¨gv
)

20 
°r
[] = "shit||geg|xxxx";

21 *
°r1
 = 
NULL
;

22 *
•lô
 = "|";

23 *
p
 = 
NULL
;

24 *
¥e
 = 
°r
;

25 
Àn
 = 
	`°æí
(
°r
);

27 
	`¥ötf
("%†\n", 
	`°πok
(
°r
, 
•lô
));

28 (
p
=
	`°πok
(
NULL
, 
•lô
))) {

29 
	`¥ötf
("%s\n", 
p
);

31 
	`wrôe
(
STDOUT_FILENO
, 
¥e
, 
Àn
);

32 
	`¥ötf
("\n");

35 
°r1
 = (*)
	`ˇŒoc
(12
job
, 0);

36 
	`°r˝y
(
°r1
, "shit|xxx|;geg|;xxxx;");

37 (
p
=
	`°r£p
(&
°r1
, ";|")Ë!
NULL
) {

38 
	`¥ötf
("-------------%s, %d\n", 
p
, 
	`°æí
(p));

40 
	`¥ötf
("Lígth såu˘uª i†%d\n", (
msc_ruÀ_c⁄dôi⁄
));

42 
	}
}

	@/root/grocery-shop/language/gcc/src/string/phase_string_waf/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	#ENABLE
 1

	)

6 
	#DISABLE
 0

	)

7 
	#BUFLEN
 1024

	)

9 
c⁄dôi⁄
 
	tc⁄dôi⁄
;

10 
	sc⁄dôi⁄
 {

11 
	mv¨übÀs
[512];

12 
	m›î©‹
[32];

13 
	må‚s
[32];

14 
	mex¥essi⁄
[256];

17 c⁄° 
	gesˇ≥Ch¨a˘î
[] = {'\'', '(', ')', '\\', '"'};

20 
	mWAF_USER_DEFINED_INIT
 = -1,

21 
	mWAF_USER_DEFINED_VAR
,

22 
	mWAF_USER_DEFINED_OPT
,

23 
	mWAF_USER_DEFINED_TRFNS
,

24 
	mWAF_USER_DEFINED_EXP
,

25 
	mWAF_USER_DEFINED_MAX
,

27 c⁄° * 
	gkeyCh¨a˘î
[] = {

37 
	$esˇ≥_judge
(
ch
)

39 
i
 = 0;

40 
Àn
 = (
esˇ≥Ch¨a˘î
)/(escapeCharacter[0]);

42 
i
=0; i<
Àn
; i++) {

43 i‡(
ch
 =
esˇ≥Ch¨a˘î
[
i
]) {

49 
	}
}

50 
	$c⁄vît
(c⁄° *
°r
)

52 
ªsu…
=0,
f
=1;

54 *
°r
!='\0' && *str>='0' && *str<='9')

56 
ªsu…
Ùesu…*10 + *
°r
-'0';

57 
°r
++;

60  ((*
°r
!='\0'Ë? -1 : 
ªsu…
*
f
);

61 
	}
}

66 
	$key_judge
(c⁄° *
°rög
)

68 
i
 = 0;

70 i‡(
NULL
 =
°rög
 || !
	`°æí
(string)) {

74 
i
=0; i<
WAF_USER_DEFINED_MAX
; i++) {

75 i‡(
	`°rcmp
(
°rög
, 
keyCh¨a˘î
[
i
]) == 0) {

76  
i
;

80 
	}
}

85 
	$vÆue_assign
(
c⁄dôi⁄
 *
c⁄d
, c⁄° *
°rög
, 
Êag
)

87 
Àn
 = -1;

89 i‡(
NULL
 =
°rög
 || !(
Àn
=
	`°æí
(string)) ) {

93 
Êag
) {

94 
WAF_USER_DEFINED_VAR
:

95 i‡((
Àn
+1) > 512) {

98 
	`°r˝y
(
c⁄d
->
v¨übÀs
, 
°rög
);

100 
WAF_USER_DEFINED_OPT
:

101 i‡((
Àn
+1) > 32) {

104 
	`°r˝y
(
c⁄d
->
›î©‹
, 
°rög
);

106 
WAF_USER_DEFINED_TRFNS
:

107 i‡((
Àn
+1) > 32) {

110 
	`°r˝y
(
c⁄d
->
å‚s
, 
°rög
);

112 
WAF_USER_DEFINED_EXP
:

113 i‡((
Àn
+1) > 256) {

116 
	`°r˝y
(
c⁄d
->
ex¥essi⁄
, 
°rög
);

123 
	}
}

125 
	$pha£_°rög
(c⁄° *
°rög
, 
c⁄dôi⁄
 *
c⁄d
, *
c⁄dôi⁄Index
)

127 c⁄° *
p
 = 
NULL
;

128 
ãmpBuf
[
BUFLEN
] = {'\0'};

129 
esˇ≥Fœg
 = 
DISABLE
;

130 
bøckëFœg
 = 
DISABLE
;

131 
doubÀQuŸeFœg
 = 
DISABLE
;

132 
•a˚Fœg
 = 
DISABLE
;

133 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

134 
ödex
 = 0, 
ªt
 = -1, 
c⁄dIndex
 = -1;

136 i‡(
NULL
 =
°rög
 || NULL =
c⁄d
) {

140 
	`¥ötf
("HANDLE STRING: %s\n", 
°rög
);

141 
p
 = 
°rög
;

142 *
p
 != '\0') {

143 
	`¥ötf
("%c", *
p
);

144 i‡('s' =*
p
) {

145 
ªt
 = -1;

147 i‡(
ENABLE
 =
esˇ≥Fœg
) {

148 i‡(
	`esˇ≥_judge
(*
p
) < 0) {

151 
ãmpBuf
[
ödex
++] = *
p
;

152 
esˇ≥Fœg
 = 
DISABLE
;

153 
√xt
;

156 i‡(' ' =*
p
) {

157 i‡(
ENABLE
 =
doubÀQuŸeFœg
) {

158 
ãmpBuf
[
ödex
++] = *
p
;

159 } i‡(
DISABLE
 =
•a˚Fœg
) {

160 
•a˚Fœg
 = 
ENABLE
;

162 
√xt
;

165 
•a˚Fœg
 = 
DISABLE
;

166 i‡('(' =*
p
) {

167 i‡(
c⁄dIndex
 >= 5) {

170 
bøckëFœg
 = 
ENABLE
;

171 
c⁄dIndex
++;

173 } i‡(')' =*
p
) {

175 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

176 
ödex
 = 0;

177 
bøckëFœg
 = 
DISABLE
;

178 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

179 
doubÀQuŸeFœg
 = 
DISABLE
;

180 
•a˚Fœg
 = 
DISABLE
;

182 } i‡('"' =*
p
) {

183 i‡(
DISABLE
 =
doubÀQuŸeFœg
) {

184 
doubÀQuŸeFœg
 = 
ENABLE
;

186 i‡(
keyFœg
 < 
WAF_USER_DEFINED_VAR
 || keyFœg > 
WAF_USER_DEFINED_EXP
) {

189 i‡(
	`vÆue_assign
(&
c⁄d
[
c⁄dIndex
], 
ãmpBuf
, 
keyFœg
) < 0) {

192 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

193 
ödex
=0;

194 
doubÀQuŸeFœg
 = 
DISABLE
;

195 
keyFœg
 = 
WAF_USER_DEFINED_INIT
;

198 } i‡(':' =*
p
) {

199 i‡(
WAF_USER_DEFINED_INIT
 !
keyFœg
) {

202 i‡((
ªt
 = 
	`key_judge
(
ãmpBuf
)) < 0) {

203  
ªt
;

205 
keyFœg
 = 
ªt
;

206 
	`mem£t
(
ãmpBuf
, 0, 
BUFLEN
);

207 
ödex
 = 0;

210 } i‡('\\' =*
p
) {

211 
esˇ≥Fœg
 = 
ENABLE
;

214 
ãmpBuf
[
ödex
++] = *
p
;

216 
√xt
:

217 
p
++;

219 *
c⁄dôi⁄Index
 = 
c⁄dIndex
;

222 
	}
}

224 
	$öput_°rög
(*
öput
)

226 
ch
 = '0';

228 (
ch
=
	`gëch¨
()) != '\n') {

229 *
öput
++ = 
ch
;

232 
	}
}

234 
	$maö
(
¨gc
, **
¨gv
)

236 
c⁄dôi⁄
 
c⁄d
[5];

237 
öput
[1024] = {0};

238 
ªt
 = -1, 
i
;

239 
c⁄dôi⁄Index
 = 0;

242 
	`mem£t
(
öput
, 0, 1024);

243 
	`mem£t
(
c⁄d
, 0, (
c⁄dôi⁄
)*5);

245 i‡(
	`öput_°rög
(
öput
) < 0) {

246 
	`¥ötf
("\nInput failure\n");

250 
ªt
 = 
	`pha£_°rög
(
öput
, 
c⁄d
, &
c⁄dôi⁄Index
);

251 i‡(
ªt
 < 0) {

252 
	`¥ötf
("\nPhase string occurÉrror!\n");

256 
	`¥ötf
("\nEND:\n");

257 
i
=0; i<=
c⁄dôi⁄Index
; i++) {

258 
	`¥ötf
("%†%†%†%s\n", 
c⁄d
[
i
].
›î©‹
, c⁄d[i].
v¨übÀs
, c⁄d[i].
å‚s
, c⁄d[i].
ex¥essi⁄
);

263 
	}
}

	@/root/grocery-shop/language/gcc/src/string/string_to_int/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
ötSåög
[100] = {0};

8 
ªt
 = -1;

10 
	`sˇnf
("%s", 
ötSåög
);

11 
ªt
 = 
	`©oi
(
ötSåög
);

12 i‡(
ªt
 >43200 ||Ñet <0) {

13 
	`¥ötf
("I≈uàîr‹! Resu…=%d\n", 
ªt
);

14 
	`exô
(-1);

16 
	`¥ötf
("ªt=%d\n", 
ªt
);

19 
	}
}

	@/root/grocery-shop/language/gcc/src/string/trim_string/trim.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

12 
	$°rög_åim_right
(c⁄° *
§c
, *
d°
, *
moduÀ
)

14 c⁄° *
ãmp
 = 
§c
;

15 
c
;

17 i‡(!
§c
 || !
d°
 || !
moduÀ
) {

22 *(++
ãmp
) != '\0');

24 (--
ãmp
Ë!
§c
) {

25 
c
 = *
ãmp
;

26 i‡(
	`°rchr
(
moduÀ
, 
c
Ë=
NULL
) {

30 
	`°∫˝y
(
d°
, 
§c
, 
ãmp
-src+1);

31 
d°
[
ãmp
-
§c
+1] = '\0';

34 
	}
}

37 
	$maö
(
¨gc
, **
¨gv
)

39 *
§c
 = 
NULL
;

40 *
moduÀ
 = 
NULL
;

41 
d°
[256];

44 
	`¥ötf
("******************************\n");

45 
§c
 = "agege gÉgegge ge\t\n#\n";

46 
moduÀ
 = "\t\n#";

47 
d°
[0] = '\0';

48 i‡(
	`°rög_åim_right
(
§c
, 
d°
, 
moduÀ
) < 0) {

49 
	`¥ötf
("ÂáΩÊï∞Ë∞ÉÁî®ÈîôËØØÔºÅ\n");

50 
	`exô
(-1);

52 
	`¥ötf
("Ê∫êÂ≠óÁ¨¶‰∏≤:%s\n"

55 
§c
, 
moduÀ
, 
d°
);

56 
	`¥ötf
("******************************\n");

59 
	}
}

	@/root/grocery-shop/language/gcc/src/string/zero_string/example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 *
a
 = "algelge";

8 
¥e
[100] = {"gegegegegeggege"};

10 
	`¥ötf
("%d\n", 
	`°æí
(
a
));

11 
a
 = "";

12 
	`¥ötf
("%d\n", 
	`°æí
(
a
));

14 
	`°r˝y
(
¥e
, "assss");

15 
	`¥ötf
("%s\n", 
¥e
);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/struct/variable_struct.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	ssockë_d©a_∑ckage
 {

6 
	mty≥
;

7 
	md©a_Àn
;

8 
	md©a
[];

11 
sockë_d©a_∑ckage
 
	tsockë_d©a_∑ckage
;

14 
	$maö
(
¨gc
, **
¨gv
)

16 
sockë_d©a_∑ckage
 *
£nd∑ckage
;

17 
buf„r
[12
job
];

19 
	`mem£t
(
buf„r
, 0, 12
job
);

21 
£nd∑ckage
 = (
sockë_d©a_∑ckage
*)
buf„r
;

22 
£nd∑ckage
->
ty≥
 = 0;

23 
£nd∑ckage
->
d©a_Àn
 = 10;

24 
	`mem˝y
(
£nd∑ckage
->
d©a
, "abcdelgelgegej", 10);

26 
	`¥ötf
("Sizeof(package)=%d, Type=%d Len=%d data=%s\n",

27 (
sockë_d©a_∑ckage
), 
£nd∑ckage
->
ty≥
,

28 
£nd∑ckage
->
d©a_Àn
, síd∑ckage->
d©a
);

31 
	}
}

	@/root/grocery-shop/language/gcc/src/synax/example.c

1 
	~<°dlib.h
>

2 
	~<°rög.h
>

3 
	~<glob.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
 = -1;

9 
i
=0; i<10; ++i) {

10 i‡(
i
 == 5) {

15 
	`¥ötf
("ò=%d\n", 
i
);

18 
	}
}

	@/root/grocery-shop/language/gcc/src/time/compareTime.c

1 
	~"c⁄figTime.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
time_t
 
t1
 = 14503329
job1
;

7 
time_t
 
t2
 = 1450332992;

8 
time_t
 
now
;

9 
tm
 
tm1
, 
tm2
;

10 
tm
 *
±m
 = 
NULL
, *
±m2
 = NULL;

12 
	`time
(&
now
);

14 
	`¥ötf
("T1=%ld, T2=%ld,Çow:%ld.\n", 
t1
, 
t2
, 
now
);

16 
	`mem˝y
(&
tm1
, 
	`loˇ…ime
(&
t1
), (
tm
));

17 
	`mem˝y
(&
tm2
, 
	`loˇ…ime
(&
t2
), (
tm
));

18 
	`¥ötf
("TM1:%d, TM2:%d.\n", 
tm1
.
tm_£c
, 
tm2
.tm_sec);

20 
±m
 = 
	`loˇ…ime
(&
t1
);

21 
±m2
 = 
	`loˇ…ime
(&
t2
);

22 
	`¥ötf
("PTM1:%d, PTM2:%d.\n", 
±m
->
tm_£c
, 
±m2
->tm_sec);

23 
	`¥ötf
("Time:%ld\n", 
	`mktime
(
±m
));

27 
	}
}

	@/root/grocery-shop/language/gcc/src/time/configTime.c

1 
	~"c⁄figTime.h
"

4 
	$gë_max_days
()

6 
tm
 
whí
;

7 
time_t
 
ªsu…
, 
now
;

9 
	`time
(&
now
);

10 
whí
 = *
	`loˇ…ime
(&
now
);

11 
whí
.
tm_m⁄
++;

12 
whí
.
tm_mday
 = 0;

13 
ªsu…
 = 
	`mktime
(&
whí
);

14 i‡(
ªsu…
 == -1) {

17 
whí
 = *
	`loˇ…ime
(&
ªsu…
);

18  
whí
.
tm_mday
;

19 
	}
}

26 
	$time_•ecific_£t
(
tm
 *
d°
, *
time
)

28 i‡(!
time
 || !
d°
) {

32 
	`ssˇnf
(
time
, "%4d-%2d-%2d %2d:%2d:%2d",

33 &
d°
->
tm_yór
, &d°->
tm_m⁄
, &d°->
tm_mday
,

34 &
d°
->
tm_hour
, &d°->
tm_mö
, &d°->
tm_£c
);

36 
	}
}

45 
	$time_loˇl_show
()

47 
tm
 *
tmTime
 = 
NULL
;

48 
time_t
 
timeT
;

49 
buf
[12
job
] = {0};

51 i‡(
	`time
(&
timeT
) < 0) {

56 
	`°r˝y
(
buf
, 
	`˘ime
(&
timeT
));

57 
	`¥ötf
("Áé∞Âú®Êó∂Èó¥:%s", 
buf
);

60 
tmTime
 = 
	`loˇ…ime
(&
timeT
);

61 
	`°r·ime
(
buf
, 12
job
, "%Y-%m-%d %H:%M:%S", 
tmTime
);

62 
	`¥ötf
("year=%d month=%d day=%d hour=%d minute=%d second=%d\n"

64 
tmTime
->
tm_yór
,ÅmTime->
tm_m⁄
,ÅmTime->
tm_mday
,

65 
tmTime
->
tm_hour
,ÅmTime->
tm_mö
,ÅmTime->
tm_£c
,

66 
tmTime
->
tm_wday
,ÅmTime->
tm_yday
,ÅmTime->
tm_isd°
);

68 
timeT
 -= 3600;

69 
	`°r˝y
(
buf
, 
	`˘ime
(&
timeT
));

70 
	`¥ötf
("‰øÆÊîπÂêéÁöÑÊó∂Èó¥:%s", 
buf
);

71 
tmTime
 = 
	`loˇ…ime
(&
timeT
);

72 
	`¥ötf
("year=%d month=%d day=%d hour=%d minute=%d second=%d\n"

74 
tmTime
->
tm_yór
,ÅmTime->
tm_m⁄
,ÅmTime->
tm_mday
,

75 
tmTime
->
tm_hour
,ÅmTime->
tm_mö
,ÅmTime->
tm_£c
,

76 
tmTime
->
tm_wday
,ÅmTime->
tm_yday
,ÅmTime->
tm_isd°
);

79 
	}
}

84 
__©åibuã__
((
unu£d
))

86 
	$time_¨ôhmëic_day_öãrvÆ
()

89 
	}
}

95 
	$isLófYór
(
yór
) {

96  (
yór
 % 400 == 0) || ((year % 100 !=0) && (year % 4 == 0));

97 
	}
}

103 
	$gëMaxDayInM⁄th
(
yór
, 
m⁄th
)

105 
days
;

106 
daysInM⁄ths
[] = {31, 2
job
, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

108 i‡(
m⁄th
<0 || month>=12) {

112 
days
 = 
daysInM⁄ths
[
m⁄th
];

113 i‡(
m⁄th
 =1 && 
	`isLófYór
(
yór
)) {

114 
days
 += 1;

117  
days
;

118 
	}
}

124 
	$time_¨ôhmëic_comm⁄_h™dÀ
(
tm
 *
timeTm
, 
num
, 
unô
)

126 
tm
 *
tmTemp
;

127 
time_t
 
timeT
;

129 i‡(!
timeT
) {

133 
timeT
 = 
	`mktime
(
timeTm
);

134 
timeT
 +
num
 * 
unô
;

135 
tmTemp
 = 
	`loˇ…ime
(&
timeT
);

136 i‡(!
tmTemp
) {

139 
	`mem˝y
(
timeTm
, 
tmTemp
, (
tm
));

142 
	}
}

150 
	$time_¨ôhmëic_m⁄th_h™dÀ
(
tm
 *
timeT
, 
m⁄ths
)

152 
yór
;

153 
m⁄th
;

154 
day
;

155 
ãmp
;

157 
yór
 = 
timeT
->
tm_yór
 + 
m⁄ths
/
MONTH_YEAR_SIZE
;

158 
m⁄th
 = 
timeT
->
tm_m⁄
 + 
m⁄ths
%
MONTH_YEAR_SIZE
;

159 i‡(
m⁄th
 > 
MONTH_YEAR_SIZE
 -1) {

160 
yór
 += 1;

161 
m⁄th
 -
MONTH_YEAR_SIZE
;

164 
ãmp
 = 
	`gëMaxDayInM⁄th
(
yór
, 
m⁄th
);

165 
day
 = 
timeT
->
tm_mday
>
ãmp
 ?Åemp :ÅimeT->tm_mday;

167 
timeT
->
tm_yór
 = 
yór
;

168 
timeT
->
tm_m⁄
 = 
m⁄th
;

169 
timeT
->
tm_mday
 = 
day
;

172 
	}
}

179 
	$time_¨ôhmëic_›t
(
tm
 *
timeTm
, 
ôem
, 
num
)

181 
ªt
 = 0;

183 i‡(!
timeTm
) {

187 
ôem
) {

189 
timeTm
->
tm_yór
 +
num
;

192 
ªt
 = 
	`time_¨ôhmëic_m⁄th_h™dÀ
(
timeTm
, 
num
);

195 
ªt
 = 
	`time_¨ôhmëic_comm⁄_h™dÀ
(
timeTm
, 
num
, 
SECOND_DAY_SIZE
);

198 
ªt
 = 
	`time_¨ôhmëic_comm⁄_h™dÀ
(
timeTm
, 
num
, 
SECOND_HOUR_SIZE
);

201 
ªt
 = 
	`time_¨ôhmëic_comm⁄_h™dÀ
(
timeTm
, 
num
, 
SECOND_MIN_SIZE
);

204 
ªt
 = 
	`time_¨ôhmëic_comm⁄_h™dÀ
(
timeTm
, 
num
, 
SECOND_SIZE
);

207 
	`¥ötf
("Input character isÇotÜegal!\n");

211  
ªt
;

212 
	}
}

218 
	$˛ór_iobuff
()

220 
c
;

221 (
c
=
	`gëch¨
()Ë!'\n' && c !
EOF
);

222 
	}
}

	@/root/grocery-shop/language/gcc/src/time/configTime.h

1 #i‚de‡
_CONFIGTIME_H_


2 
	#_CONFIGTIME_H_


	)

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<˘y≥.h
>

7 
	~<uni°d.h
>

8 
	#__USE_XOPEN
 1

	)

9 
	#_XOPEN_SOURCE


	)

10 
	~<time.h
>

12 
	#TRUE
 1

	)

13 
	#FALSE
 0

	)

15 
	#MONTH_YEAR_SIZE
 12

	)

16 
	#DAY_WEEK_SIZE
 7

	)

17 
	#DAY_YEAR_SIZE
 365

	)

18 
	#DAY_MONTH_SIZE
 30

	)

20 
	#SECOND_DAY_SIZE
 
job6400


	)

21 
	#SECOND_HOUR_SIZE
 3600

	)

22 
	#SECOND_MIN_SIZE
 60

	)

23 
	#SECOND_SIZE
 1

	)

28 
gë_max_days
();

33 
time_•ecific_£t
(
tm
 *
d°
, *
time
);

38 
time_¨ôhmëic_m⁄th_h™dÀ
(
tm
 *
timeT
, 
m⁄ths
);

43 
time_¨ôhmëic_›t
(
tm
 *
timeTm
, 
ôem
, 
num
);

48 
time_loˇl_show
();

53 
˛ór_iobuff
();

	@/root/grocery-shop/language/gcc/src/time/getCurrentDay.c

1 
	~"c⁄figTime.h
"

3 
	$maö
( )

6 
	`¥ötf
("----------%d days\n", 
	`gë_max_days
());

9 
	}
}

	@/root/grocery-shop/language/gcc/src/time/getCurrentTime.c

1 
	~"c⁄figTime.h
"

2 
	~<°dio.h
>

3 
	~<sys/time.h
>

5 
	$gëCuºítTime
()

7 
timevÆ
 
tv
;

8 
	`gëtimeofday
(&
tv
,
NULL
);

9 
	`¥ötf
("%ld\n", 
tv
.
tv_u£c
);

10 
	`¥ötf
("%ld\n", 
tv
.
tv_£c
);

11  
tv
.
tv_£c
 * 1000000 +Åv.
tv_u£c
;

12 
	}
}

14 
	$maö
()

16 
	`¥ötf
("c/c++Örogøm:%ld\n",
	`gëCuºítTime
());

18 
	}
}

	@/root/grocery-shop/language/gcc/src/time/getRandTime.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<time.h
>

4 
	~<uni°d.h
>

6 
	#RAND_CALCULATE
(
x
) \

7 (
	`ønd
()*(
x
Ë/ 
RAND_MAX
 + 1)

	)

9 
	$maö
(
¨gc
, **
¨gv
)

11 
cou¡
 = 
job
;

12 
i
 = 0;

14 
	`§™d
(
	`time
(0));

16 
i
=0; i<
cou¡
; i++) {

17 
	`¥ötf
("%d ", 
	`ønd
()%10);

20 
	`¥ötf
("\nÊâßË°årand‰πãÂêéÁöÑÂÄº\n");

22 
i
=0; i<1000; i++) {

24 
	`¥ötf
("%d--", ()(10.0*
	`ønd
()/(
RAND_MAX
)));

27 
	`¥ötf
("End\n");

29 
	}
}

	@/root/grocery-shop/language/gcc/src/time/periodicTime.c

6 
	~"c⁄figTime.h
"

8 
	#MONTH_SIZE
 31

	)

9 
	#WEEK_SIZE
 7

	)

10 
	#DAY_SIZE
 1

	)

11 
	#YEAR_SIZE
 12

	)

13 
time_t


14 
	$gë_≥riodic_of_m⁄th
(
bôs
, 
time_t
 
©time
)

16 
shi·Pos
 = 0;

17 
maxDay
 = 0;

18 
tm
 *
tmAâime
 = 
NULL
;

19 
tm
 
tmTemp
;

20 
time_t
 
nowtime
 = 0;

21 
time_t
 
scheduÀtime
;

23 
maxDay
 = 
	`gë_max_days
();

24 i‡(
maxDay
 == 0) {

28 
nowtime
 = 
	`time
(
NULL
);

29 
	`mem˝y
(&
tmTemp
, 
	`loˇ…ime
(&
nowtime
), (
tm
));

30 
shi·Pos
 = (0x1<<(
tmTemp
.
tm_mday
-1));

32 
tmAâime
 = 
	`loˇ…ime
(&
©time
);

33 
tmTemp
.
tm_hour
 = 
tmAâime
->tm_hour;

34 
tmTemp
.
tm_mö
 = 
tmAâime
->tm_min;

35 
tmTemp
.
tm_£c
 = 
tmAâime
->tm_sec;

37 
nowtime
 = 
	`time
(
NULL
);

40 i‡(
bôs
&
shi·Pos
) {

41 
scheduÀtime
 = 
	`mktime
(&
tmTemp
);

42 i‡(
scheduÀtime
 > 
nowtime
) {

43  
scheduÀtime
;

47 i‡(
tmTemp
.
tm_mday
 =
maxDay
) {

48 
shi·Pos
 = 1;

49 
tmTemp
.
tm_mday
 = 1;

50 
tmTemp
.
tm_yór
 +—mTemp.
tm_m⁄
+1)/12;

51 
tmTemp
.
tm_m⁄
 = (tmTemp.tm_mon+1)%12;

53 
shi·Pos
 = shiftPos<<1;

54 
tmTemp
.
tm_mday
++;

56 } 
TRUE
);

59 
	}
}

61 
time_t


62 
	$gë_≥riodic_of_wìk
(
bôs
, 
time_t
 
©time
)

64 
shi·Pos
 = 0;

65 
maxDay
;

66 
tm
 *
tmAâime
 = 
NULL
;

67 
tm
 
tmTemp
;

68 
time_t
 
nowtime
 = 0;

69 
time_t
 
scheduÀtime
;

71 
maxDay
 = 
	`gë_max_days
();

72 i‡(
maxDay
 == 0) {

75 
nowtime
 = 
	`time
(
NULL
);

76 
	`mem˝y
(&
tmTemp
, 
	`loˇ…ime
(&
nowtime
), (
tm
));

77 
shi·Pos
 = (0x1<<(
tmTemp
.
tm_wday
-1));

79 
tmAâime
 = 
	`loˇ…ime
(&
©time
);

80 
tmTemp
.
tm_hour
 = 
tmAâime
->tm_hour;

81 
tmTemp
.
tm_mö
 = 
tmAâime
->tm_min;

82 
tmTemp
.
tm_£c
 = 
tmAâime
->tm_sec;

84 
nowtime
 = 
	`time
(
NULL
);

87 i‡(
bôs
&
shi·Pos
) {

88 
scheduÀtime
 = 
	`mktime
(&
tmTemp
);

89 i‡(
scheduÀtime
>
nowtime
) {

90  
scheduÀtime
;

94 i‡(
tmTemp
.
tm_wday
 =
WEEK_SIZE
-1) {

95 
shi·Pos
 = 1;

96 
tmTemp
.
tm_wday
 = 0;

98 
shi·Pos
 = shiftPos<<1;

99 
tmTemp
.
tm_wday
++;

103 i‡(
tmTemp
.
tm_mday
 =
maxDay
) {

104 
tmTemp
.
tm_mday
 = 1;

105 
tmTemp
.
tm_yór
 +—mTemp.
tm_m⁄
+1)/
YEAR_SIZE
;

106 
tmTemp
.
tm_m⁄
 = (tmTemp.tm_m⁄+1)%
YEAR_SIZE
;

108 
tmTemp
.
tm_mday
++;

110 } 
TRUE
);

113 
	}
}

115 
	#MONTH_TEST
 1121576

116 
	#WEEK_TEST
 
job6


117 

	)

119 
	$maö
(
¨gc
, **
¨gv
)

121 
buf
[12
job
] = {0};

122 
timeSå
[12
job
] = {0};

124 
time_t
 
now
;

125 
tm
 *
tmTime
;

127 
now
 = 
	`time
(
NULL
);

128 
tmTime
 = 
	`loˇ…ime
(&
now
);

130 
	`¥ötf
("ËØ∑ËæìÂÖ•Ê¨≤ÊµãËØïÁöÑÂäüËÉΩ(monthÊàñËÄÖweek):\n");

131 
	`sˇnf
("%s", 
buf
);

132 i‡(!
	`°rcmp
(
buf
, "quit")) {

135 
	`¥ötf
("ÂΩìÂâçÊó•Êúü:%s.ÂΩìÂâçÊòüÊúü%d.\n", 
	`as˘ime
(
tmTime
),ÅmTime->
tm_wday
);

136 
	`¥ötf
("ËØ∑ËæìÂÖ•‰Ω†Ë¶ÅÊµãËØïÁöÑÊó∂Èó¥(HH:MM:SS):\n");

137 
	`sˇnf
("%s", 
timeSå
);

138 i‡(!
	`°rcmp
(
buf
, "month")) {

139 } i‡(!
	`°rcmp
(
buf
, "week")) {

145 
	}
}

	@/root/grocery-shop/language/gcc/src/time/transformTime.c

1 
	~"c⁄figTime.h
"

10 
	$time_å™sf‹m
()

12 
timeSå
[12
job
] = {0};

13 *
cuºít
 = 
NULL
;

14 
ôem
;

15 
tm
 
tmCuºít
;

16 
time_t
 
now
;

17 
time_t
 
timeT
;

18 
num
;

19 
m⁄th
;

21 
	`time
(&
now
);

23 
	`mem£t
(&
tmCuºít
, 0, (
tm
));

24 
cuºít
 = 
	`˘ime
(&
now
);

25 
	`¥ötf
("PÀa£ i≈uà®time,ÇowÅimêis: %s", 
cuºít
);

26 
	`sˇnf
("%s", 
timeSå
);

27 
	`˛ór_iobuff
();

30 
	`°Ωtime
(
timeSå
, "%Y-%m-%d-%H:%M:%S", &
tmCuºít
);

31 
	`¥ötf
("Now,Üë mêlookáàtimêo‡°Ωtime:%s\n",
	`as˘ime
(&
tmCuºít
));

32 
	`¥ötf
("year=%d month=%d day=%d hour=%d min=%d second=%d\n"

34 
tmCuºít
.
tm_yór
,ÅmCuºít.
tm_m⁄
,ÅmCuºít.
tm_mday
,

35 
tmCuºít
.
tm_hour
,ÅmCuºít.
tm_mö
,ÅmCuºít.
tm_£c
,

36 
tmCuºít
.
tm_wday
,ÅmCuºít.
tm_yday
,ÅmCuºít.
tm_isd°
);

38 
	`¥ötf
("Input what you wantÅoÖerformárithmetic operationsándÇumber:\n");

39 
	`sˇnf
("%¯%d", &
ôem
, &
num
);

40 
	`˛ór_iobuff
();

41 i‡(
	`time_¨ôhmëic_›t
(&
tmCuºít
, 
ôem
, 
num
) < 0) {

44 
timeT
 = 
	`mktime
(&
tmCuºít
);

45 
	`¥ötf
("ShowÅimêa·îárôhmëic:%s\n",
	`˘ime
(&
timeT
));

46 
	`¥ötf
("year=%d month=%d day=%d hour=%d min=%d second=%d\n"

48 
tmCuºít
.
tm_yór
,ÅmCuºít.
tm_m⁄
,ÅmCuºít.
tm_mday
,

49 
tmCuºít
.
tm_hour
,ÅmCuºít.
tm_mö
,ÅmCuºít.
tm_£c
,

50 
tmCuºít
.
tm_wday
,ÅmCuºít.
tm_yday
,ÅmCuºít.
tm_isd°
);

53 
	`¥ötf
("Are you continueÅhis game?(Y/N)");

54 
	`sˇnf
("%c", &
ôem
);

55 
	`˛ór_iobuff
();

56 i‡–((
ôem
=
	`touµî
(item)) == 'N') || item=='Y' ) {

59 } 
TRUE
);

61 i‡(
ôem
 == 'N') {

64 } 
TRUE
);

67 
	}
}

75 
	$f‹m©_time
()

77 
tm
Åm;

78 
time_t
 
now
;

79 
buf
[255];

81 
buf
[15] = '\0';

82 
	`time
(&
now
);

83 
tm
 = *
	`loˇ…ime
(&
now
);

84 
	`°r·ime
(
buf
, 13, "%d/%b/:%Y::%H:%M:%S", &
tm
);

85 
	`¥ötf
("Buf=%s\n", 
buf
);

88 
	}
}

94 
	$f‹m©_time_add
()

96 
tm
Åm;

97 
time_t
 
now
;

98 
buff
[12
job
];

100 
	`time
(&
now
);

101 
now
 += 60 * 60 * 24 * 3650;

102 
tm
 = *
	`gmtime
(&
now
);

104 
	`¥ötf
("AddÅime:%s", 
	`˘ime
(&
now
));

107 
	`°r·ime
(
buff
, 12
job
, "%a,%d-%b-%Y %T GMT", &
tm
);

108 
	`¥ötf
("AddÅime:%s\n", 
buff
);

109 
	}
}

112 
	$maö
(
¨gc
, **
¨gv
)

115 
	`f‹m©_time
();

116 
	`f‹m©_time_add
();

118 
	}
}

	@/root/grocery-shop/language/gcc/src/xml/link.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	~<libxml/∑r£r.h
>

5 
	~<libxml/x∑th.h
>

7 
xmlDocPå


8 
	$gëDocPå
(* 
do˙ame
) {

9 
xmlDocPå
 
doc
 = 
NULL
;

10 
	`xmlKìpBœnksDeÁu…
(0);

12 
doc
 = 
	`xmlP¨£Fûe
(
do˙ame
);

13 if(
NULL
 =
doc
) {

14 
	`Ârötf
(
°dîr
, "document cannot beÖarsed!\n");

15 
	`exô
(1);

17  
doc
;

18 
	}
}

20 
xmlXP©hObje˘På


21 
	$gëXP©hObje˘På
(
xmlDocPå
 
doc
, 
xmlCh¨
* 
x∑th_exp
) {

22 
xmlXP©hObje˘På
 
ªsu…
;

23 
xmlXP©hC⁄ãxtPå
 
c⁄ãxt
;

25 
c⁄ãxt
 = 
	`xmlXP©hNewC⁄ãxt
(
doc
);

26 
ªsu…
 = 
	`xmlXP©hEvÆEx¥essi⁄
((c⁄° 
xmlCh¨
*)
x∑th_exp
, 
c⁄ãxt
);

27 
	`xmlXP©hFªeC⁄ãxt
(
c⁄ãxt
);

29 if(
NULL
 =
ªsu…
) {

30 
	`Ârötf
(
°dîr
, "evalÉxpressionÉrror!\n");

31  
NULL
;

34 if(
	`xmlXP©hNodeSëIsEm±y
(
ªsu…
->
node£tvÆ
)) {

35 
	`Ârötf
(
°dîr
, "emptyÇode set!\n");

36 
	`xmlXP©hFªeObje˘
(
ªsu…
);

37  
NULL
;

39  
ªsu…
;

40 
	}
}

42 
	$maö
() {

43 * 
do˙ame
 = "web.html";

44 
xmlDocPå
 
doc
 = 
NULL
;

45 
xmlXP©hObje˘På
 
x∑th_obj
 = 
NULL
;

46 
xmlNodeSëPå
 
node£t
 = 
NULL
;

47 
xmlCh¨
* 
x∑th_exp
 = (xmlChar*)"//absd";

48 
xmlCh¨
* 
uri
;

50 
doc
 = 
	`gëDocPå
(
do˙ame
);

52 
x∑th_obj
 = 
	`gëXP©hObje˘På
(
doc
, 
x∑th_exp
);

54 if(
NULL
 !
x∑th_obj
) {

55 
node£t
 = 
x∑th_obj
->
node£tvÆ
;

56 
i
 = 0;

57 
i
 = 0; i < 
node£t
->
nodeNr
; i ++) {

58 
uri
 = 
	`xmlGëPr›
(
node£t
->
nodeTab
[
i
],(c⁄° 
xmlCh¨
*)"href");

59 
	`¥ötf
("lökáddªss:%s\n",
uri
);

60 
	`xmlFªe
(
uri
);

62 
	`xmlXP©hFªeObje˘
(
x∑th_obj
);

64 
	`xmlFªeDoc
(
doc
);

65 
	`xmlCÀ™upP¨£r
();

68 
	}
}

	@/root/grocery-shop/language/gcc/src/zombieProcess/example.c

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<î∫o.h
>

4 
	~<°dlib.h
>

6 
	$maö
()

8 
pid_t
 
pid
;

9 
pid
 = 
	`f‹k
();

10 i‡(
pid
 < 0)

12 
	`≥º‹
("forkÉrror:");

13 
	`exô
(1);

15 i‡(
pid
 == 0)

17 
	`¥ötf
("Chûdªn:Iám chûdÖro˚ss.MyÖid i†%d. IámÉxôög.\n", 
	`gëpid
());

18 
	`exô
(0);

20 
	`¥ötf
("F©hî:Iám f©hîÖro˚ss.MyÖid i†%d.I wû»¶ì∞l⁄gÜ⁄gágo\n", 
	`gëpid
());

25 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/asm/unistd.h

1 #i‚de‡
_ASM_X86_UNISTD_H


2 
	#_ASM_X86_UNISTD_H


	)

5 
	#__X32_SYSCALL_BIT
 0x40000000

	)

7 #ifde‡
__i386__


8 
	~<asm/uni°d_32.h
>

9 #ñi‡
deföed
(
__ILP32__
)

10 
	~<asm/uni°d_x32.h
>

12 
	~<asm/uni°d_64.h
>

	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 
__BEGIN_DECLS


68 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

69 
__löe
, c⁄° *
__fun˘i⁄
)

70 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

73 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

74 
__löe
, c⁄° *
__fun˘i⁄
)

75 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

80 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

81 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_DECLS


86 
	#as£π
(
ex¥
) \

87 ((
ex¥
) \

88 ? 
	`__ASSERT_VOID_CAST
 (0) \

89 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

91 #ifdef 
__USE_GNU


92 
	#as£π_≥º‹
(
î∫um
) \

93 (!(
î∫um
) \

94 ? 
	`__ASSERT_VOID_CAST
 (0) \

95 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

103 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

104 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

106 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

107 
	#__ASSERT_FUNCTION
 
__func__


	)

109 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

116 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


118 #unde‡
°©ic_as£π


119 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/crypt.h

25 #i‚de‡
_CRYPT_H


26 
	#_CRYPT_H
 1

	)

28 
	~<„©uªs.h
>

30 
__BEGIN_DECLS


33 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

34 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

37 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

43 #ifde‡
__USE_GNU


46 
	s¸y±_d©a


48 
keysched
[16 * 8];

49 
sb0
[32768];

50 
sb1
[32768];

51 
sb2
[32768];

52 
sb3
[32768];

54 
¸y±_3_buf
[14];

55 
cuºít_ß…
[2];

56 
cuºít_ß…bôs
;

57 
dúe˘i⁄
, 
öôülized
;

60 *
	$¸y±_r
 (c⁄° *
__key
, c⁄° *
__ß…
,

61 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

62 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

64 
	$£tkey_r
 (c⁄° *
__key
,

65 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

66 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

68 
	$í¸y±_r
 (*
__block
, 
__edÊag
,

69 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

73 
__END_DECLS


	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

132 #ifde‡
__USE_ATFILE


133 
	#AT_FDCWD
 -100

	)

136 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

137 
	#AT_REMOVEDIR
 0x200

	)

139 
	#AT_SYMLINK_FOLLOW
 0x400

	)

140 #ifde‡
__USE_GNU


141 
	#AT_NO_AUTOMOUNT
 0x800

	)

143 
	#AT_EMPTY_PATH
 0x1000

	)

145 
	#AT_EACCESS
 0x200

	)

154 
f˙é
 (
__fd
, 
__cmd
, ...);

162 #i‚de‡
__USE_FILE_OFFSET64


163 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#›í
 
›í64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_ATFILE


186 #i‚de‡
__USE_FILE_OFFSET64


187 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

188 
	`__n⁄nuŒ
 ((2));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

192 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

194 
	#›í©
 
›í©64


	)

197 #ifde‡
__USE_LARGEFILE64


198 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

199 
	`__n⁄nuŒ
 ((2));

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

213 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

215 
	#¸ót
 
¸ót64


	)

218 #ifde‡
__USE_LARGEFILE64


219 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

222 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

223 && !
deföed
 
__USE_POSIX
))

232 
	#F_ULOCK
 0

	)

233 
	#F_LOCK
 1

	)

234 
	#F_TLOCK
 2

	)

235 
	#F_TEST
 3

	)

237 #i‚de‡
__USE_FILE_OFFSET64


238 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

240 #ifde‡
__REDIRECT


241 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

243 
	#lockf
 
lockf64


	)

246 #ifde‡
__USE_LARGEFILE64


247 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

251 #ifde‡
__USE_XOPEN2K


254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

256 
__advi£
Ë
__THROW
;

258 #ifde‡
__REDIRECT_NTH


259 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

260 
__off64_t
 
__Àn
, 
__advi£
),

261 
posix_Ádvi£64
);

263 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

266 #ifde‡
__USE_LARGEFILE64


267 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

268 
__advi£
Ë
__THROW
;

276 #i‚de‡
__USE_FILE_OFFSET64


277 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

279 #ifde‡
__REDIRECT


280 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

281 
__off64_t
 
__Àn
),

282 
posix_ÁŒoˇã64
);

284 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

287 #ifde‡
__USE_LARGEFILE64


288 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

294 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

295 && 
deföed
 
__va_¨g_∑ck_Àn


296 
	~<bôs/f˙é2.h
>

299 
__END_DECLS


	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/glob.h

19 #i‚def 
_GLOB_H


20 
	#_GLOB_H
 1

	)

22 
	~<sys/cdefs.h
>

24 
	g__BEGIN_DECLS


27 #i‚de‡
__size_t


28 
__SIZE_TYPE__
 
	t__size_t
;

29 #i‡
deföed
 
__USE_XOPEN
 || 
__USE_XOPEN2K8


30 
__SIZE_TYPE__
 
	tsize_t
;

35 #unde‡
__size_t


36 
	#__size_t
 
size_t


	)

40 
	#GLOB_ERR
 (1 << 0)

	)

41 
	#GLOB_MARK
 (1 << 1)

	)

42 
	#GLOB_NOSORT
 (1 << 2)

	)

43 
	#GLOB_DOOFFS
 (1 << 3)

	)

44 
	#GLOB_NOCHECK
 (1 << 4)

	)

45 
	#GLOB_APPEND
 (1 << 5)

	)

46 
	#GLOB_NOESCAPE
 (1 << 6)

	)

47 
	#GLOB_PERIOD
 (1 << 7)

	)

49 #i‡!
deföed
 
__USE_POSIX2
 || deföed 
__USE_BSD
 || deföed 
__USE_GNU


50 
	#GLOB_MAGCHAR
 (1 << 8)

	)

51 
	#GLOB_ALTDIRFUNC
 (1 << 9)

	)

52 
	#GLOB_BRACE
 (1 << 10)

	)

53 
	#GLOB_NOMAGIC
 (1 << 11)

	)

54 
	#GLOB_TILDE
 (1 << 12)

	)

55 
	#GLOB_ONLYDIR
 (1 << 13)

	)

56 
	#GLOB_TILDE_CHECK
 (1 << 14)

	)

58 
	#__GLOB_FLAGS
 (
GLOB_ERR
|
GLOB_MARK
|
GLOB_NOSORT
|
GLOB_DOOFFS
| \

59 
GLOB_NOESCAPE
|
GLOB_NOCHECK
|
GLOB_APPEND
| \

60 
GLOB_PERIOD
|
GLOB_ALTDIRFUNC
|
GLOB_BRACE
| \

61 
GLOB_NOMAGIC
|
GLOB_TILDE
|
GLOB_ONLYDIR
|
GLOB_TILDE_CHECK
)

	)

63 
	#__GLOB_FLAGS
 (
GLOB_ERR
|
GLOB_MARK
|
GLOB_NOSORT
|
GLOB_DOOFFS
| \

64 
GLOB_NOESCAPE
|
GLOB_NOCHECK
|
GLOB_APPEND
| \

65 
GLOB_PERIOD
)

	)

69 
	#GLOB_NOSPACE
 1

	)

70 
	#GLOB_ABORTED
 2

	)

71 
	#GLOB_NOMATCH
 3

	)

72 
	#GLOB_NOSYS
 4

	)

73 #ifde‡
__USE_GNU


76 
	#GLOB_ABEND
 
GLOB_ABORTED


	)

80 #ifde‡
__USE_GNU


81 
	g°©
;

85 
__size_t
 
	mgl_∑thc
;

86 **
	mgl_∑thv
;

87 
__size_t
 
	mgl_offs
;

88 
	mgl_Êags
;

92 (*
	mgl_˛o£dú
) (*);

93 #ifde‡
__USE_GNU


94 
	mdúít
 *(*
	mgl_ªaddú
) (*);

96 *(*
	mgl_ªaddú
) (*);

98 *(*
	mgl_›ídú
) (const *);

99 #ifde‡
__USE_GNU


100 (*
	mgl_l°©
Ë(c⁄° *
	m__ª°ri˘
, 
°©
 *__restrict);

101 (*
	mgl_°©
Ë(c⁄° *
	m__ª°ri˘
, 
°©
 *__restrict);

103 (*
	mgl_l°©
Ë(c⁄° *
	m__ª°ri˘
, *__restrict);

104 (*
	mgl_°©
Ë(c⁄° *
	m__ª°ri˘
, *__restrict);

106 } 
	tglob_t
;

108 #ifde‡
__USE_LARGEFILE64


109 #ifde‡
__USE_GNU


110 
	g°©64
;

114 
__size_t
 
	mgl_∑thc
;

115 **
	mgl_∑thv
;

116 
__size_t
 
	mgl_offs
;

117 
	mgl_Êags
;

121 (*
	mgl_˛o£dú
) (*);

122 #ifde‡
__USE_GNU


123 
	mdúít64
 *(*
	mgl_ªaddú
) (*);

125 *(*
	mgl_ªaddú
) (*);

127 *(*
	mgl_›ídú
) (const *);

128 #ifde‡
__USE_GNU


129 (*
	mgl_l°©
Ë(c⁄° *
	m__ª°ri˘
, 
°©64
 *__restrict);

130 (*
	mgl_°©
Ë(c⁄° *
	m__ª°ri˘
, 
°©64
 *__restrict);

132 (*
	mgl_l°©
Ë(c⁄° *
	m__ª°ri˘
, *__restrict);

133 (*
	mgl_°©
Ë(c⁄° *
	m__ª°ri˘
, *__restrict);

135 } 
	tglob64_t
;

146 #i‡!
deföed
 
__USE_FILE_OFFSET64


147 
glob
 (c⁄° *
__ª°ri˘
 
__∑âîn
, 
__Êags
,

148 (*
__îrfunc
) (const *, ),

149 
glob_t
 *
__ª°ri˘
 
__pglob
Ë
__THROW
;

152 
	$glob‰ì
 (
glob_t
 *
__pglob
Ë
__THROW
;

154 
	`__REDIRECT_NTH
 (
glob
, (c⁄° *
__ª°ri˘
 
__∑âîn
,

155 
__Êags
,

156 (*
__îrfunc
) (const *, ),

157 
glob_t
 *
__ª°ri˘
 
__pglob
), 
glob64
);

159 
	`__REDIRECT_NTH
 (
glob‰ì
, (
glob_t
 *
__pglob
), 
glob‰ì64
);

162 #ifde‡
__USE_LARGEFILE64


163 
	`glob64
 (c⁄° *
__ª°ri˘
 
__∑âîn
, 
__Êags
,

164 (*
__îrfunc
) (const *, ),

165 
glob64_t
 *
__ª°ri˘
 
__pglob
Ë
__THROW
;

167 
	$glob‰ì64
 (
glob64_t
 *
__pglob
Ë
__THROW
;

171 #ifde‡
__USE_GNU


177 
	$glob_∑âîn_p
 (c⁄° *
__∑âîn
, 
__quŸe
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


63 
£tgª¡
 ();

66 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

67 || 
deföed
 
__USE_XOPEN2K8


72 
ídgª¡
 ();

78 
group
 *
gëgª¡
 ();

81 #ifdef 
__USE_SVID


88 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

91 #ifde‡
__USE_GNU


98 
putgª¡
 (c⁄° 
group
 *
__ª°ri˘
 
__p
,

99 
FILE
 *
__ª°ri˘
 
__f
);

106 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

112 
group
 *
gëg∫am
 (c⁄° *
__«me
);

114 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


116 #ifde‡
__USE_MISC


119 
	#NSS_BUFLEN_GROUP
 1024

	)

135 #ifde‡
__USE_GNU


136 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

137 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

138 
group
 **
__ª°ri˘
 
__ªsu…
);

145 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

146 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

147 
group
 **
__ª°ri˘
 
__ªsu…
);

153 
gëg∫am_r
 (c⁄° *
__ª°ri˘
 
__«me
,

154 
group
 *
__ª°ri˘
 
__ªsu…buf
,

155 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

156 
group
 **
__ª°ri˘
 
__ªsu…
);

158 #ifdef 
__USE_SVID


166 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

167 
group
 *
__ª°ri˘
 
__ªsu…buf
,

168 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

169 
group
 **
__ª°ri˘
 
__ªsu…
);

175 #ifdef 
__USE_BSD


177 
	#__√ed_size_t


	)

178 
	~<°ddef.h
>

181 
	$£tgroups
 (
size_t
 
__n
, c⁄° 
__gid_t
 *
__groups
Ë
__THROW
;

191 
	`gëgrou∂i°
 (c⁄° *
__u£r
, 
__gid_t
 
__group
,

192 
__gid_t
 *
__groups
, *
__ngroups
);

202 
	`öôgroups
 (c⁄° *
__u£r
, 
__gid_t
 
__group
);

206 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

46 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


48 #i‡
__WORDSIZE
 == 64

49 
	#__PRI64_PREFIX
 "l"

	)

50 
	#__PRIPTR_PREFIX
 "l"

	)

52 
	#__PRI64_PREFIX
 "Œ"

	)

53 
	#__PRIPTR_PREFIX


	)

59 
	#PRId8
 "d"

	)

60 
	#PRId16
 "d"

	)

61 
	#PRId32
 "d"

	)

62 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdLEAST8
 "d"

	)

65 
	#PRIdLEAST16
 "d"

	)

66 
	#PRIdLEAST32
 "d"

	)

67 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

69 
	#PRIdFAST8
 "d"

	)

70 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

71 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

75 
	#PRIi8
 "i"

	)

76 
	#PRIi16
 "i"

	)

77 
	#PRIi32
 "i"

	)

78 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiLEAST8
 "i"

	)

81 
	#PRIiLEAST16
 "i"

	)

82 
	#PRIiLEAST32
 "i"

	)

83 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

85 
	#PRIiFAST8
 "i"

	)

86 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

87 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

91 
	#PRIo8
 "o"

	)

92 
	#PRIo16
 "o"

	)

93 
	#PRIo32
 "o"

	)

94 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoLEAST8
 "o"

	)

97 
	#PRIoLEAST16
 "o"

	)

98 
	#PRIoLEAST32
 "o"

	)

99 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

101 
	#PRIoFAST8
 "o"

	)

102 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

103 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

107 
	#PRIu8
 "u"

	)

108 
	#PRIu16
 "u"

	)

109 
	#PRIu32
 "u"

	)

110 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuLEAST8
 "u"

	)

113 
	#PRIuLEAST16
 "u"

	)

114 
	#PRIuLEAST32
 "u"

	)

115 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

117 
	#PRIuFAST8
 "u"

	)

118 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

119 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

123 
	#PRIx8
 "x"

	)

124 
	#PRIx16
 "x"

	)

125 
	#PRIx32
 "x"

	)

126 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxLEAST8
 "x"

	)

129 
	#PRIxLEAST16
 "x"

	)

130 
	#PRIxLEAST32
 "x"

	)

131 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

133 
	#PRIxFAST8
 "x"

	)

134 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

135 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

139 
	#PRIX8
 "X"

	)

140 
	#PRIX16
 "X"

	)

141 
	#PRIX32
 "X"

	)

142 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXLEAST8
 "X"

	)

145 
	#PRIXLEAST16
 "X"

	)

146 
	#PRIXLEAST32
 "X"

	)

147 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

149 
	#PRIXFAST8
 "X"

	)

150 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

151 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

156 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

157 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

158 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

159 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

160 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

161 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

165 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

166 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

167 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

168 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

169 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

170 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

176 
	#SCNd8
 "hhd"

	)

177 
	#SCNd16
 "hd"

	)

178 
	#SCNd32
 "d"

	)

179 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdLEAST8
 "hhd"

	)

182 
	#SCNdLEAST16
 "hd"

	)

183 
	#SCNdLEAST32
 "d"

	)

184 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

186 
	#SCNdFAST8
 "hhd"

	)

187 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

188 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

192 
	#SCNi8
 "hhi"

	)

193 
	#SCNi16
 "hi"

	)

194 
	#SCNi32
 "i"

	)

195 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiLEAST8
 "hhi"

	)

198 
	#SCNiLEAST16
 "hi"

	)

199 
	#SCNiLEAST32
 "i"

	)

200 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

202 
	#SCNiFAST8
 "hhi"

	)

203 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

204 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

208 
	#SCNu8
 "hhu"

	)

209 
	#SCNu16
 "hu"

	)

210 
	#SCNu32
 "u"

	)

211 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuLEAST8
 "hhu"

	)

214 
	#SCNuLEAST16
 "hu"

	)

215 
	#SCNuLEAST32
 "u"

	)

216 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

218 
	#SCNuFAST8
 "hhu"

	)

219 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

220 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

224 
	#SCNo8
 "hho"

	)

225 
	#SCNo16
 "ho"

	)

226 
	#SCNo32
 "o"

	)

227 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoLEAST8
 "hho"

	)

230 
	#SCNoLEAST16
 "ho"

	)

231 
	#SCNoLEAST32
 "o"

	)

232 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

234 
	#SCNoFAST8
 "hho"

	)

235 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

236 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

240 
	#SCNx8
 "hhx"

	)

241 
	#SCNx16
 "hx"

	)

242 
	#SCNx32
 "x"

	)

243 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxLEAST8
 "hhx"

	)

246 
	#SCNxLEAST16
 "hx"

	)

247 
	#SCNxLEAST32
 "x"

	)

248 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

250 
	#SCNxFAST8
 "hhx"

	)

251 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

252 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

257 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

258 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

259 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

260 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

261 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

264 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

265 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

266 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

267 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

268 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

273 
	g__BEGIN_DECLS


275 #i‡
__WORDSIZE
 == 64

280 
	mquŸ
;

281 
	mªm
;

282 } 
	timaxdiv_t
;

289 
	mquŸ
;

290 
	mªm
;

291 } 
	timaxdiv_t
;

297 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

300 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

301 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

304 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

308 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

309 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

312 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

313 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

314 
__THROW
;

317 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

318 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

319 
__THROW
;

321 #ifde‡
__USE_EXTERN_INLINES


323 #i‡
__WORDSIZE
 == 64

325 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

326 **
__ª°ri˘
 
__íd±r
,

327 
__ba£
, 
__group
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

330 
__exã∫_ölöe
 
ötmax_t


331 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

332 
ba£
))

334  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

335 
	}
}

337 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 ** 
__ª°ri˘
 
__íd±r
,

339 
__ba£
, 
__group
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

342 
__exã∫_ölöe
 
uötmax_t


343 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

344 
ba£
))

346  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

347 
	}
}

349 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

350 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

351 
__ba£
, 
__group
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

354 
__exã∫_ölöe
 
ötmax_t


355 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

356 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

358  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

359 
	}
}

361 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

362 
__ª°ri˘
 
__≈å
,

363 
__gwch¨_t
 **

364 
__ª°ri˘
 
__íd±r
,

365 
__ba£
, 
__group
)

366 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

368 
__exã∫_ölöe
 
uötmax_t


369 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

370 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

372  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

373 
	}
}

377 
__exãnsi⁄__


378 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

379 **
__ª°ri˘
 
__íd±r
,

380 
__ba£
, 
__group
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

383 
__exã∫_ölöe
 
ötmax_t


384 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

385 
ba£
))

387  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

388 
	}
}

390 
__exãnsi⁄__


391 
	$__°πouŒ_öã∫Æ
 (const *

392 
__ª°ri˘
 
__≈å
,

394 
__ª°ri˘
 
__íd±r
,

395 
__ba£
,

396 
__group
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

399 
__exã∫_ölöe
 
uötmax_t


400 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

401 
ba£
))

403  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

404 
	}
}

406 
__exãnsi⁄__


407 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

409 
__ba£
, 
__group
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

412 
__exã∫_ölöe
 
ötmax_t


413 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

414 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

416  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

417 
	}
}

420 
__exãnsi⁄__


421 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

422 
__ª°ri˘
 
__≈å
,

423 
__gwch¨_t
 **

424 
__ª°ri˘
 
__íd±r
,

425 
__ba£
,

426 
__group
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

429 
__exã∫_ölöe
 
uötmax_t


430 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

431 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

433  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

434 
	}
}

439 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/linux/unistd.h

1 #i‚de‡
_LINUX_UNISTD_H_


2 
	#_LINUX_UNISTD_H_


	)

7 
	~<asm/uni°d.h
>

	@/usr/include/malloc.h

20 #i‚de‡
_MALLOC_H


21 
	#_MALLOC_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°ddef.h
>

25 
	~<°dio.h
>

26 
	#__mÆloc_±r_t
 *

	)

29 
	#__mÆloc_size_t
 
size_t


	)

30 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

32 #ifde‡
__GNUC__


34 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

37 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

39 #ifde‡
_LIBC


40 
	#__MALLOC_HOOK_VOLATILE


	)

41 
	#__MALLOC_DEPRECATED


	)

43 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

44 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

49 
	#__MALLOC_P
(
¨gs
Ë
	)
args

50 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

51 
	#__MALLOC_HOOK_VOLATILE


	)

52 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

57 
__BEGIN_DECLS


60 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

64 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

72 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

75 
	$‰ì
 (*
__±r
Ë
__THROW
;

78 
	$c‰ì
 (*
__±r
Ë
__THROW
;

81 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

82 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

85 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

89 * 
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

93 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

96 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

97 
__THROW
 
__©åibuã_mÆloc__
;

101 
	smÆlöfo


103 
¨ía
;

104 
‹dblks
;

105 
smblks
;

106 
hblks
;

107 
hblkhd
;

108 
usmblks
;

109 
fsmblks
;

110 
u‹dblks
;

111 
f‹dblks
;

112 
kìpco°
;

116 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

119 #i‚de‡
M_MXFAST


120 
	#M_MXFAST
 1

	)

122 #i‚de‡
M_NLBLKS


123 
	#M_NLBLKS
 2

	)

125 #i‚de‡
M_GRAIN


126 
	#M_GRAIN
 3

	)

128 #i‚de‡
M_KEEP


129 
	#M_KEEP
 4

	)

133 
	#M_TRIM_THRESHOLD
 -1

	)

134 
	#M_TOP_PAD
 -2

	)

135 
	#M_MMAP_THRESHOLD
 -3

	)

136 
	#M_MMAP_MAX
 -4

	)

137 
	#M_CHECK_ACTION
 -5

	)

138 
	#M_PERTURB
 -6

	)

139 
	#M_ARENA_TEST
 -7

	)

140 
	#M_ARENA_MAX
 -8

	)

143 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

147 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

151 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

154 
	$mÆloc_°©s
 (Ë
__THROW
;

157 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

160 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

164 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

169 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

170 
__MALLOC_DEPRECATED
;

172 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

173 c⁄° 
__mÆloc_±r_t
)

174 
__MALLOC_DEPRECATED
;

175 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
Ë(
size_t
 
__size
,

176 c⁄° 
__mÆloc_±r_t
)

177 
__MALLOC_DEPRECATED
;

178 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
Ë(*
__±r
,

179 
size_t
 
__size
,

180 c⁄° 
__mÆloc_±r_t
)

181 
__MALLOC_DEPRECATED
;

182 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
Ë(
size_t
 
__Æignmít
,

183 
size_t
 
__size
,

184 c⁄° 
__mÆloc_±r_t
)

185 
__MALLOC_DEPRECATED
;

186 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

189 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

192 
__END_DECLS


	@/usr/include/math.h

24 #i‚def 
_MATH_H


25 
	#_MATH_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/huge_vÆ.h
>

34 #ifde‡
__USE_ISOC99


35 
	~<bôs/huge_vÆf.h
>

36 
	~<bôs/huge_vÆl.h
>

39 
	~<bôs/öf.h
>

42 
	~<bôs/«n.h
>

46 
	~<bôs/m©hdef.h
>

53 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

54 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

55 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

56 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

57 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

58 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

59 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

60 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

61 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

62 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

63 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

64 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

66 
	#_MdoubÀ_
 

	)

67 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

68 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

69 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

70 
	~<bôs/m©hˇŒs.h
>

71 #unde‡
_MdoubÀ_


72 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


73 #unde‡
_MdoubÀ_END_NAMESPACE


74 #unde‡
__MATH_PRECNAME


76 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


82 #i‚de‡
_MÊﬂt_


83 
	#_MÊﬂt_
 

	)

85 
	#_MdoubÀ_
 
_MÊﬂt_


	)

86 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

87 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

88 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

89 
	~<bôs/m©hˇŒs.h
>

90 #unde‡
_MdoubÀ_


91 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


92 #unde‡
_MdoubÀ_END_NAMESPACE


93 #unde‡
__MATH_PRECNAME


95 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

96 || 
deföed
 
__LDBL_COMPAT


97 #ifde‡
__LDBL_COMPAT


99 #ifde‡
__USE_ISOC99


100 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

101 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

102 #ifde‡
__REDIRECT_NTH


103 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

104 
__∆dbl_√xâow¨df
)

105 
	`__©åibuã__
 ((
__c⁄°__
));

106 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

107 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

108 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

109 (
__x
, 
__y
),

110 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 #unde‡
__MATHDECL_1


115 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

116 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

117 
¨gs
, 
Æüs
)

	)

118 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

119 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

125 #i‚de‡
_Ml⁄g_doubÀ_


126 
	#_Ml⁄g_doubÀ_
 

	)

128 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

129 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

130 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

131 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

132 
	#__MATH_DECLARE_LDOUBLE
 1

	)

133 
	~<bôs/m©hˇŒs.h
>

134 #unde‡
_MdoubÀ_


135 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


136 #unde‡
_MdoubÀ_END_NAMESPACE


137 #unde‡
__MATH_PRECNAME


142 #unde‡
__MATHDECL_1


143 #unde‡
__MATHDECL


144 #unde‡
__MATHCALL


147 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


149 
signgam
;

154 #ifde‡
__USE_ISOC99


192 
FP_NAN
 =

193 
	#FP_NAN
 0

	)

194 
FP_NAN
,

195 
FP_INFINITE
 =

196 
	#FP_INFINITE
 1

	)

197 
FP_INFINITE
,

198 
FP_ZERO
 =

199 
	#FP_ZERO
 2

	)

200 
FP_ZERO
,

201 
FP_SUBNORMAL
 =

202 
	#FP_SUBNORMAL
 3

	)

203 
FP_SUBNORMAL
,

204 
FP_NORMAL
 =

205 
	#FP_NORMAL
 4

	)

206 
FP_NORMAL


210 #ifde‡
__NO_LONG_DOUBLE_MATH


211 
	#Â˛assify
(
x
) \

212 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

214 
	#Â˛assify
(
x
) \

215 ( (
x
) ==  () \

216 ? 
	`__Â˛assifyf
 (
x
) \

217 :  (
x
) ==  () \

218 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

222 #ifde‡
__NO_LONG_DOUBLE_MATH


223 
	#signbô
(
x
) \

224 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

226 
	#signbô
(
x
) \

227 ( (
x
) ==  () \

228 ? 
	`__signbôf
 (
x
) \

229 :  (
x
) ==  () \

230 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

234 #ifde‡
__NO_LONG_DOUBLE_MATH


235 
	#isföôe
(
x
) \

236 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

238 
	#isföôe
(
x
) \

239 ( (
x
) ==  () \

240 ? 
	`__föôef
 (
x
) \

241 :  (
x
) ==  () \

242 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

246 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

250 #ifde‡
__NO_LONG_DOUBLE_MATH


251 
	#i¢™
(
x
) \

252 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

254 
	#i¢™
(
x
) \

255 ( (
x
) ==  () \

256 ? 
	`__i¢™f
 (
x
) \

257 :  (
x
) ==  () \

258 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

262 #ifde‡
__NO_LONG_DOUBLE_MATH


263 
	#isöf
(
x
) \

264 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

266 
	#isöf
(
x
) \

267 ( (
x
) ==  () \

268 ? 
	`__isöff
 (
x
) \

269 :  (
x
) ==  () \

270 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

274 
	#MATH_ERRNO
 1

	)

275 
	#MATH_ERREXCEPT
 2

	)

280 #i‚de‡
__FAST_MATH__


281 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

286 #ifdef 
__USE_MISC


290 
_IEEE_
 = -1,

291 
_SVID_
,

292 
_XOPEN_
,

293 
_POSIX_
,

294 
_ISOC_


295 } 
	t_LIB_VERSION_TYPE
;

300 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

304 #ifde‡
__USE_SVID


310 #ifde‡
__˝lu•lus


311 
__ex˚±i⁄


313 
ex˚±i⁄


316 
ty≥
;

317 *
«me
;

318 
¨g1
;

319 
¨g2
;

320 
ªtvÆ
;

321 
	}
};

323 #ifde‡
__˝lu•lus


324 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

326 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

329 
	#X_TLOSS
 1.41484755040568800000e+16

	)

332 
	#DOMAIN
 1

	)

333 
	#SING
 2

	)

334 
	#OVERFLOW
 3

	)

335 
	#UNDERFLOW
 4

	)

336 
	#TLOSS
 5

	)

337 
	#PLOSS
 6

	)

340 
	#HUGE
 3.40282347e+38F

	)

344 #ifde‡
__USE_XOPEN


346 
	#MAXFLOAT
 3.40282347e+38F

	)

353 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


354 
	#M_E
 2.7182818284590452354

	)

355 
	#M_LOG2E
 1.4426950408889634074

	)

356 
	#M_LOG10E
 0.43429448190325182765

	)

357 
	#M_LN2
 0.69314718055994530942

	)

358 
	#M_LN10
 2.30258509299404568402

	)

359 
	#M_PI
 3.14159265358979323846

	)

360 
	#M_PI_2
 1.57079632679489661923

	)

361 
	#M_PI_4
 0.78539816339744830962

	)

362 
	#M_1_PI
 0.31830988618379067154

	)

363 
	#M_2_PI
 0.63661977236758134308

	)

364 
	#M_2_SQRTPI
 1.12837916709551257390

	)

365 
	#M_SQRT2
 1.41421356237309504880

	)

366 
	#M_SQRT1_2
 0.70710678118654752440

	)

372 #ifde‡
__USE_GNU


373 
	#M_El
 2.718281828459045235360287471352662498L

	)

374 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

375 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

376 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

377 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

378 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

379 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

380 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

381 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

382 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

383 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

384 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

385 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

392 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


393 
	#__NO_MATH_INLINES
 1

	)

396 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

403 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

404 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

405 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

406 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

407 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

408 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

412 #ifde‡
__USE_EXTERN_INLINES


413 
	~<bôs/m©hölöe.h
>

418 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

419 
	~<bôs/m©h-föôe.h
>

422 #ifde‡
__USE_ISOC99


426 #i‚de‡
isgª©î


427 
	#isgª©î
(
x
, 
y
) \

428 (
__exãnsi⁄__
 \

429 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

430 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

434 #i‚de‡
isgª©îequÆ


435 
	#isgª©îequÆ
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

442 #i‚de‡
i¶ess


443 
	#i¶ess
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

450 #i‚de‡
i¶es£quÆ


451 
	#i¶es£quÆ
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

458 #i‚de‡
i¶essgª©î


459 
	#i¶essgª©î
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

466 #i‚de‡
isun‹dîed


467 
	#isun‹dîed
(
u
, 
v
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

470 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

475 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__unu£d
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_DCCP
 = 33,

56 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

57 
	mIPPROTO_IPV6
 = 41,

58 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

59 
	mIPPROTO_ROUTING
 = 43,

60 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

61 
	mIPPROTO_FRAGMENT
 = 44,

62 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

63 
	mIPPROTO_RSVP
 = 46,

64 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

65 
	mIPPROTO_GRE
 = 47,

66 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

67 
	mIPPROTO_ESP
 = 50,

68 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

69 
	mIPPROTO_AH
 = 51,

70 
	#IPPROTO_AH
 
IPPROTO_AH


	)

71 
	mIPPROTO_ICMPV6
 = 58,

72 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

73 
	mIPPROTO_NONE
 = 59,

74 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

75 
	mIPPROTO_DSTOPTS
 = 60,

76 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

77 
	mIPPROTO_MTP
 = 92,

78 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

79 
	mIPPROTO_ENCAP
 = 98,

80 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

81 
	mIPPROTO_PIM
 = 103,

82 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

83 
	mIPPROTO_COMP
 = 108,

84 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

85 
	mIPPROTO_SCTP
 = 132,

86 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

87 
	mIPPROTO_UDPLITE
 = 136,

88 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

89 
	mIPPROTO_RAW
 = 255,

90 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

91 
	mIPPROTO_MAX


96 
uöt16_t
 
	tö_p‹t_t
;

101 
	mIPPORT_ECHO
 = 7,

102 
	mIPPORT_DISCARD
 = 9,

103 
	mIPPORT_SYSTAT
 = 11,

104 
	mIPPORT_DAYTIME
 = 13,

105 
	mIPPORT_NETSTAT
 = 15,

106 
	mIPPORT_FTP
 = 21,

107 
	mIPPORT_TELNET
 = 23,

108 
	mIPPORT_SMTP
 = 25,

109 
	mIPPORT_TIMESERVER
 = 37,

110 
	mIPPORT_NAMESERVER
 = 42,

111 
	mIPPORT_WHOIS
 = 43,

112 
	mIPPORT_MTP
 = 57,

114 
	mIPPORT_TFTP
 = 69,

115 
	mIPPORT_RJE
 = 77,

116 
	mIPPORT_FINGER
 = 79,

117 
	mIPPORT_TTYLINK
 = 87,

118 
	mIPPORT_SUPDUP
 = 95,

121 
	mIPPORT_EXECSERVER
 = 512,

122 
	mIPPORT_LOGINSERVER
 = 513,

123 
	mIPPORT_CMDSERVER
 = 514,

124 
	mIPPORT_EFSSERVER
 = 520,

127 
	mIPPORT_BIFFUDP
 = 512,

128 
	mIPPORT_WHOSERVER
 = 513,

129 
	mIPPORT_ROUTESERVER
 = 520,

132 
	mIPPORT_RESERVED
 = 1024,

135 
	mIPPORT_USERRESERVED
 = 5000

140 
uöt32_t
 
	tö_addr_t
;

141 
	sö_addr


143 
ö_addr_t
 
	ms_addr
;

152 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

153 
	#IN_CLASSA_NET
 0xff000000

	)

154 
	#IN_CLASSA_NSHIFT
 24

	)

155 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

156 
	#IN_CLASSA_MAX
 128

	)

158 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

159 
	#IN_CLASSB_NET
 0xffff0000

	)

160 
	#IN_CLASSB_NSHIFT
 16

	)

161 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

162 
	#IN_CLASSB_MAX
 65536

	)

164 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

165 
	#IN_CLASSC_NET
 0xffffff00

	)

166 
	#IN_CLASSC_NSHIFT
 8

	)

167 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

169 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

170 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

172 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

173 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

176 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

178 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

180 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

183 
	#IN_LOOPBACKNET
 127

	)

185 #i‚de‡
INADDR_LOOPBACK


186 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

190 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

191 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

192 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

193 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

197 
	sö6_addr


201 
uöt8_t
 
	m__u6_addr8
[16];

202 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


203 
uöt16_t
 
	m__u6_addr16
[8];

204 
uöt32_t
 
	m__u6_addr32
[4];

206 } 
	m__ö6_u
;

207 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


209 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

210 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

214 c⁄° 
ö6_addr
 
ö6addr_™y
;

215 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

216 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

217 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

219 
	#INET_ADDRSTRLEN
 16

	)

220 
	#INET6_ADDRSTRLEN
 46

	)

224 
	ssockaddr_ö


226 
__SOCKADDR_COMMON
 (
sö_
);

227 
ö_p‹t_t
 
	msö_p‹t
;

228 
ö_addr
 
	msö_addr
;

231 
	msö_zîo
[ (
sockaddr
) -

232 
__SOCKADDR_COMMON_SIZE
 -

233  (
ö_p‹t_t
) -

234  (
ö_addr
)];

238 
	ssockaddr_ö6


240 
__SOCKADDR_COMMON
 (
sö6_
);

241 
ö_p‹t_t
 
	msö6_p‹t
;

242 
uöt32_t
 
	msö6_Êowöfo
;

243 
ö6_addr
 
	msö6_addr
;

244 
uöt32_t
 
	msö6_sc›e_id
;

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


250 
	sù_mªq


253 
ö_addr
 
	mimr_mu…üddr
;

256 
ö_addr
 
	mimr_öãrÁ˚
;

259 
	sù_mªq_sour˚


262 
ö_addr
 
	mimr_mu…üddr
;

265 
ö_addr
 
	mimr_öãrÁ˚
;

268 
ö_addr
 
	mimr_sour˚addr
;

274 
	sùv6_mªq


277 
ö6_addr
 
	mùv6mr_mu…üddr
;

280 
	mùv6mr_öãrÁ˚
;

284 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


286 
	sgroup_ªq


289 
uöt32_t
 
	mgr_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mgr_group
;

295 
	sgroup_sour˚_ªq


298 
uöt32_t
 
	mg§_öãrÁ˚
;

301 
sockaddr_°‹age
 
	mg§_group
;

304 
sockaddr_°‹age
 
	mg§_sour˚
;

309 
	sù_msfûãr


312 
ö_addr
 
	mimsf_mu…üddr
;

315 
ö_addr
 
	mimsf_öãrÁ˚
;

318 
uöt32_t
 
	mimsf_fmode
;

321 
uöt32_t
 
	mimsf_num§c
;

323 
ö_addr
 
	mimsf_¶i°
[1];

326 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

327 -  (
ö_addr
) \

328 + (
num§c
Ë*  (
ö_addr
))

	)

330 
	sgroup_fûãr


333 
uöt32_t
 
	mgf_öãrÁ˚
;

336 
sockaddr_°‹age
 
	mgf_group
;

339 
uöt32_t
 
	mgf_fmode
;

342 
uöt32_t
 
	mgf_num§c
;

344 
sockaddr_°‹age
 
	mgf_¶i°
[1];

347 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

348 -  (
sockaddr_°‹age
) \

349 + ((
num§c
) \

350 *  (
sockaddr_°‹age
)))

	)

355 
	~<bôs/ö.h
>

364 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

365 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

366 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

367 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

368 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

369 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

370 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

372 
	~<ídün.h
>

375 
	~<bôs/byãsw≠.h
>

377 #ifde‡
__OPTIMIZE__


381 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


384 
	#¡ohl
(
x
Ë(x)

	)

385 
	#¡ohs
(
x
Ë(x)

	)

386 
	#ht⁄l
(
x
Ë(x)

	)

387 
	#ht⁄s
(
x
Ë(x)

	)

389 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


390 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

391 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

392 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

393 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

398 #ifde‡
__GNUC__


399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (
__exãnsi⁄__
 \

401 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

402 
__a
->
s6_addr32
[0] == 0 \

403 && 
__a
->
s6_addr32
[1] == 0 \

404 && 
__a
->
s6_addr32
[2] == 0 \

405 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

407 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

408 (
__exãnsi⁄__
 \

409 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

410 
__a
->
s6_addr32
[0] == 0 \

411 && 
__a
->
s6_addr32
[1] == 0 \

412 && 
__a
->
s6_addr32
[2] == 0 \

413 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

415 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

416 (
__exãnsi⁄__
 \

417 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

418 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

420 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

421 (
__exãnsi⁄__
 \

422 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

423 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

425 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 
__a
->
s6_addr32
[0] == 0 \

429 && 
__a
->
s6_addr32
[1] == 0 \

430 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

432 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 
__a
->
s6_addr32
[0] == 0 \

436 && 
__a
->
s6_addr32
[1] == 0 \

437 && 
__a
->
s6_addr32
[2] == 0 \

438 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

440 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

441 (
__exãnsi⁄__
 \

442 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

443 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

444 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

445 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

446 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

447 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

449 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

450 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

451 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

452 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

453 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

455 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

456 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

457 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

458 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

459 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

461 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

462 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

463 =
	`ht⁄l
 (0x„800000))

	)

465 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

466 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

467 =
	`ht⁄l
 (0x„c00000))

	)

469 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

470 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

471 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

472 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

474 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

475 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

476 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

477 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

478 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

480 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

481 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

487 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

489 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


491 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

494 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

495 
__THROW
;

499 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

500 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

501 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

503 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

504 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

505 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

507 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

508 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

509 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

511 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

515 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

520 #ifde‡
__USE_GNU


521 
cmsghdr
;

524 
	sö6_pktöfo


526 
ö6_addr
 
ùi6_addr
;

527 
ùi6_ifödex
;

531 
	sù6_mtuöfo


533 
sockaddr_ö6
 
ù6m_addr
;

534 
uöt32_t
 
ù6m_mtu
;

539 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

540 
__THROW
 
__©åibuã_dïªˇãd__
;

541 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

542 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

543 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

544 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

545 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

546 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

547 
__mu…x
, 
__∂usy
)

548 
__THROW
 
__©åibuã_dïªˇãd__
;

549 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

550 
uöt8_t
 **
__çåp
)

551 
__THROW
 
__©åibuã_dïªˇãd__
;

552 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

553 
uöt8_t
 **
__çåp
, 
__ty≥
)

554 
__THROW
 
__©åibuã_dïªˇãd__
;

558 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

559 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

560 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

561 **
__d©abuÂ
Ë
__THROW
;

562 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

563 
__THROW
;

564 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

565 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

566 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

567 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

568 **
__d©abuÂ
Ë
__THROW
;

569 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

573 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

577 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

578 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

579 
__£gmíts
Ë
__THROW
;

580 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

581 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

582 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

583 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

584 
__THROW
;

590 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

591 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

592 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

593 
__THROW
;

596 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

597 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

598 
uöt32_t
 
__num§c
,

599 c⁄° 
ö_addr
 *
__¶i°
)

600 
__THROW
;

604 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

605 c⁄° 
sockaddr
 *
__group
,

606 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

607 
uöt32_t
 *
__num§c
,

608 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

611 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

612 c⁄° 
sockaddr
 *
__group
,

613 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

614 
uöt32_t
 
__num§c
,

615 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

618 
__END_DECLS


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (c⁄° *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/regex.h

21 #i‚de‡
_REGEX_H


22 
	#_REGEX_H
 1

	)

24 
	~<sys/ty≥s.h
>

27 #ifde‡
__˝lu•lus


35 
	ts_ªg_t
;

36 
	ta˘ive_ªg_t
;

43 
	tªg_sy¡ax_t
;

45 #ifde‡
__USE_GNU


48 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

53 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

59 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

73 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

81 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

85 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

89 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

93 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

97 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

102 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

106 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

110 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

115 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

119 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

123 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

127 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

133 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

137 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

141 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

145 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

153 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

158 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

162 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

167 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

171 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

175 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

182 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

184 #ifde‡
__USE_GNU


189 
	#RE_SYNTAX_EMACS
 0

	)

191 
	#RE_SYNTAX_AWK
 \

192 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

193 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

194 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

195 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

196 | 
RE_CHAR_CLASSES
 \

197 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

199 
	#RE_SYNTAX_GNU_AWK
 \

200 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

201 | 
RE_INVALID_INTERVAL_ORD
) \

202 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

203 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

205 
	#RE_SYNTAX_POSIX_AWK
 \

206 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

207 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

208 | 
RE_INVALID_INTERVAL_ORD
)

	)

210 
	#RE_SYNTAX_GREP
 \

211 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

212 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

213 | 
RE_NEWLINE_ALT
)

	)

215 
	#RE_SYNTAX_EGREP
 \

216 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

217 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

218 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

219 | 
RE_NO_BK_VBAR
)

	)

221 
	#RE_SYNTAX_POSIX_EGREP
 \

222 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

223 | 
RE_INVALID_INTERVAL_ORD
)

	)

226 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

228 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

231 
	#_RE_SYNTAX_POSIX_COMMON
 \

232 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

233 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

235 
	#RE_SYNTAX_POSIX_BASIC
 \

236 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

241 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

242 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

244 
	#RE_SYNTAX_POSIX_EXTENDED
 \

245 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

246 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

247 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

248 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

252 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

253 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

254 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

255 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

256 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

262 #ifde‡
RE_DUP_MAX


263 #unde‡
RE_DUP_MAX


266 
	#RE_DUP_MAX
 (0x7fff)

	)

274 
	#REG_EXTENDED
 1

	)

278 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

283 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

287 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

297 
	#REG_NOTBOL
 1

	)

300 
	#REG_NOTEOL
 (1 << 1)

	)

304 
	#REG_STARTEND
 (1 << 2)

	)

311 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


312 
	gREG_ENOSYS
 = -1,

315 
	gREG_NOERROR
 = 0,

316 
	gREG_NOMATCH
,

320 
	gREG_BADPAT
,

321 
	gREG_ECOLLATE
,

322 
	gREG_ECTYPE
,

323 
	gREG_EESCAPE
,

324 
	gREG_ESUBREG
,

325 
	gREG_EBRACK
,

326 
	gREG_EPAREN
,

327 
	gREG_EBRACE
,

328 
	gREG_BADBR
,

329 
	gREG_ERANGE
,

330 
	gREG_ESPACE
,

331 
	gREG_BADRPT
,

334 
	gREG_EEND
,

335 
	gREG_ESIZE
,

336 
	gREG_ERPAREN


337 } 
	tªg_îrcode_t
;

345 #i‚de‡
RE_TRANSLATE_TYPE


346 
	#__RE_TRANSLATE_TYPE
 *

	)

347 #ifde‡
__USE_GNU


348 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

352 #ifde‡
__USE_GNU


353 
	#__REPB_PREFIX
(
«me
Ë
	)
name

355 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

358 
	sª_∑âîn_buf„r


363 *
__REPB_PREFIX
(
buf„r
);

366 
__REPB_PREFIX
(
Æloˇãd
);

369 
__REPB_PREFIX
(
u£d
);

372 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

377 *
__REPB_PREFIX
(
Á°m≠
);

383 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

386 
size_t
 
	gª_nsub
;

392 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

398 #ifde‡
__USE_GNU


399 
	#REGS_UNALLOCATED
 0

	)

400 
	#REGS_REALLOCATE
 1

	)

401 
	#REGS_FIXED
 2

	)

403 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

407 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

411 
__REPB_PREFIX
(
no_sub
) : 1;

415 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

418 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

421 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

424 
ª_∑âîn_buf„r
 
	tªgex_t
;

427 
	tªgoff_t
;

430 #ifde‡
__USE_GNU


433 
	sª_ªgi°îs


435 
	gnum_ªgs
;

436 
ªgoff_t
 *
	g°¨t
;

437 
ªgoff_t
 *
	gíd
;

444 #i‚de‡
RE_NREGS


445 
	#RE_NREGS
 30

	)

455 
ªgoff_t
 
	grm_so
;

456 
ªgoff_t
 
	grm_eo
;

457 } 
	tªgm©ch_t
;

461 #ifde‡
__USE_GNU


464 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

474 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

475 
ª_∑âîn_buf„r
 *
__buf„r
);

481 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

489 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

490 
__Àngth
, 
__°¨t
, 
__ønge
,

491 
ª_ªgi°îs
 *
__ªgs
);

496 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

497 c⁄° *
__°rög1
, 
__Àngth1
,

498 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

499 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

504 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

505 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

509 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

510 c⁄° *
__°rög1
, 
__Àngth1
,

511 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

512 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

527 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

528 
ª_ªgi°îs
 *
__ªgs
,

529 
__num_ªgs
,

530 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

533 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

534 #i‚de‡
_CRAY


536 *
ª_comp
 (const *);

537 
ª_exec
 (const *);

543 #i‚de‡
__ª°ri˘


544 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

545 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


546 
	#__ª°ri˘
 
ª°ri˘


	)

548 
	#__ª°ri˘


	)

553 #i‚de‡
__ª°ri˘_¨r


554 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

555 && !
deföed
 
	g__GNUG__


556 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

558 
	#__ª°ri˘_¨r


	)

563 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

564 c⁄° *
__ª°ri˘
 
__∑âîn
,

565 
__cÊags
);

567 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

568 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

569 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

570 
__eÊags
);

572 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

573 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

575 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

578 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

61 #i‚def 
__FAVOR_BSD


64 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

68 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

73 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

77 
__BEGIN_NAMESPACE_STD


81 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

82 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_NAMESPACE_STD


86 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


90 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

91 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

95 #ifdef 
__USE_POSIX


99 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

103 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

109 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

110 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

115 #i‡
__USE_FORTIFY_LEVEL
 > 0

116 
	~<bôs/£tjmp2.h
>

119 
__END_DECLS


	@/usr/include/shadow.h

20 #i‚de‡
_SHADOW_H


21 
	#_SHADOW_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<∑ths.h
>

27 
	#__√ed_FILE


	)

28 
	~<°dio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 
	#SHADOW
 
_PATH_SHADOW


	)

36 
__BEGIN_DECLS


39 
	s•wd


41 *
	m•_«mp
;

42 *
	m•_pwdp
;

43 
	m•_l°chg
;

44 
	m•_mö
;

45 
	m•_max
;

46 
	m•_w¨n
;

48 
	m•_öa˘
;

50 
	m•_expúe
;

52 
	m•_Êag
;

62 
£t•ít
 ();

70 
íd•ít
 ();

78 
•wd
 *
gë•ít
 ();

86 
•wd
 *
gë•«m
 (c⁄° *
__«me
);

94 
•wd
 *
sgë•ít
 (c⁄° *
__°rög
);

102 
•wd
 *
fgë•ít
 (
FILE
 *
__°ªam
);

110 
put•ít
 (c⁄° 
•wd
 *
__p
, 
FILE
 *
__°ªam
);

113 #ifde‡
__USE_MISC


120 
gë•ít_r
 (
•wd
 *
__ªsu…_buf
, *
__buf„r
,

121 
size_t
 
__buÊí
, 
•wd
 **
__ªsu…
);

123 
gë•«m_r
 (c⁄° *
__«me
, 
•wd
 *
__ªsu…_buf
,

124 *
__buf„r
, 
size_t
 
__buÊí
,

125 
•wd
 **
__ªsu…
);

127 
sgë•ít_r
 (c⁄° *
__°rög
, 
•wd
 *
__ªsu…_buf
,

128 *
__buf„r
, 
size_t
 
__buÊí
,

129 
•wd
 **
__ªsu…
);

131 
fgë•ít_r
 (
FILE
 *
__°ªam
, 
•wd
 *
__ªsu…_buf
,

132 *
__buf„r
, 
size_t
 
__buÊí
,

133 
•wd
 **
__ªsu…
);

141 
	$lckpwdf
 (Ë
__THROW
;

144 
	$ulckpwdf
 (Ë
__THROW
;

146 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

169 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

171 #ifde‡
__FAVOR_BSD


174 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 #ifde‡
__USE_XOPEN


177 #ifde‡
__GNUC__


178 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

181 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

187 #ifde‡
__USE_BSD


194 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

197 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

200 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

203 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

207 #ifde‡
__USE_MISC


208 
	#NSIG
 
_NSIG


	)

211 #ifde‡
__USE_GNU


212 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

216 #ifde‡
__USE_BSD


217 
__sigh™dÀr_t
 
	tsig_t
;

220 #ifde‡
__USE_POSIX


223 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

229 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

232 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__USE_GNU


240 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

243 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

244 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

247 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

248 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

253 
	~<bôs/siga˘i⁄.h
>

256 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

257 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

264 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

267 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

268 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

271 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

278 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

279 
	`__n⁄nuŒ
 ((1, 2));

281 #ifde‡
__USE_POSIX199309


286 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

294 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

295 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

296 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

297 
	`__n⁄nuŒ
 ((1));

301 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

302 
__THROW
;

307 #ifde‡
__USE_BSD


311 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

312 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

315 
	ssigvec


317 
__sigh™dÀr_t
 
sv_h™dÀr
;

318 
sv_mask
;

320 
sv_Êags
;

321 
	#sv_⁄°ack
 
sv_Êags


	)

325 
	#SV_ONSTACK
 (1 << 0)

	)

326 
	#SV_INTERRUPT
 (1 << 1)

	)

327 
	#SV_RESETHAND
 (1 << 2)

	)

335 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

336 
sigvec
 *
__ovec
Ë
__THROW
;

340 
	~<bôs/sigc⁄ãxt.h
>

343 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


349 
	#__√ed_size_t


	)

350 
	~<°ddef.h
>

355 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

357 
	~<bôs/sig°ack.h
>

358 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


360 
	~<sys/uc⁄ãxt.h
>

366 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

367 
__THROW
 
__©åibuã_dïªˇãd__
;

371 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

372 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

376 #ifde‡
__USE_XOPEN_EXTENDED


380 
	$sighﬁd
 (
__sig
Ë
__THROW
;

383 
	$sigªl£
 (
__sig
Ë
__THROW
;

386 
	$sigign‹e
 (
__sig
Ë
__THROW
;

389 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

392 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


395 
	~<bôs/±hªadty≥s.h
>

396 
	~<bôs/sigthªad.h
>

403 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

405 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

409 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


40 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

41 
__THROW
 
__©åibuã_puª__
;

44 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

47 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


53 *
	`ödex
 (*
__s
, 
__c
)

54 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

55 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

56 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


59 
__exã∫_Æways_ölöe
 *

60 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


62  
	`__buûtö_ödex
 (
__s
, 
__c
);

65 
__exã∫_Æways_ölöe
 const *

66 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


68  
	`__buûtö_ödex
 (
__s
, 
__c
);

71 
	}
}

73 *
	$ödex
 (c⁄° *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


81 *
	`rödex
 (*
__s
, 
__c
)

82 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

83 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

84 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


87 
__exã∫_Æways_ölöe
 *

88 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


90  
	`__buûtö_rödex
 (
__s
, 
__c
);

93 
__exã∫_Æways_ölöe
 const *

94 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


96  
	`__buûtö_rödex
 (
__s
, 
__c
);

99 
	}
}

101 *
	$rödex
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


109 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

113 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

114 
__THROW
 
__©åibuã_puª__
;

117 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
;

120 #ifdef 
__USE_XOPEN2K8


124 
	~<xloˇÀ.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

131 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

132 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

133 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

136 
__END_DECLS


	@/usr/include/sys/acct.h

18 #i‚de‡
_SYS_ACCT_H


19 
	#_SYS_ACCT_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<ídün.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	~<sys/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 
	#ACCT_COMM
 16

	)

38 
u_öt16_t
 
	tcomp_t
;

40 
	sac˘


42 
	mac_Êag
;

43 
u_öt16_t
 
	mac_uid
;

44 
u_öt16_t
 
	mac_gid
;

45 
u_öt16_t
 
	mac_ây
;

46 
u_öt32_t
 
	mac_btime
;

47 
comp_t
 
	mac_utime
;

48 
comp_t
 
	mac_°ime
;

49 
comp_t
 
	mac_ëime
;

50 
comp_t
 
	mac_mem
;

51 
comp_t
 
	mac_io
;

52 
comp_t
 
	mac_rw
;

53 
comp_t
 
	mac_möÊt
;

54 
comp_t
 
	mac_majÊt
;

55 
comp_t
 
	mac_sw≠s
;

56 
u_öt32_t
 
	mac_exôcode
;

57 
	mac_comm
[
ACCT_COMM
+1];

58 
	mac_∑d
[10];

62 
	sac˘_v3


64 
	mac_Êag
;

65 
	mac_vîsi⁄
;

66 
u_öt16_t
 
	mac_ây
;

67 
u_öt32_t
 
	mac_exôcode
;

68 
u_öt32_t
 
	mac_uid
;

69 
u_öt32_t
 
	mac_gid
;

70 
u_öt32_t
 
	mac_pid
;

71 
u_öt32_t
 
	mac_µid
;

72 
u_öt32_t
 
	mac_btime
;

73 
	mac_ëime
;

74 
comp_t
 
	mac_utime
;

75 
comp_t
 
	mac_°ime
;

76 
comp_t
 
	mac_mem
;

77 
comp_t
 
	mac_io
;

78 
comp_t
 
	mac_rw
;

79 
comp_t
 
	mac_möÊt
;

80 
comp_t
 
	mac_majÊt
;

81 
comp_t
 
	mac_sw≠s
;

82 
	mac_comm
[
ACCT_COMM
];

88 
	mAFORK
 = 0x01,

89 
	mASU
 = 0x02,

90 
	mACORE
 = 0x08,

91 
	mAXSIG
 = 0x10

94 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


95 
	#ACCT_BYTEORDER
 0x80

	)

97 
	#ACCT_BYTEORDER
 0x00

	)

100 
	#AHZ
 100

	)

104 
	$ac˘
 (c⁄° *
__fûíame
Ë
__THROW
;

106 
__END_DECLS


	@/usr/include/sys/fcntl.h

1 
	~<f˙é.h
>

	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/ipc.h

18 #i‚de‡
_SYS_IPC_H


19 
	#_SYS_IPC_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

28 
	~<bôs/ù˘y≥s.h
>

29 
	~<bôs/ùc.h
>

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 #i‚de‡
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

41 #i‚de‡
__mode_t_deföed


42 
__mode_t
 
	tmode_t
;

43 
	#__mode_t_deföed


	)

46 #i‚de‡
__key_t_deföed


47 
__key_t
 
	tkey_t
;

48 
	#__key_t_deföed


	)

51 
__BEGIN_DECLS


54 
key_t
 
	$·ok
 (c⁄° *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/klog.h

18 #i‚def 
_SYS_KLOG_H


20 
	#_SYS_KLOG_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


29 
	$klog˘l
 (
__ty≥
, *
__buÂ
, 
__Àn
Ë
__THROW
;

31 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/msg.h

19 #i‚de‡
_SYS_MSG_H


20 
	#_SYS_MSG_H


	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/msq.h
>

34 
	#__√ed_time_t


	)

35 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

42 #i‚de‡
__ssize_t_deföed


43 
__ssize_t
 
	tssize_t
;

44 
	#__ssize_t_deföed


	)

50 #ifde‡
__USE_GNU


52 
	smsgbuf


54 
__sysˇŒ_¶⁄g_t
 
	mmty≥
;

55 
	mmãxt
[1];

60 
__BEGIN_DECLS


63 
	$msg˘l
 (
__msqid
, 
__cmd
, 
msqid_ds
 *
__buf
Ë
__THROW
;

66 
	$msggë
 (
key_t
 
__key
, 
__msgÊg
Ë
__THROW
;

72 
ssize_t
 
	`msgrcv
 (
__msqid
, *
__msgp
, 
size_t
 
__msgsz
,

73 
__msgtyp
, 
__msgÊg
);

79 
	`msg¢d
 (
__msqid
, c⁄° *
__msgp
, 
size_t
 
__msgsz
,

80 
__msgÊg
);

82 
__END_DECLS


	@/usr/include/sys/prctl.h

18 #i‚de‡
_SYS_PRCTL_H


19 
	#_SYS_PRCTL_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<löux/¥˘l.h
>

24 
__BEGIN_DECLS


27 
	$¥˘l
 (
__›ti⁄
, ...Ë
__THROW
;

29 
__END_DECLS


	@/usr/include/sys/ptrace.h

19 #i‚de‡
_SYS_PTRACE_H


20 
	#_SYS_PTRACE_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


27 
	e__±ø˚_ªque°


32 
	mPTRACE_TRACEME
 = 0,

33 
	#PT_TRACE_ME
 
PTRACE_TRACEME


	)

36 
	mPTRACE_PEEKTEXT
 = 1,

37 
	#PT_READ_I
 
PTRACE_PEEKTEXT


	)

40 
	mPTRACE_PEEKDATA
 = 2,

41 
	#PT_READ_D
 
PTRACE_PEEKDATA


	)

44 
	mPTRACE_PEEKUSER
 = 3,

45 
	#PT_READ_U
 
PTRACE_PEEKUSER


	)

48 
	mPTRACE_POKETEXT
 = 4,

49 
	#PT_WRITE_I
 
PTRACE_POKETEXT


	)

52 
	mPTRACE_POKEDATA
 = 5,

53 
	#PT_WRITE_D
 
PTRACE_POKEDATA


	)

56 
	mPTRACE_POKEUSER
 = 6,

57 
	#PT_WRITE_U
 
PTRACE_POKEUSER


	)

60 
	mPTRACE_CONT
 = 7,

61 
	#PT_CONTINUE
 
PTRACE_CONT


	)

64 
	mPTRACE_KILL
 = 8,

65 
	#PT_KILL
 
PTRACE_KILL


	)

69 
	mPTRACE_SINGLESTEP
 = 9,

70 
	#PT_STEP
 
PTRACE_SINGLESTEP


	)

74 
	mPTRACE_GETREGS
 = 12,

75 
	#PT_GETREGS
 
PTRACE_GETREGS


	)

79 
	mPTRACE_SETREGS
 = 13,

80 
	#PT_SETREGS
 
PTRACE_SETREGS


	)

84 
	mPTRACE_GETFPREGS
 = 14,

85 
	#PT_GETFPREGS
 
PTRACE_GETFPREGS


	)

89 
	mPTRACE_SETFPREGS
 = 15,

90 
	#PT_SETFPREGS
 
PTRACE_SETFPREGS


	)

93 
	mPTRACE_ATTACH
 = 16,

94 
	#PT_ATTACH
 
PTRACE_ATTACH


	)

97 
	mPTRACE_DETACH
 = 17,

98 
	#PT_DETACH
 
PTRACE_DETACH


	)

102 
	mPTRACE_GETFPXREGS
 = 18,

103 
	#PT_GETFPXREGS
 
PTRACE_GETFPXREGS


	)

107 
	mPTRACE_SETFPXREGS
 = 19,

108 
	#PT_SETFPXREGS
 
PTRACE_SETFPXREGS


	)

111 
	mPTRACE_SYSCALL
 = 24,

112 
	#PT_SYSCALL
 
PTRACE_SYSCALL


	)

115 
	mPTRACE_SETOPTIONS
 = 0x4200,

116 
	#PT_SETOPTIONS
 
PTRACE_SETOPTIONS


	)

119 
	mPTRACE_GETEVENTMSG
 = 0x4201,

120 
	#PT_GETEVENTMSG
 
PTRACE_GETEVENTMSG


	)

123 
	mPTRACE_GETSIGINFO
 = 0x4202,

124 
	#PT_GETSIGINFO
 
PTRACE_GETSIGINFO


	)

127 
	mPTRACE_SETSIGINFO
 = 0x4203,

128 
	#PT_SETSIGINFO
 
PTRACE_SETSIGINFO


	)

131 
	mPTRACE_GETREGSET
 = 0x4204,

132 
	#PTRACE_GETREGSET
 
PTRACE_GETREGSET


	)

135 
	mPTRACE_SETREGSET
 = 0x4205,

136 
	#PTRACE_SETREGSET
 
PTRACE_SETREGSET


	)

140 
	mPTRACE_SEIZE
 = 0x4206,

141 
	#PTRACE_SEIZE
 
PTRACE_SEIZE


	)

144 
	mPTRACE_INTERRUPT
 = 0x4207,

145 
	#PTRACE_INTERRUPT
 
PTRACE_INTERRUPT


	)

148 
	mPTRACE_LISTEN
 = 0x4208

153 
	e__±ø˚_Êags


155 
	mPTRACE_SEIZE_DEVEL
 = 0x80000000

159 
	e__±ø˚_£t›ti⁄s


161 
	mPTRACE_O_TRACESYSGOOD
 = 0x00000001,

162 
	mPTRACE_O_TRACEFORK
 = 0x00000002,

163 
	mPTRACE_O_TRACEVFORK
 = 0x00000004,

164 
	mPTRACE_O_TRACECLONE
 = 0x00000008,

165 
	mPTRACE_O_TRACEEXEC
 = 0x00000010,

166 
	mPTRACE_O_TRACEVFORKDONE
 = 0x00000020,

167 
	mPTRACE_O_TRACEEXIT
 = 0x00000040,

168 
	mPTRACE_O_TRACESECCOMP
 = 0x00000080,

169 
	mPTRACE_O_MASK
 = 0x000000ff

173 
	e__±ø˚_evítcodes


175 
	mPTRACE_EVENT_FORK
 = 1,

176 
	mPTRACE_EVENT_VFORK
 = 2,

177 
	mPTRACE_EVENT_CLONE
 = 3,

178 
	mPTRACE_EVENT_EXEC
 = 4,

179 
	mPTRACE_EVENT_VFORK_DONE
 = 5,

180 
	mPTRACE_EVENT_EXIT
 = 6,

181 
	mPTRAVE_EVENT_SECCOMP
 = 7

193 
	$±ø˚
 (
__±ø˚_ªque°
 
__ªque°
, ...Ë
__THROW
;

195 
__END_DECLS


	@/usr/include/sys/reg.h

18 #i‚de‡
_SYS_REG_H


19 
	#_SYS_REG_H
 1

	)

22 #ifde‡
__x86_64__


26 
	#R15
 0

	)

27 
	#R14
 1

	)

28 
	#R13
 2

	)

29 
	#R12
 3

	)

30 
	#RBP
 4

	)

31 
	#RBX
 5

	)

32 
	#R11
 6

	)

33 
	#R10
 7

	)

34 
	#R9
 8

	)

35 
	#R8
 9

	)

36 
	#RAX
 10

	)

37 
	#RCX
 11

	)

38 
	#RDX
 12

	)

39 
	#RSI
 13

	)

40 
	#RDI
 14

	)

41 
	#ORIG_RAX
 15

	)

42 
	#RIP
 16

	)

43 
	#CS
 17

	)

44 
	#EFLAGS
 18

	)

45 
	#RSP
 19

	)

46 
	#SS
 20

	)

47 
	#FS_BASE
 21

	)

48 
	#GS_BASE
 22

	)

49 
	#DS
 23

	)

50 
	#ES
 24

	)

51 
	#FS
 25

	)

52 
	#GS
 26

	)

58 
	#EBX
 0

	)

59 
	#ECX
 1

	)

60 
	#EDX
 2

	)

61 
	#ESI
 3

	)

62 
	#EDI
 4

	)

63 
	#EBP
 5

	)

64 
	#EAX
 6

	)

65 
	#DS
 7

	)

66 
	#ES
 8

	)

67 
	#FS
 9

	)

68 
	#GS
 10

	)

69 
	#ORIG_EAX
 11

	)

70 
	#EIP
 12

	)

71 
	#CS
 13

	)

72 
	#EFL
 14

	)

73 
	#UESP
 15

	)

74 
	#SS
 16

	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 c⁄° 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sem.h

18 #i‚de‡
_SYS_SEM_H


19 
	#_SYS_SEM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/£m.h
>

32 #ifde‡
__USE_GNU


33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

41 
	s£mbuf


43 
	m£m_num
;

44 
	m£m_›
;

45 
	m£m_Êg
;

49 
__BEGIN_DECLS


52 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

55 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

58 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

60 #ifde‡
__USE_GNU


62 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

63 c⁄° 
time•ec
 *
__timeout
Ë
__THROW
;

66 
__END_DECLS


	@/usr/include/sys/shm.h

18 #i‚de‡
_SYS_SHM_H


19 
	#_SYS_SHM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/shm.h
>

33 
	#__√ed_time_t


	)

34 
	~<time.h
>

36 #ifde‡
__USE_XOPEN


37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

44 
__BEGIN_DECLS


50 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

53 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

56 *
	$shm©
 (
__shmid
, c⁄° *
__shmaddr
, 
__shmÊg
)

57 
__THROW
;

60 
	$shmdt
 (c⁄° *
__shmaddr
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

30 #ifde‡
__USE_GNU


32 
	~<bôs/sig£t.h
>

39 
	~<bôs/sockë.h
>

41 #ifde‡
__USE_BSD


44 
	sosockaddr


46 
	mß_Ámûy
;

47 
	mß_d©a
[14];

55 
	mSHUT_RD
 = 0,

56 
	#SHUT_RD
 
SHUT_RD


	)

57 
	mSHUT_WR
,

58 
	#SHUT_WR
 
SHUT_WR


	)

59 
	mSHUT_RDWR


60 
	#SHUT_RDWR
 
SHUT_RDWR


	)

69 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


70 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

71 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

75 
	#__SOCKADDR_ALLTYPES
 \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


94 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

95 uni⁄ { 
	m__SOCKADDR_ALLTYPES


96 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

97 #unde‡
__SOCKADDR_ONETYPE


100 #ifde‡
__USE_GNU


102 
	smmsghdr


104 
msghdr
 
	mmsg_hdr
;

105 
	mmsg_Àn
;

114 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

120 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

121 
__fds
[2]Ë
__THROW
;

124 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

125 
__THROW
;

128 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

142 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

143 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

150 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

157 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

164 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

165 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

166 
sockÀn_t
 
__addr_Àn
);

175 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

176 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

177 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

185 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

186 
__Êags
);

188 #ifde‡
__USE_GNU


194 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

195 
__vÀn
, 
__Êags
);

203 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

205 #ifde‡
__USE_GNU


211 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

212 
__vÀn
, 
__Êags
,

213 c⁄° 
time•ec
 *
__tmo
);

220 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

221 *
__ª°ri˘
 
__›tvÆ
,

222 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

227 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

228 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

234 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

244 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

245 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

247 #ifde‡
__USE_GNU


252 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

253 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

262 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

265 #ifde‡
__USE_XOPEN2K


267 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

271 #ifde‡
__USE_MISC


275 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

280 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


281 
	~<bôs/sockë2.h
>

284 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

31 || 
deföed
 
	g__USE_ATFILE


32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

35 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


36 
	#__√ed_time•ec


	)

38 
	~<time.h
>

41 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


44 #i‚de‡
__dev_t_deföed


45 
__dev_t
 
	tdev_t
;

46 
	#__dev_t_deföed


	)

49 #i‚de‡
__gid_t_deföed


50 
__gid_t
 
	tgid_t
;

51 
	#__gid_t_deföed


	)

54 #i‚de‡
__öo_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__öo_t
 
	töo_t
;

58 
__öo64_t
 
	töo_t
;

60 
	#__öo_t_deföed


	)

63 #i‚de‡
__mode_t_deföed


64 
__mode_t
 
	tmode_t
;

65 
	#__mode_t_deföed


	)

68 #i‚de‡
__∆ök_t_deföed


69 
__∆ök_t
 
	t∆ök_t
;

70 
	#__∆ök_t_deföed


	)

73 #i‚de‡
__off_t_deföed


74 #i‚de‡
__USE_FILE_OFFSET64


75 
__off_t
 
	toff_t
;

77 
__off64_t
 
	toff_t
;

79 
	#__off_t_deföed


	)

82 #i‚de‡
__uid_t_deföed


83 
__uid_t
 
	tuid_t
;

84 
	#__uid_t_deföed


	)

88 #ifde‡
__USE_UNIX98


89 #i‚de‡
__blk˙t_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__blk˙t_t
 
	tblk˙t_t
;

93 
__blk˙t64_t
 
	tblk˙t_t
;

95 
	#__blk˙t_t_deföed


	)

98 #i‚de‡
__blksize_t_deföed


99 
__blksize_t
 
	tblksize_t
;

100 
	#__blksize_t_deföed


	)

104 
	g__BEGIN_DECLS


106 
	~<bôs/°©.h
>

108 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


109 
	#S_IFMT
 
__S_IFMT


	)

110 
	#S_IFDIR
 
__S_IFDIR


	)

111 
	#S_IFCHR
 
__S_IFCHR


	)

112 
	#S_IFBLK
 
__S_IFBLK


	)

113 
	#S_IFREG
 
__S_IFREG


	)

114 #ifde‡
__S_IFIFO


115 
	#S_IFIFO
 
__S_IFIFO


	)

117 #ifde‡
__S_IFLNK


118 
	#S_IFLNK
 
__S_IFLNK


	)

120 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

121 && 
deföed
 
	g__S_IFSOCK


122 
	#S_IFSOCK
 
__S_IFSOCK


	)

128 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

130 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

131 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

132 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

133 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

134 #ifde‡
__S_IFIFO


135 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

137 #ifde‡
__S_IFLNK


138 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

141 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


142 
	#S_ISLNK
(
mode
Ë0

	)

145 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

146 && 
deföed
 
	g__S_IFSOCK


147 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

148 #ñi‡
deföed
 
__USE_XOPEN2K


149 
	#S_ISSOCK
(
mode
Ë0

	)

156 #ifdef 
__USE_POSIX199309


157 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

158 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

159 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

165 
	#S_ISUID
 
__S_ISUID


	)

166 
	#S_ISGID
 
__S_ISGID


	)

168 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


170 
	#S_ISVTX
 
__S_ISVTX


	)

173 
	#S_IRUSR
 
__S_IREAD


	)

174 
	#S_IWUSR
 
__S_IWRITE


	)

175 
	#S_IXUSR
 
__S_IEXEC


	)

177 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

179 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


180 
	#S_IREAD
 
S_IRUSR


	)

181 
	#S_IWRITE
 
S_IWUSR


	)

182 
	#S_IEXEC
 
S_IXUSR


	)

185 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

186 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

187 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

189 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

191 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

192 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

193 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

195 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

198 #ifdef 
__USE_BSD


200 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

201 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

202 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

204 
	#S_BLKSIZE
 512

	)

208 #i‚de‡
__USE_FILE_OFFSET64


210 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

211 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

215 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

217 #ifde‡
__REDIRECT_NTH


218 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

219 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

220 
	`__n⁄nuŒ
 ((1, 2));

221 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

222 
	`__n⁄nuŒ
 ((2));

224 
	#°©
 
°©64


	)

225 
	#f°©
 
f°©64


	)

228 #ifde‡
__USE_LARGEFILE64


229 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

230 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

231 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

234 #ifde‡
__USE_ATFILE


238 #i‚de‡
__USE_FILE_OFFSET64


239 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

241 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

243 #ifde‡
__REDIRECT_NTH


244 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

245 
°©
 *
__ª°ri˘
 
__buf
,

246 
__Êag
),

247 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

249 
	#f°©©
 
f°©©64


	)

253 #ifde‡
__USE_LARGEFILE64


254 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

255 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

256 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

260 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


261 #i‚de‡
__USE_FILE_OFFSET64


264 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

267 #ifde‡
__REDIRECT_NTH


268 
	`__REDIRECT_NTH
 (
l°©
,

269 (c⁄° *
__ª°ri˘
 
__fûe
,

270 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 
	#l°©
 
l°©64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

278 
°©64
 *
__ª°ri˘
 
__buf
)

279 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

285 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1));

288 #ifde‡
__USE_BSD


292 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


298 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

301 #ifde‡
__USE_ATFILE


304 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

305 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

315 #ifdef 
__USE_GNU


318 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

322 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

325 #ifde‡
__USE_ATFILE


329 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

330 
__THROW
 
	`__n⁄nuŒ
 ((2));

336 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


337 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

338 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 #ifde‡
__USE_ATFILE


344 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

345 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

351 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 #ifde‡
__USE_ATFILE


358 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2));

362 #ifde‡
__USE_ATFILE


365 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

366 c⁄° 
time•ec
 
__times
[2],

367 
__Êags
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #ifde‡
__USE_XOPEN2K8


373 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

391 #i‚de‡
_STAT_VER


392 
	#_STAT_VER
 0

	)

394 #i‚de‡
_MKNOD_VER


395 
	#_MKNOD_VER
 0

	)

399 #i‚de‡
__USE_FILE_OFFSET64


400 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

401 
__THROW
 
	`__n⁄nuŒ
 ((3));

402 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

406 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

407 
°©
 *
__°©_buf
, 
__Êag
)

408 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

410 #ifde‡
__REDIRECT_NTH


411 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

412 
°©
 *
__°©_buf
), 
__fx°©64
)

413 
	`__n⁄nuŒ
 ((3));

414 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__x°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

418 
°©
 *
__°©_buf
), 
__lx°©64
)

419 
	`__n⁄nuŒ
 ((2, 3));

420 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

421 c⁄° *
__fûíame
,

422 
°©
 *
__°©_buf
, 
__Êag
),

423 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

426 
	#__fx°©
 
__fx°©64


	)

427 
	#__x°©
 
__x°©64


	)

428 
	#__lx°©
 
__lx°©64


	)

432 #ifde‡
__USE_LARGEFILE64


433 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

434 
__THROW
 
	`__n⁄nuŒ
 ((3));

435 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

439 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

440 
°©64
 *
__°©_buf
, 
__Êag
)

441 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

443 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

444 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

447 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

450 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


453 
__exã∫_ölöe
 

454 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

456  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

457 
	}
}

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


460 
__exã∫_ölöe
 

461 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

463  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

464 
	}
}

467 
__exã∫_ölöe
 

468 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

470  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

471 
	}
}

473 #ifde‡
__USE_ATFILE


474 
__exã∫_ölöe
 

475 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

476 
__Êag
))

478  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

479 
	}
}

482 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


483 
__exã∫_ölöe
 

484 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

486  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

487 
	}
}

490 #ifde‡
__USE_ATFILE


491 
__exã∫_ölöe
 

492 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

493 
__dev_t
 
__dev
))

495  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

496 
	}
}

499 #i‡
deföed
 
__USE_LARGEFILE64
 \

500 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

501 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

502 
__exã∫_ölöe
 

503 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

505  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

506 
	}
}

508 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


509 
__exã∫_ölöe
 

510 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

512  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

513 
	}
}

516 
__exã∫_ölöe
 

517 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

519  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

520 
	}
}

522 #ifde‡
__USE_ATFILE


523 
__exã∫_ölöe
 

524 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

525 
__Êag
))

527  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

528 
	}
}

535 
	g__END_DECLS


	@/usr/include/sys/syscall.h

18 #i‚de‡
_SYSCALL_H


19 
	#_SYSCALL_H
 1

	)

24 
	~<asm/uni°d.h
>

26 #i‚de‡
_LIBC


31 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/termios.h

1 #i‚de‡
_SYS_TERMIOS_H


2 
	#_SYS_TERMIOS_H


	)

3 
	~<ãrmios.h
>

	@/usr/include/sys/time.h

19 #i‚de‡
_SYS_TIME_H


20 
	#_SYS_TIME_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_time_t


	)

26 
	~<time.h
>

27 
	#__√ed_timevÆ


	)

28 
	~<bôs/time.h
>

30 
	~<sys/£À˘.h
>

32 #i‚de‡
__su£c⁄ds_t_deföed


33 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

34 
	#__su£c⁄ds_t_deföed


	)

38 
	g__BEGIN_DECLS


40 #ifde‡
__USE_GNU


42 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

43 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

44 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

45 }

	)

46 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

47 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

48 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

49 }

	)

53 #ifde‡
__USE_BSD


56 
	stimez⁄e


58 
	mtz_möuãswe°
;

59 
	mtz_d°time
;

62 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

64 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

72 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

73 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__USE_BSD


78 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

79 c⁄° 
timez⁄e
 *
__tz
)

80 
__THROW
;

86 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

87 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

92 
	e__ôimî_which


95 
ITIMER_REAL
 = 0,

96 
	#ITIMER_REAL
 
ITIMER_REAL


	)

98 
ITIMER_VIRTUAL
 = 1,

99 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

102 
ITIMER_PROF
 = 2

103 
	#ITIMER_PROF
 
ITIMER_PROF


	)

108 
	sôimîvÆ


111 
timevÆ
 
ô_öãrvÆ
;

113 
timevÆ
 
ô_vÆue
;

116 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


119 
__ôimî_which
 
	t__ôimî_which_t
;

121 
	t__ôimî_which_t
;

126 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

127 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

132 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

133 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

134 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

139 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

140 
__THROW
 
	`__n⁄nuŒ
 ((1));

142 #ifde‡
__USE_BSD


144 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

145 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

151 #ifde‡
__USE_GNU


155 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

156 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

160 #ifde‡
__USE_BSD


163 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

164 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

165 
	#timîcmp
(
a
, 
b
, 
CMP
) \

166 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

167 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

168 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

169 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

171 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

172 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

173 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

175 ++(
ªsu…
)->
tv_£c
; \

176 (
ªsu…
)->
tv_u£c
 -= 1000000; \

178 
	}
} 0)

	)

179 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

181 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

182 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

183 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

184 --(
ªsu…
)->
tv_£c
; \

185 (
ªsu…
)->
tv_u£c
 += 1000000; \

187 } 0)

	)

190 
	g__END_DECLS


	@/usr/include/sys/times.h

22 #i‚def 
_SYS_TIMES_H


23 
	#_SYS_TIMES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_˛ock_t


	)

28 
	~<time.h
>

31 
__BEGIN_DECLS


34 
	stms


36 
˛ock_t
 
	mtms_utime
;

37 
˛ock_t
 
	mtms_°ime
;

39 
˛ock_t
 
	mtms_cutime
;

40 
˛ock_t
 
	mtms_c°ime
;

48 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

50 
__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/un.h

18 #i‚def 
_SYS_UN_H


19 
	#_SYS_UN_H
 1

	)

21 
	~<sys/cdefs.h
>

24 
	~<bôs/sockaddr.h
>

26 
__BEGIN_DECLS


29 
	ssockaddr_un


31 
__SOCKADDR_COMMON
 (
sun_
);

32 
	msun_∑th
[108];

36 #ifde‡
__USE_MISC


37 
	~<°rög.h
>

40 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

41 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

44 
	g__END_DECLS


	@/usr/include/sys/user.h

18 #i‚de‡
_SYS_USER_H


19 
	#_SYS_USER_H
 1

	)

25 #ifde‡
__x86_64__


27 
	su£r_Âªgs_°ru˘


29 
	mcwd
;

30 
	mswd
;

31 
	m·w
;

32 
	mf›
;

33 
__exãnsi⁄__
 
	mrù
;

34 
__exãnsi⁄__
 
	mrdp
;

35 
	mmxc§
;

36 
	mmx¸_mask
;

37 
	m°_•a˚
[32];

38 
	mxmm_•a˚
[64];

39 
	m∑ddög
[24];

42 
	su£r_ªgs_°ru˘


44 
__exãnsi⁄__
 
	mr15
;

45 
__exãnsi⁄__
 
	mr14
;

46 
__exãnsi⁄__
 
	mr13
;

47 
__exãnsi⁄__
 
	mr12
;

48 
__exãnsi⁄__
 
	mrbp
;

49 
__exãnsi⁄__
 
	mrbx
;

50 
__exãnsi⁄__
 
	mr11
;

51 
__exãnsi⁄__
 
	mr10
;

52 
__exãnsi⁄__
 
	mr9
;

53 
__exãnsi⁄__
 
	mr8
;

54 
__exãnsi⁄__
 
	møx
;

55 
__exãnsi⁄__
 
	mrcx
;

56 
__exãnsi⁄__
 
	mrdx
;

57 
__exãnsi⁄__
 
	mrsi
;

58 
__exãnsi⁄__
 
	mrdi
;

59 
__exãnsi⁄__
 
	m‹ig_øx
;

60 
__exãnsi⁄__
 
	mrù
;

61 
__exãnsi⁄__
 
	mcs
;

62 
__exãnsi⁄__
 
	meÊags
;

63 
__exãnsi⁄__
 
	mr•
;

64 
__exãnsi⁄__
 
	mss
;

65 
__exãnsi⁄__
 
	mfs_ba£
;

66 
__exãnsi⁄__
 
	mgs_ba£
;

67 
__exãnsi⁄__
 
	mds
;

68 
__exãnsi⁄__
 
	mes
;

69 
__exãnsi⁄__
 
	mfs
;

70 
__exãnsi⁄__
 
	mgs
;

73 
	su£r


75 
u£r_ªgs_°ru˘
 
	mªgs
;

76 
	mu_ÂvÆid
;

77 
u£r_Âªgs_°ru˘
 
	mi387
;

78 
__exãnsi⁄__
 
	mu_tsize
;

79 
__exãnsi⁄__
 
	mu_dsize
;

80 
__exãnsi⁄__
 
	mu_ssize
;

81 
__exãnsi⁄__
 
	m°¨t_code
;

82 
__exãnsi⁄__
 
	m°¨t_°ack
;

83 
__exãnsi⁄__
 
	msig«l
;

84 
	mª£rved
;

85 
__exãnsi⁄__
 union

87 
u£r_ªgs_°ru˘
* 
	mu_¨0
;

88 
__exãnsi⁄__
 
	m__u_¨0_w‹d
;

90 
__exãnsi⁄__
 union

92 
u£r_Âªgs_°ru˘
* 
	mu_Â°©e
;

93 
__exãnsi⁄__
 
	m__u_Â°©e_w‹d
;

95 
__exãnsi⁄__
 
	mmagic
;

96 
	mu_comm
 [32];

97 
__exãnsi⁄__
 
	mu_debugªg
 [8];

102 
	su£r_Âªgs_°ru˘


104 
	mcwd
;

105 
	mswd
;

106 
	mtwd
;

107 
	mfù
;

108 
	mfcs
;

109 
	mfoo
;

110 
	mfos
;

111 
	m°_•a˚
 [20];

114 
	su£r_Âxªgs_°ru˘


116 
	mcwd
;

117 
	mswd
;

118 
	mtwd
;

119 
	mf›
;

120 
	mfù
;

121 
	mfcs
;

122 
	mfoo
;

123 
	mfos
;

124 
	mmxc§
;

125 
	mª£rved
;

126 
	m°_•a˚
[32];

127 
	mxmm_•a˚
[32];

128 
	m∑ddög
[56];

131 
	su£r_ªgs_°ru˘


133 
	mebx
;

134 
	mecx
;

135 
	medx
;

136 
	mesi
;

137 
	medi
;

138 
	mebp
;

139 
	móx
;

140 
	mxds
;

141 
	mxes
;

142 
	mxfs
;

143 
	mxgs
;

144 
	m‹ig_óx
;

145 
	meù
;

146 
	mxcs
;

147 
	meÊags
;

148 
	me•
;

149 
	mxss
;

152 
	su£r


154 
u£r_ªgs_°ru˘
 
	mªgs
;

155 
	mu_ÂvÆid
;

156 
u£r_Âªgs_°ru˘
 
	mi387
;

157 
	mu_tsize
;

158 
	mu_dsize
;

159 
	mu_ssize
;

160 
	m°¨t_code
;

161 
	m°¨t_°ack
;

162 
	msig«l
;

163 
	mª£rved
;

164 
u£r_ªgs_°ru˘
* 
	mu_¨0
;

165 
u£r_Âªgs_°ru˘
* 
	mu_Â°©e
;

166 
	mmagic
;

167 
	mu_comm
 [32];

168 
	mu_debugªg
 [8];

172 
	#PAGE_SHIFT
 12

	)

173 
	#PAGE_SIZE
 (1UL << 
PAGE_SHIFT
)

	)

174 
	#PAGE_MASK
 (~(
PAGE_SIZE
-1))

	)

175 
	#NBPG
 
PAGE_SIZE


	)

176 
	#UPAGES
 1

	)

177 
	#HOST_TEXT_START_ADDR
 (
u
.
°¨t_code
)

	)

178 
	#HOST_STACK_END_ADDR
 (
u
.
°¨t_°ack
 + u.
u_ssize
 * 
NBPG
)

	)

	@/usr/include/sys/wait.h

23 #i‚def 
_SYS_WAIT_H


24 
	#_SYS_WAIT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<sig«l.h
>

33 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

36 
	~<bôs/waôÊags.h
>

38 #ifdef 
__USE_BSD


43 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


44 
	#__WAIT_INT
(
°©us
) \

45 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

46 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

48 
	#__WAIT_INT
(
°©us
Ë(*(c⁄° *Ë&(°©us))

	)

56 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


57 
	#__WAIT_STATUS
 *

	)

58 
	#__WAIT_STATUS_DEFN
 *

	)

63 
waô
 *
	m__u±r
;

64 *
	m__ùå
;

65 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

66 
	#__WAIT_STATUS_DEFN
 *

	)

71 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

72 
	#__WAIT_STATUS
 *

	)

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	~<bôs/waô°©us.h
>

80 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

81 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

82 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

86 #ifde‡
__WIFCONTINUED


87 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifdef 
__USE_BSD


92 
	#WCOREFLAG
 
__WCOREFLAG


	)

93 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

94 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

95 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

99 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


102 
	mP_ALL
,

103 
	mP_PID
,

104 
	mP_PGID


105 } 
	tidty≥_t
;

114 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

116 #ifdef 
__USE_BSD


118 
	#WAIT_ANY
 (-1Ë

	)

119 
	#WAIT_MYPGRP
 0

	)

137 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

139 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


140 #i‚de‡
__id_t_deföed


141 
	~<bôs/ty≥s.h
>

142 
__id_t
 
	tid_t
;

143 
	#__id_t_deföed


	)

146 
	#__√ed_sigöfo_t


	)

147 
	~<bôs/sigöfo.h
>

160 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

161 
__›ti⁄s
);

164 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


167 
	grußge
;

174 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

175 
rußge
 * 
__ußge
Ë
__THROWNL
;

178 #ifde‡
__USE_BSD


180 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

181 
rußge
 *
__ußge
Ë
__THROWNL
;

185 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

33 
	~<time.h
>

37 
	sutimbuf


39 
__time_t
 
	ma˘ime
;

40 
__time_t
 
	mmodtime
;

45 
	$utime
 (c⁄° *
__fûe
,

46 c⁄° 
utimbuf
 *
__fûe_times
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H
 1

	)

4 
	#__NR_ª°¨t_sysˇŒ
 0

	)

5 
	#__NR_exô
 1

	)

6 
	#__NR_f‹k
 2

	)

7 
	#__NR_ªad
 3

	)

8 
	#__NR_wrôe
 4

	)

9 
	#__NR_›í
 5

	)

10 
	#__NR_˛o£
 6

	)

11 
	#__NR_waôpid
 7

	)

12 
	#__NR_¸ót
 8

	)

13 
	#__NR_lök
 9

	)

14 
	#__NR_u∆ök
 10

	)

15 
	#__NR_execve
 11

	)

16 
	#__NR_chdú
 12

	)

17 
	#__NR_time
 13

	)

18 
	#__NR_mknod
 14

	)

19 
	#__NR_chmod
 15

	)

20 
	#__NR_lchown
 16

	)

21 
	#__NR_bªak
 17

	)

22 
	#__NR_ﬁd°©
 18

	)

23 
	#__NR_l£ek
 19

	)

24 
	#__NR_gëpid
 20

	)

25 
	#__NR_mou¡
 21

	)

26 
	#__NR_umou¡
 22

	)

27 
	#__NR_£tuid
 23

	)

28 
	#__NR_gëuid
 24

	)

29 
	#__NR_°ime
 25

	)

30 
	#__NR_±ø˚
 26

	)

31 
	#__NR_Æ¨m
 27

	)

32 
	#__NR_ﬁdf°©
 28

	)

33 
	#__NR_∑u£
 29

	)

34 
	#__NR_utime
 30

	)

35 
	#__NR_°ty
 31

	)

36 
	#__NR_gây
 32

	)

37 
	#__NR_ac˚ss
 33

	)

38 
	#__NR_ni˚
 34

	)

39 
	#__NR_·ime
 35

	)

40 
	#__NR_sync
 36

	)

41 
	#__NR_kûl
 37

	)

42 
	#__NR_ª«me
 38

	)

43 
	#__NR_mkdú
 39

	)

44 
	#__NR_rmdú
 40

	)

45 
	#__NR_dup
 41

	)

46 
	#__NR_pùe
 42

	)

47 
	#__NR_times
 43

	)

48 
	#__NR_¥of
 44

	)

49 
	#__NR_brk
 45

	)

50 
	#__NR_£tgid
 46

	)

51 
	#__NR_gëgid
 47

	)

52 
	#__NR_sig«l
 48

	)

53 
	#__NR_gëeuid
 49

	)

54 
	#__NR_gëegid
 50

	)

55 
	#__NR_ac˘
 51

	)

56 
	#__NR_umou¡2
 52

	)

57 
	#__NR_lock
 53

	)

58 
	#__NR_io˘l
 54

	)

59 
	#__NR_f˙é
 55

	)

60 
	#__NR_mpx
 56

	)

61 
	#__NR_£çgid
 57

	)

62 
	#__NR_ulimô
 58

	)

63 
	#__NR_ﬁdﬁdu«me
 59

	)

64 
	#__NR_umask
 60

	)

65 
	#__NR_chroŸ
 61

	)

66 
	#__NR_u°©
 62

	)

67 
	#__NR_dup2
 63

	)

68 
	#__NR_gëµid
 64

	)

69 
	#__NR_gëpgΩ
 65

	)

70 
	#__NR_£tsid
 66

	)

71 
	#__NR_siga˘i⁄
 67

	)

72 
	#__NR_sgëmask
 68

	)

73 
	#__NR_s£tmask
 69

	)

74 
	#__NR_£åeuid
 70

	)

75 
	#__NR_£åegid
 71

	)

76 
	#__NR_sigsu•íd
 72

	)

77 
	#__NR_sig≥ndög
 73

	)

78 
	#__NR_£tho°«me
 74

	)

79 
	#__NR_£ålimô
 75

	)

80 
	#__NR_gëæimô
 76

	)

81 
	#__NR_gërußge
 77

	)

82 
	#__NR_gëtimeofday
 78

	)

83 
	#__NR_£âimeofday
 79

	)

84 
	#__NR_gëgroups
 80

	)

85 
	#__NR_£tgroups
 81

	)

86 
	#__NR_£À˘
 82

	)

87 
	#__NR_symlök
 83

	)

88 
	#__NR_ﬁdl°©
 84

	)

89 
	#__NR_ªadlök
 85

	)

90 
	#__NR_u£lib
 86

	)

91 
	#__NR_sw≠⁄
 87

	)

92 
	#__NR_ªboŸ
 88

	)

93 
	#__NR_ªaddú
 89

	)

94 
	#__NR_mm≠
 90

	)

95 
	#__NR_munm≠
 91

	)

96 
	#__NR_åunˇã
 92

	)

97 
	#__NR_·runˇã
 93

	)

98 
	#__NR_fchmod
 94

	)

99 
	#__NR_fchown
 95

	)

100 
	#__NR_gë¥i‹ôy
 96

	)

101 
	#__NR_£çri‹ôy
 97

	)

102 
	#__NR_¥ofû
 98

	)

103 
	#__NR_°©fs
 99

	)

104 
	#__NR_f°©fs
 100

	)

105 
	#__NR_i›îm
 101

	)

106 
	#__NR_sockëˇŒ
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_£tôimî
 104

	)

109 
	#__NR_gëôimî
 105

	)

110 
	#__NR_°©
 106

	)

111 
	#__NR_l°©
 107

	)

112 
	#__NR_f°©
 108

	)

113 
	#__NR_ﬁdu«me
 109

	)

114 
	#__NR_i›l
 110

	)

115 
	#__NR_vh™gup
 111

	)

116 
	#__NR_idÀ
 112

	)

117 
	#__NR_vm86ﬁd
 113

	)

118 
	#__NR_waô4
 114

	)

119 
	#__NR_sw≠off
 115

	)

120 
	#__NR_sysöfo
 116

	)

121 
	#__NR_ùc
 117

	)

122 
	#__NR_fsync
 118

	)

123 
	#__NR_sigªtu∫
 119

	)

124 
	#__NR_˛⁄e
 120

	)

125 
	#__NR_£tdomaö«me
 121

	)

126 
	#__NR_u«me
 122

	)

127 
	#__NR_modify_ldt
 123

	)

128 
	#__NR_adjtimex
 124

	)

129 
	#__NR_m¥Ÿe˘
 125

	)

130 
	#__NR_sig¥ocmask
 126

	)

131 
	#__NR_¸óã_moduÀ
 127

	)

132 
	#__NR_öô_moduÀ
 128

	)

133 
	#__NR_dñëe_moduÀ
 129

	)

134 
	#__NR_gë_kî√l_syms
 130

	)

135 
	#__NR_quŸa˘l
 131

	)

136 
	#__NR_gëpgid
 132

	)

137 
	#__NR_fchdú
 133

	)

138 
	#__NR_bdÊush
 134

	)

139 
	#__NR_sysfs
 135

	)

140 
	#__NR_≥rs⁄Æôy
 136

	)

141 
	#__NR_afs_sysˇŒ
 137

	)

142 
	#__NR_£tfsuid
 138

	)

143 
	#__NR_£tfsgid
 139

	)

144 
	#__NR__Œ£ek
 140

	)

145 
	#__NR_gëdíts
 141

	)

146 
	#__NR__√w£À˘
 142

	)

147 
	#__NR_Êock
 143

	)

148 
	#__NR_msync
 144

	)

149 
	#__NR_ªadv
 145

	)

150 
	#__NR_wrôev
 146

	)

151 
	#__NR_gësid
 147

	)

152 
	#__NR_fd©async
 148

	)

153 
	#__NR__sys˘l
 149

	)

154 
	#__NR_mlock
 150

	)

155 
	#__NR_mu∆ock
 151

	)

156 
	#__NR_mlockÆl
 152

	)

157 
	#__NR_mu∆ockÆl
 153

	)

158 
	#__NR_sched_£ç¨am
 154

	)

159 
	#__NR_sched_gë∑øm
 155

	)

160 
	#__NR_sched_£tscheduÀr
 156

	)

161 
	#__NR_sched_gëscheduÀr
 157

	)

162 
	#__NR_sched_yõld
 158

	)

163 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

164 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

165 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

166 
	#__NR_«no¶ìp
 162

	)

167 
	#__NR_mªm≠
 163

	)

168 
	#__NR_£åesuid
 164

	)

169 
	#__NR_gëªsuid
 165

	)

170 
	#__NR_vm86
 166

	)

171 
	#__NR_quîy_moduÀ
 167

	)

172 
	#__NR_pﬁl
 168

	)

173 
	#__NR_nfs£rv˘l
 169

	)

174 
	#__NR_£åesgid
 170

	)

175 
	#__NR_gëªsgid
 171

	)

176 
	#__NR_¥˘l
 172

	)

177 
	#__NR_π_sigªtu∫
 173

	)

178 
	#__NR_π_siga˘i⁄
 174

	)

179 
	#__NR_π_sig¥ocmask
 175

	)

180 
	#__NR_π_sig≥ndög
 176

	)

181 
	#__NR_π_sigtimedwaô
 177

	)

182 
	#__NR_π_sigqueueöfo
 178

	)

183 
	#__NR_π_sigsu•íd
 179

	)

184 
	#__NR_¥ód64
 180

	)

185 
	#__NR_pwrôe64
 181

	)

186 
	#__NR_chown
 182

	)

187 
	#__NR_gëcwd
 183

	)

188 
	#__NR_ˇpgë
 184

	)

189 
	#__NR_ˇp£t
 185

	)

190 
	#__NR_sigÆt°ack
 186

	)

191 
	#__NR_£ndfûe
 187

	)

192 
	#__NR_gëpmsg
 188

	)

193 
	#__NR_puçmsg
 189

	)

194 
	#__NR_vf‹k
 190

	)

195 
	#__NR_ugëæimô
 191

	)

196 
	#__NR_mm≠2
 192

	)

197 
	#__NR_åunˇã64
 193

	)

198 
	#__NR_·runˇã64
 194

	)

199 
	#__NR_°©64
 195

	)

200 
	#__NR_l°©64
 196

	)

201 
	#__NR_f°©64
 197

	)

202 
	#__NR_lchown32
 198

	)

203 
	#__NR_gëuid32
 199

	)

204 
	#__NR_gëgid32
 200

	)

205 
	#__NR_gëeuid32
 201

	)

206 
	#__NR_gëegid32
 202

	)

207 
	#__NR_£åeuid32
 203

	)

208 
	#__NR_£åegid32
 204

	)

209 
	#__NR_gëgroups32
 205

	)

210 
	#__NR_£tgroups32
 206

	)

211 
	#__NR_fchown32
 207

	)

212 
	#__NR_£åesuid32
 208

	)

213 
	#__NR_gëªsuid32
 209

	)

214 
	#__NR_£åesgid32
 210

	)

215 
	#__NR_gëªsgid32
 211

	)

216 
	#__NR_chown32
 212

	)

217 
	#__NR_£tuid32
 213

	)

218 
	#__NR_£tgid32
 214

	)

219 
	#__NR_£tfsuid32
 215

	)

220 
	#__NR_£tfsgid32
 216

	)

221 
	#__NR_pivŸ_roŸ
 217

	)

222 
	#__NR_möc‹e
 218

	)

223 
	#__NR_madvi£
 219

	)

224 
	#__NR_gëdíts64
 220

	)

225 
	#__NR_f˙é64
 221

	)

226 
	#__NR_gëtid
 224

	)

227 
	#__NR_ªadahód
 225

	)

228 
	#__NR_£tx©å
 226

	)

229 
	#__NR_l£tx©å
 227

	)

230 
	#__NR_f£tx©å
 228

	)

231 
	#__NR_gëx©å
 229

	)

232 
	#__NR_lgëx©å
 230

	)

233 
	#__NR_fgëx©å
 231

	)

234 
	#__NR_li°x©å
 232

	)

235 
	#__NR_Œi°x©å
 233

	)

236 
	#__NR_Êi°x©å
 234

	)

237 
	#__NR_ªmovex©å
 235

	)

238 
	#__NR_Ãemovex©å
 236

	)

239 
	#__NR_‰emovex©å
 237

	)

240 
	#__NR_tkûl
 238

	)

241 
	#__NR_£ndfûe64
 239

	)

242 
	#__NR_fuãx
 240

	)

243 
	#__NR_sched_£èfföôy
 241

	)

244 
	#__NR_sched_gëafföôy
 242

	)

245 
	#__NR_£t_thªad_¨ó
 243

	)

246 
	#__NR_gë_thªad_¨ó
 244

	)

247 
	#__NR_io_£tup
 245

	)

248 
	#__NR_io_de°roy
 246

	)

249 
	#__NR_io_gëevíts
 247

	)

250 
	#__NR_io_submô
 248

	)

251 
	#__NR_io_ˇn˚l
 249

	)

252 
	#__NR_Ádvi£64
 250

	)

253 
	#__NR_exô_group
 252

	)

254 
	#__NR_lookup_dcookõ
 253

	)

255 
	#__NR_ïﬁl_¸óã
 254

	)

256 
	#__NR_ïﬁl_˘l
 255

	)

257 
	#__NR_ïﬁl_waô
 256

	)

258 
	#__NR_ªm≠_fûe_∑ges
 257

	)

259 
	#__NR_£t_tid_addªss
 258

	)

260 
	#__NR_timî_¸óã
 259

	)

261 
	#__NR_timî_£âime
 260

	)

262 
	#__NR_timî_gëtime
 261

	)

263 
	#__NR_timî_gëovîrun
 262

	)

264 
	#__NR_timî_dñëe
 263

	)

265 
	#__NR_˛ock_£âime
 264

	)

266 
	#__NR_˛ock_gëtime
 265

	)

267 
	#__NR_˛ock_gëªs
 266

	)

268 
	#__NR_˛ock_«no¶ìp
 267

	)

269 
	#__NR_°©fs64
 268

	)

270 
	#__NR_f°©fs64
 269

	)

271 
	#__NR_tgkûl
 270

	)

272 
	#__NR_utimes
 271

	)

273 
	#__NR_Ádvi£64_64
 272

	)

274 
	#__NR_v£rvî
 273

	)

275 
	#__NR_mböd
 274

	)

276 
	#__NR_gë_mempﬁicy
 275

	)

277 
	#__NR_£t_mempﬁicy
 276

	)

278 
	#__NR_mq_›í
 277

	)

279 
	#__NR_mq_u∆ök
 278

	)

280 
	#__NR_mq_timed£nd
 279

	)

281 
	#__NR_mq_timedª˚ive
 280

	)

282 
	#__NR_mq_nŸify
 281

	)

283 
	#__NR_mq_gë£èâr
 282

	)

284 
	#__NR_kexec_lﬂd
 283

	)

285 
	#__NR_waôid
 284

	)

286 
	#__NR_add_key
 286

	)

287 
	#__NR_ªque°_key
 287

	)

288 
	#__NR_key˘l
 288

	)

289 
	#__NR_i›rio_£t
 289

	)

290 
	#__NR_i›rio_gë
 290

	)

291 
	#__NR_öŸify_öô
 291

	)

292 
	#__NR_öŸify_add_w©ch
 292

	)

293 
	#__NR_öŸify_rm_w©ch
 293

	)

294 
	#__NR_migøã_∑ges
 294

	)

295 
	#__NR_›í©
 295

	)

296 
	#__NR_mkdú©
 296

	)

297 
	#__NR_mknod©
 297

	)

298 
	#__NR_fchow«t
 298

	)

299 
	#__NR_futimeßt
 299

	)

300 
	#__NR_f°©©64
 300

	)

301 
	#__NR_u∆ök©
 301

	)

302 
	#__NR_ª«mót
 302

	)

303 
	#__NR_lök©
 303

	)

304 
	#__NR_symlök©
 304

	)

305 
	#__NR_ªadlök©
 305

	)

306 
	#__NR_fchmod©
 306

	)

307 
	#__NR_Ác˚sßt
 307

	)

308 
	#__NR_p£À˘6
 308

	)

309 
	#__NR_µﬁl
 309

	)

310 
	#__NR_unsh¨e
 310

	)

311 
	#__NR_£t_robu°_li°
 311

	)

312 
	#__NR_gë_robu°_li°
 312

	)

313 
	#__NR_•li˚
 313

	)

314 
	#__NR_sync_fûe_ønge
 314

	)

315 
	#__NR_ãe
 315

	)

316 
	#__NR_vm•li˚
 316

	)

317 
	#__NR_move_∑ges
 317

	)

318 
	#__NR_gë˝u
 318

	)

319 
	#__NR_ïﬁl_pwaô
 319

	)

320 
	#__NR_utimíßt
 320

	)

321 
	#__NR_sig«lfd
 321

	)

322 
	#__NR_timîfd_¸óã
 322

	)

323 
	#__NR_evítfd
 323

	)

324 
	#__NR_ÁŒoˇã
 324

	)

325 
	#__NR_timîfd_£âime
 325

	)

326 
	#__NR_timîfd_gëtime
 326

	)

327 
	#__NR_sig«lfd4
 327

	)

328 
	#__NR_evítfd2
 328

	)

329 
	#__NR_ïﬁl_¸óã1
 329

	)

330 
	#__NR_dup3
 330

	)

331 
	#__NR_pùe2
 331

	)

332 
	#__NR_öŸify_öô1
 332

	)

333 
	#__NR_¥ódv
 333

	)

334 
	#__NR_pwrôev
 334

	)

335 
	#__NR_π_tgsigqueueöfo
 335

	)

336 
	#__NR_≥rf_evít_›í
 336

	)

337 
	#__NR_ªcvmmsg
 337

	)

338 
	#__NR_ÁnŸify_öô
 338

	)

339 
	#__NR_ÁnŸify_m¨k
 339

	)

340 
	#__NR_¥limô64
 340

	)

341 
	#__NR_«me_to_h™dÀ_©
 341

	)

342 
	#__NR_›í_by_h™dÀ_©
 342

	)

343 
	#__NR_˛ock_adjtime
 343

	)

344 
	#__NR_syncfs
 344

	)

345 
	#__NR_£ndmmsg
 345

	)

346 
	#__NR_£äs
 346

	)

347 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

348 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

349 
	#__NR_kcmp
 349

	)

350 
	#__NR_föô_moduÀ
 350

	)

351 
	#__NR_memfd_¸óã
 356

	)

352 
	#__NR_u£rÁu…fd
 374

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H
 1

	)

4 
	#__NR_ªad
 0

	)

5 
	#__NR_wrôe
 1

	)

6 
	#__NR_›í
 2

	)

7 
	#__NR_˛o£
 3

	)

8 
	#__NR_°©
 4

	)

9 
	#__NR_f°©
 5

	)

10 
	#__NR_l°©
 6

	)

11 
	#__NR_pﬁl
 7

	)

12 
	#__NR_l£ek
 8

	)

13 
	#__NR_mm≠
 9

	)

14 
	#__NR_m¥Ÿe˘
 10

	)

15 
	#__NR_munm≠
 11

	)

16 
	#__NR_brk
 12

	)

17 
	#__NR_π_siga˘i⁄
 13

	)

18 
	#__NR_π_sig¥ocmask
 14

	)

19 
	#__NR_π_sigªtu∫
 15

	)

20 
	#__NR_io˘l
 16

	)

21 
	#__NR_¥ód64
 17

	)

22 
	#__NR_pwrôe64
 18

	)

23 
	#__NR_ªadv
 19

	)

24 
	#__NR_wrôev
 20

	)

25 
	#__NR_ac˚ss
 21

	)

26 
	#__NR_pùe
 22

	)

27 
	#__NR_£À˘
 23

	)

28 
	#__NR_sched_yõld
 24

	)

29 
	#__NR_mªm≠
 25

	)

30 
	#__NR_msync
 26

	)

31 
	#__NR_möc‹e
 27

	)

32 
	#__NR_madvi£
 28

	)

33 
	#__NR_shmgë
 29

	)

34 
	#__NR_shm©
 30

	)

35 
	#__NR_shm˘l
 31

	)

36 
	#__NR_dup
 32

	)

37 
	#__NR_dup2
 33

	)

38 
	#__NR_∑u£
 34

	)

39 
	#__NR_«no¶ìp
 35

	)

40 
	#__NR_gëôimî
 36

	)

41 
	#__NR_Æ¨m
 37

	)

42 
	#__NR_£tôimî
 38

	)

43 
	#__NR_gëpid
 39

	)

44 
	#__NR_£ndfûe
 40

	)

45 
	#__NR_sockë
 41

	)

46 
	#__NR_c⁄√˘
 42

	)

47 
	#__NR_ac˚±
 43

	)

48 
	#__NR_£ndto
 44

	)

49 
	#__NR_ªcv‰om
 45

	)

50 
	#__NR_£ndmsg
 46

	)

51 
	#__NR_ªcvmsg
 47

	)

52 
	#__NR_shutdown
 48

	)

53 
	#__NR_böd
 49

	)

54 
	#__NR_li°í
 50

	)

55 
	#__NR_gësock«me
 51

	)

56 
	#__NR_gë≥î«me
 52

	)

57 
	#__NR_sockë∑ú
 53

	)

58 
	#__NR_£tsock›t
 54

	)

59 
	#__NR_gësock›t
 55

	)

60 
	#__NR_˛⁄e
 56

	)

61 
	#__NR_f‹k
 57

	)

62 
	#__NR_vf‹k
 58

	)

63 
	#__NR_execve
 59

	)

64 
	#__NR_exô
 60

	)

65 
	#__NR_waô4
 61

	)

66 
	#__NR_kûl
 62

	)

67 
	#__NR_u«me
 63

	)

68 
	#__NR_£mgë
 64

	)

69 
	#__NR_£m›
 65

	)

70 
	#__NR_£m˘l
 66

	)

71 
	#__NR_shmdt
 67

	)

72 
	#__NR_msggë
 68

	)

73 
	#__NR_msg¢d
 69

	)

74 
	#__NR_msgrcv
 70

	)

75 
	#__NR_msg˘l
 71

	)

76 
	#__NR_f˙é
 72

	)

77 
	#__NR_Êock
 73

	)

78 
	#__NR_fsync
 74

	)

79 
	#__NR_fd©async
 75

	)

80 
	#__NR_åunˇã
 76

	)

81 
	#__NR_·runˇã
 77

	)

82 
	#__NR_gëdíts
 78

	)

83 
	#__NR_gëcwd
 79

	)

84 
	#__NR_chdú
 80

	)

85 
	#__NR_fchdú
 81

	)

86 
	#__NR_ª«me
 82

	)

87 
	#__NR_mkdú
 83

	)

88 
	#__NR_rmdú
 84

	)

89 
	#__NR_¸ót
 85

	)

90 
	#__NR_lök
 86

	)

91 
	#__NR_u∆ök
 87

	)

92 
	#__NR_symlök
 88

	)

93 
	#__NR_ªadlök
 89

	)

94 
	#__NR_chmod
 90

	)

95 
	#__NR_fchmod
 91

	)

96 
	#__NR_chown
 92

	)

97 
	#__NR_fchown
 93

	)

98 
	#__NR_lchown
 94

	)

99 
	#__NR_umask
 95

	)

100 
	#__NR_gëtimeofday
 96

	)

101 
	#__NR_gëæimô
 97

	)

102 
	#__NR_gërußge
 98

	)

103 
	#__NR_sysöfo
 99

	)

104 
	#__NR_times
 100

	)

105 
	#__NR_±ø˚
 101

	)

106 
	#__NR_gëuid
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_gëgid
 104

	)

109 
	#__NR_£tuid
 105

	)

110 
	#__NR_£tgid
 106

	)

111 
	#__NR_gëeuid
 107

	)

112 
	#__NR_gëegid
 108

	)

113 
	#__NR_£çgid
 109

	)

114 
	#__NR_gëµid
 110

	)

115 
	#__NR_gëpgΩ
 111

	)

116 
	#__NR_£tsid
 112

	)

117 
	#__NR_£åeuid
 113

	)

118 
	#__NR_£åegid
 114

	)

119 
	#__NR_gëgroups
 115

	)

120 
	#__NR_£tgroups
 116

	)

121 
	#__NR_£åesuid
 117

	)

122 
	#__NR_gëªsuid
 118

	)

123 
	#__NR_£åesgid
 119

	)

124 
	#__NR_gëªsgid
 120

	)

125 
	#__NR_gëpgid
 121

	)

126 
	#__NR_£tfsuid
 122

	)

127 
	#__NR_£tfsgid
 123

	)

128 
	#__NR_gësid
 124

	)

129 
	#__NR_ˇpgë
 125

	)

130 
	#__NR_ˇp£t
 126

	)

131 
	#__NR_π_sig≥ndög
 127

	)

132 
	#__NR_π_sigtimedwaô
 128

	)

133 
	#__NR_π_sigqueueöfo
 129

	)

134 
	#__NR_π_sigsu•íd
 130

	)

135 
	#__NR_sigÆt°ack
 131

	)

136 
	#__NR_utime
 132

	)

137 
	#__NR_mknod
 133

	)

138 
	#__NR_u£lib
 134

	)

139 
	#__NR_≥rs⁄Æôy
 135

	)

140 
	#__NR_u°©
 136

	)

141 
	#__NR_°©fs
 137

	)

142 
	#__NR_f°©fs
 138

	)

143 
	#__NR_sysfs
 139

	)

144 
	#__NR_gë¥i‹ôy
 140

	)

145 
	#__NR_£çri‹ôy
 141

	)

146 
	#__NR_sched_£ç¨am
 142

	)

147 
	#__NR_sched_gë∑øm
 143

	)

148 
	#__NR_sched_£tscheduÀr
 144

	)

149 
	#__NR_sched_gëscheduÀr
 145

	)

150 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

151 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

152 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

153 
	#__NR_mlock
 149

	)

154 
	#__NR_mu∆ock
 150

	)

155 
	#__NR_mlockÆl
 151

	)

156 
	#__NR_mu∆ockÆl
 152

	)

157 
	#__NR_vh™gup
 153

	)

158 
	#__NR_modify_ldt
 154

	)

159 
	#__NR_pivŸ_roŸ
 155

	)

160 
	#__NR__sys˘l
 156

	)

161 
	#__NR_¥˘l
 157

	)

162 
	#__NR_¨ch_¥˘l
 158

	)

163 
	#__NR_adjtimex
 159

	)

164 
	#__NR_£ålimô
 160

	)

165 
	#__NR_chroŸ
 161

	)

166 
	#__NR_sync
 162

	)

167 
	#__NR_ac˘
 163

	)

168 
	#__NR_£âimeofday
 164

	)

169 
	#__NR_mou¡
 165

	)

170 
	#__NR_umou¡2
 166

	)

171 
	#__NR_sw≠⁄
 167

	)

172 
	#__NR_sw≠off
 168

	)

173 
	#__NR_ªboŸ
 169

	)

174 
	#__NR_£tho°«me
 170

	)

175 
	#__NR_£tdomaö«me
 171

	)

176 
	#__NR_i›l
 172

	)

177 
	#__NR_i›îm
 173

	)

178 
	#__NR_¸óã_moduÀ
 174

	)

179 
	#__NR_öô_moduÀ
 175

	)

180 
	#__NR_dñëe_moduÀ
 176

	)

181 
	#__NR_gë_kî√l_syms
 177

	)

182 
	#__NR_quîy_moduÀ
 178

	)

183 
	#__NR_quŸa˘l
 179

	)

184 
	#__NR_nfs£rv˘l
 180

	)

185 
	#__NR_gëpmsg
 181

	)

186 
	#__NR_puçmsg
 182

	)

187 
	#__NR_afs_sysˇŒ
 183

	)

188 
	#__NR_tuxˇŒ
 184

	)

189 
	#__NR_£curôy
 185

	)

190 
	#__NR_gëtid
 186

	)

191 
	#__NR_ªadahód
 187

	)

192 
	#__NR_£tx©å
 188

	)

193 
	#__NR_l£tx©å
 189

	)

194 
	#__NR_f£tx©å
 190

	)

195 
	#__NR_gëx©å
 191

	)

196 
	#__NR_lgëx©å
 192

	)

197 
	#__NR_fgëx©å
 193

	)

198 
	#__NR_li°x©å
 194

	)

199 
	#__NR_Œi°x©å
 195

	)

200 
	#__NR_Êi°x©å
 196

	)

201 
	#__NR_ªmovex©å
 197

	)

202 
	#__NR_Ãemovex©å
 198

	)

203 
	#__NR_‰emovex©å
 199

	)

204 
	#__NR_tkûl
 200

	)

205 
	#__NR_time
 201

	)

206 
	#__NR_fuãx
 202

	)

207 
	#__NR_sched_£èfföôy
 203

	)

208 
	#__NR_sched_gëafföôy
 204

	)

209 
	#__NR_£t_thªad_¨ó
 205

	)

210 
	#__NR_io_£tup
 206

	)

211 
	#__NR_io_de°roy
 207

	)

212 
	#__NR_io_gëevíts
 208

	)

213 
	#__NR_io_submô
 209

	)

214 
	#__NR_io_ˇn˚l
 210

	)

215 
	#__NR_gë_thªad_¨ó
 211

	)

216 
	#__NR_lookup_dcookõ
 212

	)

217 
	#__NR_ïﬁl_¸óã
 213

	)

218 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

219 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

220 
	#__NR_ªm≠_fûe_∑ges
 216

	)

221 
	#__NR_gëdíts64
 217

	)

222 
	#__NR_£t_tid_addªss
 218

	)

223 
	#__NR_ª°¨t_sysˇŒ
 219

	)

224 
	#__NR_£mtimed›
 220

	)

225 
	#__NR_Ádvi£64
 221

	)

226 
	#__NR_timî_¸óã
 222

	)

227 
	#__NR_timî_£âime
 223

	)

228 
	#__NR_timî_gëtime
 224

	)

229 
	#__NR_timî_gëovîrun
 225

	)

230 
	#__NR_timî_dñëe
 226

	)

231 
	#__NR_˛ock_£âime
 227

	)

232 
	#__NR_˛ock_gëtime
 228

	)

233 
	#__NR_˛ock_gëªs
 229

	)

234 
	#__NR_˛ock_«no¶ìp
 230

	)

235 
	#__NR_exô_group
 231

	)

236 
	#__NR_ïﬁl_waô
 232

	)

237 
	#__NR_ïﬁl_˘l
 233

	)

238 
	#__NR_tgkûl
 234

	)

239 
	#__NR_utimes
 235

	)

240 
	#__NR_v£rvî
 236

	)

241 
	#__NR_mböd
 237

	)

242 
	#__NR_£t_mempﬁicy
 238

	)

243 
	#__NR_gë_mempﬁicy
 239

	)

244 
	#__NR_mq_›í
 240

	)

245 
	#__NR_mq_u∆ök
 241

	)

246 
	#__NR_mq_timed£nd
 242

	)

247 
	#__NR_mq_timedª˚ive
 243

	)

248 
	#__NR_mq_nŸify
 244

	)

249 
	#__NR_mq_gë£èâr
 245

	)

250 
	#__NR_kexec_lﬂd
 246

	)

251 
	#__NR_waôid
 247

	)

252 
	#__NR_add_key
 248

	)

253 
	#__NR_ªque°_key
 249

	)

254 
	#__NR_key˘l
 250

	)

255 
	#__NR_i›rio_£t
 251

	)

256 
	#__NR_i›rio_gë
 252

	)

257 
	#__NR_öŸify_öô
 253

	)

258 
	#__NR_öŸify_add_w©ch
 254

	)

259 
	#__NR_öŸify_rm_w©ch
 255

	)

260 
	#__NR_migøã_∑ges
 256

	)

261 
	#__NR_›í©
 257

	)

262 
	#__NR_mkdú©
 258

	)

263 
	#__NR_mknod©
 259

	)

264 
	#__NR_fchow«t
 260

	)

265 
	#__NR_futimeßt
 261

	)

266 
	#__NR_√wf°©©
 262

	)

267 
	#__NR_u∆ök©
 263

	)

268 
	#__NR_ª«mót
 264

	)

269 
	#__NR_lök©
 265

	)

270 
	#__NR_symlök©
 266

	)

271 
	#__NR_ªadlök©
 267

	)

272 
	#__NR_fchmod©
 268

	)

273 
	#__NR_Ác˚sßt
 269

	)

274 
	#__NR_p£À˘6
 270

	)

275 
	#__NR_µﬁl
 271

	)

276 
	#__NR_unsh¨e
 272

	)

277 
	#__NR_£t_robu°_li°
 273

	)

278 
	#__NR_gë_robu°_li°
 274

	)

279 
	#__NR_•li˚
 275

	)

280 
	#__NR_ãe
 276

	)

281 
	#__NR_sync_fûe_ønge
 277

	)

282 
	#__NR_vm•li˚
 278

	)

283 
	#__NR_move_∑ges
 279

	)

284 
	#__NR_utimíßt
 280

	)

285 
	#__NR_ïﬁl_pwaô
 281

	)

286 
	#__NR_sig«lfd
 282

	)

287 
	#__NR_timîfd_¸óã
 283

	)

288 
	#__NR_evítfd
 284

	)

289 
	#__NR_ÁŒoˇã
 285

	)

290 
	#__NR_timîfd_£âime
 286

	)

291 
	#__NR_timîfd_gëtime
 287

	)

292 
	#__NR_ac˚±4
 288

	)

293 
	#__NR_sig«lfd4
 289

	)

294 
	#__NR_evítfd2
 290

	)

295 
	#__NR_ïﬁl_¸óã1
 291

	)

296 
	#__NR_dup3
 292

	)

297 
	#__NR_pùe2
 293

	)

298 
	#__NR_öŸify_öô1
 294

	)

299 
	#__NR_¥ódv
 295

	)

300 
	#__NR_pwrôev
 296

	)

301 
	#__NR_π_tgsigqueueöfo
 297

	)

302 
	#__NR_≥rf_evít_›í
 298

	)

303 
	#__NR_ªcvmmsg
 299

	)

304 
	#__NR_ÁnŸify_öô
 300

	)

305 
	#__NR_ÁnŸify_m¨k
 301

	)

306 
	#__NR_¥limô64
 302

	)

307 
	#__NR_«me_to_h™dÀ_©
 303

	)

308 
	#__NR_›í_by_h™dÀ_©
 304

	)

309 
	#__NR_˛ock_adjtime
 305

	)

310 
	#__NR_syncfs
 306

	)

311 
	#__NR_£ndmmsg
 307

	)

312 
	#__NR_£äs
 308

	)

313 
	#__NR_gë˝u
 309

	)

314 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

315 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

316 
	#__NR_kcmp
 312

	)

317 
	#__NR_föô_moduÀ
 313

	)

318 
	#__NR_ª«mót2
 316

	)

319 
	#__NR_memfd_¸óã
 319

	)

320 
	#__NR_kexec_fûe_lﬂd
 320

	)

321 
	#__NR_u£rÁu…fd
 323

	)

	@/usr/include/asm/unistd_x32.h

1 #i‚de‡
_ASM_X86_UNISTD_X32_H


2 
	#_ASM_X86_UNISTD_X32_H
 1

	)

4 
	#__NR_ªad
 (
__X32_SYSCALL_BIT
 + 0)

	)

5 
	#__NR_wrôe
 (
__X32_SYSCALL_BIT
 + 1)

	)

6 
	#__NR_›í
 (
__X32_SYSCALL_BIT
 + 2)

	)

7 
	#__NR_˛o£
 (
__X32_SYSCALL_BIT
 + 3)

	)

8 
	#__NR_°©
 (
__X32_SYSCALL_BIT
 + 4)

	)

9 
	#__NR_f°©
 (
__X32_SYSCALL_BIT
 + 5)

	)

10 
	#__NR_l°©
 (
__X32_SYSCALL_BIT
 + 6)

	)

11 
	#__NR_pﬁl
 (
__X32_SYSCALL_BIT
 + 7)

	)

12 
	#__NR_l£ek
 (
__X32_SYSCALL_BIT
 + 8)

	)

13 
	#__NR_mm≠
 (
__X32_SYSCALL_BIT
 + 9)

	)

14 
	#__NR_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 10)

	)

15 
	#__NR_munm≠
 (
__X32_SYSCALL_BIT
 + 11)

	)

16 
	#__NR_brk
 (
__X32_SYSCALL_BIT
 + 12)

	)

17 
	#__NR_π_sig¥ocmask
 (
__X32_SYSCALL_BIT
 + 14)

	)

18 
	#__NR_¥ód64
 (
__X32_SYSCALL_BIT
 + 17)

	)

19 
	#__NR_pwrôe64
 (
__X32_SYSCALL_BIT
 + 18)

	)

20 
	#__NR_ac˚ss
 (
__X32_SYSCALL_BIT
 + 21)

	)

21 
	#__NR_pùe
 (
__X32_SYSCALL_BIT
 + 22)

	)

22 
	#__NR_£À˘
 (
__X32_SYSCALL_BIT
 + 23)

	)

23 
	#__NR_sched_yõld
 (
__X32_SYSCALL_BIT
 + 24)

	)

24 
	#__NR_mªm≠
 (
__X32_SYSCALL_BIT
 + 25)

	)

25 
	#__NR_msync
 (
__X32_SYSCALL_BIT
 + 26)

	)

26 
	#__NR_möc‹e
 (
__X32_SYSCALL_BIT
 + 27)

	)

27 
	#__NR_madvi£
 (
__X32_SYSCALL_BIT
 + 28)

	)

28 
	#__NR_shmgë
 (
__X32_SYSCALL_BIT
 + 29)

	)

29 
	#__NR_shm©
 (
__X32_SYSCALL_BIT
 + 30)

	)

30 
	#__NR_shm˘l
 (
__X32_SYSCALL_BIT
 + 31)

	)

31 
	#__NR_dup
 (
__X32_SYSCALL_BIT
 + 32)

	)

32 
	#__NR_dup2
 (
__X32_SYSCALL_BIT
 + 33)

	)

33 
	#__NR_∑u£
 (
__X32_SYSCALL_BIT
 + 34)

	)

34 
	#__NR_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 35)

	)

35 
	#__NR_gëôimî
 (
__X32_SYSCALL_BIT
 + 36)

	)

36 
	#__NR_Æ¨m
 (
__X32_SYSCALL_BIT
 + 37)

	)

37 
	#__NR_£tôimî
 (
__X32_SYSCALL_BIT
 + 38)

	)

38 
	#__NR_gëpid
 (
__X32_SYSCALL_BIT
 + 39)

	)

39 
	#__NR_£ndfûe
 (
__X32_SYSCALL_BIT
 + 40)

	)

40 
	#__NR_sockë
 (
__X32_SYSCALL_BIT
 + 41)

	)

41 
	#__NR_c⁄√˘
 (
__X32_SYSCALL_BIT
 + 42)

	)

42 
	#__NR_ac˚±
 (
__X32_SYSCALL_BIT
 + 43)

	)

43 
	#__NR_£ndto
 (
__X32_SYSCALL_BIT
 + 44)

	)

44 
	#__NR_shutdown
 (
__X32_SYSCALL_BIT
 + 48)

	)

45 
	#__NR_böd
 (
__X32_SYSCALL_BIT
 + 49)

	)

46 
	#__NR_li°í
 (
__X32_SYSCALL_BIT
 + 50)

	)

47 
	#__NR_gësock«me
 (
__X32_SYSCALL_BIT
 + 51)

	)

48 
	#__NR_gë≥î«me
 (
__X32_SYSCALL_BIT
 + 52)

	)

49 
	#__NR_sockë∑ú
 (
__X32_SYSCALL_BIT
 + 53)

	)

50 
	#__NR_˛⁄e
 (
__X32_SYSCALL_BIT
 + 56)

	)

51 
	#__NR_f‹k
 (
__X32_SYSCALL_BIT
 + 57)

	)

52 
	#__NR_vf‹k
 (
__X32_SYSCALL_BIT
 + 58)

	)

53 
	#__NR_exô
 (
__X32_SYSCALL_BIT
 + 60)

	)

54 
	#__NR_waô4
 (
__X32_SYSCALL_BIT
 + 61)

	)

55 
	#__NR_kûl
 (
__X32_SYSCALL_BIT
 + 62)

	)

56 
	#__NR_u«me
 (
__X32_SYSCALL_BIT
 + 63)

	)

57 
	#__NR_£mgë
 (
__X32_SYSCALL_BIT
 + 64)

	)

58 
	#__NR_£m›
 (
__X32_SYSCALL_BIT
 + 65)

	)

59 
	#__NR_£m˘l
 (
__X32_SYSCALL_BIT
 + 66)

	)

60 
	#__NR_shmdt
 (
__X32_SYSCALL_BIT
 + 67)

	)

61 
	#__NR_msggë
 (
__X32_SYSCALL_BIT
 + 68)

	)

62 
	#__NR_msg¢d
 (
__X32_SYSCALL_BIT
 + 69)

	)

63 
	#__NR_msgrcv
 (
__X32_SYSCALL_BIT
 + 70)

	)

64 
	#__NR_msg˘l
 (
__X32_SYSCALL_BIT
 + 71)

	)

65 
	#__NR_f˙é
 (
__X32_SYSCALL_BIT
 + 72)

	)

66 
	#__NR_Êock
 (
__X32_SYSCALL_BIT
 + 73)

	)

67 
	#__NR_fsync
 (
__X32_SYSCALL_BIT
 + 74)

	)

68 
	#__NR_fd©async
 (
__X32_SYSCALL_BIT
 + 75)

	)

69 
	#__NR_åunˇã
 (
__X32_SYSCALL_BIT
 + 76)

	)

70 
	#__NR_·runˇã
 (
__X32_SYSCALL_BIT
 + 77)

	)

71 
	#__NR_gëdíts
 (
__X32_SYSCALL_BIT
 + 78)

	)

72 
	#__NR_gëcwd
 (
__X32_SYSCALL_BIT
 + 79)

	)

73 
	#__NR_chdú
 (
__X32_SYSCALL_BIT
 + 80)

	)

74 
	#__NR_fchdú
 (
__X32_SYSCALL_BIT
 + 81)

	)

75 
	#__NR_ª«me
 (
__X32_SYSCALL_BIT
 + 82)

	)

76 
	#__NR_mkdú
 (
__X32_SYSCALL_BIT
 + 83)

	)

77 
	#__NR_rmdú
 (
__X32_SYSCALL_BIT
 + 84)

	)

78 
	#__NR_¸ót
 (
__X32_SYSCALL_BIT
 + 85)

	)

79 
	#__NR_lök
 (
__X32_SYSCALL_BIT
 + 86)

	)

80 
	#__NR_u∆ök
 (
__X32_SYSCALL_BIT
 + 87)

	)

81 
	#__NR_symlök
 (
__X32_SYSCALL_BIT
 + 88)

	)

82 
	#__NR_ªadlök
 (
__X32_SYSCALL_BIT
 + 89)

	)

83 
	#__NR_chmod
 (
__X32_SYSCALL_BIT
 + 90)

	)

84 
	#__NR_fchmod
 (
__X32_SYSCALL_BIT
 + 91)

	)

85 
	#__NR_chown
 (
__X32_SYSCALL_BIT
 + 92)

	)

86 
	#__NR_fchown
 (
__X32_SYSCALL_BIT
 + 93)

	)

87 
	#__NR_lchown
 (
__X32_SYSCALL_BIT
 + 94)

	)

88 
	#__NR_umask
 (
__X32_SYSCALL_BIT
 + 95)

	)

89 
	#__NR_gëtimeofday
 (
__X32_SYSCALL_BIT
 + 96)

	)

90 
	#__NR_gëæimô
 (
__X32_SYSCALL_BIT
 + 97)

	)

91 
	#__NR_gërußge
 (
__X32_SYSCALL_BIT
 + 98)

	)

92 
	#__NR_sysöfo
 (
__X32_SYSCALL_BIT
 + 99)

	)

93 
	#__NR_times
 (
__X32_SYSCALL_BIT
 + 100)

	)

94 
	#__NR_gëuid
 (
__X32_SYSCALL_BIT
 + 102)

	)

95 
	#__NR_sy¶og
 (
__X32_SYSCALL_BIT
 + 103)

	)

96 
	#__NR_gëgid
 (
__X32_SYSCALL_BIT
 + 104)

	)

97 
	#__NR_£tuid
 (
__X32_SYSCALL_BIT
 + 105)

	)

98 
	#__NR_£tgid
 (
__X32_SYSCALL_BIT
 + 106)

	)

99 
	#__NR_gëeuid
 (
__X32_SYSCALL_BIT
 + 107)

	)

100 
	#__NR_gëegid
 (
__X32_SYSCALL_BIT
 + 108)

	)

101 
	#__NR_£çgid
 (
__X32_SYSCALL_BIT
 + 109)

	)

102 
	#__NR_gëµid
 (
__X32_SYSCALL_BIT
 + 110)

	)

103 
	#__NR_gëpgΩ
 (
__X32_SYSCALL_BIT
 + 111)

	)

104 
	#__NR_£tsid
 (
__X32_SYSCALL_BIT
 + 112)

	)

105 
	#__NR_£åeuid
 (
__X32_SYSCALL_BIT
 + 113)

	)

106 
	#__NR_£åegid
 (
__X32_SYSCALL_BIT
 + 114)

	)

107 
	#__NR_gëgroups
 (
__X32_SYSCALL_BIT
 + 115)

	)

108 
	#__NR_£tgroups
 (
__X32_SYSCALL_BIT
 + 116)

	)

109 
	#__NR_£åesuid
 (
__X32_SYSCALL_BIT
 + 117)

	)

110 
	#__NR_gëªsuid
 (
__X32_SYSCALL_BIT
 + 118)

	)

111 
	#__NR_£åesgid
 (
__X32_SYSCALL_BIT
 + 119)

	)

112 
	#__NR_gëªsgid
 (
__X32_SYSCALL_BIT
 + 120)

	)

113 
	#__NR_gëpgid
 (
__X32_SYSCALL_BIT
 + 121)

	)

114 
	#__NR_£tfsuid
 (
__X32_SYSCALL_BIT
 + 122)

	)

115 
	#__NR_£tfsgid
 (
__X32_SYSCALL_BIT
 + 123)

	)

116 
	#__NR_gësid
 (
__X32_SYSCALL_BIT
 + 124)

	)

117 
	#__NR_ˇpgë
 (
__X32_SYSCALL_BIT
 + 125)

	)

118 
	#__NR_ˇp£t
 (
__X32_SYSCALL_BIT
 + 126)

	)

119 
	#__NR_π_sigsu•íd
 (
__X32_SYSCALL_BIT
 + 130)

	)

120 
	#__NR_utime
 (
__X32_SYSCALL_BIT
 + 132)

	)

121 
	#__NR_mknod
 (
__X32_SYSCALL_BIT
 + 133)

	)

122 
	#__NR_≥rs⁄Æôy
 (
__X32_SYSCALL_BIT
 + 135)

	)

123 
	#__NR_u°©
 (
__X32_SYSCALL_BIT
 + 136)

	)

124 
	#__NR_°©fs
 (
__X32_SYSCALL_BIT
 + 137)

	)

125 
	#__NR_f°©fs
 (
__X32_SYSCALL_BIT
 + 138)

	)

126 
	#__NR_sysfs
 (
__X32_SYSCALL_BIT
 + 139)

	)

127 
	#__NR_gë¥i‹ôy
 (
__X32_SYSCALL_BIT
 + 140)

	)

128 
	#__NR_£çri‹ôy
 (
__X32_SYSCALL_BIT
 + 141)

	)

129 
	#__NR_sched_£ç¨am
 (
__X32_SYSCALL_BIT
 + 142)

	)

130 
	#__NR_sched_gë∑øm
 (
__X32_SYSCALL_BIT
 + 143)

	)

131 
	#__NR_sched_£tscheduÀr
 (
__X32_SYSCALL_BIT
 + 144)

	)

132 
	#__NR_sched_gëscheduÀr
 (
__X32_SYSCALL_BIT
 + 145)

	)

133 
	#__NR_sched_gë_¥i‹ôy_max
 (
__X32_SYSCALL_BIT
 + 146)

	)

134 
	#__NR_sched_gë_¥i‹ôy_mö
 (
__X32_SYSCALL_BIT
 + 147)

	)

135 
	#__NR_sched_º_gë_öãrvÆ
 (
__X32_SYSCALL_BIT
 + 148)

	)

136 
	#__NR_mlock
 (
__X32_SYSCALL_BIT
 + 149)

	)

137 
	#__NR_mu∆ock
 (
__X32_SYSCALL_BIT
 + 150)

	)

138 
	#__NR_mlockÆl
 (
__X32_SYSCALL_BIT
 + 151)

	)

139 
	#__NR_mu∆ockÆl
 (
__X32_SYSCALL_BIT
 + 152)

	)

140 
	#__NR_vh™gup
 (
__X32_SYSCALL_BIT
 + 153)

	)

141 
	#__NR_modify_ldt
 (
__X32_SYSCALL_BIT
 + 154)

	)

142 
	#__NR_pivŸ_roŸ
 (
__X32_SYSCALL_BIT
 + 155)

	)

143 
	#__NR_¥˘l
 (
__X32_SYSCALL_BIT
 + 157)

	)

144 
	#__NR_¨ch_¥˘l
 (
__X32_SYSCALL_BIT
 + 158)

	)

145 
	#__NR_adjtimex
 (
__X32_SYSCALL_BIT
 + 159)

	)

146 
	#__NR_£ålimô
 (
__X32_SYSCALL_BIT
 + 160)

	)

147 
	#__NR_chroŸ
 (
__X32_SYSCALL_BIT
 + 161)

	)

148 
	#__NR_sync
 (
__X32_SYSCALL_BIT
 + 162)

	)

149 
	#__NR_ac˘
 (
__X32_SYSCALL_BIT
 + 163)

	)

150 
	#__NR_£âimeofday
 (
__X32_SYSCALL_BIT
 + 164)

	)

151 
	#__NR_mou¡
 (
__X32_SYSCALL_BIT
 + 165)

	)

152 
	#__NR_umou¡2
 (
__X32_SYSCALL_BIT
 + 166)

	)

153 
	#__NR_sw≠⁄
 (
__X32_SYSCALL_BIT
 + 167)

	)

154 
	#__NR_sw≠off
 (
__X32_SYSCALL_BIT
 + 168)

	)

155 
	#__NR_ªboŸ
 (
__X32_SYSCALL_BIT
 + 169)

	)

156 
	#__NR_£tho°«me
 (
__X32_SYSCALL_BIT
 + 170)

	)

157 
	#__NR_£tdomaö«me
 (
__X32_SYSCALL_BIT
 + 171)

	)

158 
	#__NR_i›l
 (
__X32_SYSCALL_BIT
 + 172)

	)

159 
	#__NR_i›îm
 (
__X32_SYSCALL_BIT
 + 173)

	)

160 
	#__NR_öô_moduÀ
 (
__X32_SYSCALL_BIT
 + 175)

	)

161 
	#__NR_dñëe_moduÀ
 (
__X32_SYSCALL_BIT
 + 176)

	)

162 
	#__NR_quŸa˘l
 (
__X32_SYSCALL_BIT
 + 179)

	)

163 
	#__NR_gëpmsg
 (
__X32_SYSCALL_BIT
 + 181)

	)

164 
	#__NR_puçmsg
 (
__X32_SYSCALL_BIT
 + 182)

	)

165 
	#__NR_afs_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 183)

	)

166 
	#__NR_tuxˇŒ
 (
__X32_SYSCALL_BIT
 + 184)

	)

167 
	#__NR_£curôy
 (
__X32_SYSCALL_BIT
 + 185)

	)

168 
	#__NR_gëtid
 (
__X32_SYSCALL_BIT
 + 186)

	)

169 
	#__NR_ªadahód
 (
__X32_SYSCALL_BIT
 + 187)

	)

170 
	#__NR_£tx©å
 (
__X32_SYSCALL_BIT
 + 188)

	)

171 
	#__NR_l£tx©å
 (
__X32_SYSCALL_BIT
 + 189)

	)

172 
	#__NR_f£tx©å
 (
__X32_SYSCALL_BIT
 + 190)

	)

173 
	#__NR_gëx©å
 (
__X32_SYSCALL_BIT
 + 191)

	)

174 
	#__NR_lgëx©å
 (
__X32_SYSCALL_BIT
 + 192)

	)

175 
	#__NR_fgëx©å
 (
__X32_SYSCALL_BIT
 + 193)

	)

176 
	#__NR_li°x©å
 (
__X32_SYSCALL_BIT
 + 194)

	)

177 
	#__NR_Œi°x©å
 (
__X32_SYSCALL_BIT
 + 195)

	)

178 
	#__NR_Êi°x©å
 (
__X32_SYSCALL_BIT
 + 196)

	)

179 
	#__NR_ªmovex©å
 (
__X32_SYSCALL_BIT
 + 197)

	)

180 
	#__NR_Ãemovex©å
 (
__X32_SYSCALL_BIT
 + 198)

	)

181 
	#__NR_‰emovex©å
 (
__X32_SYSCALL_BIT
 + 199)

	)

182 
	#__NR_tkûl
 (
__X32_SYSCALL_BIT
 + 200)

	)

183 
	#__NR_time
 (
__X32_SYSCALL_BIT
 + 201)

	)

184 
	#__NR_fuãx
 (
__X32_SYSCALL_BIT
 + 202)

	)

185 
	#__NR_sched_£èfföôy
 (
__X32_SYSCALL_BIT
 + 203)

	)

186 
	#__NR_sched_gëafföôy
 (
__X32_SYSCALL_BIT
 + 204)

	)

187 
	#__NR_io_£tup
 (
__X32_SYSCALL_BIT
 + 206)

	)

188 
	#__NR_io_de°roy
 (
__X32_SYSCALL_BIT
 + 207)

	)

189 
	#__NR_io_gëevíts
 (
__X32_SYSCALL_BIT
 + 208)

	)

190 
	#__NR_io_submô
 (
__X32_SYSCALL_BIT
 + 209)

	)

191 
	#__NR_io_ˇn˚l
 (
__X32_SYSCALL_BIT
 + 210)

	)

192 
	#__NR_lookup_dcookõ
 (
__X32_SYSCALL_BIT
 + 212)

	)

193 
	#__NR_ïﬁl_¸óã
 (
__X32_SYSCALL_BIT
 + 213)

	)

194 
	#__NR_ªm≠_fûe_∑ges
 (
__X32_SYSCALL_BIT
 + 216)

	)

195 
	#__NR_gëdíts64
 (
__X32_SYSCALL_BIT
 + 217)

	)

196 
	#__NR_£t_tid_addªss
 (
__X32_SYSCALL_BIT
 + 218)

	)

197 
	#__NR_ª°¨t_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 219)

	)

198 
	#__NR_£mtimed›
 (
__X32_SYSCALL_BIT
 + 220)

	)

199 
	#__NR_Ádvi£64
 (
__X32_SYSCALL_BIT
 + 221)

	)

200 
	#__NR_timî_£âime
 (
__X32_SYSCALL_BIT
 + 223)

	)

201 
	#__NR_timî_gëtime
 (
__X32_SYSCALL_BIT
 + 224)

	)

202 
	#__NR_timî_gëovîrun
 (
__X32_SYSCALL_BIT
 + 225)

	)

203 
	#__NR_timî_dñëe
 (
__X32_SYSCALL_BIT
 + 226)

	)

204 
	#__NR_˛ock_£âime
 (
__X32_SYSCALL_BIT
 + 227)

	)

205 
	#__NR_˛ock_gëtime
 (
__X32_SYSCALL_BIT
 + 228)

	)

206 
	#__NR_˛ock_gëªs
 (
__X32_SYSCALL_BIT
 + 229)

	)

207 
	#__NR_˛ock_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 230)

	)

208 
	#__NR_exô_group
 (
__X32_SYSCALL_BIT
 + 231)

	)

209 
	#__NR_ïﬁl_waô
 (
__X32_SYSCALL_BIT
 + 232)

	)

210 
	#__NR_ïﬁl_˘l
 (
__X32_SYSCALL_BIT
 + 233)

	)

211 
	#__NR_tgkûl
 (
__X32_SYSCALL_BIT
 + 234)

	)

212 
	#__NR_utimes
 (
__X32_SYSCALL_BIT
 + 235)

	)

213 
	#__NR_mböd
 (
__X32_SYSCALL_BIT
 + 237)

	)

214 
	#__NR_£t_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 238)

	)

215 
	#__NR_gë_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 239)

	)

216 
	#__NR_mq_›í
 (
__X32_SYSCALL_BIT
 + 240)

	)

217 
	#__NR_mq_u∆ök
 (
__X32_SYSCALL_BIT
 + 241)

	)

218 
	#__NR_mq_timed£nd
 (
__X32_SYSCALL_BIT
 + 242)

	)

219 
	#__NR_mq_timedª˚ive
 (
__X32_SYSCALL_BIT
 + 243)

	)

220 
	#__NR_mq_gë£èâr
 (
__X32_SYSCALL_BIT
 + 245)

	)

221 
	#__NR_add_key
 (
__X32_SYSCALL_BIT
 + 248)

	)

222 
	#__NR_ªque°_key
 (
__X32_SYSCALL_BIT
 + 249)

	)

223 
	#__NR_key˘l
 (
__X32_SYSCALL_BIT
 + 250)

	)

224 
	#__NR_i›rio_£t
 (
__X32_SYSCALL_BIT
 + 251)

	)

225 
	#__NR_i›rio_gë
 (
__X32_SYSCALL_BIT
 + 252)

	)

226 
	#__NR_öŸify_öô
 (
__X32_SYSCALL_BIT
 + 253)

	)

227 
	#__NR_öŸify_add_w©ch
 (
__X32_SYSCALL_BIT
 + 254)

	)

228 
	#__NR_öŸify_rm_w©ch
 (
__X32_SYSCALL_BIT
 + 255)

	)

229 
	#__NR_migøã_∑ges
 (
__X32_SYSCALL_BIT
 + 256)

	)

230 
	#__NR_›í©
 (
__X32_SYSCALL_BIT
 + 257)

	)

231 
	#__NR_mkdú©
 (
__X32_SYSCALL_BIT
 + 258)

	)

232 
	#__NR_mknod©
 (
__X32_SYSCALL_BIT
 + 259)

	)

233 
	#__NR_fchow«t
 (
__X32_SYSCALL_BIT
 + 260)

	)

234 
	#__NR_futimeßt
 (
__X32_SYSCALL_BIT
 + 261)

	)

235 
	#__NR_√wf°©©
 (
__X32_SYSCALL_BIT
 + 262)

	)

236 
	#__NR_u∆ök©
 (
__X32_SYSCALL_BIT
 + 263)

	)

237 
	#__NR_ª«mót
 (
__X32_SYSCALL_BIT
 + 264)

	)

238 
	#__NR_lök©
 (
__X32_SYSCALL_BIT
 + 265)

	)

239 
	#__NR_symlök©
 (
__X32_SYSCALL_BIT
 + 266)

	)

240 
	#__NR_ªadlök©
 (
__X32_SYSCALL_BIT
 + 267)

	)

241 
	#__NR_fchmod©
 (
__X32_SYSCALL_BIT
 + 268)

	)

242 
	#__NR_Ác˚sßt
 (
__X32_SYSCALL_BIT
 + 269)

	)

243 
	#__NR_p£À˘6
 (
__X32_SYSCALL_BIT
 + 270)

	)

244 
	#__NR_µﬁl
 (
__X32_SYSCALL_BIT
 + 271)

	)

245 
	#__NR_unsh¨e
 (
__X32_SYSCALL_BIT
 + 272)

	)

246 
	#__NR_•li˚
 (
__X32_SYSCALL_BIT
 + 275)

	)

247 
	#__NR_ãe
 (
__X32_SYSCALL_BIT
 + 276)

	)

248 
	#__NR_sync_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 277)

	)

249 
	#__NR_utimíßt
 (
__X32_SYSCALL_BIT
 + 280)

	)

250 
	#__NR_ïﬁl_pwaô
 (
__X32_SYSCALL_BIT
 + 281)

	)

251 
	#__NR_sig«lfd
 (
__X32_SYSCALL_BIT
 + 282)

	)

252 
	#__NR_timîfd_¸óã
 (
__X32_SYSCALL_BIT
 + 283)

	)

253 
	#__NR_evítfd
 (
__X32_SYSCALL_BIT
 + 284)

	)

254 
	#__NR_ÁŒoˇã
 (
__X32_SYSCALL_BIT
 + 285)

	)

255 
	#__NR_timîfd_£âime
 (
__X32_SYSCALL_BIT
 + 286)

	)

256 
	#__NR_timîfd_gëtime
 (
__X32_SYSCALL_BIT
 + 287)

	)

257 
	#__NR_ac˚±4
 (
__X32_SYSCALL_BIT
 + 288)

	)

258 
	#__NR_sig«lfd4
 (
__X32_SYSCALL_BIT
 + 289)

	)

259 
	#__NR_evítfd2
 (
__X32_SYSCALL_BIT
 + 290)

	)

260 
	#__NR_ïﬁl_¸óã1
 (
__X32_SYSCALL_BIT
 + 291)

	)

261 
	#__NR_dup3
 (
__X32_SYSCALL_BIT
 + 292)

	)

262 
	#__NR_pùe2
 (
__X32_SYSCALL_BIT
 + 293)

	)

263 
	#__NR_öŸify_öô1
 (
__X32_SYSCALL_BIT
 + 294)

	)

264 
	#__NR_≥rf_evít_›í
 (
__X32_SYSCALL_BIT
 + 298)

	)

265 
	#__NR_ÁnŸify_öô
 (
__X32_SYSCALL_BIT
 + 300)

	)

266 
	#__NR_ÁnŸify_m¨k
 (
__X32_SYSCALL_BIT
 + 301)

	)

267 
	#__NR_¥limô64
 (
__X32_SYSCALL_BIT
 + 302)

	)

268 
	#__NR_«me_to_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 303)

	)

269 
	#__NR_›í_by_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 304)

	)

270 
	#__NR_˛ock_adjtime
 (
__X32_SYSCALL_BIT
 + 305)

	)

271 
	#__NR_syncfs
 (
__X32_SYSCALL_BIT
 + 306)

	)

272 
	#__NR_£äs
 (
__X32_SYSCALL_BIT
 + 308)

	)

273 
	#__NR_gë˝u
 (
__X32_SYSCALL_BIT
 + 309)

	)

274 
	#__NR_kcmp
 (
__X32_SYSCALL_BIT
 + 312)

	)

275 
	#__NR_föô_moduÀ
 (
__X32_SYSCALL_BIT
 + 313)

	)

276 
	#__NR_ª«mót2
 (
__X32_SYSCALL_BIT
 + 316)

	)

277 
	#__NR_memfd_¸óã
 (
__X32_SYSCALL_BIT
 + 319)

	)

278 
	#__NR_kexec_fûe_lﬂd
 (
__X32_SYSCALL_BIT
 + 320)

	)

279 
	#__NR_u£rÁu…fd
 (
__X32_SYSCALL_BIT
 + 323)

	)

280 
	#__NR_π_siga˘i⁄
 (
__X32_SYSCALL_BIT
 + 512)

	)

281 
	#__NR_π_sigªtu∫
 (
__X32_SYSCALL_BIT
 + 513)

	)

282 
	#__NR_io˘l
 (
__X32_SYSCALL_BIT
 + 514)

	)

283 
	#__NR_ªadv
 (
__X32_SYSCALL_BIT
 + 515)

	)

284 
	#__NR_wrôev
 (
__X32_SYSCALL_BIT
 + 516)

	)

285 
	#__NR_ªcv‰om
 (
__X32_SYSCALL_BIT
 + 517)

	)

286 
	#__NR_£ndmsg
 (
__X32_SYSCALL_BIT
 + 518)

	)

287 
	#__NR_ªcvmsg
 (
__X32_SYSCALL_BIT
 + 519)

	)

288 
	#__NR_execve
 (
__X32_SYSCALL_BIT
 + 520)

	)

289 
	#__NR_±ø˚
 (
__X32_SYSCALL_BIT
 + 521)

	)

290 
	#__NR_π_sig≥ndög
 (
__X32_SYSCALL_BIT
 + 522)

	)

291 
	#__NR_π_sigtimedwaô
 (
__X32_SYSCALL_BIT
 + 523)

	)

292 
	#__NR_π_sigqueueöfo
 (
__X32_SYSCALL_BIT
 + 524)

	)

293 
	#__NR_sigÆt°ack
 (
__X32_SYSCALL_BIT
 + 525)

	)

294 
	#__NR_timî_¸óã
 (
__X32_SYSCALL_BIT
 + 526)

	)

295 
	#__NR_mq_nŸify
 (
__X32_SYSCALL_BIT
 + 527)

	)

296 
	#__NR_kexec_lﬂd
 (
__X32_SYSCALL_BIT
 + 528)

	)

297 
	#__NR_waôid
 (
__X32_SYSCALL_BIT
 + 529)

	)

298 
	#__NR_£t_robu°_li°
 (
__X32_SYSCALL_BIT
 + 530)

	)

299 
	#__NR_gë_robu°_li°
 (
__X32_SYSCALL_BIT
 + 531)

	)

300 
	#__NR_vm•li˚
 (
__X32_SYSCALL_BIT
 + 532)

	)

301 
	#__NR_move_∑ges
 (
__X32_SYSCALL_BIT
 + 533)

	)

302 
	#__NR_¥ódv
 (
__X32_SYSCALL_BIT
 + 534)

	)

303 
	#__NR_pwrôev
 (
__X32_SYSCALL_BIT
 + 535)

	)

304 
	#__NR_π_tgsigqueueöfo
 (
__X32_SYSCALL_BIT
 + 536)

	)

305 
	#__NR_ªcvmmsg
 (
__X32_SYSCALL_BIT
 + 537)

	)

306 
	#__NR_£ndmmsg
 (
__X32_SYSCALL_BIT
 + 538)

	)

307 
	#__NR_¥o˚ss_vm_ªadv
 (
__X32_SYSCALL_BIT
 + 539)

	)

308 
	#__NR_¥o˚ss_vm_wrôev
 (
__X32_SYSCALL_BIT
 + 540)

	)

309 
	#__NR_£tsock›t
 (
__X32_SYSCALL_BIT
 + 541)

	)

310 
	#__NR_gësock›t
 (
__X32_SYSCALL_BIT
 + 542)

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

137 #ñi‡
__GLIBC_HAVE_LONG_LONG


138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG
,

464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

466 
	m_SC_LEVEL1_ICACHE_SIZE
,

467 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

468 
	m_SC_LEVEL1_ICACHE_ASSOC
,

469 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

470 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

471 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

472 
	m_SC_LEVEL1_DCACHE_SIZE
,

473 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

474 
	m_SC_LEVEL1_DCACHE_ASSOC
,

475 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

476 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

477 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

478 
	m_SC_LEVEL2_CACHE_SIZE
,

479 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

480 
	m_SC_LEVEL2_CACHE_ASSOC
,

481 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

482 
	m_SC_LEVEL2_CACHE_LINESIZE
,

483 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

484 
	m_SC_LEVEL3_CACHE_SIZE
,

485 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

486 
	m_SC_LEVEL3_CACHE_ASSOC
,

487 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

488 
	m_SC_LEVEL3_CACHE_LINESIZE
,

489 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

490 
	m_SC_LEVEL4_CACHE_SIZE
,

491 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

492 
	m_SC_LEVEL4_CACHE_ASSOC
,

493 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

494 
	m_SC_LEVEL4_CACHE_LINESIZE
,

495 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

498 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

499 
	#_SC_IPV6
 
_SC_IPV6


	)

500 
	m_SC_RAW_SOCKETS
,

501 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

503 
	m_SC_V7_ILP32_OFF32
,

504 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

505 
	m_SC_V7_ILP32_OFFBIG
,

506 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

507 
	m_SC_V7_LP64_OFF64
,

508 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

509 
	m_SC_V7_LPBIG_OFFBIG
,

510 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

512 
	m_SC_SS_REPL_MAX
,

513 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

515 
	m_SC_TRACE_EVENT_NAME_MAX
,

516 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

517 
	m_SC_TRACE_NAME_MAX
,

518 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

519 
	m_SC_TRACE_SYS_MAX
,

520 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

521 
	m_SC_TRACE_USER_EVENT_MAX
,

522 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

524 
	m_SC_XOPEN_STREAMS
,

525 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

527 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

528 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

529 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


530 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

536 
	m_CS_PATH
,

537 
	#_CS_PATH
 
_CS_PATH


	)

539 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

540 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

541 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

543 
	m_CS_GNU_LIBC_VERSION
,

544 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

545 
	m_CS_GNU_LIBPTHREAD_VERSION
,

546 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

548 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

549 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

550 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

552 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

553 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

554 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

556 
	m_CS_LFS_CFLAGS
 = 1000,

557 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

558 
	m_CS_LFS_LDFLAGS
,

559 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

560 
	m_CS_LFS_LIBS
,

561 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

562 
	m_CS_LFS_LINTFLAGS
,

563 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

564 
	m_CS_LFS64_CFLAGS
,

565 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

566 
	m_CS_LFS64_LDFLAGS
,

567 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

568 
	m_CS_LFS64_LIBS
,

569 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

570 
	m_CS_LFS64_LINTFLAGS
,

571 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

573 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

574 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

575 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

576 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

577 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

578 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

579 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

580 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

581 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

582 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

583 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

584 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

585 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

586 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

587 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

588 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

589 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

590 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

591 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

592 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

593 
	m_CS_XBS5_LP64_OFF64_LIBS
,

594 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

595 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

596 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

597 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

598 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

599 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

600 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

601 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

602 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

603 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

604 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

606 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

607 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

608 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

609 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

610 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

611 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

612 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

613 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

614 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

615 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

616 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

617 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

618 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

619 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

620 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

621 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

622 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

623 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

624 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

625 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

626 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

627 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

628 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

629 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

630 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

631 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

632 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

633 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

634 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

635 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

636 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

637 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

639 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

640 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

641 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

642 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

643 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

644 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

645 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

646 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

647 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

648 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

649 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

650 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

651 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

652 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

653 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

654 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

655 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

656 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

657 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

658 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

659 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

660 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

661 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

662 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

663 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

664 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

665 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

666 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

667 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

668 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

669 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

670 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

672 
	m_CS_V6_ENV
,

673 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

674 
	m_CS_V7_ENV


675 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFF32
 1

	)

70 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

71 
	#_POSIX_V6_ILP32_OFF32
 1

	)

72 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

73 
	#_XBS5_ILP32_OFF32
 1

	)

74 
	#_XBS5_ILP32_OFFBIG
 1

	)

91 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

92 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

93 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

94 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

95 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

96 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VAL
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

36 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

40 
	~<ídün.h
>

42 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

44 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


45 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

47 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


48 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

51 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

52 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VALF
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7f800000UL }).
__d
)

	)

40 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

49 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

50 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

27 #ñi‡
__GNUC_PREREQ
(2,96)

28 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

31 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

33 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

34 #ifde‡
__GNUC__


35 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

36 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

38 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

39 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


27 
	#IP_OPTIONS
 4

	)

28 
	#IP_HDRINCL
 3

	)

29 
	#IP_TOS
 1

	)

30 
	#IP_TTL
 2

	)

31 
	#IP_RECVOPTS
 6

	)

33 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

34 
	#IP_RETOPTS
 7

	)

35 
	#IP_MULTICAST_IF
 32

	)

36 
	#IP_MULTICAST_TTL
 33

	)

37 
	#IP_MULTICAST_LOOP
 34

	)

38 
	#IP_ADD_MEMBERSHIP
 35

	)

39 
	#IP_DROP_MEMBERSHIP
 36

	)

40 
	#IP_UNBLOCK_SOURCE
 37

	)

41 
	#IP_BLOCK_SOURCE
 38

	)

42 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

43 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

44 
	#IP_MSFILTER
 41

	)

45 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

53 
	#IP_MULTICAST_ALL
 49

	)

54 
	#IP_UNICAST_IF
 50

	)

56 
	#MCAST_EXCLUDE
 0

	)

57 
	#MCAST_INCLUDE
 1

	)

60 
	#IP_ROUTER_ALERT
 5

	)

61 
	#IP_PKTINFO
 8

	)

62 
	#IP_PKTOPTIONS
 9

	)

63 
	#IP_PMTUDISC
 10

	)

64 
	#IP_MTU_DISCOVER
 10

	)

65 
	#IP_RECVERR
 11

	)

66 
	#IP_RECVTTL
 12

	)

67 
	#IP_RECVTOS
 13

	)

68 
	#IP_MTU
 14

	)

69 
	#IP_FREEBIND
 15

	)

70 
	#IP_IPSEC_POLICY
 16

	)

71 
	#IP_XFRM_POLICY
 17

	)

72 
	#IP_PASSSEC
 18

	)

73 
	#IP_TRANSPARENT
 19

	)

74 
	#IP_MULTICAST_ALL
 49

	)

77 
	#IP_ORIGDSTADDR
 20

	)

78 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

80 
	#IP_MINTTL
 21

	)

84 
	#IP_PMTUDISC_DONT
 0

	)

85 
	#IP_PMTUDISC_WANT
 1

	)

86 
	#IP_PMTUDISC_DO
 2

	)

87 
	#IP_PMTUDISC_PROBE
 3

	)

90 
	#SOL_IP
 0

	)

92 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

93 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

94 
	#IP_MAX_MEMBERSHIPS
 20

	)

96 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


100 
	sù_›ts


102 
ö_addr
 
	mù_d°
;

103 
	mù_›ts
[40];

107 
	sù_mªqn


109 
ö_addr
 
	mimr_mu…üddr
;

110 
ö_addr
 
	mimr_addªss
;

111 
	mimr_ifödex
;

115 
	sö_pktöfo


117 
	mùi_ifödex
;

118 
ö_addr
 
	mùi_•ec_d°
;

119 
ö_addr
 
	mùi_addr
;

126 
	#IPV6_ADDRFORM
 1

	)

127 
	#IPV6_2292PKTINFO
 2

	)

128 
	#IPV6_2292HOPOPTS
 3

	)

129 
	#IPV6_2292DSTOPTS
 4

	)

130 
	#IPV6_2292RTHDR
 5

	)

131 
	#IPV6_2292PKTOPTIONS
 6

	)

132 
	#IPV6_CHECKSUM
 7

	)

133 
	#IPV6_2292HOPLIMIT
 8

	)

135 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

137 
	#IPV6_NEXTHOP
 9

	)

138 
	#IPV6_AUTHHDR
 10

	)

139 
	#IPV6_UNICAST_HOPS
 16

	)

140 
	#IPV6_MULTICAST_IF
 17

	)

141 
	#IPV6_MULTICAST_HOPS
 18

	)

142 
	#IPV6_MULTICAST_LOOP
 19

	)

143 
	#IPV6_JOIN_GROUP
 20

	)

144 
	#IPV6_LEAVE_GROUP
 21

	)

145 
	#IPV6_ROUTER_ALERT
 22

	)

146 
	#IPV6_MTU_DISCOVER
 23

	)

147 
	#IPV6_MTU
 24

	)

148 
	#IPV6_RECVERR
 25

	)

149 
	#IPV6_V6ONLY
 26

	)

150 
	#IPV6_JOIN_ANYCAST
 27

	)

151 
	#IPV6_LEAVE_ANYCAST
 28

	)

152 
	#IPV6_IPSEC_POLICY
 34

	)

153 
	#IPV6_XFRM_POLICY
 35

	)

155 
	#IPV6_RECVPKTINFO
 49

	)

156 
	#IPV6_PKTINFO
 50

	)

157 
	#IPV6_RECVHOPLIMIT
 51

	)

158 
	#IPV6_HOPLIMIT
 52

	)

159 
	#IPV6_RECVHOPOPTS
 53

	)

160 
	#IPV6_HOPOPTS
 54

	)

161 
	#IPV6_RTHDRDSTOPTS
 55

	)

162 
	#IPV6_RECVRTHDR
 56

	)

163 
	#IPV6_RTHDR
 57

	)

164 
	#IPV6_RECVDSTOPTS
 58

	)

165 
	#IPV6_DSTOPTS
 59

	)

167 
	#IPV6_RECVTCLASS
 66

	)

168 
	#IPV6_TCLASS
 67

	)

171 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

172 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

173 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

174 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

177 
	#IPV6_PMTUDISC_DONT
 0

	)

178 
	#IPV6_PMTUDISC_WANT
 1

	)

179 
	#IPV6_PMTUDISC_DO
 2

	)

180 
	#IPV6_PMTUDISC_PROBE
 3

	)

183 
	#SOL_IPV6
 41

	)

184 
	#SOL_ICMPV6
 58

	)

187 
	#IPV6_RTHDR_LOOSE
 0

	)

188 
	#IPV6_RTHDR_STRICT
 1

	)

190 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/ipc.h

18 #i‚de‡
_SYS_IPC_H


22 
	~<bôs/ty≥s.h
>

25 
	#IPC_CREAT
 01000

	)

26 
	#IPC_EXCL
 02000

	)

27 
	#IPC_NOWAIT
 04000

	)

30 
	#IPC_RMID
 0

	)

31 
	#IPC_SET
 1

	)

32 
	#IPC_STAT
 2

	)

33 #ifde‡
__USE_GNU


34 
	#IPC_INFO
 3

	)

38 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

42 
	sùc_≥rm


44 
__key_t
 
	m__key
;

45 
__uid_t
 
	muid
;

46 
__gid_t
 
	mgid
;

47 
__uid_t
 
	mcuid
;

48 
__gid_t
 
	mcgid
;

49 
	mmode
;

50 
	m__∑d1
;

51 
	m__£q
;

52 
	m__∑d2
;

53 
__sysˇŒ_ul⁄g_t
 
	m__unu£d1
;

54 
__sysˇŒ_ul⁄g_t
 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

19 #i‚de‡
_SYS_IPC_H


23 #i‚de‡
_BITS_IPCTYPES_H


24 
	#_BITS_IPCTYPES_H
 1

	)

27 #ifde‡
__x86_64__


28 
	t__ùc_pid_t
;

30 
	t__ùc_pid_t
;

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡((
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

255 && 
deföed
 
	g__exã∫_Æways_ölöe
)

257 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

259 #ifde‡
__USE_ISOC99


260 
__loˇl_signgam
 = 0;

261  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

263  
	`lgamma_r
 (
__d
, &
signgam
);

265 
	}
}

266 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

268 #ifde‡
__USE_ISOC99


269 
__loˇl_signgam
 = 0;

270  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

272  
	`lgammaf_r
 (
__d
, &
signgam
);

274 
	}
}

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

278 #ifde‡
__USE_ISOC99


279 
__loˇl_signgam
 = 0;

280  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

282  
	`lgammÆ_r
 (
__d
, &
signgam
);

284 
	}
}

288 #i‡((
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
) \

289 && 
deföed
 
	g__exã∫_Æways_ölöe
)

291 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

293 #ifde‡
__USE_ISOC99


294 
__loˇl_signgam
 = 0;

295  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

297  
	`lgamma_r
 (
__d
, &
signgam
);

299 
	}
}

300 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

302 #ifde‡
__USE_ISOC99


303 
__loˇl_signgam
 = 0;

304  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

306  
	`lgammaf_r
 (
__d
, &
signgam
);

308 
	}
}

309 #ifde‡
__MATH_DECLARE_LDOUBLE


310 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

312 #ifde‡
__USE_ISOC99


313 
__loˇl_signgam
 = 0;

314  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

316  
	`lgammÆ_r
 (
__d
, &
signgam
);

318 
	}
}

323 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

324 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

325 #ifde‡
__MATH_DECLARE_LDOUBLE


326 #ifde‡
__NO_LONG_DOUBLE_MATH


327 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

329 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

334 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

335 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

336 #ifde‡
__MATH_DECLARE_LDOUBLE


337 #ifde‡
__NO_LONG_DOUBLE_MATH


338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

340 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

344 #ifde‡
__USE_ISOC99


346 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

347 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

348 #ifde‡
__MATH_DECLARE_LDOUBLE


349 #ifde‡
__NO_LONG_DOUBLE_MATH


350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

352 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

358 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

359 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

360 #ifde‡
__MATH_DECLARE_LDOUBLE


361 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

365 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

366 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

367 #ifde‡
__MATH_DECLARE_LDOUBLE


368 #ifde‡
__NO_LONG_DOUBLE_MATH


369 
__REDIRECT_NTH
 (
powl
, (, ),

370 
__pow_föôe
);

372 
__REDIRECT_NTH
 (
powl
, (, ),

373 
__powl_föôe
);

378 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

379 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

380 #ifde‡
__MATH_DECLARE_LDOUBLE


381 #ifde‡
__NO_LONG_DOUBLE_MATH


382 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

383 
__ªmaödî_föôe
);

385 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

386 
__ªmaödîl_föôe
);

390 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


392 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

393 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

394 #ifde‡
__MATH_DECLARE_LDOUBLE


395 #ifde‡
__NO_LONG_DOUBLE_MATH


396 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

397 
__sˇlb_föôe
);

399 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

400 
__sˇlbl_föôe
);

406 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

407 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

408 #ifde‡
__MATH_DECLARE_LDOUBLE


409 #ifde‡
__NO_LONG_DOUBLE_MATH


410 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

412 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

417 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

418 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

419 #ifde‡
__MATH_DECLARE_LDOUBLE


420 #ifde‡
__NO_LONG_DOUBLE_MATH


421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

423 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

427 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


429 
__gamma_r_föôe
 (, *);

430 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

432 
__loˇl_signgam
 = 0;

433 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

434  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

435 
	}
}

436 
__gammaf_r_föôe
 (, *);

437 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

439 
__loˇl_signgam
 = 0;

440 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

441  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

442 
	}
}

443 #ifde‡
__MATH_DECLARE_LDOUBLE


444 
__gammÆ_r_föôe
 (, *);

445 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

447 
__loˇl_signgam
 = 0;

448 #ifde‡
__NO_LONG_DOUBLE_MATH


449 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

451 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

453  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

454 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

116 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

342 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__MATH_INLINE
 

202 
__NTH
 (
	$Œrötf
 (
__x
))

204 
__ªs
;

209 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

210  
__ªs
;

211 
	}
}

212 
__MATH_INLINE
 

213 
__NTH
 (
	$Œröt
 (
__x
))

215 
__ªs
;

220 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

221  
__ªs
;

222 
	}
}

225 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

226 && 
deföed
 
__SSE2_MATH__


228 
__MATH_INLINE
 

229 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

231 #ifde‡
__AVX__


232 
__ªs
;

233 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

234  
__ªs
;

236 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

237  
__x
;

239 
	}
}

240 
__MATH_INLINE
 

241 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

243 #ifde‡
__AVX__


244 
__ªs
;

245 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

246  
__ªs
;

248 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

249  
__x
;

251 
	}
}

254 
__MATH_INLINE
 

255 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

257 #ifde‡
__AVX__


258 
__ªs
;

259 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

260  
__ªs
;

262 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

263  
__x
;

265 
	}
}

266 
__MATH_INLINE
 

267 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

269 #ifde‡
__AVX__


270 
__ªs
;

271 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

272  
__ªs
;

274 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

275  
__x
;

277 
	}
}

280 
	g__END_NAMESPACE_C99


283 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


284 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


285 
__BEGIN_NAMESPACE_C99


288 
__MATH_INLINE
 

289 
__NTH
 (
	$röt
 (
__x
))

291 
__ªs
;

296 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

297  
__ªs
;

298 
	}
}

299 
__MATH_INLINE
 

300 
__NTH
 (
	$rötf
 (
__x
))

302 
__ªs
;

307 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

308  
__ªs
;

309 
	}
}

311 #ifde‡
__USE_ISOC99


313 
__MATH_INLINE
 

314 
__NTH
 (
	$√¨byöt
 (
__x
))

316 
__ªs
;

321 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

322  
__ªs
;

323 
	}
}

324 
__MATH_INLINE
 

325 
__NTH
 (
	$√¨byötf
 (
__x
))

327 
__ªs
;

332 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

333  
__ªs
;

334 
	}
}

337 
	g__END_NAMESPACE_C99


340 
__BEGIN_NAMESPACE_STD


342 
__MATH_INLINE
 

343 
__NTH
 (
	$˚û
 (
__x
))

345 
__ªs
;

346 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

347  
__ªs
;

348 
	}
}

349 
__END_NAMESPACE_STD


351 
__BEGIN_NAMESPACE_C99


352 
__MATH_INLINE
 

353 
__NTH
 (
	$˚ûf
 (
__x
))

355 
__ªs
;

356 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

357  
__ªs
;

358 
	}
}

359 
__END_NAMESPACE_C99


361 
__BEGIN_NAMESPACE_STD


363 
__MATH_INLINE
 

364 
__NTH
 (
	$Êo‹
 (
__x
))

366 
__ªs
;

367 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

368  
__ªs
;

369 
	}
}

370 
__END_NAMESPACE_STD


372 
__BEGIN_NAMESPACE_C99


373 
__MATH_INLINE
 

374 
__NTH
 (
	$Êo‹f
 (
__x
))

376 
__ªs
;

377 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

378  
__ªs
;

379 
	}
}

380 
	g__END_NAMESPACE_C99


385 #i‚de‡
__x86_64__


386 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

387 && 
deföed
 
	g__OPTIMIZE__
)

391 #unde‡
m©h_îrh™dlög


400 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


401 
	#__ölöe_m©h›
(
func
, 
›
) \

402 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

403 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

404 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

405 
	#__ölöe_m©h›NP
(
func
, 
›
) \

406 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

407 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›
(
func
, 
›
) \

411 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

412 
	#__ölöe_m©h›NP
(
func
, 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

416 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

417 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

418 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

422 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


423 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

424 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

425 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

426 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

427 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

428 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

429 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

438 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

439 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

440 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

442 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

443 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

445 
Êﬂt_ty≥
 
__ªsu…
; \

446 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

447  
__ªsu…
; \

448 }

	)

451 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


452 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

453 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

454 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

456 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

457 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

460 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

461 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

462 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

464 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

468 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

469 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

470 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

472 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

478 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

479 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

482 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

483 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

486 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

487 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

491 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

492 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

493 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

495 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

496 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

498 
code
; \

499 }

	)

502 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

503 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

504 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

506 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

507 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

509 
code
; \

510 }

	)

512 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

513 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

514 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

516 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

517 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

518 
Êﬂt_ty≥
 
¨g3
)) \

520 
code
; \

521 }

	)

525 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


529 #ifde‡
__FAST_MATH__


530 #ifde‡
__USE_GNU


531 
	#__söcos_code
 \

532 
__co§
; \

533 
__sör
; \

534 
__swtmp
; \

535 
__asm
 
__vﬁ©ûe__
 \

550 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

551 *
__söx
 = 
__sör
; \

552 *
__cosx
 = 
__co§


	)

554 
__MATH_INLINE
 

555 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

557 
__söcos_code
;

558 
	}
}

560 
__MATH_INLINE
 

561 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

563 
__söcos_code
;

564 
	}
}

566 
__MATH_INLINE
 

567 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

569 
__söcos_code
;

570 
	}
}

577 #i‡
__GNUC_PREREQ
 (3, 5)

578 
	#__expm1_code
 \

579 
__ãmp
; \

580 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

581  
__ãmp
 ? __ãm∞: 
__x


	)

583 
	#__expm1_code
 \

584 
__vÆue
; \

585 
__exp⁄ít
; \

586 
__ãmp
; \

587 
__asm
 
__vﬁ©ûe__
 \

596 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

597 
__asm
 
__vﬁ©ûe__
 \

599 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

600 
__ãmp
 -= 1.0; \

601 
__ãmp
 +
__vÆue
; \

602  
__ãmp
 ? __ãm∞: 
__x


	)

604 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

606 #i‡
	`__GNUC_PREREQ
 (3, 4)

607 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

609 
	#__exp_code
 \

610 
__vÆue
; \

611 
__exp⁄ít
; \

612 
__asm
 
__vﬁ©ûe__
 \

620 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

621 
__vÆue
 += 1.0; \

622 
__asm
 
__vﬁ©ûe__
 \

624 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

625  
__vÆue


	)

626 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

627 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

631 #i‡!
	`__GNUC_PREREQ
 (3, 5)

632 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

633 
__vÆue
; \

634 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

635 
__asm
 
__vﬁ©ûe__
 \

637 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

638  
__vÆue
)

643 #i‡
	`__GNUC_PREREQ
 (3, 4)

644 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

645  
	$__buûtö_©™2l
 (
__y
, 
__x
))

647 
	#__©™2_code
 \

648 
__vÆue
; \

649 
__asm
 
__vﬁ©ûe__
 \

651 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

652  
__vÆue


	)

653 #ifde‡
__FAST_MATH__


654 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

656 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

660 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

661 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

662 
__vÆue
; \

663 
__asm
 
__vﬁ©ûe__
 \

668 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

669  
__vÆue
)

673 #ifde‡
__FAST_MATH__


674 #i‡!
	`__GNUC_PREREQ
 (3,3)

675 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

676 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

677 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

679 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

683 #i‡
	`__GNUC_PREREQ
 (2, 8)

684 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

685 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


686 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

687 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

692 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

695 #ifde‡
__FAST_MATH__


696 #i‡!
	`__GNUC_PREREQ
 (3, 4)

698 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

700 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

702 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

705 #i‡!
	`__GNUC_PREREQ
 (3, 5)

706 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

708 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

709 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

712 #i‡!
	`__GNUC_PREREQ
 (3, 4)

713 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

717 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

718 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

719 { 
__xld
: 
__x
 
	}
}; \

720 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

721 
	g__n
.
	g__xi
[1] = 0x80000000; \

722 
	g__n
.
	g__xi
[0] = 0; \

723  
	g__n
.
	g__xld
)

726 #ifde‡
__FAST_MATH__


728 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

729 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

730  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

732 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

733 
__ex
 = 
	`__ex∂
 (
__x
); \

734  0.5 * (
__ex
 + 1.0 / __ex))

736 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

737 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

738  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

741 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

742 
__vÆue
; \

743 
__ign‹e
; \

744 
__cw
; \

745 
__cwtmp
; \

746 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

754 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

755 "=m" (
__cw
) \

756 : "0" (
__x
)); \

757  
__vÆue
)

759 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

760 
__vÆue
; \

761 
__ign‹e
; \

762 
__cw
; \

763 
__cwtmp
; \

764 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

772 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

773 "=m" (
__cw
) \

774 : "0" (
__x
)); \

775  
__vÆue
)

777 #ifde‡
__FAST_MATH__


778 
	#__ldexp_code
 \

779 
__vÆue
; \

780 
__asm
 
__vﬁ©ûe__
 \

782 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

783  
__vÆue


	)

785 
__MATH_INLINE
 

786 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

788 
__ldexp_code
;

789 
	}
}

794 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


796 #ifde‡
__FAST_MATH__


797 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

801 
	#__M_SQRT2
 1.41421356237309504880L

	)

803 #i‡!
	`__GNUC_PREREQ
 (3, 5)

804 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

805 
__vÆue
; \

806 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

807 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

809 
__asm
 
__vﬁ©ûe__
 \

813 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

814  
__vÆue
)

819 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

820 
__y
 = 
	`__Áb¶
 (
__x
); \

821  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

822 * 
	$__sgn1l
 (
__x
)))

824 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

825  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

827 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

828 
__y
 = 
	`__Áb¶
 (
__x
); \

829  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

832 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

833  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

835 #i‡!
	`__GNUC_PREREQ
 (3, 5)

836 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

837 
__vÆue
; \

838 
__junk
; \

839 
__asm
 
__vﬁ©ûe__
 \

841 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

842  
__vÆue
)

848 #ifde‡
__USE_ISOC99


849 #ifde‡
__FAST_MATH__


851 #i‡!
	`__GNUC_PREREQ
 (3, 5)

852 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

855 
__MATH_INLINE
 

856 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

858 
__ldexp_code
;

859 
	}
}

861 
__MATH_INLINE
 

862 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

864 
__ldexp_code
;

865 
	}
}

867 
__ölöe_m©h›NP
 (
röt
, "frndint")

870 
	#__Ãöt_code
 \

871 
__Ãöåes
; \

872 
__asm__
 
__vﬁ©ûe__
 \

874 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

875  
__Ãöåes


	)

876 
__MATH_INLINE
 

877 
__NTH
 (
	$Ãötf
 (
__x
))

879 
__Ãöt_code
;

880 
	}
}

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãöt
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöé
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 #unde‡
__Ãöt_code


893 
	#__Œröt_code
 \

894 
__Œröåes
; \

895 
__asm__
 
__vﬁ©ûe__
 \

897 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

898  
__Œröåes


	)

899 
__MATH_INLINE
 

900 
__NTH
 (
	$Œrötf
 (
__x
))

902 
__Œröt_code
;

903 
	}
}

904 
__MATH_INLINE
 

905 
__NTH
 (
	$Œröt
 (
__x
))

907 
__Œröt_code
;

908 
	}
}

909 
__MATH_INLINE
 

910 
__NTH
 (
	$Œröé
 (
__x
))

912 
__Œröt_code
;

913 
	}
}

914 #unde‡
__Œröt_code


919 #ifde‡
__USE_MISC


921 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

922 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

923 
__vÆue
; \

924 
__˛obbîed
; \

925 
__asm
 
__vﬁ©ûe__
 \

930 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

931  
__vÆue
)

936 
__MATH_INLINE
 

937 
__NTH
 (
	$__föôe
 (
__x
))

939  (
__exãnsi⁄__


940 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

942 
	}
}

947 #unde‡
__©™2_code


948 #ifde‡
__FAST_MATH__


949 #unde‡
__expm1_code


950 #unde‡
__exp_code


951 #unde‡
__söcos_code


958 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


959 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

960 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

961 
__vÆue
;

962 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

963 : "Ò" (
__vÆue
)

964 : "0" (
__x
), "u" (
__y
) : "st(1)");

965  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 
	#MAP_ANONYMOUS
 0x20

	)

53 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

54 
	#MAP_32BIT
 0x40

	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x02000

	)

63 
	#MAP_NORESERVE
 0x04000

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

66 
	#MAP_STACK
 0x20000

	)

67 
	#MAP_HUGETLB
 0x40000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HUGEPAGE
 14

	)

99 
	#MADV_NOHUGEPAGE
 15

	)

100 
	#MADV_DONTDUMP
 16

	)

102 
	#MADV_DODUMP
 17

	)

103 
	#MADV_HWPOISON
 100

	)

107 #ifde‡
__USE_XOPEN2K


108 
	#POSIX_MADV_NORMAL
 0

	)

109 
	#POSIX_MADV_RANDOM
 1

	)

110 
	#POSIX_MADV_SEQUENTIAL
 2

	)

111 
	#POSIX_MADV_WILLNEED
 3

	)

112 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/msq.h

18 #i‚de‡
_SYS_MSG_H


22 
	~<bôs/ty≥s.h
>

25 
	#MSG_NOERROR
 010000

	)

26 #ifde‡
__USE_GNU


27 
	#MSG_EXCEPT
 020000

	)

31 
__sysˇŒ_ul⁄g_t
 
	tmsgqnum_t
;

32 
__sysˇŒ_ul⁄g_t
 
	tmsgÀn_t
;

36 
	smsqid_ds


38 
ùc_≥rm
 
	mmsg_≥rm
;

39 
__time_t
 
	mmsg_°ime
;

40 #i‚de‡
__x86_64__


41 
	m__unu£d1
;

43 
__time_t
 
	mmsg_πime
;

44 #i‚de‡
__x86_64__


45 
	m__unu£d2
;

47 
__time_t
 
	mmsg_˘ime
;

48 #i‚de‡
__x86_64__


49 
	m__unu£d3
;

51 
__sysˇŒ_ul⁄g_t
 
	m__msg_cbyãs
;

52 
msgqnum_t
 
	mmsg_qnum
;

53 
msgÀn_t
 
	mmsg_qbyãs
;

54 
__pid_t
 
	mmsg_l•id
;

55 
__pid_t
 
	mmsg_Ãpid
;

56 
__sysˇŒ_ul⁄g_t
 
	m__unu£d4
;

57 
__sysˇŒ_ul⁄g_t
 
	m__unu£d5
;

60 #ifde‡
__USE_MISC


62 
	#msg_cbyãs
 
__msg_cbyãs


	)

65 
	#MSG_STAT
 11

	)

66 
	#MSG_INFO
 12

	)

69 
	smsgöfo


71 
	mmsgpoﬁ
;

72 
	mmsgm≠
;

73 
	mmsgmax
;

74 
	mmsgmnb
;

75 
	mmsgmni
;

76 
	mmsgssz
;

77 
	mmsgtql
;

78 
	mmsg£g
;

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


49 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

50 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
__±hªad_li°_t
 
	m__li°
;

106 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	m__nu£rs
;

109 
__exãnsi⁄__
 union

111 
	m__•ös
;

112 
__±hªad_¶i°_t
 
	m__li°
;

115 } 
	m__d©a
;

116 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

117 
	m__Æign
;

118 } 
	t±hªad_muãx_t
;

122 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

123 
	m__Æign
;

124 } 
	t±hªad_muãx©å_t
;

133 
	m__lock
;

134 
	m__fuãx
;

135 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

136 
__exãnsi⁄__
 
	m__wakeup_£q
;

137 
__exãnsi⁄__
 
	m__wokí_£q
;

138 *
	m__muãx
;

139 
	m__nwaôîs
;

140 
	m__brﬂdˇ°_£q
;

141 } 
	m__d©a
;

142 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

143 
__exãnsi⁄__
 
	m__Æign
;

144 } 
	t±hªad_c⁄d_t
;

148 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

149 
	m__Æign
;

150 } 
	t±hªad_c⁄d©å_t
;

154 
	t±hªad_key_t
;

158 
	t±hªad_⁄˚_t
;

161 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


166 #ifde‡
__x86_64__


169 
	m__lock
;

170 
	m__ƒ_ªadîs
;

171 
	m__ªadîs_wakeup
;

172 
	m__wrôî_wakeup
;

173 
	m__ƒ_ªadîs_queued
;

174 
	m__ƒ_wrôîs_queued
;

175 
	m__wrôî
;

176 
	m__sh¨ed
;

177 
	m__∑d1
;

178 
	m__∑d2
;

181 
	m__Êags
;

182 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

183 } 
	m__d©a
;

187 
	m__lock
;

188 
	m__ƒ_ªadîs
;

189 
	m__ªadîs_wakeup
;

190 
	m__wrôî_wakeup
;

191 
	m__ƒ_ªadîs_queued
;

192 
	m__ƒ_wrôîs_queued
;

195 
	m__Êags
;

196 
	m__sh¨ed
;

197 
	m__∑d1
;

198 
	m__∑d2
;

199 
	m__wrôî
;

200 } 
	m__d©a
;

202 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

203 
	m__Æign
;

204 } 
	t±hªad_rwlock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

209 
	m__Æign
;

210 } 
	t±hªad_rwlock©å_t
;

214 #ifde‡
__USE_XOPEN2K


216 vﬁ©ûê
	t±hªad_•ölock_t
;

223 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

224 
	m__Æign
;

225 } 
	t±hªad_b¨rõr_t
;

229 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

230 
	m__Æign
;

231 } 
	t±hªad_b¨rõøâr_t
;

235 #i‚de‡
__x86_64__


237 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sem.h

18 #i‚de‡
_SYS_SEM_H


22 
	~<sys/ty≥s.h
>

25 
	#SEM_UNDO
 0x1000

	)

28 
	#GETPID
 11

	)

29 
	#GETVAL
 12

	)

30 
	#GETALL
 13

	)

31 
	#GETNCNT
 14

	)

32 
	#GETZCNT
 15

	)

33 
	#SETVAL
 16

	)

34 
	#SETALL
 17

	)

38 
	s£mid_ds


40 
ùc_≥rm
 
	m£m_≥rm
;

41 
__time_t
 
	m£m_Ÿime
;

42 
__sysˇŒ_ul⁄g_t
 
	m__unu£d1
;

43 
__time_t
 
	m£m_˘ime
;

44 
__sysˇŒ_ul⁄g_t
 
	m__unu£d2
;

45 
__sysˇŒ_ul⁄g_t
 
	m£m_n£ms
;

46 
__sysˇŒ_ul⁄g_t
 
	m__unu£d3
;

47 
__sysˇŒ_ul⁄g_t
 
	m__unu£d4
;

64 
	#_SEM_SEMUN_UNDEFINED
 1

	)

66 #ifde‡
__USE_MISC


69 
	#SEM_STAT
 18

	)

70 
	#SEM_INFO
 19

	)

72 
	s£möfo


74 
	m£mm≠
;

75 
	m£mmni
;

76 
	m£mmns
;

77 
	m£mmnu
;

78 
	m£mm¶
;

79 
	m£m›m
;

80 
	m£mume
;

81 
	m£musz
;

82 
	m£mvmx
;

83 
	m£m´m
;

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/shm.h

18 #i‚de‡
_SYS_SHM_H


22 
	~<bôs/ty≥s.h
>

25 
	#SHM_R
 0400

	)

26 
	#SHM_W
 0200

	)

29 
	#SHM_RDONLY
 010000

	)

30 
	#SHM_RND
 020000

	)

31 
	#SHM_REMAP
 040000

	)

32 
	#SHM_EXEC
 0100000

	)

35 
	#SHM_LOCK
 11

	)

36 
	#SHM_UNLOCK
 12

	)

38 
	g__BEGIN_DECLS


41 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

42 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

46 
__sysˇŒ_ul⁄g_t
 
	tshm©t_t
;

49 
	sshmid_ds


51 
ùc_≥rm
 
shm_≥rm
;

52 
size_t
 
shm_£gsz
;

53 
__time_t
 
shm_©ime
;

54 #i‚de‡
__x86_64__


55 
__unu£d1
;

57 
__time_t
 
shm_dtime
;

58 #i‚de‡
__x86_64__


59 
__unu£d2
;

61 
__time_t
 
shm_˘ime
;

62 #i‚de‡
__x86_64__


63 
__unu£d3
;

65 
__pid_t
 
shm_˝id
;

66 
__pid_t
 
shm_Õid
;

67 
shm©t_t
 
shm_«âch
;

68 
__sysˇŒ_ul⁄g_t
 
__unu£d4
;

69 
__sysˇŒ_ul⁄g_t
 
__unu£d5
;

72 #ifde‡
__USE_MISC


75 
	#SHM_STAT
 13

	)

76 
	#SHM_INFO
 14

	)

79 
	#SHM_DEST
 01000

	)

80 
	#SHM_LOCKED
 02000

	)

81 
	#SHM_HUGETLB
 04000

	)

82 
	#SHM_NORESERVE
 010000

	)

84 
	sshmöfo


86 
__sysˇŒ_ul⁄g_t
 
shmmax
;

87 
__sysˇŒ_ul⁄g_t
 
shmmö
;

88 
__sysˇŒ_ul⁄g_t
 
shmmni
;

89 
__sysˇŒ_ul⁄g_t
 
shm£g
;

90 
__sysˇŒ_ul⁄g_t
 
shmÆl
;

91 
__sysˇŒ_ul⁄g_t
 
__unu£d1
;

92 
__sysˇŒ_ul⁄g_t
 
__unu£d2
;

93 
__sysˇŒ_ul⁄g_t
 
__unu£d3
;

94 
__sysˇŒ_ul⁄g_t
 
__unu£d4
;

97 
	sshm_öfo


99 
u£d_ids
;

100 
__sysˇŒ_ul⁄g_t
 
shm_tŸ
;

101 
__sysˇŒ_ul⁄g_t
 
shm_rss
;

102 
__sysˇŒ_ul⁄g_t
 
shm_swp
;

103 
__sysˇŒ_ul⁄g_t
 
sw≠_©ãm±s
;

104 
__sysˇŒ_ul⁄g_t
 
sw≠_suc˚s£s
;

109 
__END_DECLS


	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 } 
_sigÁu…
;

115 
si_b™d
;

116 
si_fd
;

117 } 
_sigpﬁl
;

122 *
_ˇŒ_addr
;

123 
_sysˇŒ
;

124 
_¨ch
;

125 } 
_sigsys
;

126 } 
_sifõlds
;

127 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

131 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

132 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

133 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

134 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

135 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

136 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

137 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

138 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

139 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

140 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

141 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

142 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

143 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

144 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

145 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

146 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

153 
SI_ASYNCNL
 = -60,

154 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

155 
SI_TKILL
 = -6,

156 
	#SI_TKILL
 
SI_TKILL


	)

157 
SI_SIGIO
,

158 
	#SI_SIGIO
 
SI_SIGIO


	)

159 
SI_ASYNCIO
,

160 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

161 
SI_MESGQ
,

162 
	#SI_MESGQ
 
SI_MESGQ


	)

163 
SI_TIMER
,

164 
	#SI_TIMER
 
SI_TIMER


	)

165 
SI_QUEUE
,

166 
	#SI_QUEUE
 
SI_QUEUE


	)

167 
SI_USER
,

168 
	#SI_USER
 
SI_USER


	)

169 
SI_KERNEL
 = 0x80

170 
	#SI_KERNEL
 
SI_KERNEL


	)

177 
ILL_ILLOPC
 = 1,

178 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

179 
ILL_ILLOPN
,

180 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

181 
ILL_ILLADR
,

182 
	#ILL_ILLADR
 
ILL_ILLADR


	)

183 
ILL_ILLTRP
,

184 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

185 
ILL_PRVOPC
,

186 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

187 
ILL_PRVREG
,

188 
	#ILL_PRVREG
 
ILL_PRVREG


	)

189 
ILL_COPROC
,

190 
	#ILL_COPROC
 
ILL_COPROC


	)

191 
ILL_BADSTK


192 
	#ILL_BADSTK
 
ILL_BADSTK


	)

198 
FPE_INTDIV
 = 1,

199 
	#FPE_INTDIV
 
FPE_INTDIV


	)

200 
FPE_INTOVF
,

201 
	#FPE_INTOVF
 
FPE_INTOVF


	)

202 
FPE_FLTDIV
,

203 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

204 
FPE_FLTOVF
,

205 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

206 
FPE_FLTUND
,

207 
	#FPE_FLTUND
 
FPE_FLTUND


	)

208 
FPE_FLTRES
,

209 
	#FPE_FLTRES
 
FPE_FLTRES


	)

210 
FPE_FLTINV
,

211 
	#FPE_FLTINV
 
FPE_FLTINV


	)

212 
FPE_FLTSUB


213 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

219 
SEGV_MAPERR
 = 1,

220 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

221 
SEGV_ACCERR


222 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

228 
BUS_ADRALN
 = 1,

229 
	#BUS_ADRALN
 
BUS_ADRALN


	)

230 
BUS_ADRERR
,

231 
	#BUS_ADRERR
 
BUS_ADRERR


	)

232 
BUS_OBJERR


233 
	#BUS_OBJERR
 
BUS_OBJERR


	)

239 
TRAP_BRKPT
 = 1,

240 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

241 
TRAP_TRACE


242 
	#TRAP_TRACE
 
TRAP_TRACE


	)

248 
CLD_EXITED
 = 1,

249 
	#CLD_EXITED
 
CLD_EXITED


	)

250 
CLD_KILLED
,

251 
	#CLD_KILLED
 
CLD_KILLED


	)

252 
CLD_DUMPED
,

253 
	#CLD_DUMPED
 
CLD_DUMPED


	)

254 
CLD_TRAPPED
,

255 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

256 
CLD_STOPPED
,

257 
	#CLD_STOPPED
 
CLD_STOPPED


	)

258 
CLD_CONTINUED


259 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

265 
POLL_IN
 = 1,

266 
	#POLL_IN
 
POLL_IN


	)

267 
POLL_OUT
,

268 
	#POLL_OUT
 
POLL_OUT


	)

269 
POLL_MSG
,

270 
	#POLL_MSG
 
POLL_MSG


	)

271 
POLL_ERR
,

272 
	#POLL_ERR
 
POLL_ERR


	)

273 
POLL_PRI
,

274 
	#POLL_PRI
 
POLL_PRI


	)

275 
POLL_HUP


276 
	#POLL_HUP
 
POLL_HUP


	)

279 #unde‡
__√ed_sigöfo_t


283 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

284 && !
deföed
 
__have_sigevít_t


285 
	#__have_sigevít_t
 1

	)

288 
	#__SIGEV_MAX_SIZE
 64

	)

289 #i‡
__WORDSIZE
 == 64

290 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

292 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

296 #i‚de‡
__have_±hªad_©å_t


297 
±hªad_©å_t
 
	t±hªad_©å_t
;

298 
	#__have_±hªad_©å_t
 1

	)

301 
	ssigevít


303 
sigvÆ_t
 
sigev_vÆue
;

304 
sigev_signo
;

305 
sigev_nŸify
;

309 
_∑d
[
__SIGEV_PAD_SIZE
];

313 
__pid_t
 
_tid
;

317 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

318 
±hªad_©å_t
 *
_©åibuã
;

319 } 
_sigev_thªad
;

320 } 
_sigev_un
;

321 } 
	tsigevít_t
;

324 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

325 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

330 
SIGEV_SIGNAL
 = 0,

331 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

332 
SIGEV_NONE
,

333 
	#SIGEV_NONE
 
SIGEV_NONE


	)

334 
SIGEV_THREAD
,

335 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

337 
SIGEV_THREAD_ID
 = 4

338 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‚de‡
_SYS_SOCKET_H


27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	~<sys/ty≥s.h
>

33 #i‚de‡
__sockÀn_t_deföed


34 
__sockÀn_t
 
	tsockÀn_t
;

35 
	#__sockÀn_t_deföed


	)

39 
	~<bôs/sockë_ty≥.h
>

42 
	#PF_UNSPEC
 0

	)

43 
	#PF_LOCAL
 1

	)

44 
	#PF_UNIX
 
PF_LOCAL


	)

45 
	#PF_FILE
 
PF_LOCAL


	)

46 
	#PF_INET
 2

	)

47 
	#PF_AX25
 3

	)

48 
	#PF_IPX
 4

	)

49 
	#PF_APPLETALK
 5

	)

50 
	#PF_NETROM
 6

	)

51 
	#PF_BRIDGE
 7

	)

52 
	#PF_ATMPVC
 8

	)

53 
	#PF_X25
 9

	)

54 
	#PF_INET6
 10

	)

55 
	#PF_ROSE
 11

	)

56 
	#PF_DEC√t
 12

	)

57 
	#PF_NETBEUI
 13

	)

58 
	#PF_SECURITY
 14

	)

59 
	#PF_KEY
 15

	)

60 
	#PF_NETLINK
 16

	)

61 
	#PF_ROUTE
 
PF_NETLINK


	)

62 
	#PF_PACKET
 17

	)

63 
	#PF_ASH
 18

	)

64 
	#PF_ECONET
 19

	)

65 
	#PF_ATMSVC
 20

	)

66 
	#PF_RDS
 21

	)

67 
	#PF_SNA
 22

	)

68 
	#PF_IRDA
 23

	)

69 
	#PF_PPPOX
 24

	)

70 
	#PF_WANPIPE
 25

	)

71 
	#PF_LLC
 26

	)

72 
	#PF_CAN
 29

	)

73 
	#PF_TIPC
 30

	)

74 
	#PF_BLUETOOTH
 31

	)

75 
	#PF_IUCV
 32

	)

76 
	#PF_RXRPC
 33

	)

77 
	#PF_ISDN
 34

	)

78 
	#PF_PHONET
 35

	)

79 
	#PF_IEEE802154
 36

	)

80 
	#PF_CAIF
 37

	)

81 
	#PF_ALG
 38

	)

82 
	#PF_NFC
 39

	)

83 
	#PF_MAX
 40

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_MAX
 
PF_MAX


	)

133 
	#SOL_RAW
 255

	)

134 
	#SOL_DECNET
 261

	)

135 
	#SOL_X25
 262

	)

136 
	#SOL_PACKET
 263

	)

137 
	#SOL_ATM
 264

	)

138 
	#SOL_AAL
 265

	)

139 
	#SOL_IRDA
 266

	)

142 
	#SOMAXCONN
 128

	)

145 
	~<bôs/sockaddr.h
>

148 
	ssockaddr


150 
__SOCKADDR_COMMON
 (
ß_
);

151 
	mß_d©a
[14];

157 
	#__ss_Æig¡y≥
 

	)

158 
	#_SS_SIZE
 128

	)

159 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

161 
	ssockaddr_°‹age


163 
__SOCKADDR_COMMON
 (
ss_
);

164 
__ss_Æig¡y≥
 
	m__ss_Æign
;

165 
	m__ss_∑ddög
[
_SS_PADSIZE
];

172 
	mMSG_OOB
 = 0x01,

173 
	#MSG_OOB
 
MSG_OOB


	)

174 
	mMSG_PEEK
 = 0x02,

175 
	#MSG_PEEK
 
MSG_PEEK


	)

176 
	mMSG_DONTROUTE
 = 0x04,

177 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

178 #ifde‡
__USE_GNU


180 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

181 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

183 
	mMSG_CTRUNC
 = 0x08,

184 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

185 
	mMSG_PROXY
 = 0x10,

186 
	#MSG_PROXY
 
MSG_PROXY


	)

187 
	mMSG_TRUNC
 = 0x20,

188 
	#MSG_TRUNC
 
MSG_TRUNC


	)

189 
	mMSG_DONTWAIT
 = 0x40,

190 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

191 
	mMSG_EOR
 = 0x80,

192 
	#MSG_EOR
 
MSG_EOR


	)

193 
	mMSG_WAITALL
 = 0x100,

194 
	#MSG_WAITALL
 
MSG_WAITALL


	)

195 
	mMSG_FIN
 = 0x200,

196 
	#MSG_FIN
 
MSG_FIN


	)

197 
	mMSG_SYN
 = 0x400,

198 
	#MSG_SYN
 
MSG_SYN


	)

199 
	mMSG_CONFIRM
 = 0x800,

200 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

201 
	mMSG_RST
 = 0x1000,

202 
	#MSG_RST
 
MSG_RST


	)

203 
	mMSG_ERRQUEUE
 = 0x2000,

204 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

205 
	mMSG_NOSIGNAL
 = 0x4000,

206 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

207 
	mMSG_MORE
 = 0x8000,

208 
	#MSG_MORE
 
MSG_MORE


	)

209 
	mMSG_WAITFORONE
 = 0x10000,

210 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

215 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

221 
	smsghdr


223 *
	mmsg_«me
;

224 
sockÀn_t
 
	mmsg_«mñí
;

226 
iovec
 *
	mmsg_iov
;

227 
size_t
 
	mmsg_iovÀn
;

229 *
	mmsg_c⁄åﬁ
;

230 
size_t
 
	mmsg_c⁄åﬁÀn
;

235 
	mmsg_Êags
;

239 
	scmsghdr


241 
size_t
 
	mcmsg_Àn
;

246 
	mcmsg_Àvñ
;

247 
	mcmsg_ty≥
;

248 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

249 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

254 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

255 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

257 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

259 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

260 
	#CMSG_FIRSTHDR
(
mhdr
) \

261 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

262 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

263 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

264 & (
size_t
Ë~( (size_tË- 1))

	)

265 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

266 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

267 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

269 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

270 
cmsghdr
 *
__cmsg
Ë
__THROW
;

271 #ifde‡
__USE_EXTERN_INLINES


272 #i‚de‡
_EXTERN_INLINE


273 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

275 
_EXTERN_INLINE
 
cmsghdr
 *

276 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

278 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

280  (
cmsghdr
 *) 0;

282 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

283 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

284 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


285 + 
__mhdr
->
msg_c⁄åﬁÀn
)

286 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

287 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

289  (
cmsghdr
 *) 0;

290  
__cmsg
;

291 
	}
}

298 
	mSCM_RIGHTS
 = 0x01

299 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

300 #ifde‡
__USE_GNU


301 , 
	mSCM_CREDENTIALS
 = 0x02

302 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

306 #ifde‡
__USE_GNU


308 
	su¸ed


310 
pid_t
 
	mpid
;

311 
uid_t
 
	muid
;

312 
gid_t
 
	mgid
;

317 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


318 #i‚de‡
FIOGETOWN


319 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

321 #i‚de‡
FIOSETOWN


322 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

324 #i‚de‡
SIOCATMARK


325 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

327 #i‚de‡
SIOCGPGRP


328 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

330 #i‚de‡
SIOCGSTAMP


331 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

333 #i‚de‡
SIOCGSTAMPNS


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

336 #i‚de‡
SIOCSPGRP


337 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

342 
	~<asm/sockë.h
>

344 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


345 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


346 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


347 #unde‡
FIOGETOWN


349 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


350 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


351 #unde‡
FIOSETOWN


353 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


354 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


355 #unde‡
SIOCATMARK


357 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


358 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


359 #unde‡
SIOCGPGRP


361 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


362 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


363 #unde‡
SIOCGSTAMP


365 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


366 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


367 #unde‡
SIOCGSTAMPNS


369 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


370 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


371 #unde‡
SIOCSPGRP


376 
	slögî


378 
	ml_⁄off
;

379 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

891 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = \

892 (c⁄° *Ë(c⁄° *Ë(
s1
); \

893 
__ªsu…
 = \

894 
__s1
[0] - ((const *) \

895 (c⁄° *Ë(
s2
))[0]; \

896 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

898 
__ªsu…
 = (
__s1
[1] \

900 (c⁄° *Ë(
s2
))[1]); \

901 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

903 
__ªsu…
 = \

904 (
__s1
[2] - ((const *) \

905 (c⁄° *Ë(
s2
))[2]); \

906 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

907 
__ªsu…
 = \

908 (
__s1
[3] \

910 (c⁄° *Ë(
s2
))[3]); \

913 
__ªsu…
; }))

	)

918 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


919 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

920 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

921 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

922 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

923 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

924 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

925 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

931 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


932 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


933 #i‡
__GNUC_PREREQ
 (3, 2)

934 
	#°rc•n
(
s
, 
ªje˘
) \

935 
__exãnsi⁄__
 \

936 ({ 
__r0
, 
__r1
, 
__r2
; \

937 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

938 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

939 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

940 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

941 ? 
	`°æí
 (
s
) \

942 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

943 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

944 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

945 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

946 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

947 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

948 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

951 
	#°rc•n
(
s
, 
ªje˘
) \

952 
__exãnsi⁄__
 \

953 ({ 
__r0
, 
__r1
, 
__r2
; \

954 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

955 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

956 ? 
	`°æí
 (
s
) \

957 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

958 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

959 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

960 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

961 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

962 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

963 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

968 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

972 
size_t
 
__ªsu…
 = 0;

973 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

974 ++
__ªsu…
;

975  
__ªsu…
;

976 
	}
}

978 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

979 
__ªje˘2
);

980 
__STRING_INLINE
 
size_t


981 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

983 
size_t
 
__ªsu…
 = 0;

984 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


985 && 
__s
[
__ªsu…
] !
__ªje˘2
)

986 ++
__ªsu…
;

987  
__ªsu…
;

988 
	}
}

990 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

991 
__ªje˘2
, 
__ªje˘3
);

992 
__STRING_INLINE
 
size_t


993 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

994 
__ªje˘3
)

996 
size_t
 
__ªsu…
 = 0;

997 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


998 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

999 ++
__ªsu…
;

1000  
__ªsu…
;

1001 
	}
}

1007 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1008 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1009 #i‡
__GNUC_PREREQ
 (3, 2)

1010 
	#°r•n
(
s
, 
ac˚±
) \

1011 
__exãnsi⁄__
 \

1012 ({ 
__a0
, 
__a1
, 
__a2
; \

1013 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1014 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1015 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1016 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1017 ? ((Ë(
s
), (
size_t
) 0) \

1018 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1019 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1020 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1021 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1022 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1023 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1024 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1027 
	#°r•n
(
s
, 
ac˚±
) \

1028 
__exãnsi⁄__
 \

1029 ({ 
__a0
, 
__a1
, 
__a2
; \

1030 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1031 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1032 ? ((Ë(
s
), (
size_t
) 0) \

1033 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1034 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1035 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1036 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1037 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1038 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1039 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1045 
__STRING_INLINE
 
size_t


1046 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1048 
size_t
 
__ªsu…
 = 0;

1050 
__s
[
__ªsu…
] =
__ac˚±
)

1051 ++
__ªsu…
;

1052  
__ªsu…
;

1053 
	}
}

1055 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1056 
__ac˚±2
);

1057 
__STRING_INLINE
 
size_t


1058 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1060 
size_t
 
__ªsu…
 = 0;

1062 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1063 ++
__ªsu…
;

1064  
__ªsu…
;

1065 
	}
}

1067 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1068 
__ac˚±2
, 
__ac˚±3
);

1069 
__STRING_INLINE
 
size_t


1070 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1072 
size_t
 
__ªsu…
 = 0;

1074 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1075 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1076 ++
__ªsu…
;

1077  
__ªsu…
;

1078 
	}
}

1083 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1084 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1085 #i‡
__GNUC_PREREQ
 (3, 2)

1086 
	#°Ωbrk
(
s
, 
ac˚±
) \

1087 
__exãnsi⁄__
 \

1088 ({ 
__a0
, 
__a1
, 
__a2
; \

1089 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1090 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1091 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1092 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1093 ? ((Ë(
s
), (*Ë
NULL
) \

1094 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1095 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1096 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1097 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1098 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1099 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1100 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1103 
	#°Ωbrk
(
s
, 
ac˚±
) \

1104 
__exãnsi⁄__
 \

1105 ({ 
__a0
, 
__a1
, 
__a2
; \

1106 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1107 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1108 ? ((Ë(
s
), (*Ë
NULL
) \

1109 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1110 ? 
	`°rchr
 (
s
, 
__a0
) \

1111 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1112 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1113 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1114 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1115 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1120 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1121 
__ac˚±2
);

1122 
__STRING_INLINE
 *

1123 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1126 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1127 ++
__s
;

1128  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1129 
	}
}

1131 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1132 
__ac˚±2
, 
__ac˚±3
);

1133 
__STRING_INLINE
 *

1134 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1137 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1138 && *
__s
 !
__ac˚±3
)

1139 ++
__s
;

1140  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1141 
	}
}

1147 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1148 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1149 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1150 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1151 ? (*Ë(
size_t
Ë(
hay°ack
) \

1152 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1153 ? 
	`°rchr
 (
hay°ack
, \

1154 ((c⁄° *Ë(
√edÀ
))[0]) \

1155 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1156 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1160 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1161 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1162 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1163 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1164 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1165 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1166 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1167 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1170 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1171 
__STRING_INLINE
 *

1172 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1174 *
__ªsu…
;

1175 i‡(
__s
 =
NULL
)

1176 
__s
 = *
__√xç
;

1177 *
__s
 =
__£p
)

1178 ++
__s
;

1179 
__ªsu…
 = 
NULL
;

1180 i‡(*
__s
 != '\0')

1182 
__ªsu…
 = 
__s
++;

1183 *
__s
 != '\0')

1184 i‡(*
__s
++ =
__£p
)

1186 
__s
[-1] = '\0';

1190 *
__√xç
 = 
__s
;

1191  
__ªsu…
;

1192 
	}
}

1193 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1194 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1199 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1200 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1202 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1203 
	#__°r£p
(
s
, 
ªje˘
) \

1204 
__exãnsi⁄__
 \

1205 ({ 
__r0
, 
__r1
, 
__r2
; \

1206 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1207 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1208 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1209 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1210 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1211 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1212 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1213 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1214 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1215 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1216 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1217 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1220 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1221 
__STRING_INLINE
 *

1222 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1224 *
__ªtvÆ
 = *
__s
;

1225 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1226 *(*
__s
)++ = '\0';

1227  
__ªtvÆ
;

1228 
	}
}

1230 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1231 
__STRING_INLINE
 *

1232 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1234 *
__ªtvÆ
 = *
__s
;

1235 i‡(
__ªtvÆ
 !
NULL
)

1237 *
__˝
 = 
__ªtvÆ
;

1240 i‡(*
__˝
 == '\0')

1242 
__˝
 = 
NULL
;

1245 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1247 *
__˝
++ = '\0';

1250 ++
__˝
;

1252 *
__s
 = 
__˝
;

1254  
__ªtvÆ
;

1255 
	}
}

1257 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1258 
__ªje˘3
);

1259 
__STRING_INLINE
 *

1260 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1262 *
__ªtvÆ
 = *
__s
;

1263 i‡(
__ªtvÆ
 !
NULL
)

1265 *
__˝
 = 
__ªtvÆ
;

1268 i‡(*
__˝
 == '\0')

1270 
__˝
 = 
NULL
;

1273 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1275 *
__˝
++ = '\0';

1278 ++
__˝
;

1280 *
__s
 = 
__˝
;

1282  
__ªtvÆ
;

1283 
	}
}

1284 #ifde‡
__USE_BSD


1285 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1292 #ifde‡
__USE_MISC


1294 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1295 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1296 
	~<°dlib.h
>

1299 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1301 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1302 
	#__°rdup
(
s
) \

1303 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1304 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1305 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1306 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1307 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1308 i‡(
__ªtvÆ
 !
NULL
) \

1309 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1310 
__ªtvÆ
; 
	}
})) \

1311 : 
	`__°rdup
 (
s
)))

	)

1313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1314 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1318 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1320 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1321 
__THROW
 
__©åibuã_mÆloc__
;

1322 
	#__°∫dup
(
s
, 
n
) \

1323 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1324 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1325 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1326 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1327 
size_t
 
__n
 = (
n
); \

1328 *
__ªtvÆ
; \

1329 i‡(
__n
 < 
__Àn
) \

1330 
__Àn
 = 
__n
 + 1; \

1331 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1332 i‡(
__ªtvÆ
 !
NULL
) \

1334 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1335 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1336 
__Àn
 - 1); \

1338 
__ªtvÆ
; 
	}
})) \

1339 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1341 #ifde‡
__USE_GNU


1342 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1348 #i‚de‡
_FORCE_INLINES


1349 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


8 #i‡!
deföed
 
__x86_64__


9 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

10 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

11 
	#SYS__sys˘l
 
__NR__sys˘l


	)

12 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

13 
	#SYS_ac˘
 
__NR_ac˘


	)

14 
	#SYS_add_key
 
__NR_add_key


	)

15 
	#SYS_adjtimex
 
__NR_adjtimex


	)

16 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

17 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

18 
	#SYS_bdÊush
 
__NR_bdÊush


	)

19 
	#SYS_bªak
 
__NR_bªak


	)

20 
	#SYS_brk
 
__NR_brk


	)

21 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

22 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

23 
	#SYS_chdú
 
__NR_chdú


	)

24 
	#SYS_chmod
 
__NR_chmod


	)

25 
	#SYS_chown
 
__NR_chown


	)

26 
	#SYS_chown32
 
__NR_chown32


	)

27 
	#SYS_chroŸ
 
__NR_chroŸ


	)

28 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

29 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

30 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

31 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

32 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

33 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

34 
	#SYS_˛o£
 
__NR_˛o£


	)

35 
	#SYS_¸ót
 
__NR_¸ót


	)

36 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

37 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

38 
	#SYS_dup
 
__NR_dup


	)

39 
	#SYS_dup2
 
__NR_dup2


	)

40 
	#SYS_dup3
 
__NR_dup3


	)

41 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

42 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

43 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

44 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

45 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

46 
	#SYS_evítfd
 
__NR_evítfd


	)

47 
	#SYS_evítfd2
 
__NR_evítfd2


	)

48 
	#SYS_execve
 
__NR_execve


	)

49 
	#SYS_exô
 
__NR_exô


	)

50 
	#SYS_exô_group
 
__NR_exô_group


	)

51 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

52 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

53 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

54 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

55 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

56 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

57 
	#SYS_fchdú
 
__NR_fchdú


	)

58 
	#SYS_fchmod
 
__NR_fchmod


	)

59 
	#SYS_fchmod©
 
__NR_fchmod©


	)

60 
	#SYS_fchown
 
__NR_fchown


	)

61 
	#SYS_fchown32
 
__NR_fchown32


	)

62 
	#SYS_fchow«t
 
__NR_fchow«t


	)

63 
	#SYS_f˙é
 
__NR_f˙é


	)

64 
	#SYS_f˙é64
 
__NR_f˙é64


	)

65 
	#SYS_fd©async
 
__NR_fd©async


	)

66 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

67 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

68 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

69 
	#SYS_Êock
 
__NR_Êock


	)

70 
	#SYS_f‹k
 
__NR_f‹k


	)

71 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

72 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

73 
	#SYS_f°©
 
__NR_f°©


	)

74 
	#SYS_f°©64
 
__NR_f°©64


	)

75 
	#SYS_f°©©64
 
__NR_f°©©64


	)

76 
	#SYS_f°©fs
 
__NR_f°©fs


	)

77 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

78 
	#SYS_fsync
 
__NR_fsync


	)

79 
	#SYS_·ime
 
__NR_·ime


	)

80 
	#SYS_·runˇã
 
__NR_·runˇã


	)

81 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

82 
	#SYS_fuãx
 
__NR_fuãx


	)

83 
	#SYS_futimeßt
 
__NR_futimeßt


	)

84 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

85 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

86 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

87 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

88 
	#SYS_gë˝u
 
__NR_gë˝u


	)

89 
	#SYS_gëcwd
 
__NR_gëcwd


	)

90 
	#SYS_gëdíts
 
__NR_gëdíts


	)

91 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

92 
	#SYS_gëegid
 
__NR_gëegid


	)

93 
	#SYS_gëegid32
 
__NR_gëegid32


	)

94 
	#SYS_gëeuid
 
__NR_gëeuid


	)

95 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

96 
	#SYS_gëgid
 
__NR_gëgid


	)

97 
	#SYS_gëgid32
 
__NR_gëgid32


	)

98 
	#SYS_gëgroups
 
__NR_gëgroups


	)

99 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

100 
	#SYS_gëôimî
 
__NR_gëôimî


	)

101 
	#SYS_gëpgid
 
__NR_gëpgid


	)

102 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

103 
	#SYS_gëpid
 
__NR_gëpid


	)

104 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

105 
	#SYS_gëµid
 
__NR_gëµid


	)

106 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

107 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

108 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

109 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

110 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

111 
	#SYS_gëæimô
 
__NR_gëæimô


	)

112 
	#SYS_gërußge
 
__NR_gërußge


	)

113 
	#SYS_gësid
 
__NR_gësid


	)

114 
	#SYS_gëtid
 
__NR_gëtid


	)

115 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

116 
	#SYS_gëuid
 
__NR_gëuid


	)

117 
	#SYS_gëuid32
 
__NR_gëuid32


	)

118 
	#SYS_gëx©å
 
__NR_gëx©å


	)

119 
	#SYS_gây
 
__NR_gây


	)

120 
	#SYS_idÀ
 
__NR_idÀ


	)

121 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

122 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

123 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

124 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

125 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

126 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

127 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

128 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

129 
	#SYS_io_£tup
 
__NR_io_£tup


	)

130 
	#SYS_io_submô
 
__NR_io_submô


	)

131 
	#SYS_io˘l
 
__NR_io˘l


	)

132 
	#SYS_i›îm
 
__NR_i›îm


	)

133 
	#SYS_i›l
 
__NR_i›l


	)

134 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

135 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

136 
	#SYS_ùc
 
__NR_ùc


	)

137 
	#SYS_kcmp
 
__NR_kcmp


	)

138 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

139 
	#SYS_key˘l
 
__NR_key˘l


	)

140 
	#SYS_kûl
 
__NR_kûl


	)

141 
	#SYS_lchown
 
__NR_lchown


	)

142 
	#SYS_lchown32
 
__NR_lchown32


	)

143 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

144 
	#SYS_lök
 
__NR_lök


	)

145 
	#SYS_lök©
 
__NR_lök©


	)

146 
	#SYS_li°x©å
 
__NR_li°x©å


	)

147 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

148 
	#SYS_lock
 
__NR_lock


	)

149 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

150 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

151 
	#SYS_l£ek
 
__NR_l£ek


	)

152 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

153 
	#SYS_l°©
 
__NR_l°©


	)

154 
	#SYS_l°©64
 
__NR_l°©64


	)

155 
	#SYS_madvi£
 
__NR_madvi£


	)

156 
	#SYS_mböd
 
__NR_mböd


	)

157 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

158 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

159 
	#SYS_möc‹e
 
__NR_möc‹e


	)

160 
	#SYS_mkdú
 
__NR_mkdú


	)

161 
	#SYS_mkdú©
 
__NR_mkdú©


	)

162 
	#SYS_mknod
 
__NR_mknod


	)

163 
	#SYS_mknod©
 
__NR_mknod©


	)

164 
	#SYS_mlock
 
__NR_mlock


	)

165 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

166 
	#SYS_mm≠
 
__NR_mm≠


	)

167 
	#SYS_mm≠2
 
__NR_mm≠2


	)

168 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

169 
	#SYS_mou¡
 
__NR_mou¡


	)

170 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

171 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

172 
	#SYS_mpx
 
__NR_mpx


	)

173 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

174 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

175 
	#SYS_mq_›í
 
__NR_mq_›í


	)

176 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

177 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

178 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

179 
	#SYS_mªm≠
 
__NR_mªm≠


	)

180 
	#SYS_msync
 
__NR_msync


	)

181 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

182 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

183 
	#SYS_munm≠
 
__NR_munm≠


	)

184 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

185 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

186 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

187 
	#SYS_ni˚
 
__NR_ni˚


	)

188 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

189 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

190 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

191 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

192 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

193 
	#SYS_›í
 
__NR_›í


	)

194 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

195 
	#SYS_›í©
 
__NR_›í©


	)

196 
	#SYS_∑u£
 
__NR_∑u£


	)

197 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

198 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

199 
	#SYS_pùe
 
__NR_pùe


	)

200 
	#SYS_pùe2
 
__NR_pùe2


	)

201 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

202 
	#SYS_pﬁl
 
__NR_pﬁl


	)

203 
	#SYS_µﬁl
 
__NR_µﬁl


	)

204 
	#SYS_¥˘l
 
__NR_¥˘l


	)

205 
	#SYS_¥ód64
 
__NR_¥ód64


	)

206 
	#SYS_¥ódv
 
__NR_¥ódv


	)

207 
	#SYS_¥limô64
 
__NR_¥limô64


	)

208 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

209 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

210 
	#SYS_¥of
 
__NR_¥of


	)

211 
	#SYS_¥ofû
 
__NR_¥ofû


	)

212 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

213 
	#SYS_±ø˚
 
__NR_±ø˚


	)

214 
	#SYS_puçmsg
 
__NR_puçmsg


	)

215 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

216 
	#SYS_pwrôev
 
__NR_pwrôev


	)

217 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

218 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

219 
	#SYS_ªad
 
__NR_ªad


	)

220 
	#SYS_ªadahód
 
__NR_ªadahód


	)

221 
	#SYS_ªaddú
 
__NR_ªaddú


	)

222 
	#SYS_ªadlök
 
__NR_ªadlök


	)

223 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

224 
	#SYS_ªadv
 
__NR_ªadv


	)

225 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

226 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

227 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

228 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

229 
	#SYS_ª«me
 
__NR_ª«me


	)

230 
	#SYS_ª«mót
 
__NR_ª«mót


	)

231 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

232 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

233 
	#SYS_rmdú
 
__NR_rmdú


	)

234 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

235 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

236 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

237 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

238 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

239 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

240 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

241 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

242 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

243 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

244 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

245 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

246 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

247 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

248 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

249 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

250 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

251 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

252 
	#SYS_£À˘
 
__NR_£À˘


	)

253 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

254 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

255 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

256 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

257 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

258 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

259 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

260 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

261 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

262 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

263 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

264 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

265 
	#SYS_£tgid
 
__NR_£tgid


	)

266 
	#SYS_£tgid32
 
__NR_£tgid32


	)

267 
	#SYS_£tgroups
 
__NR_£tgroups


	)

268 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

269 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

270 
	#SYS_£tôimî
 
__NR_£tôimî


	)

271 
	#SYS_£äs
 
__NR_£äs


	)

272 
	#SYS_£çgid
 
__NR_£çgid


	)

273 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

274 
	#SYS_£åegid
 
__NR_£åegid


	)

275 
	#SYS_£åegid32
 
__NR_£åegid32


	)

276 
	#SYS_£åesgid
 
__NR_£åesgid


	)

277 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

278 
	#SYS_£åesuid
 
__NR_£åesuid


	)

279 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

280 
	#SYS_£åeuid
 
__NR_£åeuid


	)

281 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

282 
	#SYS_£ålimô
 
__NR_£ålimô


	)

283 
	#SYS_£tsid
 
__NR_£tsid


	)

284 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

285 
	#SYS_£tuid
 
__NR_£tuid


	)

286 
	#SYS_£tuid32
 
__NR_£tuid32


	)

287 
	#SYS_£tx©å
 
__NR_£tx©å


	)

288 
	#SYS_sgëmask
 
__NR_sgëmask


	)

289 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

290 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

291 
	#SYS_sig«l
 
__NR_sig«l


	)

292 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

293 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

294 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

295 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

296 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

297 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

298 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

299 
	#SYS_•li˚
 
__NR_•li˚


	)

300 
	#SYS_s£tmask
 
__NR_s£tmask


	)

301 
	#SYS_°©
 
__NR_°©


	)

302 
	#SYS_°©64
 
__NR_°©64


	)

303 
	#SYS_°©fs
 
__NR_°©fs


	)

304 
	#SYS_°©fs64
 
__NR_°©fs64


	)

305 
	#SYS_°ime
 
__NR_°ime


	)

306 
	#SYS_°ty
 
__NR_°ty


	)

307 
	#SYS_sw≠off
 
__NR_sw≠off


	)

308 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

309 
	#SYS_symlök
 
__NR_symlök


	)

310 
	#SYS_symlök©
 
__NR_symlök©


	)

311 
	#SYS_sync
 
__NR_sync


	)

312 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

313 
	#SYS_syncfs
 
__NR_syncfs


	)

314 
	#SYS_sysfs
 
__NR_sysfs


	)

315 
	#SYS_sysöfo
 
__NR_sysöfo


	)

316 
	#SYS_sy¶og
 
__NR_sy¶og


	)

317 
	#SYS_ãe
 
__NR_ãe


	)

318 
	#SYS_tgkûl
 
__NR_tgkûl


	)

319 
	#SYS_time
 
__NR_time


	)

320 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

321 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

322 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

323 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

324 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

325 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

326 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

327 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

328 
	#SYS_times
 
__NR_times


	)

329 
	#SYS_tkûl
 
__NR_tkûl


	)

330 
	#SYS_åunˇã
 
__NR_åunˇã


	)

331 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

332 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

333 
	#SYS_ulimô
 
__NR_ulimô


	)

334 
	#SYS_umask
 
__NR_umask


	)

335 
	#SYS_umou¡
 
__NR_umou¡


	)

336 
	#SYS_umou¡2
 
__NR_umou¡2


	)

337 
	#SYS_u«me
 
__NR_u«me


	)

338 
	#SYS_u∆ök
 
__NR_u∆ök


	)

339 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

340 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

341 
	#SYS_u£lib
 
__NR_u£lib


	)

342 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

343 
	#SYS_u°©
 
__NR_u°©


	)

344 
	#SYS_utime
 
__NR_utime


	)

345 
	#SYS_utimíßt
 
__NR_utimíßt


	)

346 
	#SYS_utimes
 
__NR_utimes


	)

347 
	#SYS_vf‹k
 
__NR_vf‹k


	)

348 
	#SYS_vh™gup
 
__NR_vh™gup


	)

349 
	#SYS_vm86
 
__NR_vm86


	)

350 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

351 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

352 
	#SYS_v£rvî
 
__NR_v£rvî


	)

353 
	#SYS_waô4
 
__NR_waô4


	)

354 
	#SYS_waôid
 
__NR_waôid


	)

355 
	#SYS_waôpid
 
__NR_waôpid


	)

356 
	#SYS_wrôe
 
__NR_wrôe


	)

357 
	#SYS_wrôev
 
__NR_wrôev


	)

359 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


360 
	#SYS__sys˘l
 
__NR__sys˘l


	)

361 
	#SYS_ac˚±
 
__NR_ac˚±


	)

362 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

363 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

364 
	#SYS_ac˘
 
__NR_ac˘


	)

365 
	#SYS_add_key
 
__NR_add_key


	)

366 
	#SYS_adjtimex
 
__NR_adjtimex


	)

367 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

368 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

369 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

370 
	#SYS_böd
 
__NR_böd


	)

371 
	#SYS_brk
 
__NR_brk


	)

372 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

373 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

374 
	#SYS_chdú
 
__NR_chdú


	)

375 
	#SYS_chmod
 
__NR_chmod


	)

376 
	#SYS_chown
 
__NR_chown


	)

377 
	#SYS_chroŸ
 
__NR_chroŸ


	)

378 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

379 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

380 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

381 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

382 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

383 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

384 
	#SYS_˛o£
 
__NR_˛o£


	)

385 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

386 
	#SYS_¸ót
 
__NR_¸ót


	)

387 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

388 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

389 
	#SYS_dup
 
__NR_dup


	)

390 
	#SYS_dup2
 
__NR_dup2


	)

391 
	#SYS_dup3
 
__NR_dup3


	)

392 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

393 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

394 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

395 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

396 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

397 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

398 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

399 
	#SYS_evítfd
 
__NR_evítfd


	)

400 
	#SYS_evítfd2
 
__NR_evítfd2


	)

401 
	#SYS_execve
 
__NR_execve


	)

402 
	#SYS_exô
 
__NR_exô


	)

403 
	#SYS_exô_group
 
__NR_exô_group


	)

404 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

405 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

406 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

407 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

408 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

409 
	#SYS_fchdú
 
__NR_fchdú


	)

410 
	#SYS_fchmod
 
__NR_fchmod


	)

411 
	#SYS_fchmod©
 
__NR_fchmod©


	)

412 
	#SYS_fchown
 
__NR_fchown


	)

413 
	#SYS_fchow«t
 
__NR_fchow«t


	)

414 
	#SYS_f˙é
 
__NR_f˙é


	)

415 
	#SYS_fd©async
 
__NR_fd©async


	)

416 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

417 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

418 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

419 
	#SYS_Êock
 
__NR_Êock


	)

420 
	#SYS_f‹k
 
__NR_f‹k


	)

421 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

422 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

423 
	#SYS_f°©
 
__NR_f°©


	)

424 
	#SYS_f°©fs
 
__NR_f°©fs


	)

425 
	#SYS_fsync
 
__NR_fsync


	)

426 
	#SYS_·runˇã
 
__NR_·runˇã


	)

427 
	#SYS_fuãx
 
__NR_fuãx


	)

428 
	#SYS_futimeßt
 
__NR_futimeßt


	)

429 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

430 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

431 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

432 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

433 
	#SYS_gë˝u
 
__NR_gë˝u


	)

434 
	#SYS_gëcwd
 
__NR_gëcwd


	)

435 
	#SYS_gëdíts
 
__NR_gëdíts


	)

436 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

437 
	#SYS_gëegid
 
__NR_gëegid


	)

438 
	#SYS_gëeuid
 
__NR_gëeuid


	)

439 
	#SYS_gëgid
 
__NR_gëgid


	)

440 
	#SYS_gëgroups
 
__NR_gëgroups


	)

441 
	#SYS_gëôimî
 
__NR_gëôimî


	)

442 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

443 
	#SYS_gëpgid
 
__NR_gëpgid


	)

444 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

445 
	#SYS_gëpid
 
__NR_gëpid


	)

446 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

447 
	#SYS_gëµid
 
__NR_gëµid


	)

448 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

449 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

450 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

451 
	#SYS_gëæimô
 
__NR_gëæimô


	)

452 
	#SYS_gërußge
 
__NR_gërußge


	)

453 
	#SYS_gësid
 
__NR_gësid


	)

454 
	#SYS_gësock«me
 
__NR_gësock«me


	)

455 
	#SYS_gësock›t
 
__NR_gësock›t


	)

456 
	#SYS_gëtid
 
__NR_gëtid


	)

457 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

458 
	#SYS_gëuid
 
__NR_gëuid


	)

459 
	#SYS_gëx©å
 
__NR_gëx©å


	)

460 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

461 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

462 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

463 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

464 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

465 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

466 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

467 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

468 
	#SYS_io_£tup
 
__NR_io_£tup


	)

469 
	#SYS_io_submô
 
__NR_io_submô


	)

470 
	#SYS_io˘l
 
__NR_io˘l


	)

471 
	#SYS_i›îm
 
__NR_i›îm


	)

472 
	#SYS_i›l
 
__NR_i›l


	)

473 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

474 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

475 
	#SYS_kcmp
 
__NR_kcmp


	)

476 
	#SYS_kexec_fûe_lﬂd
 
__NR_kexec_fûe_lﬂd


	)

477 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

478 
	#SYS_key˘l
 
__NR_key˘l


	)

479 
	#SYS_kûl
 
__NR_kûl


	)

480 
	#SYS_lchown
 
__NR_lchown


	)

481 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

482 
	#SYS_lök
 
__NR_lök


	)

483 
	#SYS_lök©
 
__NR_lök©


	)

484 
	#SYS_li°í
 
__NR_li°í


	)

485 
	#SYS_li°x©å
 
__NR_li°x©å


	)

486 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

487 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

488 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

489 
	#SYS_l£ek
 
__NR_l£ek


	)

490 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

491 
	#SYS_l°©
 
__NR_l°©


	)

492 
	#SYS_madvi£
 
__NR_madvi£


	)

493 
	#SYS_mböd
 
__NR_mböd


	)

494 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

495 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

496 
	#SYS_möc‹e
 
__NR_möc‹e


	)

497 
	#SYS_mkdú
 
__NR_mkdú


	)

498 
	#SYS_mkdú©
 
__NR_mkdú©


	)

499 
	#SYS_mknod
 
__NR_mknod


	)

500 
	#SYS_mknod©
 
__NR_mknod©


	)

501 
	#SYS_mlock
 
__NR_mlock


	)

502 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

503 
	#SYS_mm≠
 
__NR_mm≠


	)

504 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

505 
	#SYS_mou¡
 
__NR_mou¡


	)

506 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

507 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

508 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

509 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

510 
	#SYS_mq_›í
 
__NR_mq_›í


	)

511 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

512 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

513 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

514 
	#SYS_mªm≠
 
__NR_mªm≠


	)

515 
	#SYS_msg˘l
 
__NR_msg˘l


	)

516 
	#SYS_msggë
 
__NR_msggë


	)

517 
	#SYS_msgrcv
 
__NR_msgrcv


	)

518 
	#SYS_msg¢d
 
__NR_msg¢d


	)

519 
	#SYS_msync
 
__NR_msync


	)

520 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

521 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

522 
	#SYS_munm≠
 
__NR_munm≠


	)

523 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

524 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

525 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

526 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

527 
	#SYS_›í
 
__NR_›í


	)

528 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

529 
	#SYS_›í©
 
__NR_›í©


	)

530 
	#SYS_∑u£
 
__NR_∑u£


	)

531 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

532 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

533 
	#SYS_pùe
 
__NR_pùe


	)

534 
	#SYS_pùe2
 
__NR_pùe2


	)

535 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

536 
	#SYS_pﬁl
 
__NR_pﬁl


	)

537 
	#SYS_µﬁl
 
__NR_µﬁl


	)

538 
	#SYS_¥˘l
 
__NR_¥˘l


	)

539 
	#SYS_¥ód64
 
__NR_¥ód64


	)

540 
	#SYS_¥ódv
 
__NR_¥ódv


	)

541 
	#SYS_¥limô64
 
__NR_¥limô64


	)

542 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

543 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

544 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

545 
	#SYS_±ø˚
 
__NR_±ø˚


	)

546 
	#SYS_puçmsg
 
__NR_puçmsg


	)

547 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

548 
	#SYS_pwrôev
 
__NR_pwrôev


	)

549 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

550 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

551 
	#SYS_ªad
 
__NR_ªad


	)

552 
	#SYS_ªadahód
 
__NR_ªadahód


	)

553 
	#SYS_ªadlök
 
__NR_ªadlök


	)

554 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

555 
	#SYS_ªadv
 
__NR_ªadv


	)

556 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

557 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

558 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

559 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

560 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

561 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

562 
	#SYS_ª«me
 
__NR_ª«me


	)

563 
	#SYS_ª«mót
 
__NR_ª«mót


	)

564 
	#SYS_ª«mót2
 
__NR_ª«mót2


	)

565 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

566 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

567 
	#SYS_rmdú
 
__NR_rmdú


	)

568 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

569 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

570 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

571 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

572 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

573 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

574 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

575 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

576 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

577 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

578 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

579 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

580 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

581 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

582 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

583 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

584 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

585 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

586 
	#SYS_£curôy
 
__NR_£curôy


	)

587 
	#SYS_£À˘
 
__NR_£À˘


	)

588 
	#SYS_£m˘l
 
__NR_£m˘l


	)

589 
	#SYS_£mgë
 
__NR_£mgë


	)

590 
	#SYS_£m›
 
__NR_£m›


	)

591 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

592 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

593 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

594 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

595 
	#SYS_£ndto
 
__NR_£ndto


	)

596 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

597 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

598 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

599 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

600 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

601 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

602 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

603 
	#SYS_£tgid
 
__NR_£tgid


	)

604 
	#SYS_£tgroups
 
__NR_£tgroups


	)

605 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

606 
	#SYS_£tôimî
 
__NR_£tôimî


	)

607 
	#SYS_£äs
 
__NR_£äs


	)

608 
	#SYS_£çgid
 
__NR_£çgid


	)

609 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

610 
	#SYS_£åegid
 
__NR_£åegid


	)

611 
	#SYS_£åesgid
 
__NR_£åesgid


	)

612 
	#SYS_£åesuid
 
__NR_£åesuid


	)

613 
	#SYS_£åeuid
 
__NR_£åeuid


	)

614 
	#SYS_£ålimô
 
__NR_£ålimô


	)

615 
	#SYS_£tsid
 
__NR_£tsid


	)

616 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

617 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

618 
	#SYS_£tuid
 
__NR_£tuid


	)

619 
	#SYS_£tx©å
 
__NR_£tx©å


	)

620 
	#SYS_shm©
 
__NR_shm©


	)

621 
	#SYS_shm˘l
 
__NR_shm˘l


	)

622 
	#SYS_shmdt
 
__NR_shmdt


	)

623 
	#SYS_shmgë
 
__NR_shmgë


	)

624 
	#SYS_shutdown
 
__NR_shutdown


	)

625 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

626 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

627 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

628 
	#SYS_sockë
 
__NR_sockë


	)

629 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

630 
	#SYS_•li˚
 
__NR_•li˚


	)

631 
	#SYS_°©
 
__NR_°©


	)

632 
	#SYS_°©fs
 
__NR_°©fs


	)

633 
	#SYS_sw≠off
 
__NR_sw≠off


	)

634 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

635 
	#SYS_symlök
 
__NR_symlök


	)

636 
	#SYS_symlök©
 
__NR_symlök©


	)

637 
	#SYS_sync
 
__NR_sync


	)

638 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

639 
	#SYS_syncfs
 
__NR_syncfs


	)

640 
	#SYS_sysfs
 
__NR_sysfs


	)

641 
	#SYS_sysöfo
 
__NR_sysöfo


	)

642 
	#SYS_sy¶og
 
__NR_sy¶og


	)

643 
	#SYS_ãe
 
__NR_ãe


	)

644 
	#SYS_tgkûl
 
__NR_tgkûl


	)

645 
	#SYS_time
 
__NR_time


	)

646 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

647 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

648 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

649 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

650 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

651 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

652 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

653 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

654 
	#SYS_times
 
__NR_times


	)

655 
	#SYS_tkûl
 
__NR_tkûl


	)

656 
	#SYS_åunˇã
 
__NR_åunˇã


	)

657 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

658 
	#SYS_umask
 
__NR_umask


	)

659 
	#SYS_umou¡2
 
__NR_umou¡2


	)

660 
	#SYS_u«me
 
__NR_u«me


	)

661 
	#SYS_u∆ök
 
__NR_u∆ök


	)

662 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

663 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

664 
	#SYS_u£lib
 
__NR_u£lib


	)

665 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

666 
	#SYS_u°©
 
__NR_u°©


	)

667 
	#SYS_utime
 
__NR_utime


	)

668 
	#SYS_utimíßt
 
__NR_utimíßt


	)

669 
	#SYS_utimes
 
__NR_utimes


	)

670 
	#SYS_vf‹k
 
__NR_vf‹k


	)

671 
	#SYS_vh™gup
 
__NR_vh™gup


	)

672 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

673 
	#SYS_v£rvî
 
__NR_v£rvî


	)

674 
	#SYS_waô4
 
__NR_waô4


	)

675 
	#SYS_waôid
 
__NR_waôid


	)

676 
	#SYS_wrôe
 
__NR_wrôe


	)

677 
	#SYS_wrôev
 
__NR_wrôev


	)

679 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


680 
	#SYS_ac˚±
 
__NR_ac˚±


	)

681 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

682 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

683 
	#SYS_ac˘
 
__NR_ac˘


	)

684 
	#SYS_add_key
 
__NR_add_key


	)

685 
	#SYS_adjtimex
 
__NR_adjtimex


	)

686 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

687 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

688 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

689 
	#SYS_böd
 
__NR_böd


	)

690 
	#SYS_brk
 
__NR_brk


	)

691 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

692 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

693 
	#SYS_chdú
 
__NR_chdú


	)

694 
	#SYS_chmod
 
__NR_chmod


	)

695 
	#SYS_chown
 
__NR_chown


	)

696 
	#SYS_chroŸ
 
__NR_chroŸ


	)

697 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

698 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

699 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

700 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

701 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

702 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

703 
	#SYS_˛o£
 
__NR_˛o£


	)

704 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

705 
	#SYS_¸ót
 
__NR_¸ót


	)

706 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

707 
	#SYS_dup
 
__NR_dup


	)

708 
	#SYS_dup2
 
__NR_dup2


	)

709 
	#SYS_dup3
 
__NR_dup3


	)

710 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

711 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

712 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

713 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

714 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

715 
	#SYS_evítfd
 
__NR_evítfd


	)

716 
	#SYS_evítfd2
 
__NR_evítfd2


	)

717 
	#SYS_execve
 
__NR_execve


	)

718 
	#SYS_exô
 
__NR_exô


	)

719 
	#SYS_exô_group
 
__NR_exô_group


	)

720 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

721 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

722 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

723 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

724 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

725 
	#SYS_fchdú
 
__NR_fchdú


	)

726 
	#SYS_fchmod
 
__NR_fchmod


	)

727 
	#SYS_fchmod©
 
__NR_fchmod©


	)

728 
	#SYS_fchown
 
__NR_fchown


	)

729 
	#SYS_fchow«t
 
__NR_fchow«t


	)

730 
	#SYS_f˙é
 
__NR_f˙é


	)

731 
	#SYS_fd©async
 
__NR_fd©async


	)

732 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

733 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

734 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

735 
	#SYS_Êock
 
__NR_Êock


	)

736 
	#SYS_f‹k
 
__NR_f‹k


	)

737 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

738 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

739 
	#SYS_f°©
 
__NR_f°©


	)

740 
	#SYS_f°©fs
 
__NR_f°©fs


	)

741 
	#SYS_fsync
 
__NR_fsync


	)

742 
	#SYS_·runˇã
 
__NR_·runˇã


	)

743 
	#SYS_fuãx
 
__NR_fuãx


	)

744 
	#SYS_futimeßt
 
__NR_futimeßt


	)

745 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

746 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

747 
	#SYS_gë˝u
 
__NR_gë˝u


	)

748 
	#SYS_gëcwd
 
__NR_gëcwd


	)

749 
	#SYS_gëdíts
 
__NR_gëdíts


	)

750 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

751 
	#SYS_gëegid
 
__NR_gëegid


	)

752 
	#SYS_gëeuid
 
__NR_gëeuid


	)

753 
	#SYS_gëgid
 
__NR_gëgid


	)

754 
	#SYS_gëgroups
 
__NR_gëgroups


	)

755 
	#SYS_gëôimî
 
__NR_gëôimî


	)

756 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

757 
	#SYS_gëpgid
 
__NR_gëpgid


	)

758 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

759 
	#SYS_gëpid
 
__NR_gëpid


	)

760 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

761 
	#SYS_gëµid
 
__NR_gëµid


	)

762 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

763 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

764 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

765 
	#SYS_gëæimô
 
__NR_gëæimô


	)

766 
	#SYS_gërußge
 
__NR_gërußge


	)

767 
	#SYS_gësid
 
__NR_gësid


	)

768 
	#SYS_gësock«me
 
__NR_gësock«me


	)

769 
	#SYS_gësock›t
 
__NR_gësock›t


	)

770 
	#SYS_gëtid
 
__NR_gëtid


	)

771 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

772 
	#SYS_gëuid
 
__NR_gëuid


	)

773 
	#SYS_gëx©å
 
__NR_gëx©å


	)

774 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

775 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

776 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

777 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

778 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

779 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

780 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

781 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

782 
	#SYS_io_£tup
 
__NR_io_£tup


	)

783 
	#SYS_io_submô
 
__NR_io_submô


	)

784 
	#SYS_io˘l
 
__NR_io˘l


	)

785 
	#SYS_i›îm
 
__NR_i›îm


	)

786 
	#SYS_i›l
 
__NR_i›l


	)

787 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

788 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

789 
	#SYS_kcmp
 
__NR_kcmp


	)

790 
	#SYS_kexec_fûe_lﬂd
 
__NR_kexec_fûe_lﬂd


	)

791 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

792 
	#SYS_key˘l
 
__NR_key˘l


	)

793 
	#SYS_kûl
 
__NR_kûl


	)

794 
	#SYS_lchown
 
__NR_lchown


	)

795 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

796 
	#SYS_lök
 
__NR_lök


	)

797 
	#SYS_lök©
 
__NR_lök©


	)

798 
	#SYS_li°í
 
__NR_li°í


	)

799 
	#SYS_li°x©å
 
__NR_li°x©å


	)

800 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

801 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

802 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

803 
	#SYS_l£ek
 
__NR_l£ek


	)

804 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

805 
	#SYS_l°©
 
__NR_l°©


	)

806 
	#SYS_madvi£
 
__NR_madvi£


	)

807 
	#SYS_mböd
 
__NR_mböd


	)

808 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

809 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

810 
	#SYS_möc‹e
 
__NR_möc‹e


	)

811 
	#SYS_mkdú
 
__NR_mkdú


	)

812 
	#SYS_mkdú©
 
__NR_mkdú©


	)

813 
	#SYS_mknod
 
__NR_mknod


	)

814 
	#SYS_mknod©
 
__NR_mknod©


	)

815 
	#SYS_mlock
 
__NR_mlock


	)

816 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

817 
	#SYS_mm≠
 
__NR_mm≠


	)

818 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

819 
	#SYS_mou¡
 
__NR_mou¡


	)

820 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

821 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

822 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

823 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

824 
	#SYS_mq_›í
 
__NR_mq_›í


	)

825 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

826 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

827 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

828 
	#SYS_mªm≠
 
__NR_mªm≠


	)

829 
	#SYS_msg˘l
 
__NR_msg˘l


	)

830 
	#SYS_msggë
 
__NR_msggë


	)

831 
	#SYS_msgrcv
 
__NR_msgrcv


	)

832 
	#SYS_msg¢d
 
__NR_msg¢d


	)

833 
	#SYS_msync
 
__NR_msync


	)

834 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

835 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

836 
	#SYS_munm≠
 
__NR_munm≠


	)

837 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

838 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

839 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

840 
	#SYS_›í
 
__NR_›í


	)

841 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

842 
	#SYS_›í©
 
__NR_›í©


	)

843 
	#SYS_∑u£
 
__NR_∑u£


	)

844 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

845 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

846 
	#SYS_pùe
 
__NR_pùe


	)

847 
	#SYS_pùe2
 
__NR_pùe2


	)

848 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

849 
	#SYS_pﬁl
 
__NR_pﬁl


	)

850 
	#SYS_µﬁl
 
__NR_µﬁl


	)

851 
	#SYS_¥˘l
 
__NR_¥˘l


	)

852 
	#SYS_¥ód64
 
__NR_¥ód64


	)

853 
	#SYS_¥ódv
 
__NR_¥ódv


	)

854 
	#SYS_¥limô64
 
__NR_¥limô64


	)

855 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

856 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

857 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

858 
	#SYS_±ø˚
 
__NR_±ø˚


	)

859 
	#SYS_puçmsg
 
__NR_puçmsg


	)

860 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

861 
	#SYS_pwrôev
 
__NR_pwrôev


	)

862 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

863 
	#SYS_ªad
 
__NR_ªad


	)

864 
	#SYS_ªadahód
 
__NR_ªadahód


	)

865 
	#SYS_ªadlök
 
__NR_ªadlök


	)

866 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

867 
	#SYS_ªadv
 
__NR_ªadv


	)

868 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

869 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

870 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

871 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

872 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

873 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

874 
	#SYS_ª«me
 
__NR_ª«me


	)

875 
	#SYS_ª«mót
 
__NR_ª«mót


	)

876 
	#SYS_ª«mót2
 
__NR_ª«mót2


	)

877 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

878 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

879 
	#SYS_rmdú
 
__NR_rmdú


	)

880 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

881 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

882 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

883 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

884 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

885 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

886 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

887 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

888 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

889 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

890 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

891 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

892 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

893 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

894 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

895 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

896 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

897 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

898 
	#SYS_£curôy
 
__NR_£curôy


	)

899 
	#SYS_£À˘
 
__NR_£À˘


	)

900 
	#SYS_£m˘l
 
__NR_£m˘l


	)

901 
	#SYS_£mgë
 
__NR_£mgë


	)

902 
	#SYS_£m›
 
__NR_£m›


	)

903 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

904 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

905 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

906 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

907 
	#SYS_£ndto
 
__NR_£ndto


	)

908 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

909 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

910 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

911 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

912 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

913 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

914 
	#SYS_£tgid
 
__NR_£tgid


	)

915 
	#SYS_£tgroups
 
__NR_£tgroups


	)

916 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

917 
	#SYS_£tôimî
 
__NR_£tôimî


	)

918 
	#SYS_£äs
 
__NR_£äs


	)

919 
	#SYS_£çgid
 
__NR_£çgid


	)

920 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

921 
	#SYS_£åegid
 
__NR_£åegid


	)

922 
	#SYS_£åesgid
 
__NR_£åesgid


	)

923 
	#SYS_£åesuid
 
__NR_£åesuid


	)

924 
	#SYS_£åeuid
 
__NR_£åeuid


	)

925 
	#SYS_£ålimô
 
__NR_£ålimô


	)

926 
	#SYS_£tsid
 
__NR_£tsid


	)

927 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

928 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

929 
	#SYS_£tuid
 
__NR_£tuid


	)

930 
	#SYS_£tx©å
 
__NR_£tx©å


	)

931 
	#SYS_shm©
 
__NR_shm©


	)

932 
	#SYS_shm˘l
 
__NR_shm˘l


	)

933 
	#SYS_shmdt
 
__NR_shmdt


	)

934 
	#SYS_shmgë
 
__NR_shmgë


	)

935 
	#SYS_shutdown
 
__NR_shutdown


	)

936 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

937 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

938 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

939 
	#SYS_sockë
 
__NR_sockë


	)

940 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

941 
	#SYS_•li˚
 
__NR_•li˚


	)

942 
	#SYS_°©
 
__NR_°©


	)

943 
	#SYS_°©fs
 
__NR_°©fs


	)

944 
	#SYS_sw≠off
 
__NR_sw≠off


	)

945 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

946 
	#SYS_symlök
 
__NR_symlök


	)

947 
	#SYS_symlök©
 
__NR_symlök©


	)

948 
	#SYS_sync
 
__NR_sync


	)

949 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

950 
	#SYS_syncfs
 
__NR_syncfs


	)

951 
	#SYS_sysfs
 
__NR_sysfs


	)

952 
	#SYS_sysöfo
 
__NR_sysöfo


	)

953 
	#SYS_sy¶og
 
__NR_sy¶og


	)

954 
	#SYS_ãe
 
__NR_ãe


	)

955 
	#SYS_tgkûl
 
__NR_tgkûl


	)

956 
	#SYS_time
 
__NR_time


	)

957 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

958 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

959 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

960 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

961 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

962 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

963 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

964 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

965 
	#SYS_times
 
__NR_times


	)

966 
	#SYS_tkûl
 
__NR_tkûl


	)

967 
	#SYS_åunˇã
 
__NR_åunˇã


	)

968 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

969 
	#SYS_umask
 
__NR_umask


	)

970 
	#SYS_umou¡2
 
__NR_umou¡2


	)

971 
	#SYS_u«me
 
__NR_u«me


	)

972 
	#SYS_u∆ök
 
__NR_u∆ök


	)

973 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

974 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

975 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

976 
	#SYS_u°©
 
__NR_u°©


	)

977 
	#SYS_utime
 
__NR_utime


	)

978 
	#SYS_utimíßt
 
__NR_utimíßt


	)

979 
	#SYS_utimes
 
__NR_utimes


	)

980 
	#SYS_vf‹k
 
__NR_vf‹k


	)

981 
	#SYS_vh™gup
 
__NR_vh™gup


	)

982 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

983 
	#SYS_waô4
 
__NR_waô4


	)

984 
	#SYS_waôid
 
__NR_waôid


	)

985 
	#SYS_wrôe
 
__NR_wrôe


	)

986 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/termios.h

19 #i‚de‡
_TERMIOS_H


23 
	tcc_t
;

24 
	t•ìd_t
;

25 
	ttcÊag_t
;

27 
	#NCCS
 32

	)

28 
	sãrmios


30 
tcÊag_t
 
	mc_iÊag
;

31 
tcÊag_t
 
	mc_oÊag
;

32 
tcÊag_t
 
	mc_cÊag
;

33 
tcÊag_t
 
	mc_lÊag
;

34 
cc_t
 
	mc_löe
;

35 
cc_t
 
	mc_cc
[
NCCS
];

36 
•ìd_t
 
	mc_i•ìd
;

37 
•ìd_t
 
	mc_o•ìd
;

38 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

39 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

43 
	#VINTR
 0

	)

44 
	#VQUIT
 1

	)

45 
	#VERASE
 2

	)

46 
	#VKILL
 3

	)

47 
	#VEOF
 4

	)

48 
	#VTIME
 5

	)

49 
	#VMIN
 6

	)

50 
	#VSWTC
 7

	)

51 
	#VSTART
 8

	)

52 
	#VSTOP
 9

	)

53 
	#VSUSP
 10

	)

54 
	#VEOL
 11

	)

55 
	#VREPRINT
 12

	)

56 
	#VDISCARD
 13

	)

57 
	#VWERASE
 14

	)

58 
	#VLNEXT
 15

	)

59 
	#VEOL2
 16

	)

62 
	#IGNBRK
 0000001

	)

63 
	#BRKINT
 0000002

	)

64 
	#IGNPAR
 0000004

	)

65 
	#PARMRK
 0000010

	)

66 
	#INPCK
 0000020

	)

67 
	#ISTRIP
 0000040

	)

68 
	#INLCR
 0000100

	)

69 
	#IGNCR
 0000200

	)

70 
	#ICRNL
 0000400

	)

71 
	#IUCLC
 0001000

	)

72 
	#IXON
 0002000

	)

73 
	#IXANY
 0004000

	)

74 
	#IXOFF
 0010000

	)

75 
	#IMAXBEL
 0020000

	)

76 
	#IUTF8
 0040000

	)

79 
	#OPOST
 0000001

	)

80 
	#OLCUC
 0000002

	)

81 
	#ONLCR
 0000004

	)

82 
	#OCRNL
 0000010

	)

83 
	#ONOCR
 0000020

	)

84 
	#ONLRET
 0000040

	)

85 
	#OFILL
 0000100

	)

86 
	#OFDEL
 0000200

	)

87 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


88 
	#NLDLY
 0000400

	)

89 
	#NL0
 0000000

	)

90 
	#NL1
 0000400

	)

91 
	#CRDLY
 0003000

	)

92 
	#CR0
 0000000

	)

93 
	#CR1
 0001000

	)

94 
	#CR2
 0002000

	)

95 
	#CR3
 0003000

	)

96 
	#TABDLY
 0014000

	)

97 
	#TAB0
 0000000

	)

98 
	#TAB1
 0004000

	)

99 
	#TAB2
 0010000

	)

100 
	#TAB3
 0014000

	)

101 
	#BSDLY
 0020000

	)

102 
	#BS0
 0000000

	)

103 
	#BS1
 0020000

	)

104 
	#FFDLY
 0100000

	)

105 
	#FF0
 0000000

	)

106 
	#FF1
 0100000

	)

109 
	#VTDLY
 0040000

	)

110 
	#VT0
 0000000

	)

111 
	#VT1
 0040000

	)

113 #ifde‡
__USE_MISC


114 
	#XTABS
 0014000

	)

118 #ifde‡
__USE_MISC


119 
	#CBAUD
 0010017

	)

121 
	#B0
 0000000

	)

122 
	#B50
 0000001

	)

123 
	#B75
 0000002

	)

124 
	#B110
 0000003

	)

125 
	#B134
 0000004

	)

126 
	#B150
 0000005

	)

127 
	#B200
 0000006

	)

128 
	#B300
 0000007

	)

129 
	#B600
 0000010

	)

130 
	#B1200
 0000011

	)

131 
	#B1800
 0000012

	)

132 
	#B2400
 0000013

	)

133 
	#B4800
 0000014

	)

134 
	#B9600
 0000015

	)

135 
	#B19200
 0000016

	)

136 
	#B38400
 0000017

	)

137 #ifde‡
__USE_MISC


138 
	#EXTA
 
B19200


	)

139 
	#EXTB
 
B38400


	)

141 
	#CSIZE
 0000060

	)

142 
	#CS5
 0000000

	)

143 
	#CS6
 0000020

	)

144 
	#CS7
 0000040

	)

145 
	#CS8
 0000060

	)

146 
	#CSTOPB
 0000100

	)

147 
	#CREAD
 0000200

	)

148 
	#PARENB
 0000400

	)

149 
	#PARODD
 0001000

	)

150 
	#HUPCL
 0002000

	)

151 
	#CLOCAL
 0004000

	)

152 #ifde‡
__USE_MISC


153 
	#CBAUDEX
 0010000

	)

155 
	#B57600
 0010001

	)

156 
	#B115200
 0010002

	)

157 
	#B230400
 0010003

	)

158 
	#B460800
 0010004

	)

159 
	#B500000
 0010005

	)

160 
	#B576000
 0010006

	)

161 
	#B921600
 0010007

	)

162 
	#B1000000
 0010010

	)

163 
	#B1152000
 0010011

	)

164 
	#B1500000
 0010012

	)

165 
	#B2000000
 0010013

	)

166 
	#B2500000
 0010014

	)

167 
	#B3000000
 0010015

	)

168 
	#B3500000
 0010016

	)

169 
	#B4000000
 0010017

	)

170 
	#__MAX_BAUD
 
B4000000


	)

171 #ifde‡
__USE_MISC


172 
	#CIBAUD
 002003600000

	)

173 
	#CMSPAR
 010000000000

	)

174 
	#CRTSCTS
 020000000000

	)

178 
	#ISIG
 0000001

	)

179 
	#ICANON
 0000002

	)

180 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


181 
	#XCASE
 0000004

	)

183 
	#ECHO
 0000010

	)

184 
	#ECHOE
 0000020

	)

185 
	#ECHOK
 0000040

	)

186 
	#ECHONL
 0000100

	)

187 
	#NOFLSH
 0000200

	)

188 
	#TOSTOP
 0000400

	)

189 #ifde‡
__USE_MISC


190 
	#ECHOCTL
 0001000

	)

191 
	#ECHOPRT
 0002000

	)

192 
	#ECHOKE
 0004000

	)

193 
	#FLUSHO
 0010000

	)

194 
	#PENDIN
 0040000

	)

196 
	#IEXTEN
 0100000

	)

197 #ifde‡
__USE_BSD


198 
	#EXTPROC
 0200000

	)

202 
	#TCOOFF
 0

	)

203 
	#TCOON
 1

	)

204 
	#TCIOFF
 2

	)

205 
	#TCION
 3

	)

208 
	#TCIFLUSH
 0

	)

209 
	#TCOFLUSH
 1

	)

210 
	#TCIOFLUSH
 2

	)

213 
	#TCSANOW
 0

	)

214 
	#TCSADRAIN
 1

	)

215 
	#TCSAFLUSH
 2

	)

218 
	#_IOT_ãrmios
 \

219 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

26 
	#__WCHAR_MAX
 (2147483647)

	)

28 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

29 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 17

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/linux/prctl.h

1 #i‚de‡
_LINUX_PRCTL_H


2 
	#_LINUX_PRCTL_H


	)

4 
	~<löux/ty≥s.h
>

8 
	#PR_SET_PDEATHSIG
 1

	)

9 
	#PR_GET_PDEATHSIG
 2

	)

12 
	#PR_GET_DUMPABLE
 3

	)

13 
	#PR_SET_DUMPABLE
 4

	)

16 
	#PR_GET_UNALIGN
 5

	)

17 
	#PR_SET_UNALIGN
 6

	)

18 
	#PR_UNALIGN_NOPRINT
 1

	)

19 
	#PR_UNALIGN_SIGBUS
 2

	)

23 
	#PR_GET_KEEPCAPS
 7

	)

24 
	#PR_SET_KEEPCAPS
 8

	)

27 
	#PR_GET_FPEMU
 9

	)

28 
	#PR_SET_FPEMU
 10

	)

29 
	#PR_FPEMU_NOPRINT
 1

	)

30 
	#PR_FPEMU_SIGFPE
 2

	)

33 
	#PR_GET_FPEXC
 11

	)

34 
	#PR_SET_FPEXC
 12

	)

35 
	#PR_FP_EXC_SW_ENABLE
 0x80

	)

36 
	#PR_FP_EXC_DIV
 0x010000

	)

37 
	#PR_FP_EXC_OVF
 0x020000

	)

38 
	#PR_FP_EXC_UND
 0x040000

	)

39 
	#PR_FP_EXC_RES
 0x080000

	)

40 
	#PR_FP_EXC_INV
 0x100000

	)

41 
	#PR_FP_EXC_DISABLED
 0

	)

42 
	#PR_FP_EXC_NONRECOV
 1

	)

43 
	#PR_FP_EXC_ASYNC
 2

	)

44 
	#PR_FP_EXC_PRECISE
 3

	)

48 
	#PR_GET_TIMING
 13

	)

49 
	#PR_SET_TIMING
 14

	)

50 
	#PR_TIMING_STATISTICAL
 0

	)

52 
	#PR_TIMING_TIMESTAMP
 1

	)

55 
	#PR_SET_NAME
 15

	)

56 
	#PR_GET_NAME
 16

	)

59 
	#PR_GET_ENDIAN
 19

	)

60 
	#PR_SET_ENDIAN
 20

	)

61 
	#PR_ENDIAN_BIG
 0

	)

62 
	#PR_ENDIAN_LITTLE
 1

	)

63 
	#PR_ENDIAN_PPC_LITTLE
 2

	)

66 
	#PR_GET_SECCOMP
 21

	)

67 
	#PR_SET_SECCOMP
 22

	)

70 
	#PR_CAPBSET_READ
 23

	)

71 
	#PR_CAPBSET_DROP
 24

	)

74 
	#PR_GET_TSC
 25

	)

75 
	#PR_SET_TSC
 26

	)

76 
	#PR_TSC_ENABLE
 1

	)

77 
	#PR_TSC_SIGSEGV
 2

	)

80 
	#PR_GET_SECUREBITS
 27

	)

81 
	#PR_SET_SECUREBITS
 28

	)

87 
	#PR_SET_TIMERSLACK
 29

	)

88 
	#PR_GET_TIMERSLACK
 30

	)

90 
	#PR_TASK_PERF_EVENTS_DISABLE
 31

	)

91 
	#PR_TASK_PERF_EVENTS_ENABLE
 32

	)

97 
	#PR_MCE_KILL
 33

	)

98 
	#PR_MCE_KILL_CLEAR
 0

	)

99 
	#PR_MCE_KILL_SET
 1

	)

101 
	#PR_MCE_KILL_LATE
 0

	)

102 
	#PR_MCE_KILL_EARLY
 1

	)

103 
	#PR_MCE_KILL_DEFAULT
 2

	)

105 
	#PR_MCE_KILL_GET
 34

	)

110 
	#PR_SET_MM
 35

	)

111 
	#PR_SET_MM_START_CODE
 1

	)

112 
	#PR_SET_MM_END_CODE
 2

	)

113 
	#PR_SET_MM_START_DATA
 3

	)

114 
	#PR_SET_MM_END_DATA
 4

	)

115 
	#PR_SET_MM_START_STACK
 5

	)

116 
	#PR_SET_MM_START_BRK
 6

	)

117 
	#PR_SET_MM_BRK
 7

	)

118 
	#PR_SET_MM_ARG_START
 8

	)

119 
	#PR_SET_MM_ARG_END
 9

	)

120 
	#PR_SET_MM_ENV_START
 10

	)

121 
	#PR_SET_MM_ENV_END
 11

	)

122 
	#PR_SET_MM_AUXV
 12

	)

123 
	#PR_SET_MM_EXE_FILE
 13

	)

124 
	#PR_SET_MM_MAP
 14

	)

125 
	#PR_SET_MM_MAP_SIZE
 15

	)

133 
	s¥˘l_mm_m≠
 {

134 
__u64
 
	m°¨t_code
;

135 
__u64
 
	míd_code
;

136 
__u64
 
	m°¨t_d©a
;

137 
__u64
 
	míd_d©a
;

138 
__u64
 
	m°¨t_brk
;

139 
__u64
 
	mbrk
;

140 
__u64
 
	m°¨t_°ack
;

141 
__u64
 
	m¨g_°¨t
;

142 
__u64
 
	m¨g_íd
;

143 
__u64
 
	mív_°¨t
;

144 
__u64
 
	mív_íd
;

145 
__u64
 *
	mauxv
;

146 
__u32
 
	mauxv_size
;

147 
__u32
 
	mexe_fd
;

154 
	#PR_SET_PTRACER
 0x59616d61

	)

155 
	#PR_SET_PTRACER_ANY
 (()-1)

	)

157 
	#PR_SET_CHILD_SUBREAPER
 36

	)

158 
	#PR_GET_CHILD_SUBREAPER
 37

	)

174 
	#PR_SET_NO_NEW_PRIVS
 38

	)

175 
	#PR_GET_NO_NEW_PRIVS
 39

	)

177 
	#PR_GET_TID_ADDRESS
 40

	)

179 
	#PR_SET_THP_DISABLE
 41

	)

180 
	#PR_GET_THP_DISABLE
 42

	)

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/db/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

144 #i‡
__GNUC_PREREQ
 (4,3)

145 
	#__w¨nde˛
(
«me
, 
msg
) \

146 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

147 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

148 
	#__îr‹de˛
(
«me
, 
msg
) \

149 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

151 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

152 
	#__w¨«âr
(
msg
)

	)

153 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 #i‡
__GNUC_PREREQ
 (2,97)

159 
	#__Êex¨r
 []

	)

161 #ifde‡
__GNUC__


162 
	#__Êex¨r
 [0]

	)

164 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

165 
	#__Êex¨r
 []

	)

168 
	#__Êex¨r
 [1]

	)

184 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

186 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

187 #ifde‡
__˝lu•lus


188 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

189 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

190 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

191 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

198 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

199 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

212 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

213 
	#__©åibuã__
(
xyz
Ë

	)

219 #i‡
__GNUC_PREREQ
 (2,96)

220 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

222 
	#__©åibuã_mÆloc__


	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 
	~<bôs/w‹dsize.h
>

394 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


395 
	#__LDBL_COMPAT
 1

	)

396 #ifde‡
__REDIRECT


397 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

398 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

399 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

400 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

401 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

402 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

403 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

404 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

405 
	#__LDBL_REDIR_DECL
(
«me
) \

406 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

407 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

409 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

410 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

413 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


414 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

415 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

416 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

417 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

418 
	#__LDBL_REDIR_DECL
(
«me
)

	)

419 #ifde‡
__REDIRECT


420 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

422 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/poll.h

19 #i‚def 
_SYS_POLL_H


20 
	#_SYS_POLL_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/pﬁl.h
>

26 #ifde‡
__USE_GNU


28 
	~<bôs/sig£t.h
>

30 
	#__√ed_time•ec


	)

31 
	~<time.h
>

36 
	tnfds_t
;

39 
	spﬁlfd


41 
	mfd
;

42 
	mevíts
;

43 
	mªvíts
;

47 
__BEGIN_DECLS


57 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

59 #ifde‡
__USE_GNU


66 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

67 c⁄° 
time•ec
 *
__timeout
,

68 c⁄° 
__sig£t_t
 *
__ss
);

71 
	g__END_DECLS


75 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


76 
	~<bôs/pﬁl2.h
>

	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë((ÁcË| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
 << 3, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (c⁄° *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, c⁄° *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, c⁄° *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

100 #i‚de‡
F_GETLK


101 #i‚de‡
__USE_FILE_OFFSET64


102 
	#F_GETLK
 5

	)

103 
	#F_SETLK
 6

	)

104 
	#F_SETLKW
 7

	)

106 
	#F_GETLK
 
F_GETLK64


	)

107 
	#F_SETLK
 
F_SETLK64


	)

108 
	#F_SETLKW
 
F_SETLKW64


	)

111 #i‚de‡
F_GETLK64


112 
	#F_GETLK64
 12

	)

113 
	#F_SETLK64
 13

	)

114 
	#F_SETLKW64
 14

	)

117 #ifde‡
__USE_LARGEFILE64


118 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

123 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

124 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

127 #ifde‡
__USE_GNU


128 
	#O_DIRECT
 
__O_DIRECT


	)

129 
	#O_NOATIME
 
__O_NOATIME


	)

130 
	#O_PATH
 
__O_PATH


	)

136 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


137 
	#O_DSYNC
 
__O_DSYNC


	)

138 #i‡
deföed
 
__O_RSYNC


139 
	#O_RSYNC
 
__O_RSYNC


	)

141 
	#O_RSYNC
 
O_SYNC


	)

146 
	#F_DUPFD
 0

	)

147 
	#F_GETFD
 1

	)

148 
	#F_SETFD
 2

	)

149 
	#F_GETFL
 3

	)

150 
	#F_SETFL
 4

	)

152 #i‚de‡
__F_SETOWN


153 
	#__F_SETOWN
 8

	)

154 
	#__F_GETOWN
 9

	)

157 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


158 
	#F_SETOWN
 
__F_SETOWN


	)

159 
	#F_GETOWN
 
__F_GETOWN


	)

162 #i‚de‡
__F_SETSIG


163 
	#__F_SETSIG
 10

	)

164 
	#__F_GETSIG
 11

	)

166 #i‚de‡
__F_SETOWN_EX


167 
	#__F_SETOWN_EX
 15

	)

168 
	#__F_GETOWN_EX
 16

	)

171 #ifde‡
__USE_GNU


172 
	#F_SETSIG
 
__F_SETSIG


	)

173 
	#F_GETSIG
 
__F_GETSIG


	)

174 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

175 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

178 #ifde‡
__USE_GNU


179 
	#F_SETLEASE
 1024

	)

180 
	#F_GETLEASE
 1025

	)

181 
	#F_NOTIFY
 1026

	)

182 
	#F_SETPIPE_SZ
 1031

	)

183 
	#F_GETPIPE_SZ
 1032

	)

185 #ifde‡
__USE_XOPEN2K8


186 
	#F_DUPFD_CLOEXEC
 1030

	)

191 
	#FD_CLOEXEC
 1

	)

193 #i‚de‡
F_RDLCK


195 
	#F_RDLCK
 0

	)

196 
	#F_WRLCK
 1

	)

197 
	#F_UNLCK
 2

	)

202 #i‚de‡
F_EXLCK


203 
	#F_EXLCK
 4

	)

204 
	#F_SHLCK
 8

	)

207 #ifde‡
__USE_BSD


209 
	#LOCK_SH
 1

	)

210 
	#LOCK_EX
 2

	)

211 
	#LOCK_NB
 4

	)

213 
	#LOCK_UN
 8

	)

216 #ifde‡
__USE_GNU


217 
	#LOCK_MAND
 32

	)

218 
	#LOCK_READ
 64

	)

219 
	#LOCK_WRITE
 128

	)

220 
	#LOCK_RW
 192

	)

223 #ifde‡
__USE_GNU


225 
	#DN_ACCESS
 0x00000001

	)

226 
	#DN_MODIFY
 0x00000002

	)

227 
	#DN_CREATE
 0x00000004

	)

228 
	#DN_DELETE
 0x00000008

	)

229 
	#DN_RENAME
 0x00000010

	)

230 
	#DN_ATTRIB
 0x00000020

	)

231 
	#DN_MULTISHOT
 0x80000000

	)

235 #ifde‡
__USE_GNU


237 
	e__pid_ty≥


239 
	mF_OWNER_TID
 = 0,

240 
	mF_OWNER_PID
,

241 
	mF_OWNER_PGRP
,

242 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


246 
	sf_ow√r_ex


248 
__pid_ty≥
 
	mty≥
;

249 
__pid_t
 
	mpid
;

255 #ifdef 
__USE_BSD


256 
	#FAPPEND
 
O_APPEND


	)

257 
	#FFSYNC
 
O_FSYNC


	)

258 
	#FASYNC
 
O_ASYNC


	)

259 
	#FNONBLOCK
 
O_NONBLOCK


	)

260 
	#FNDELAY
 
O_NDELAY


	)

263 #i‚de‡
__POSIX_FADV_DONTNEED


264 
	#__POSIX_FADV_DONTNEED
 4

	)

265 
	#__POSIX_FADV_NOREUSE
 5

	)

268 #ifde‡
__USE_XOPEN2K


269 
	#POSIX_FADV_NORMAL
 0

	)

270 
	#POSIX_FADV_RANDOM
 1

	)

271 
	#POSIX_FADV_SEQUENTIAL
 2

	)

272 
	#POSIX_FADV_WILLNEED
 3

	)

273 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

274 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

278 #ifde‡
__USE_GNU


280 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

283 
	#SYNC_FILE_RANGE_WRITE
 2

	)

286 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

291 
	#SPLICE_F_MOVE
 1

	)

292 
	#SPLICE_F_NONBLOCK
 2

	)

295 
	#SPLICE_F_MORE
 4

	)

296 
	#SPLICE_F_GIFT
 8

	)

300 
	sfûe_h™dÀ


302 
	mh™dÀ_byãs
;

303 
	mh™dÀ_ty≥
;

305 
	mf_h™dÀ
[0];

309 
	#MAX_HANDLE_SZ
 128

	)

312 
	g__BEGIN_DECLS


314 #ifde‡
__USE_GNU


317 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

318 
__THROW
;

325 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

326 
__Êags
);

333 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

334 
size_t
 
__cou¡
, 
__Êags
);

340 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

341 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

342 
__Êags
);

348 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

349 
__Êags
);

355 #i‚de‡
__USE_FILE_OFFSET64


356 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

358 #ifde‡
__REDIRECT


359 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

360 
__off64_t
 
__Àn
),

361 
ÁŒoˇã64
);

363 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

366 #ifde‡
__USE_LARGEFILE64


367 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

368 
__off64_t
 
__Àn
);

373 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

374 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

375 
__Êags
Ë
__THROW
;

381 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

382 
__Êags
);

386 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/poll.h

18 #i‚de‡
_SYS_POLL_H


25 
	#POLLIN
 0x001

	)

26 
	#POLLPRI
 0x002

	)

27 
	#POLLOUT
 0x004

	)

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


31 
	#POLLRDNORM
 0x040

	)

32 
	#POLLRDBAND
 0x080

	)

33 
	#POLLWRNORM
 0x100

	)

34 
	#POLLWRBAND
 0x200

	)

37 #ifde‡
__USE_GNU


39 
	#POLLMSG
 0x400

	)

40 
	#POLLREMOVE
 0x1000

	)

41 
	#POLLRDHUP
 0x2000

	)

47 
	#POLLERR
 0x008

	)

48 
	#POLLHUP
 0x010

	)

49 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/poll2.h

19 #i‚de‡
_SYS_POLL_H


24 
__BEGIN_DECLS


26 
__REDIRECT
 (
__pﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

27 
__timeout
), 
pﬁl
);

28 
__pﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
,

29 
__SIZE_TYPE__
 
__fd¶í
);

30 
__REDIRECT
 (
__pﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

31 
__timeout
, 
__SIZE_TYPE__
 
__fd¶í
),

32 
__pﬁl_chk
)

33 
__w¨«âr
 ("poll called with fds bufferÅoo small fileÇfdsÉntries");

35 
__f‹tify_fun˘i⁄
 

36 
	$pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
)

38 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

40 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

41  
	`__pﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

42 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

43  
	`__pﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

46  
	`__pﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
);

47 
	}
}

50 #ifde‡
__USE_GNU


51 
__REDIRECT
 (
__µﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

52 c⁄° 
time•ec
 *
__timeout
,

53 c⁄° 
__sig£t_t
 *
__ss
), 
µﬁl
);

54 
__µﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

55 c⁄° 
time•ec
 *
__timeout
,

56 c⁄° 
__sig£t_t
 *
__ss
, 
__SIZE_TYPE__
 
__fd¶í
);

57 
__REDIRECT
 (
__µﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

58 c⁄° 
time•ec
 *
__timeout
,

59 c⁄° 
__sig£t_t
 *
__ss
,

60 
__SIZE_TYPE__
 
__fd¶í
),

61 
__µﬁl_chk
)

62 
__w¨«âr
 ("ppoll called with fds bufferÅoo small fileÇfdsÉntries");

64 
__f‹tify_fun˘i⁄
 

65 
	$µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, c⁄° 
time•ec
 *
__timeout
,

66 c⁄° 
__sig£t_t
 *
__ss
)

68 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

70 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

71  
	`__µﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
, 
	`__bos
 (__fds));

72 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

73  
	`__µﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
,

74 
	`__bos
 (
__fds
));

77  
	`__µﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
);

78 
	}
}

81 
	g__END_DECLS


	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/syslog-ldbl.h

19 #i‚de‡
_SYS_SYSLOG_H


23 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

25 #ifde‡
__USE_BSD


26 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

29 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


30 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

32 #ifde‡
__USE_BSD


33 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

19 #i‚de‡
_SYS_SYSLOG_H


23 #i‚de‡
_BITS_SYSLOG_PATH_H


24 
	#_BITS_SYSLOG_PATH_H
 1

	)

26 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

19 #i‚de‡
_SYS_SYSLOG_H


24 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, c⁄° *
__fmt
, ...)

25 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

27 #ifde‡
__va_¨g_∑ck


28 
__f‹tify_fun˘i⁄
 

29 
	$sy¶og
 (
__¥i
, c⁄° *
__fmt
, ...)

31 
	`__sy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

32 
	}
}

33 #ñi‡!
deföed
 
__˝lu•lus


34 
	#sy¶og
(
¥i
, ...) \

35 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

39 #ifde‡
__USE_BSD


40 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, c⁄° *
__fmt
,

41 
__gnuc_va_li°
 
__≠
)

42 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

44 
__f‹tify_fun˘i⁄
 

45 
	$vsy¶og
 (
__¥i
, c⁄° *
__fmt
, 
__gnuc_va_li°
 
__≠
)

47 
	`__vsy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

83 
	#SO_BPF_EXTENSIONS
 48

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~<asm/posix_ty≥s_32.h
>

3 #ñi‡
deföed
(
__ILP32__
)

4 
	~<asm/posix_ty≥s_x32.h
>

6 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/stddef.h

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types_32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


2 
	#_ASM_X86_POSIX_TYPES_32_H


	)

10 
	t__kî√l_mode_t
;

11 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

13 
	t__kî√l_ùc_pid_t
;

14 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

20 
	t__kî√l_ﬁd_dev_t
;

21 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


2 
	#_ASM_X86_POSIX_TYPES_64_H


	)

10 
	t__kî√l_ﬁd_uid_t
;

11 
	t__kî√l_ﬁd_gid_t
;

12 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

14 
	t__kî√l_ﬁd_dev_t
;

15 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

17 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


2 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

13 
	t__kî√l_l⁄g_t
;

14 
	t__kî√l_ul⁄g_t
;

15 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

17 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
802
39998
/root/grocery-shop/language/gcc/src/PCI/msgq_send.c
/root/grocery-shop/language/gcc/src/PCI/pipe.c
/root/grocery-shop/language/gcc/src/apue/advio/catgetmsg.c
/root/grocery-shop/language/gcc/src/apue/advio/devzero.c
/root/grocery-shop/language/gcc/src/apue/advio/mcopy.c
/root/grocery-shop/language/gcc/src/apue/advio/nonblockw.c
/root/grocery-shop/language/gcc/src/apue/advio/pendlock.c
/root/grocery-shop/language/gcc/src/apue/call/call.c
/root/grocery-shop/language/gcc/src/apue/call/call.h
/root/grocery-shop/language/gcc/src/apue/call/escape.c
/root/grocery-shop/language/gcc/src/apue/call/loop.poll.c
/root/grocery-shop/language/gcc/src/apue/call/main.c
/root/grocery-shop/language/gcc/src/apue/call/put.c
/root/grocery-shop/language/gcc/src/apue/call/take.c
/root/grocery-shop/language/gcc/src/apue/call/takeput.c
/root/grocery-shop/language/gcc/src/apue/calld/calld.h
/root/grocery-shop/language/gcc/src/apue/calld/childdial.c
/root/grocery-shop/language/gcc/src/apue/calld/cliargs.c
/root/grocery-shop/language/gcc/src/apue/calld/client.c
/root/grocery-shop/language/gcc/src/apue/calld/ctlstr.c
/root/grocery-shop/language/gcc/src/apue/calld/debug.c
/root/grocery-shop/language/gcc/src/apue/calld/devfile.c
/root/grocery-shop/language/gcc/src/apue/calld/dialfile.c
/root/grocery-shop/language/gcc/src/apue/calld/expectstr.c
/root/grocery-shop/language/gcc/src/apue/calld/lock.c
/root/grocery-shop/language/gcc/src/apue/calld/loop.c
/root/grocery-shop/language/gcc/src/apue/calld/main.c
/root/grocery-shop/language/gcc/src/apue/calld/request.c
/root/grocery-shop/language/gcc/src/apue/calld/sendstr.c
/root/grocery-shop/language/gcc/src/apue/calld/sigchld.c
/root/grocery-shop/language/gcc/src/apue/calld/sysfile.c
/root/grocery-shop/language/gcc/src/apue/calld/ttydial.c
/root/grocery-shop/language/gcc/src/apue/calld/ttyopen.c
/root/grocery-shop/language/gcc/src/apue/daemons/init.c
/root/grocery-shop/language/gcc/src/apue/daemons/lockfile.c
/root/grocery-shop/language/gcc/src/apue/daemons/reread.c
/root/grocery-shop/language/gcc/src/apue/daemons/reread2.c
/root/grocery-shop/language/gcc/src/apue/daemons/single.c
/root/grocery-shop/language/gcc/src/apue/datafiles/getpwnam.c
/root/grocery-shop/language/gcc/src/apue/db/apue_db.h
/root/grocery-shop/language/gcc/src/apue/db/db.c
/root/grocery-shop/language/gcc/src/apue/db/t4.c
/root/grocery-shop/language/gcc/src/apue/environ/cmd1.c
/root/grocery-shop/language/gcc/src/apue/environ/cmd2.c
/root/grocery-shop/language/gcc/src/apue/environ/doatexit.c
/root/grocery-shop/language/gcc/src/apue/environ/getrlimit.c
/root/grocery-shop/language/gcc/src/apue/environ/hello1.c
/root/grocery-shop/language/gcc/src/apue/environ/opendata.c
/root/grocery-shop/language/gcc/src/apue/environ/testjmp.c
/root/grocery-shop/language/gcc/src/apue/exercises/asyncsocket.c
/root/grocery-shop/language/gcc/src/apue/exercises/getlogin.c
/root/grocery-shop/language/gcc/src/apue/exercises/getpw44bsd.c
/root/grocery-shop/language/gcc/src/apue/exercises/getpwsvr4.c
/root/grocery-shop/language/gcc/src/apue/exercises/goodexit.c
/root/grocery-shop/language/gcc/src/apue/exercises/openmax.c
/root/grocery-shop/language/gcc/src/apue/exercises/prtime.c
/root/grocery-shop/language/gcc/src/apue/exercises/sizepipe.c
/root/grocery-shop/language/gcc/src/apue/exercises/sleep.c
/root/grocery-shop/language/gcc/src/apue/exercises/sleepus_poll.c
/root/grocery-shop/language/gcc/src/apue/exercises/sleepus_select.c
/root/grocery-shop/language/gcc/src/apue/file/access.c
/root/grocery-shop/language/gcc/src/apue/file/cdpwd.c
/root/grocery-shop/language/gcc/src/apue/file/changemod.c
/root/grocery-shop/language/gcc/src/apue/file/devrdev.c
/root/grocery-shop/language/gcc/src/apue/file/fileflags.c
/root/grocery-shop/language/gcc/src/apue/file/filetype.c
/root/grocery-shop/language/gcc/src/apue/file/ftw4.c
/root/grocery-shop/language/gcc/src/apue/file/hello.c
/root/grocery-shop/language/gcc/src/apue/file/hole.c
/root/grocery-shop/language/gcc/src/apue/file/longpath.c
/root/grocery-shop/language/gcc/src/apue/file/ls1.c
/root/grocery-shop/language/gcc/src/apue/file/mycd.c
/root/grocery-shop/language/gcc/src/apue/file/seek.c
/root/grocery-shop/language/gcc/src/apue/file/testerror.c
/root/grocery-shop/language/gcc/src/apue/file/uidgid.c
/root/grocery-shop/language/gcc/src/apue/file/umask.c
/root/grocery-shop/language/gcc/src/apue/file/unlink.c
/root/grocery-shop/language/gcc/src/apue/file/zap.c
/root/grocery-shop/language/gcc/src/apue/include/apue.h
/root/grocery-shop/language/gcc/src/apue/ipc/add2.c
/root/grocery-shop/language/gcc/src/apue/ipc/add2stdio.c
/root/grocery-shop/language/gcc/src/apue/ipc/fifo1.c
/root/grocery-shop/language/gcc/src/apue/ipc/myuclc.c
/root/grocery-shop/language/gcc/src/apue/ipc/pipe1.c
/root/grocery-shop/language/gcc/src/apue/ipc/pipe2.c
/root/grocery-shop/language/gcc/src/apue/ipc/pipe4.c
/root/grocery-shop/language/gcc/src/apue/ipc/popen1.c
/root/grocery-shop/language/gcc/src/apue/ipc/popen2.c
/root/grocery-shop/language/gcc/src/apue/ipc/spipe4.c
/root/grocery-shop/language/gcc/src/apue/ipc/tellwait.c
/root/grocery-shop/language/gcc/src/apue/ipc/tshm.c
/root/grocery-shop/language/gcc/src/apue/ipp/ipp.h
/root/grocery-shop/language/gcc/src/apue/ipp/print.c
/root/grocery-shop/language/gcc/src/apue/ipp/print.h
/root/grocery-shop/language/gcc/src/apue/ipp/printd.c
/root/grocery-shop/language/gcc/src/apue/ipp/util.c
/root/grocery-shop/language/gcc/src/apue/lib/bsd_ptyopen.c
/root/grocery-shop/language/gcc/src/apue/lib/bufargs.c
/root/grocery-shop/language/gcc/src/apue/lib/cliconn.c
/root/grocery-shop/language/gcc/src/apue/lib/clrfl.c
/root/grocery-shop/language/gcc/src/apue/lib/daemonize.c
/root/grocery-shop/language/gcc/src/apue/lib/error.c
/root/grocery-shop/language/gcc/src/apue/lib/errorlog.c
/root/grocery-shop/language/gcc/src/apue/lib/linux_ptyopen.c
/root/grocery-shop/language/gcc/src/apue/lib/lockreg.c
/root/grocery-shop/language/gcc/src/apue/lib/locktest.c
/root/grocery-shop/language/gcc/src/apue/lib/nspipe.c
/root/grocery-shop/language/gcc/src/apue/lib/openmax.c
/root/grocery-shop/language/gcc/src/apue/lib/pathalloc.c
/root/grocery-shop/language/gcc/src/apue/lib/popen.c
/root/grocery-shop/language/gcc/src/apue/lib/prexit.c
/root/grocery-shop/language/gcc/src/apue/lib/prmask.c
/root/grocery-shop/language/gcc/src/apue/lib/ptyfork.c
/root/grocery-shop/language/gcc/src/apue/lib/readn.c
/root/grocery-shop/language/gcc/src/apue/lib/recvfd.c
/root/grocery-shop/language/gcc/src/apue/lib/semaph.c
/root/grocery-shop/language/gcc/src/apue/lib/senderr.c
/root/grocery-shop/language/gcc/src/apue/lib/sendfd.c
/root/grocery-shop/language/gcc/src/apue/lib/servaccept.c
/root/grocery-shop/language/gcc/src/apue/lib/servlisten.c
/root/grocery-shop/language/gcc/src/apue/lib/setfl.c
/root/grocery-shop/language/gcc/src/apue/lib/signal.c
/root/grocery-shop/language/gcc/src/apue/lib/signalintr.c
/root/grocery-shop/language/gcc/src/apue/lib/sleep.c
/root/grocery-shop/language/gcc/src/apue/lib/sleepus.c
/root/grocery-shop/language/gcc/src/apue/lib/spipe.c
/root/grocery-shop/language/gcc/src/apue/lib/tellwait.c
/root/grocery-shop/language/gcc/src/apue/lib/ttymodes.c
/root/grocery-shop/language/gcc/src/apue/lib/writen.c
/root/grocery-shop/language/gcc/src/apue/lock/deadlock.c
/root/grocery-shop/language/gcc/src/apue/lock/mandatory.c
/root/grocery-shop/language/gcc/src/apue/mycat/fgetsfputs.c
/root/grocery-shop/language/gcc/src/apue/mycat/getcputc.c
/root/grocery-shop/language/gcc/src/apue/mycat/mycat.c
/root/grocery-shop/language/gcc/src/apue/open.fe/main.c
/root/grocery-shop/language/gcc/src/apue/open.fe/open.c
/root/grocery-shop/language/gcc/src/apue/open.fe/open.h
/root/grocery-shop/language/gcc/src/apue/open/open.c
/root/grocery-shop/language/gcc/src/apue/open/open.h
/root/grocery-shop/language/gcc/src/apue/opend.fe/cliargs.c
/root/grocery-shop/language/gcc/src/apue/opend.fe/main.c
/root/grocery-shop/language/gcc/src/apue/opend.fe/opend.h
/root/grocery-shop/language/gcc/src/apue/opend.fe/request.c
/root/grocery-shop/language/gcc/src/apue/opend/client.c
/root/grocery-shop/language/gcc/src/apue/opend/loop.poll.c
/root/grocery-shop/language/gcc/src/apue/opend/loop.select.c
/root/grocery-shop/language/gcc/src/apue/opend/main.c
/root/grocery-shop/language/gcc/src/apue/opend/opend.h
/root/grocery-shop/language/gcc/src/apue/opend/request.c
/root/grocery-shop/language/gcc/src/apue/proc/echoall.c
/root/grocery-shop/language/gcc/src/apue/proc/echoarg.c
/root/grocery-shop/language/gcc/src/apue/proc/exec1.c
/root/grocery-shop/language/gcc/src/apue/proc/exec2.c
/root/grocery-shop/language/gcc/src/apue/proc/fork1.c
/root/grocery-shop/language/gcc/src/apue/proc/fork2.c
/root/grocery-shop/language/gcc/src/apue/proc/pracct.c
/root/grocery-shop/language/gcc/src/apue/proc/pruids.c
/root/grocery-shop/language/gcc/src/apue/proc/shell1.c
/root/grocery-shop/language/gcc/src/apue/proc/shell2.c
/root/grocery-shop/language/gcc/src/apue/proc/system.c
/root/grocery-shop/language/gcc/src/apue/proc/systest1.c
/root/grocery-shop/language/gcc/src/apue/proc/systest2.c
/root/grocery-shop/language/gcc/src/apue/proc/systest3.c
/root/grocery-shop/language/gcc/src/apue/proc/tellwait1.c
/root/grocery-shop/language/gcc/src/apue/proc/tellwait2.c
/root/grocery-shop/language/gcc/src/apue/proc/test1.c
/root/grocery-shop/language/gcc/src/apue/proc/times1.c
/root/grocery-shop/language/gcc/src/apue/proc/vfork1.c
/root/grocery-shop/language/gcc/src/apue/proc/vfork3.c
/root/grocery-shop/language/gcc/src/apue/proc/wait1.c
/root/grocery-shop/language/gcc/src/apue/proc/zombie.c
/root/grocery-shop/language/gcc/src/apue/pty/driver.c
/root/grocery-shop/language/gcc/src/apue/pty/loop.c
/root/grocery-shop/language/gcc/src/apue/pty/main.c
/root/grocery-shop/language/gcc/src/apue/sess/orphan3.c
/root/grocery-shop/language/gcc/src/apue/signals/abort.c
/root/grocery-shop/language/gcc/src/apue/signals/child.c
/root/grocery-shop/language/gcc/src/apue/signals/critical.c
/root/grocery-shop/language/gcc/src/apue/signals/mask.c
/root/grocery-shop/language/gcc/src/apue/signals/read1.c
/root/grocery-shop/language/gcc/src/apue/signals/read2.c
/root/grocery-shop/language/gcc/src/apue/signals/reenter.c
/root/grocery-shop/language/gcc/src/apue/signals/setops.c
/root/grocery-shop/language/gcc/src/apue/signals/sigtstp.c
/root/grocery-shop/language/gcc/src/apue/signals/sigusr.c
/root/grocery-shop/language/gcc/src/apue/signals/sleep1.c
/root/grocery-shop/language/gcc/src/apue/signals/sleep2.c
/root/grocery-shop/language/gcc/src/apue/signals/suspend1.c
/root/grocery-shop/language/gcc/src/apue/signals/suspend2.c
/root/grocery-shop/language/gcc/src/apue/signals/system.c
/root/grocery-shop/language/gcc/src/apue/signals/tsleep2.c
/root/grocery-shop/language/gcc/src/apue/sockets/bindunix.c
/root/grocery-shop/language/gcc/src/apue/sockets/bo.c
/root/grocery-shop/language/gcc/src/apue/sockets/clconn.c
/root/grocery-shop/language/gcc/src/apue/sockets/cliconn.c
/root/grocery-shop/language/gcc/src/apue/sockets/findsvc.c
/root/grocery-shop/language/gcc/src/apue/sockets/initsrv1.c
/root/grocery-shop/language/gcc/src/apue/sockets/initsrv2.c
/root/grocery-shop/language/gcc/src/apue/sockets/recvfd.c
/root/grocery-shop/language/gcc/src/apue/sockets/recvfd2.c
/root/grocery-shop/language/gcc/src/apue/sockets/ruptime-dg.c
/root/grocery-shop/language/gcc/src/apue/sockets/ruptime.c
/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed-dg.c
/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed-fd.c
/root/grocery-shop/language/gcc/src/apue/sockets/ruptimed.c
/root/grocery-shop/language/gcc/src/apue/sockets/sendfd.c
/root/grocery-shop/language/gcc/src/apue/sockets/sendfd2.c
/root/grocery-shop/language/gcc/src/apue/sockets/servaccept.c
/root/grocery-shop/language/gcc/src/apue/sockets/servlisten.c
/root/grocery-shop/language/gcc/src/apue/sockets/spipe.c
/root/grocery-shop/language/gcc/src/apue/std/conf.c
/root/grocery-shop/language/gcc/src/apue/std/options.c
/root/grocery-shop/language/gcc/src/apue/stdio/buf.c
/root/grocery-shop/language/gcc/src/apue/stdio/tempfiles.c
/root/grocery-shop/language/gcc/src/apue/stdio/tempnam.c
/root/grocery-shop/language/gcc/src/apue/streams/cliconn.c
/root/grocery-shop/language/gcc/src/apue/streams/isastream.c
/root/grocery-shop/language/gcc/src/apue/streams/ptyopen.c
/root/grocery-shop/language/gcc/src/apue/streams/recvfd.c
/root/grocery-shop/language/gcc/src/apue/streams/sendfd.c
/root/grocery-shop/language/gcc/src/apue/streams/servaccept.c
/root/grocery-shop/language/gcc/src/apue/streams/servlisten.c
/root/grocery-shop/language/gcc/src/apue/streams/spipe.c
/root/grocery-shop/language/gcc/src/apue/streams/strlist.c
/root/grocery-shop/language/gcc/src/apue/streams/t_isastream.c
/root/grocery-shop/language/gcc/src/apue/termios/csize.c
/root/grocery-shop/language/gcc/src/apue/termios/ctermid.c
/root/grocery-shop/language/gcc/src/apue/termios/getpass.c
/root/grocery-shop/language/gcc/src/apue/termios/isatty.c
/root/grocery-shop/language/gcc/src/apue/termios/settty.c
/root/grocery-shop/language/gcc/src/apue/termios/t_getpass.c
/root/grocery-shop/language/gcc/src/apue/termios/t_isatty.c
/root/grocery-shop/language/gcc/src/apue/termios/t_raw.c
/root/grocery-shop/language/gcc/src/apue/termios/t_ttyname.c
/root/grocery-shop/language/gcc/src/apue/termios/ttyname.c
/root/grocery-shop/language/gcc/src/apue/termios/winch.c
/root/grocery-shop/language/gcc/src/apue/threadctl/atfork.c
/root/grocery-shop/language/gcc/src/apue/threadctl/detach.c
/root/grocery-shop/language/gcc/src/apue/threadctl/getenv1.c
/root/grocery-shop/language/gcc/src/apue/threadctl/getenv2.c
/root/grocery-shop/language/gcc/src/apue/threadctl/getenv3.c
/root/grocery-shop/language/gcc/src/apue/threadctl/suspend.c
/root/grocery-shop/language/gcc/src/apue/threadctl/timeout.c
/root/grocery-shop/language/gcc/src/apue/threads/badexit2.c
/root/grocery-shop/language/gcc/src/apue/threads/cleanup.c
/root/grocery-shop/language/gcc/src/apue/threads/condvar.c
/root/grocery-shop/language/gcc/src/apue/threads/exitstatus.c
/root/grocery-shop/language/gcc/src/apue/threads/mutex1.c
/root/grocery-shop/language/gcc/src/apue/threads/mutex2.c
/root/grocery-shop/language/gcc/src/apue/threads/mutex3.c
/root/grocery-shop/language/gcc/src/apue/threads/rwlock.c
/root/grocery-shop/language/gcc/src/apue/threads/threadid.c
/root/grocery-shop/language/gcc/src/array/array.c
/root/grocery-shop/language/gcc/src/array/init.c
/root/grocery-shop/language/gcc/src/array/test.c
/root/grocery-shop/language/gcc/src/base64/base64.c
/root/grocery-shop/language/gcc/src/base64/base64.h
/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch01/listing1-3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch02/fathm_ft.c
/root/grocery-shop/language/gcc/src/cPrimer/ch02/first.c
/root/grocery-shop/language/gcc/src/cPrimer/ch02/nogood.c
/root/grocery-shop/language/gcc/src/cPrimer/ch02/stillbad.c
/root/grocery-shop/language/gcc/src/cPrimer/ch02/two_func.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/altnames.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/badcount.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/bases.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/charcode.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/escape.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/floaterr.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/print1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/print2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/rhodium.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/showf_pt.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/toobig.c
/root/grocery-shop/language/gcc/src/cPrimer/ch03/typesize.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/defines.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/flags.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/floatcnv.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/floats.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/input.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/intconv.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/longstrg.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/pizza.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/praise1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/praise2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/printout.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/prntval.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/skip2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/strings.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/talkback.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/varwid.c
/root/grocery-shop/language/gcc/src/cPrimer/ch04/width.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/add_one.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/addemup.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/bottles.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/convert.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/divide.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/golf.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/min_sec.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/post_pre.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/pound.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/rules.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/running.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/shoes1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/shoes2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/sizeof.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/squares.c
/root/grocery-shop/language/gcc/src/cPrimer/ch05/wheat.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/boolean.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/cmpflt.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/do_while.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/entry.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_13s.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_char.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_cube.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_down.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_geo.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_none.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_show.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/for_wild.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/postage.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/power.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/rows1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/rows2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/scores_in.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/summing.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/sweetie1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/sweetie2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/t_and_f.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/trouble.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/truth.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/when.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/while1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/while2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch06/zeno.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/animals.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/break.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/chcount.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/colddays.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/cypher1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/cypher2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/divisors.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/electric.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/paint.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/skippart.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/vowels.c
/root/grocery-shop/language/gcc/src/cPrimer/ch07/wordcnt.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/checking.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/echo.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/echo_eof.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/file_eof.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/guess.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/menuette.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/showchar1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch08/showchar2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/binary.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/factor.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/hotel.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/hotel.h
/root/grocery-shop/language/gcc/src/cPrimer/ch09/lesser.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/lethead1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/lethead2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/loccheck.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/misuse.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/proto.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/recur.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/swap3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch09/usehotel.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/arf.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/array2d.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/bounds.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/day_mon3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/designate.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/flc.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/no_data.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/order.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/pnt_add.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/ptr_ops.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/rain.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/some_data.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/sum_arr1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/sum_arr2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/vararr2d.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/zippo1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch10/zippo2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/compare.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/compback.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/copy3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/format.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/hello.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/join_chk.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/mod_str.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/name1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/name2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/name3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/nogo.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/nono.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/p_and_s.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/put1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/put2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/put_out.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/put_put.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/quit_chk.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/quotes.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/repeat.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/scan_str.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/sort_str.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/starsrch.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/str_cat.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/strcnvt.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/strings.c
/root/grocery-shop/language/gcc/src/cPrimer/ch11/test_fit.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/diceroll.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/diceroll.h
/root/grocery-shop/language/gcc/src/cPrimer/ch12/dyn_arr.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/forc99.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/global.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/hiding.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/loc_stat.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/manydice.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/parta.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/partb.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/r_drive0.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/r_drive1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/rand0.c
/root/grocery-shop/language/gcc/src/cPrimer/ch12/s_and_r.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/addaword.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/append.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/count.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/parrot.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/randbin.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/reducto.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/reverse.c
/root/grocery-shop/language/gcc/src/cPrimer/ch13/setbuf.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/book.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/booksave.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/complit.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/enum.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/flexmemb.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/friend.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/friends.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/func_ptr.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/funds4.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/manybook.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/names1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/names2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch14/names3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch15/binbit.c
/root/grocery-shop/language/gcc/src/cPrimer/ch15/dualview.c
/root/grocery-shop/language/gcc/src/cPrimer/ch15/fields.c
/root/grocery-shop/language/gcc/src/cPrimer/ch15/invert4.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/assert.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/byebye.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/doubincl.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/glue.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/ifdef.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/inl3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/mac_arg.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/mems.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_st.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_st.h
/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_str.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/names_str.h
/root/grocery-shop/language/gcc/src/cPrimer/ch16/pe15-7.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/predef.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/preproc.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/qsorter.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/rect_pol.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/subst.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/useheader.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/varargs.c
/root/grocery-shop/language/gcc/src/cPrimer/ch16/variadic.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/films1.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/films2.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/films3.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/list.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/list.h
/root/grocery-shop/language/gcc/src/cPrimer/ch17/mall.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/petclub.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/queue.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/queue.h
/root/grocery-shop/language/gcc/src/cPrimer/ch17/tree.c
/root/grocery-shop/language/gcc/src/cPrimer/ch17/tree.h
/root/grocery-shop/language/gcc/src/cPrimer/ch17/use_q.c
/root/grocery-shop/language/gcc/src/coreDump/example.c
/root/grocery-shop/language/gcc/src/daemon/daemonTest.c
/root/grocery-shop/language/gcc/src/daemon/object.c
/root/grocery-shop/language/gcc/src/daemon/test.c
/root/grocery-shop/language/gcc/src/execl/execTest.c
/root/grocery-shop/language/gcc/src/execl/killTest.c
/root/grocery-shop/language/gcc/src/execl/test.c
/root/grocery-shop/language/gcc/src/fileOperator/fileChange.c
/root/grocery-shop/language/gcc/src/fileOperator/fileConfig.c
/root/grocery-shop/language/gcc/src/fileOperator/fileConfig.h
/root/grocery-shop/language/gcc/src/fileOperator/fileCreate.c
/root/grocery-shop/language/gcc/src/fileOperator/fileJudge.c
/root/grocery-shop/language/gcc/src/fileOperator/filePath.c
/root/grocery-shop/language/gcc/src/fileOperator/fileRW.c
/root/grocery-shop/language/gcc/src/fileOperator/fileRwUncache.c
/root/grocery-shop/language/gcc/src/fileOperator/fileSort.c
/root/grocery-shop/language/gcc/src/fileOperator/fileTmp.c
/root/grocery-shop/language/gcc/src/fileOperator/testfcntl.c
/root/grocery-shop/language/gcc/src/hash/md5.c
/root/grocery-shop/language/gcc/src/httpParse/contrib/parsertrace.c
/root/grocery-shop/language/gcc/src/httpParse/contrib/url_parser.c
/root/grocery-shop/language/gcc/src/httpParse/http_parser.c
/root/grocery-shop/language/gcc/src/httpParse/http_parser.h
/root/grocery-shop/language/gcc/src/httpParse/http_uuid.c
/root/grocery-shop/language/gcc/src/httpParse/test.c
/root/grocery-shop/language/gcc/src/ioOperator/configIO.c
/root/grocery-shop/language/gcc/src/ioOperator/configIO.h
/root/grocery-shop/language/gcc/src/ioOperator/printfIO.c
/root/grocery-shop/language/gcc/src/ioOperator/scanfIO.c
/root/grocery-shop/language/gcc/src/json/parseTest.c
/root/grocery-shop/language/gcc/src/libev/evBreak.c
/root/grocery-shop/language/gcc/src/libev/evMultiple.c
/root/grocery-shop/language/gcc/src/libev/evPeriodic.c
/root/grocery-shop/language/gcc/src/libev/ev_time.c
/root/grocery-shop/language/gcc/src/libev/ev_time.h
/root/grocery-shop/language/gcc/src/libev/serverSocket.c
/root/grocery-shop/language/gcc/src/loop/test.c
/root/grocery-shop/language/gcc/src/macro/example.c
/root/grocery-shop/language/gcc/src/macro/myinclude.c
/root/grocery-shop/language/gcc/src/macro/myinclude.h
/root/grocery-shop/language/gcc/src/macro/va_arg.c
/root/grocery-shop/language/gcc/src/memory/example.c
/root/grocery-shop/language/gcc/src/memory/memoryCompilation.c
/root/grocery-shop/language/gcc/src/memory/memoryDistribute.c
/root/grocery-shop/language/gcc/src/openssl/base64.c
/root/grocery-shop/language/gcc/src/openssl/crypt.c
/root/grocery-shop/language/gcc/src/openssl/crypt.h
/root/grocery-shop/language/gcc/src/openssl/hex.c
/root/grocery-shop/language/gcc/src/openssl/hex.h
/root/grocery-shop/language/gcc/src/openssl/simple_3des.c
/root/grocery-shop/language/gcc/src/openssl/simple_3ds_ecb.c
/root/grocery-shop/language/gcc/src/openssl/simple_aes.c
/root/grocery-shop/language/gcc/src/openssl/simple_aes_test.c
/root/grocery-shop/language/gcc/src/openssl/simple_crypt.c
/root/grocery-shop/language/gcc/src/openssl/simple_des.c
/root/grocery-shop/language/gcc/src/openssl/simple_openssl.c
/root/grocery-shop/language/gcc/src/openssl/simple_rc4.c
/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt.c
/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt.h
/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt_simple.c
/root/grocery-shop/language/gcc/src/openssl/symmetry_crypt_simple.h
/root/grocery-shop/language/gcc/src/orphanProcess/example.c
/root/grocery-shop/language/gcc/src/ptrace/first.c
/root/grocery-shop/language/gcc/src/python/pytest.py
/root/grocery-shop/language/gcc/src/python/simple_python.c
/root/grocery-shop/language/gcc/src/readConfig/readConfig.c
/root/grocery-shop/language/gcc/src/readConfig/tools/testToolsModule/test_toolsModule.c
/root/grocery-shop/language/gcc/src/readConfig/tools/tools.c
/root/grocery-shop/language/gcc/src/readConfig/tools/tools.h
/root/grocery-shop/language/gcc/src/regex/simple_pcre.c
/root/grocery-shop/language/gcc/src/regex/simple_regex.c
/root/grocery-shop/language/gcc/src/signal/kill/killTest.c
/root/grocery-shop/language/gcc/src/signal/kill/test.c
/root/grocery-shop/language/gcc/src/signal/kill/testNull.c
/root/grocery-shop/language/gcc/src/signal/killTest.c
/root/grocery-shop/language/gcc/src/signal/signalMask.c
/root/grocery-shop/language/gcc/src/sizeof/array.c
/root/grocery-shop/language/gcc/src/sizeof/test.c
/root/grocery-shop/language/gcc/src/socket/client.c
/root/grocery-shop/language/gcc/src/socket/nonUdpClient.c
/root/grocery-shop/language/gcc/src/socket/nonUdpServer.c
/root/grocery-shop/language/gcc/src/socket/server.c
/root/grocery-shop/language/gcc/src/socket/unixSocketClient.c
/root/grocery-shop/language/gcc/src/socket/unixSocketServer.c
/root/grocery-shop/language/gcc/src/socket/unixSystem.c
/root/grocery-shop/language/gcc/src/string/phase_string/example.c
/root/grocery-shop/language/gcc/src/string/phase_string/strEscape.c
/root/grocery-shop/language/gcc/src/string/phase_string/strtok.c
/root/grocery-shop/language/gcc/src/string/phase_string_waf/example.c
/root/grocery-shop/language/gcc/src/string/string_to_int/example.c
/root/grocery-shop/language/gcc/src/string/trim_string/trim.c
/root/grocery-shop/language/gcc/src/string/zero_string/example.c
/root/grocery-shop/language/gcc/src/struct/variable_struct.c
/root/grocery-shop/language/gcc/src/synax/example.c
/root/grocery-shop/language/gcc/src/time/compareTime.c
/root/grocery-shop/language/gcc/src/time/configTime.c
/root/grocery-shop/language/gcc/src/time/configTime.h
/root/grocery-shop/language/gcc/src/time/getCurrentDay.c
/root/grocery-shop/language/gcc/src/time/getCurrentTime.c
/root/grocery-shop/language/gcc/src/time/getRandTime.c
/root/grocery-shop/language/gcc/src/time/periodicTime.c
/root/grocery-shop/language/gcc/src/time/transformTime.c
/root/grocery-shop/language/gcc/src/xml/link.c
/root/grocery-shop/language/gcc/src/zombieProcess/example.c
/usr/include/arpa/inet.h
/usr/include/asm/unistd.h
/usr/include/assert.h
/usr/include/crypt.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/glob.h
/usr/include/grp.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/linux/kernel.h
/usr/include/linux/unistd.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/pwd.h
/usr/include/regex.h
/usr/include/sched.h
/usr/include/setjmp.h
/usr/include/shadow.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/acct.h
/usr/include/sys/fcntl.h
/usr/include/sys/ioctl.h
/usr/include/sys/ipc.h
/usr/include/sys/klog.h
/usr/include/sys/mman.h
/usr/include/sys/msg.h
/usr/include/sys/prctl.h
/usr/include/sys/ptrace.h
/usr/include/sys/reg.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sem.h
/usr/include/sys/shm.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/syscall.h
/usr/include/sys/termios.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/un.h
/usr/include/sys/user.h
/usr/include/sys/wait.h
/usr/include/syslog.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/asm/unistd_x32.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/msq.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sem.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/prctl.h
/usr/include/linux/sysinfo.h
/usr/include/paths.h
/usr/include/rpc/netdb.h
/usr/include/sys/cdefs.h
/usr/include/sys/poll.h
/usr/include/sys/syslog.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/poll.h
/usr/include/bits/poll2.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/types.h
/usr/include/stdc-predef.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/asm/types.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/linux/stddef.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
