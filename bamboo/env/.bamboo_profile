#!/bin/zsh
# zsh环境，所有的文件判断都不能加上""

# include base.sh
. /data/shell/base.sh

# User specific environment and startup programs
export mypy=~/grocery-shop/language/python/
export mygcc=~/grocery-shop/language/gcc/
export mycx=~/grocery-shop/language/g++/
export mysh=~/grocery-shop/language/shell/
export myja=~/grocery-shop/language/java/
export algo=~/grocery-shop/algorithm/
export dst=~/grocery-shop/data-structure/
export bamboo=~/grocery-shop/bamboo/
export share=~/share/
export ilife=~/Public/iLifeDiary/iLifeDiary
export work=~/Public/
export project=~/grocery-shop/project/
export py=`python -m site --user-site`/

# PATH
if [[ -d $HOME/.local/bin ]]; then
    PATH=$HOME/.local/bin:$PATH
fi
if [[ -d /usr/local/nginx/sbin/ ]]; then
    PATH=/usr/local/nginx/sbin:$PATH
fi
if [[ -d /usr/local/mysql/bin/ ]]; then
    PATH=/usr/local/mysql/bin/:$PATH
fi
if [[ -d /usr/local/python/bin/ ]]; then
    PATH=$PATH:/usr/local/python/bin/
fi
if [[ -d /usr/local/tmux/bin/ ]];then
    PATH=$PATH:/usr/local/tmux/bin/
fi
if [[ -d /usr/local/Cellar/postgresql/9.6.1/bin/ ]];then
    PATH=$PATH:/usr/local/Cellar/postgresql/9.6.1/bin/
fi
MAC_PYTHON_BIN="$HOME/Library/Python/2.7/bin/"
if [[ -d ${MAC_PYTHON_BIN} ]];then
    PATH=$PATH:${MAC_PYTHON_BIN}
fi
WRAPPER_PATH=/usr/local/bin/virtualenvwrapper.sh
if [[ -f ${WRAPPER_PATH} ]];then
    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=/data/env/
    source ${WRAPPER_PATH}
    ######别名设置#####
    alias mvenv="mkvirtualenv"
    alias rmvenv="rmvirtualenv"
    alias deact="deactivate"
fi

export PATH

# svn configure
export SVN_EDITOR=vim

# java configure
export JAVA_HOME=/usr/local/java/jdk1.7.0_71
export CLASSPATH=.:%JAVA_HOME%/lib/dt.jar:%JAVA_HOME%/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin

# maven configure
export M2_HOME=/usr/local/apache-maven
export M2=$M2_HOME/bin 
export PATH=$M2:$PATH

# zookeeper configure
export ZOOKEEPER_HOME=/usr/local/zookeeper
export PATH=$ZOOKEEPER_HOME/bin:$PATH

# storm configure
export STORM_HOME=/usr/local/storm
export PATH=$STORM_HOME/bin:$PATH

# streamparse
export LEIN_ROOT=0

# core dump 配置
ulimit -c unlimited

# pyenv
if [ -d ~/.pyenv ];then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

# default vpn
if [[ ${MY_SYSTEM} == ${LINUX_SYSTEM} ]];then
    ps -ef|grep sslocal |grep -v grep 1>/dev/null
    if [[ $? != 0 ]];then
        govpn jp1server
    fi
fi


# 配色方案-ubuntu
#   充分条件：设置终端的颜色处理，例如ubuntu-terminal中的配置：
#       标题和命令-->自定义命令--->evn TERM=xterm-256color /bin/zsh
#   说明：见印象笔记中《git插件管理》中描述
if [[ ${MY_SYSTEM} == ${LINUX_SYSTEM} ]];then
    if [[ "$COLORTERM" == "gnome-terminal" ]] || \
        [[ "$COLORTERM" == "xfce4-terminal" ]] || \
        [[ $"COLORTERM" = "" ]];then
        TERM="xterm-256color"
    elif [[ "$COLORTERM" == "rxvt-xpm" ]];then
        TERM="rxvt-265color"
    fi
fi

# 运行powerline
PYTHON27_SITEPACKAGE=`python -m site --user-site`/
PYTHON34_SITEPACKAGE=`python3 -m site --user-site`/
if [[ -f ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
    . ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
fi
if [[ -f ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
    . ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
fi

# ubuntu上tmux和zshrc按键设置
if [[ ${MY_SYSTEM} == ${LINUX_SYSTEM} ]];then
    alias tmux="tmux -2"
    # 按键查看：cat + 键盘输入指定的按键，根据输出来查看
    # zshrc 配置
    bindkey  "^[[1~"   beginning-of-line
    bindkey  "^[[4~"   end-of-line
fi


